{"version":3,"sources":["webpack:///3.bundle.js","webpack:///./src/components/gantt-view.jsx","webpack:///./~/d3/build/d3.js","webpack:///./src/gantt-chart.js"],"names":["webpackJsonp","1573","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","err","Array","isArray","TypeError","_react","_react2","_reactDom","_reactDom2","_underscore","_underscore2","_routeUtils","_issueStore","_issueStore2","_githubClient","_helpers","_loadable","_loadable2","_labelBadge","_labelBadge2","_d2","_d3","_ganttChart","_ganttChart2","filterByMilestoneAndKanbanColumn","cards","data","columns","columnCounts","add","card","issue","milestone","column","getCardColumn","columnName","name","msCounts","title","forEach","values","GanttChart","createClass","displayName","componentDidMount","this","renderChart","componentDidUpdate","changeTimeDomain","timeDomainString","format","chart","timeDomain","time","hour","offset","maxDate","day","tickFormat","redraw","tasks","_props","props","milestones","now","Date","findDOMNode","_ganttWrapper","innerHTML","map","createdAt","dueOn","state","closedIssues","openIssues","dueAt","status","getTime","segments","count","color","accountedForCount","each","_ref","startDate","endDate","taskName","taskStatus","milestone-status-overdue","milestone-status-open","milestone-status-closed","taskNames","_ref2","sort","a","b","taskTypes","selector","render","_this","_props2","legend","label","createElement","key","extra","closedCount","className","ref","r","id","RepoKanbanShell","componentWillMount","startPolling","componentWillUnmount","stopPolling","renderLoaded","_ref3","_ref4","allMilestones","_getFilters$getState","getFilters","getState","milestoneTitles","_filterByMilestoneAnd","sortBy","_ref5","result","exec","reverse","filter","indexOf","_getFilters$getState2","repoInfos","_repoInfos","_repoInfos$","repoOwner","repoName","allPromises","Promise","all","fetchMilestones","fetchIssues","promise","1574","global","factory","ascendingComparator","f","d","x","ascending","tickStep","start","stop","step0","Math","abs","max","step1","pow","floor","log","LN10","error","e10","e5","e2","translateX","scale0","scale1","isFinite","translateY","y","center","scale","bandwidth","round","entering","__axis","axis","orient","context","tickValues","ticks","apply","tickArguments","domain","identity$1","spacing","tickSizeInner","tickPadding","transform","top","bottom","range","range0","range1","position","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","k","left","right","merge","insert","transition","epsilon","parentNode","remove","tickSizeOuter","_","arguments","slice$1","call","slice","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","t","n","Error","Dispatch","parseTypenames","typenames","types","trim","split","hasOwnProperty","type","get","c","set","callback","noop","concat","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","o","j","m","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window$$1","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","root","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","extend","definition","prototype","create","Color","toLowerCase","reHex3","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","g","rgbConvert","rgb","opacity","h","s","l","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","defaultView","getComputedStyle","getPropertyValue","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","svg","ownerSVGElement","width","height","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","property","initialize","cursors","handle","handles","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","object","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","FormatSpecifier","specifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","step","circleRadius","Intersection","points","other","entry","link$1","array","clipExtent","visible","interpolate","from","to","a1","corner","comparePoint","compareIntersection","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","B","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","d3","ab","A","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","asin$1","halfPi$3","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","x11","y11","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","radialLine","point$2","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","version","hi","mid","ascendingBisect","bisectLeft","descending","number","variance","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","pairs","permute","permutes","scan","xi","xj","shuffle","random","sum","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","html","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","buffer","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","x$$1","y$$1","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","temp","valueOf","epsilon2$1","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","length$1","object$1","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","_circle","index$1","contextStream","projectionStream","sum$1","polygonContains","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","inside","length$2","perimeter","slice$3","defer","await","results","awaitAll","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential$1","request","url","respond","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","constant$10","pi$4","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$1","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$5","none$1","none$2","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","randomUniform","randomLogNormal","randomBates","randomExponential","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","1575","milestoneCount","keyFunction","rectTransformSegment","task","prev","percent","initTimeDomain","timeDomainMode","FIT_TIME_DOMAIN_MODE","timeDomainStart","timeDomainEnd","initAxis","rangeRoundBands","margin","xAxis","tickSubdivide","yAxis","gantt","PHIL","stroke","stroke-width","rangeBand","body","ganttChartGroup","acc","ret"],"mappings":"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","file":"3.bundle.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 1573:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _react = __webpack_require__(368);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(395);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _underscore = __webpack_require__(757);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tvar _routeUtils = __webpack_require__(756);\n\t\n\tvar _issueStore = __webpack_require__(1477);\n\t\n\tvar _issueStore2 = _interopRequireDefault(_issueStore);\n\t\n\tvar _githubClient = __webpack_require__(1195);\n\t\n\tvar _githubClient2 = _interopRequireDefault(_githubClient);\n\t\n\tvar _helpers = __webpack_require__(763);\n\t\n\tvar _loadable = __webpack_require__(1521);\n\t\n\tvar _loadable2 = _interopRequireDefault(_loadable);\n\t\n\tvar _labelBadge = __webpack_require__(1516);\n\t\n\tvar _labelBadge2 = _interopRequireDefault(_labelBadge);\n\t\n\tvar _d2 = __webpack_require__(1574);\n\t\n\tvar _d3 = _interopRequireDefault(_d2);\n\t\n\tvar _ganttChart = __webpack_require__(1575);\n\t\n\tvar _ganttChart2 = _interopRequireDefault(_ganttChart);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar filterByMilestoneAndKanbanColumn = function filterByMilestoneAndKanbanColumn(cards) {\n\t  var data = {};\n\t  var columns = {};\n\t  var columnCounts = {}; // key is columnName\n\t  var add = function add(card) {\n\t    if (card.issue.milestone) {\n\t      var column = (0, _helpers.getCardColumn)(card);\n\t      var columnName = column.name;\n\t      columns[columnName] = column;\n\t      var msCounts = data[card.issue.milestone.title] || {};\n\t      data[card.issue.milestone.title] = msCounts;\n\t      msCounts[columnName] = msCounts[columnName] || 0;\n\t      msCounts[columnName] += 1;\n\t\n\t      columnCounts[columnName] = columnCounts[columnName] || 0;\n\t      columnCounts[columnName] += 1;\n\t    } else {\n\t      // TODO: Should account for issues not in a milestone somehow\n\t    }\n\t  };\n\t\n\t  cards.forEach(function (card) {\n\t    add(card);\n\t  });\n\t  return { data: data, columns: _underscore2.default.values(columns), columnCounts: columnCounts };\n\t};\n\t\n\tvar GanttChart = _react2.default.createClass({\n\t  displayName: 'GanttChart',\n\t  componentDidMount: function componentDidMount() {\n\t    this.renderChart();\n\t  },\n\t  componentDidUpdate: function componentDidUpdate() {\n\t    this.renderChart();\n\t  },\n\t  renderChart: function renderChart() {\n\t    var _props = this.props,\n\t        milestones = _props.milestones,\n\t        data = _props.data,\n\t        columns = _props.columns;\n\t\n\t    var now = new Date();\n\t\n\t    _reactDom2.default.findDOMNode(this._ganttWrapper).innerHTML = '';\n\t\n\t    var tasks = milestones.map(function (milestone) {\n\t      var createdAt = milestone.createdAt,\n\t          dueOn = milestone.dueOn,\n\t          title = milestone.title,\n\t          state = milestone.state,\n\t          closedIssues = milestone.closedIssues,\n\t          openIssues = milestone.openIssues;\n\t\n\t      var dueAt = dueOn ? new Date(dueOn) : null;\n\t      var status = void 0;\n\t      if (dueAt && dueAt.getTime() < now.getTime()) {\n\t        status = 'milestone-status-overdue';\n\t      } else {\n\t        status = 'milestone-status-' + state;\n\t      }\n\t      var segments = [];\n\t      if (closedIssues) {\n\t        segments.push({ count: closedIssues, color: '666666', title: 'Closed Issues' });\n\t      }\n\t      var accountedForCount = 0;\n\t      _underscore2.default.each(columns, function (_ref) {\n\t        var name = _ref.name,\n\t            color = _ref.color;\n\t\n\t        if (data[milestone.title]) {\n\t          var count = data[milestone.title][name] || 0;\n\t          if (count) {\n\t            accountedForCount += count;\n\t            segments.push({ count: count, color: color, title: name });\n\t          }\n\t        }\n\t      });\n\t      if (accountedForCount !== openIssues) {\n\t        segments.push({ count: openIssues - accountedForCount, color: 'ffffff', title: 'Other Open Issues' });\n\t      }\n\t      return {\n\t        startDate: createdAt,\n\t        endDate: dueAt || now,\n\t        taskName: title,\n\t        status: status,\n\t        segments: segments\n\t      };\n\t    });\n\t\n\t    var taskStatus = {\n\t      'milestone-status-overdue': 'milestone-status-overdue',\n\t      'milestone-status-open': 'milestone-status-open',\n\t      'milestone-status-closed': 'milestone-status-closed'\n\t    };\n\t\n\t    var taskNames = tasks.map(function (_ref2) {\n\t      var taskName = _ref2.taskName;\n\t      return taskName;\n\t    }).sort();\n\t\n\t    tasks.sort(function (a, b) {\n\t      return a.endDate - b.endDate;\n\t    });\n\t    var maxDate = tasks[tasks.length - 1].endDate;\n\t    tasks.sort(function (a, b) {\n\t      return a.startDate - b.startDate;\n\t    });\n\t    // const minDate = tasks[0].startDate;\n\t\n\t    var format = '%H:%M';\n\t\n\t    var chart = (0, _ganttChart2.default)(taskNames.length).taskTypes(taskNames).taskStatus(taskStatus).tickFormat(format).selector('#the-gantt-chart');\n\t    chart(tasks);\n\t\n\t    function changeTimeDomain(timeDomainString) {\n\t      var format = void 0;\n\t      switch (timeDomainString) {\n\t        case '1hr':\n\t          format = '%H:%M:%S';\n\t          chart.timeDomain([_d3.default.time.hour.offset(maxDate, -1), maxDate]);\n\t          break;\n\t        case '3hr':\n\t          format = '%H:%M';\n\t          chart.timeDomain([_d3.default.time.hour.offset(maxDate, -3), maxDate]);\n\t          break;\n\t\n\t        case '6hr':\n\t          format = '%H:%M';\n\t          chart.timeDomain([_d3.default.time.hour.offset(maxDate, -6), maxDate]);\n\t          break;\n\t\n\t        case '1day':\n\t          format = '%H:%M';\n\t          chart.timeDomain([_d3.default.time.day.offset(maxDate, -1), maxDate]);\n\t          break;\n\t\n\t        case '1week':\n\t          format = '%m/%d';\n\t          chart.timeDomain([_d3.default.time.day.offset(maxDate, -7), maxDate]);\n\t          break;\n\t        default:\n\t          format = '%H:%M';\n\t\n\t      }\n\t      chart.tickFormat(format);\n\t      chart.redraw(tasks);\n\t    }\n\t\n\t    changeTimeDomain('1week');\n\t  },\n\t  render: function render() {\n\t    var _this = this;\n\t\n\t    var _props2 = this.props,\n\t        columns = _props2.columns,\n\t        columnCounts = _props2.columnCounts,\n\t        milestones = _props2.milestones;\n\t\n\t\n\t    var legend = columns.map(function (label) {\n\t      return _react2.default.createElement(_labelBadge2.default, { key: label.name, label: label, extra: columnCounts[label.name] });\n\t    });\n\t    var closedCount = 0;\n\t    milestones.forEach(function (milestone) {\n\t      closedCount += milestone.closedIssues;\n\t    });\n\t    return _react2.default.createElement(\n\t      'div',\n\t      { className: '-gantt-chart-and-legend' },\n\t      _react2.default.createElement('div', { ref: function ref(r) {\n\t          return _this._ganttWrapper = r;\n\t        }, id: 'the-gantt-chart' }),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        'Legend'\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Blue vertical line is Today'\n\t      ),\n\t      _react2.default.createElement(_labelBadge2.default, { key: 'completed', label: { name: '0 - Closed', color: '666666' }, extra: closedCount }),\n\t      legend,\n\t      _react2.default.createElement('br', null),\n\t      _react2.default.createElement('br', null)\n\t    );\n\t  }\n\t});\n\t\n\tvar RepoKanbanShell = _react2.default.createClass({\n\t  displayName: 'RepoKanbanShell',\n\t  componentWillMount: function componentWillMount() {\n\t    // Needs to be called before `render()`\n\t    _issueStore2.default.startPolling();\n\t  },\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    _issueStore2.default.stopPolling();\n\t  },\n\t  renderLoaded: function renderLoaded(_ref3) {\n\t    var _ref4 = _slicedToArray(_ref3, 2),\n\t        allMilestones = _ref4[0],\n\t        cards = _ref4[1];\n\t\n\t    var _getFilters$getState = (0, _routeUtils.getFilters)().getState(),\n\t        milestoneTitles = _getFilters$getState.milestoneTitles;\n\t\n\t    var _filterByMilestoneAnd = filterByMilestoneAndKanbanColumn(cards),\n\t        data = _filterByMilestoneAnd.data,\n\t        columns = _filterByMilestoneAnd.columns,\n\t        columnCounts = _filterByMilestoneAnd.columnCounts;\n\t    // COPYPASTA: Taken from repo-kanban\n\t\n\t\n\t    columns = _underscore2.default.sortBy(columns, function (_ref5) {\n\t      var name = _ref5.name;\n\t\n\t      if (name === _helpers.UNCATEGORIZED_NAME) {\n\t        // make sure Uncategorized is the left-most column\n\t        return -1;\n\t      } else {\n\t        var result = /^(\\d+)/.exec(name);\n\t        return result && result[1] || name;\n\t      }\n\t    });\n\t    columns = columns.reverse();\n\t\n\t    // Remove milestones that are not in the URL filter\n\t    var milestones = void 0;\n\t    if (milestoneTitles.length > 0) {\n\t      milestones = allMilestones.filter(function (milestone) {\n\t        return milestoneTitles.indexOf(milestone.title) >= 0;\n\t      });\n\t    } else {\n\t      milestones = allMilestones;\n\t    }\n\t\n\t    return _react2.default.createElement(GanttChart, { milestones: milestones, data: data, columns: columns, columnCounts: columnCounts });\n\t  },\n\t  render: function render() {\n\t    var _getFilters$getState2 = (0, _routeUtils.getFilters)().getState(),\n\t        repoInfos = _getFilters$getState2.repoInfos;\n\t    // Get the \"Primary\" repo for milestones and labels\n\t\n\t\n\t    var _repoInfos = _slicedToArray(repoInfos, 1),\n\t        _repoInfos$ = _repoInfos[0],\n\t        repoOwner = _repoInfos$.repoOwner,\n\t        repoName = _repoInfos$.repoName;\n\t\n\t    // TODO: Actually do all the milestones\n\t\n\t\n\t    var allPromises = Promise.all([_issueStore2.default.fetchMilestones(repoOwner, repoName), _issueStore2.default.fetchIssues()]);\n\t\n\t    return _react2.default.createElement(_loadable2.default, {\n\t      promise: allPromises,\n\t      renderLoaded: this.renderLoaded\n\t    });\n\t  }\n\t});\n\t\n\texports.default = RepoKanbanShell;\n\n/***/ },\n\n/***/ 1574:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.4.2. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.4.2\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(array, f) {\n\t  var n = array.length,\n\t      m = 0,\n\t      a,\n\t      d,\n\t      s = 0,\n\t      i = -1,\n\t      j = 0;\n\t\n\t  if (f == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(array[i]))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(f(array[i], i, array)))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (j > 1) return s / (j - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b,\n\t      c;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  return [a, c];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar sequence = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var step = tickStep(start, stop, count);\n\t  return sequence(\n\t    Math.ceil(start / step) * step,\n\t    Math.floor(stop / step) * step + step / 2, // inclusive\n\t    step\n\t  );\n\t};\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(array, p, f) {\n\t  if (f == null) f = number;\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t  if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = +f(array[i], i, array),\n\t      b = +f(array[i + 1], i + 1, array);\n\t  return a + (b - a) * (h - i);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar mean = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1,\n\t      j = n;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t  }\n\t\n\t  if (j) return s / j;\n\t};\n\t\n\tvar median = function(array, f) {\n\t  var numbers = [],\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar pairs = function(array) {\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = [p, p = array[++i]];\n\t  return pairs;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(array, compare) {\n\t  if (!(n = array.length)) return;\n\t  var i = 0,\n\t      n,\n\t      j = 0,\n\t      xi,\n\t      xj = array[j];\n\t\n\t  if (!compare) compare = ascending;\n\t\n\t  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t  }\n\t\n\t  return s;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar slice$1 = Array.prototype.slice;\n\t\n\tvar identity$1 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(scale0, scale1, d) {\n\t  var x = scale0(d);\n\t  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n\t}\n\t\n\tfunction translateY(scale0, scale1, d) {\n\t  var y = scale0(d);\n\t  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        transform = orient === top || orient === bottom ? translateX : translateY,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\"),\n\t        k = orient === top || orient === left ? -1 : 1,\n\t        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$1.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local$1() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local$1.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty$1() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty$1 : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$1(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$1;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$1(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter$1,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = ((function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t}))(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar reinterpolate = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolateValue(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: reinterpolate(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolateValue = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? reinterpolate\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : reinterpolate)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$1(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$1(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$1(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? reinterpolate\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$1(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$1(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$1(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set$1;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$2) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$2, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$2, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tfunction linear$1(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolateValue(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$1();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$1();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$1();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$1 = Math.PI;\n\tvar halfPi$1 = pi$1 / 2;\n\tvar tau$1 = pi$1 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = sequence(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(sequence(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$1 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$1 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar pi$2 = Math.PI;\n\tvar tau$2 = 2 * pi$2;\n\tvar epsilon$1 = 1e-6;\n\tvar tauEpsilon = tau$2 - epsilon$1;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon$1)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon$1) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      if (da < 0) da = da % tau$2 + tau$2;\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$2.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$1,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$1,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$1,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set$2.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set$2(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tfunction x(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$6(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$6(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$2 = function(x) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$2 = function(y) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tvar formatSpecifier = function(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t};\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tfunction identity$3(x) {\n\t  return x;\n\t}\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal;\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Convert negative to positive, and compute the prefix.\n\t        // Note that -0 is not less than 0, but 1 / -0 is!\n\t        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\t\n\t        // Perform the initial formatting.\n\t        value = formatType(value, precision);\n\t\n\t        // If the original value was negative, it may be rounded to zero during\n\t        // formatting; treat this as (positive) zero.\n\t        if (valueNegative) {\n\t          i = -1, n = value.length;\n\t          valueNegative = false;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), (48 < c && c < 58)\n\t                || (type === \"x\" && 96 < c && c < 103)\n\t                || (type === \"X\" && 64 < c && c < 71)) {\n\t              valueNegative = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": return valuePrefix + value + valueSuffix + padding;\n\t        case \"=\": return valuePrefix + padding + value + valueSuffix;\n\t        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n\t      }\n\t      return padding + valuePrefix + value + valueSuffix;\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$2 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar quarterPi = pi$3 / 4;\n\tvar tau$3 = pi$3 * 2;\n\t\n\tvar degrees$1 = 180 / pi$3;\n\tvar radians = pi$3 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(feature, stream) {\n\t    streamGeometry(feature.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$1;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$3);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$2) phi1 = 90;\n\t    else if (deltaSum < -epsilon$2) phi0 = -90;\n\t    range[0] = lambda0$1, range[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    boundsPoint(lambda, phi);\n\t  }\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$1,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      u = x0 * x + y0 * y + z0 * z,\n\t      v = m && -acos(u) / m, // area weight\n\t      w = atan2(m, u); // line weight\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$1) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$1) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$3;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant$7([0, 0]),\n\t      radius = constant$7(90),\n\t      precision = constant$7(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$1,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$1,\n\t  point: noop$1,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$1;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$1 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$1(object$1);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n\t        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n\t      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$4 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$3);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$1\n\t};\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$1(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$1 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar sum$1 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$1.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$3,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$3, -halfPi$2]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$2\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$2;\n\t    stream.point(-pi$3, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$3, phi);\n\t    stream.point(pi$3, 0);\n\t    stream.point(pi$3, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$3, -phi);\n\t    stream.point(-pi$3, 0);\n\t    stream.point(-pi$3, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$2) {\n\t    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$2;\n\t            point1[1] += epsilon$2;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$3) < epsilon$2,\n\t        meridian = polar || delta < epsilon$2;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$3 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$3 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$2];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$3);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      clipAuto;\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    if (!arguments.length) return clipAuto ? null : clipExtent();\n\t    if (clipAuto = _ == null) {\n\t      var k = pi$3 * scale(),\n\t          t = translate();\n\t      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t    }\n\t    clipExtent(_);\n\t    return m;\n\t  };\n\t\n\t  return m.clipExtent(null);\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$2 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n\t    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$2) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$5 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$2);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$2];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t};\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t};\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(circle, x, y) {\n\t  var dx = circle.x - x,\n\t      dy = circle.y - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // If there are only three elements in the front-chain…\n\t    if ((k = a.previous) === (j = b.next)) {\n\t      // If the new circle intersects the third circle,\n\t      // rotate the front chain to try the next position.\n\t      if (intersects(j._, c._)) {\n\t        a = b, b = j, --i;\n\t        continue pack;\n\t      }\n\t    }\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    else {\n\t      sj = j._.r, sk = k._.r;\n\t      do {\n\t        if (sj <= sk) {\n\t          if (intersects(j._, c._)) {\n\t            b = j, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          j = j.next, sj += j._.r;\n\t        } else {\n\t          if (intersects(k._, c._)) {\n\t            a = k, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          k = k.previous, sk += k._.r;\n\t        }\n\t      } while (j !== k.next);\n\t    }\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle a to centroid.\n\t    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c._, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius$1(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index$2 = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius$1))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = ((function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t}))(phi);\n\t\n\tvar index$3 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((y1 - y0) > (x1 - x0)) {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    } else {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = ((function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t}))(phi);\n\t\n\tvar area$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$2 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar slice$3 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$3.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke$1(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke$1(q) {\n\t  if (!q._start) {\n\t    try { start$1(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start$1(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke$1(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t};\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t};\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t};\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t};\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t};\n\t\n\tvar exponential$1 = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t};\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type$1 = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type$1(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type$1(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type$1(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type$1(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$4 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$4.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = sequence(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$1() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolateValue,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$6() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$6().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction reinterpolate$1(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log$1() {\n\t  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log$1().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise$1(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow$1() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n\t        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n\t        : constant$9(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n\t    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow$1().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt$1() {\n\t  return pow$1().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond$1 = 1e3;\n\tvar durationMinute$1 = 6e4;\n\tvar durationHour$1 = 36e5;\n\tvar durationDay$1 = 864e5;\n\tvar durationWeek$1 = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond$1;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n\t  if (offset < 0) offset += durationHour$1;\n\t  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay$1;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond],\n\t    [second$$1,  5,  5 * durationSecond],\n\t    [second$$1, 15, 15 * durationSecond],\n\t    [second$$1, 30, 30 * durationSecond],\n\t    [minute$$1,  1,      durationMinute],\n\t    [minute$$1,  5,  5 * durationMinute],\n\t    [minute$$1, 15, 15 * durationMinute],\n\t    [minute$$1, 30, 30 * durationMinute],\n\t    [  hour$$1,  1,      durationHour  ],\n\t    [  hour$$1,  3,  3 * durationHour  ],\n\t    [  hour$$1,  6,  6 * durationHour  ],\n\t    [  hour$$1, 12, 12 * durationHour  ],\n\t    [   day$$1,  1,      durationDay   ],\n\t    [   day$$1,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar constant$10 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar epsilon$3 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar tau$4 = 2 * pi$4;\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$10(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$3,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$3,\n\t        da = Math.abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$4 - epsilon$3) {\n\t      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$3) {\n\t        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n\t          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$3) {\n\t        var p0 = asin$1(rp / r0 * Math.sin(ap)),\n\t            p1 = asin$1(rp / r1 * Math.sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * Math.cos(a01),\n\t          y01 = r1 * Math.sin(a01),\n\t          x10 = r0 * Math.cos(a10),\n\t          y10 = r0 * Math.sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$3) {\n\t        var x11 = r1 * Math.cos(a11),\n\t            y11 = r1 * Math.sin(a11),\n\t            x00 = r0 * Math.cos(a00),\n\t            y00 = r0 * Math.sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$4) {\n\t          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n\t              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$3) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$3) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n\t    return [Math.cos(a) * r, Math.sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x$3(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y$3(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$2 = function() {\n\t  var x0 = x$3,\n\t      x1 = null,\n\t      y0 = constant$10(0),\n\t      y1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$7 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$7,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$10(0),\n\t      endAngle = constant$10(tau$4),\n\t      padAngle = constant$10(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area$2().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar circle$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$4);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$4);\n\t  }\n\t};\n\t\n\tvar cross$1 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\n\tvar kx = Math.sin(tau$4 / 10) * kr;\n\tvar ky = -Math.cos(tau$4 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$4 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle$2,\n\t  cross$1,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$10(circle$2),\n\t      size = constant$10(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop$2 = function() {};\n\t\n\tfunction point$2(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point$2(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis$2 = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed$1 = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = ((function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t}))(0.85);\n\t\n\tfunction point$3(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$3(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction point$4(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$3) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$3) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign$1(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$5(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar none$1 = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$2 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$10([]),\n\t      order = none$2,\n\t      offset = none$1,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none$1(series, order);\n\t};\n\t\n\tvar ascending$2 = function(series) {\n\t  var sums = series.map(sum$2);\n\t  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$2(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$2(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$2),\n\t      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$2(series).reverse();\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$2) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$4\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$4\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$4) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$4) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$4) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$4) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      if (!(m = (halfedges = cell.halfedges).length)) return;\n\t      var site = cell.site,\n\t          halfedges,\n\t          j = -1,\n\t          m,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\t\n\t    // Use the previously-found cell, or start with an arbitrary one.\n\t    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n\t    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\t\n\t    // Traverse the half-edges to find a closer cell, if any.\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$8 = new Transform(1, 0, 0);\n\t\n\ttransform$1.prototype = Transform.prototype;\n\t\n\tfunction transform$1(node) {\n\t  return node.__zoom || identity$8;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$8;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$2,\n\t      extent = defaultExtent$1,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate$$1 = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx0 = transform.invertX(extent[0][0]) - x0,\n\t        dx1 = transform.invertX(extent[1][0]) - x1,\n\t        dy0 = transform.invertY(extent[0][1]) - y0,\n\t        dy1 = transform.invertY(extent[1][1]) - y1;\n\t    return transform.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$2();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$2();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$2();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$2();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$2();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        started,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$2();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p, started = true;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (started) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$2();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$2();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (!g.touch0) g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = sequence;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.nest = nest;\n\texports.set = set$2;\n\texports.map = map$1;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.dispatch = dispatch;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.easeLinear = linear$1;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$2;\n\texports.forceY = y$2;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipExtent = extent$1;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate$1;\n\texports.geoLength = length$1;\n\texports.geoPath = index$1;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$5;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index$2;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$3;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.interpolate = interpolateValue;\n\texports.interpolateArray = array$1;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = reinterpolate;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\texports.path = path;\n\texports.polygonArea = area$1;\n\texports.polygonCentroid = centroid$1;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains;\n\texports.polygonLength = length$2;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential$1;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$1;\n\texports.scaleIdentity = identity$6;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log$1;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow$1;\n\texports.scaleSqrt = sqrt$1;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\texports.creator = creator;\n\texports.local = local$1;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.customEvent = customEvent;\n\texports.arc = arc;\n\texports.area = area$2;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle$2;\n\texports.symbolCross = cross$1;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed$1;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis$2;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none$1;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$2;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$2;\n\texports.stackOrderReverse = reverse;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomTransform = transform$1;\n\texports.zoomIdentity = identity$8;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ },\n\n/***/ 1575:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (milestoneCount) {\n\t  var FIT_TIME_DOMAIN_MODE = 'fit';\n\t  var FIXED_TIME_DOMAIN_MODE = 'fixed';\n\t\n\t  var margin = {\n\t    top: 20,\n\t    right: 40,\n\t    bottom: 20,\n\t    left: 250\n\t  };\n\t  var selector = 'body';\n\t  var timeDomainStart = _d2.default.time.day.offset(new Date(), -3);\n\t  var timeDomainEnd = _d2.default.time.hour.offset(new Date(), +3);\n\t  var timeDomainMode = FIT_TIME_DOMAIN_MODE; // fixed or fit\n\t  var taskTypes = [];\n\t  var taskStatus = [];\n\t  // var height = document.body.clientHeight - margin.top - margin.bottom-5;\n\t  var height = milestoneCount * 50; // height of chart is based on # of milestones\n\t  var width = document.body.clientWidth - margin.right - margin.left - 5;\n\t\n\t  var tickFormat = '%H:%M';\n\t\n\t  function keyFunction(d) {\n\t    return d.startDate + d.taskName + d.endDate;\n\t  };\n\t\n\t  function rectTransform(d) {\n\t    return 'translate(' + x(d.startDate) + ',' + y(d.taskName) + ')';\n\t  };\n\t  function rectTransformCompleted(d) {\n\t    return 'translate(' + x(d.startDate) + ',' + y(d.taskName) + ')';\n\t  };\n\t  function rectTransformRemaining(d) {\n\t    return 'translate(' + (x(d.startDate) + d.percent * (x(d.endDate) - x(d.startDate))) + ',' + y(d.taskName) + ')';\n\t  };\n\t  function rectTransformSegment(_ref) {\n\t    var task = _ref.task,\n\t        segment = _ref.segment,\n\t        total = _ref.total,\n\t        prev = _ref.prev;\n\t\n\t    var percent = prev / total;\n\t    return 'translate(' + (x(task.startDate) + percent * (x(task.endDate) - x(task.startDate))) + ',' + y(task.taskName) + ')';\n\t  };\n\t\n\t  var x = _d2.default.time.scale().domain([timeDomainStart, timeDomainEnd]).range([0, width]).clamp(true);\n\t\n\t  var y = _d2.default.scale.ordinal().domain(taskTypes).rangeRoundBands([0, height - margin.top - margin.bottom], .1);\n\t\n\t  var xAxis = _d2.default.svg.axis().scale(x).orient('bottom').tickFormat(_d2.default.time.format(tickFormat)).tickSubdivide(true).tickSize(8).tickPadding(8);\n\t\n\t  var yAxis = _d2.default.svg.axis().scale(y).orient('right').tickSize(0);\n\t\n\t  function initTimeDomain(tasks) {\n\t    if (timeDomainMode === FIT_TIME_DOMAIN_MODE) {\n\t      if (tasks === undefined || tasks.length < 1) {\n\t        timeDomainStart = _d2.default.time.day.offset(new Date(), -3);\n\t        timeDomainEnd = _d2.default.time.hour.offset(new Date(), +3);\n\t        return;\n\t      }\n\t      tasks = tasks.sort(function (a, b) {\n\t        return a.endDate - b.endDate;\n\t      });\n\t      timeDomainEnd = tasks[tasks.length - 1].endDate;\n\t      tasks = tasks.sort(function (a, b) {\n\t        return a.startDate - b.startDate;\n\t      });\n\t      timeDomainStart = tasks[0].startDate;\n\t    }\n\t  };\n\t\n\t  function initAxis() {\n\t    x = _d2.default.time.scale().domain([timeDomainStart, timeDomainEnd]).range([0, width]).clamp(true);\n\t    y = _d2.default.scale.ordinal().domain(taskTypes).rangeRoundBands([0, height - margin.top - margin.bottom], .1);\n\t    xAxis = _d2.default.svg.axis().scale(x).orient('bottom').tickFormat(_d2.default.time.format(tickFormat)).tickSubdivide(true).tickSize(8).tickPadding(8);\n\t\n\t    yAxis = _d2.default.svg.axis().scale(y).orient('right').tickSize(0);\n\t  };\n\t\n\t  function gantt(tasks) {\n\t    initTimeDomain(tasks);\n\t    initAxis();\n\t\n\t    var svg = _d2.default.select(selector).append('svg').attr('class', 'chart').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('class', 'gantt-chart').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');\n\t\n\t    var PHIL = svg.selectAll('.chart');\n\t\n\t    PHIL.select('line.today').data([new Date()]).enter().append('line').attr('class', 'today').attr('x1', function (d) {\n\t      return x(d);\n\t    }).attr('x2', function (d) {\n\t      return x(d);\n\t    }).attr('y1', 0).attr('y2', height).style({ stroke: 'rgb(0,0,255)', 'stroke-width': 2 });\n\t\n\t    PHIL.selectAll('g.milestone-bars').data(tasks, keyFunction).enter().append('g')\n\t    //  .attr(\"rx\", 5)\n\t    //        .attr(\"ry\", 5)\n\t    .attr('class', 'milestone-bars')\n\t    //  .attr(\"y\", 0)\n\t    //  .attr(\"transform\", rectTransformCompleted)\n\t    //  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t    //  .attr(\"width\", function(d) {\n\t    //      return d.percent * (x(d.endDate) - x(d.startDate));\n\t    //    })\n\t    .selectAll('rect').data(function (task) {\n\t      task.segments.map(function (segment) {\n\t        return { task: task, segment: segment };\n\t      });\n\t    }).enter().append('rect').attr('class', 'milestone-segment').style(function (_ref2) {\n\t      var task = _ref2.task,\n\t          segment = _ref2.segment;\n\t      return { fill: segment.color };\n\t    }).attr('transform', rectTransformSegment).attr('height', function (d) {\n\t      return y.rangeBand();\n\t    }).attr('width', function (_ref3) {\n\t      var task = _ref3.task,\n\t          total = _ref3.total,\n\t          segment = _ref3.segment;\n\t\n\t      var percent = segment.count / total;\n\t      return percent * (x(task.endDate) - x(task.startDate));\n\t    });\n\t\n\t    // PHIL: Copy-pasta to show the 2nd half of the milestone (unfinished)\n\t    //   PHIL.selectAll('rect.milestone-remaining').data(tasks, keyFunction).enter()\n\t    //\n\t    // \t .append(\"rect\")\n\t    // // \t .attr(\"rx\", 5)\n\t    //  //         .attr(\"ry\", 5)\n\t    // \t .attr(\"class\", function(d){\n\t    // \t     return 'milestone-remaining ' + d.status;\n\t    // \t     })\n\t    // \t .attr(\"y\", 0)\n\t    // \t .attr(\"transform\", rectTransformRemaining)\n\t    // \t .attr(\"height\", function(d) { return y.rangeBand(); })\n\t    // \t .attr(\"width\", function(d) {\n\t    // \t     return (1-d.percent) * (x(d.endDate) - x(d.startDate));\n\t    // \t     });\n\t\n\t\n\t    svg.append('g').attr('class', 'x axis').attr('transform', 'translate(0, ' + (height - margin.top - margin.bottom) + ')').transition().call(xAxis);\n\t\n\t    svg.append('g').attr('class', 'y axis').attr('transform', 'translate(-' + margin.left + ',0)').transition().call(yAxis);\n\t\n\t    return gantt;\n\t  };\n\t\n\t  gantt.redraw = function (tasks) {\n\t\n\t    initTimeDomain(tasks);\n\t    initAxis();\n\t\n\t    var svg = _d2.default.select('.chart');\n\t\n\t    var ganttChartGroup = svg.select('.gantt-chart');\n\t    var rect = ganttChartGroup.selectAll('g.milestone-bars').data(tasks, keyFunction);\n\t\n\t    rect.enter().append('g').attr('class', 'milestone-bars')\n\t    // \t .attr(\"y\", 0)\n\t    // \t .attr(\"transform\", rectTransformCompleted)\n\t    // \t .attr(\"height\", function(d) { return y.rangeBand(); })\n\t    // \t .attr(\"width\", function(d) {\n\t    // \t     return d.percent * (x(d.endDate) - x(d.startDate));\n\t    //     })\n\t    .selectAll('rect').data(function (task) {\n\t      var total = task.segments.reduce(function (acc, segment) {\n\t        return acc + segment.count;\n\t      }, 0);\n\t      var prev = 0;\n\t      var segments = task.segments.map(function (segment) {\n\t        var ret = { task: task, segment: segment, prev: prev, total: total };\n\t        prev += segment.count;\n\t        return ret;\n\t      });\n\t      return segments;\n\t    }).enter().append('rect')\n\t    //  .attr('class', 'milestone-segment')\n\t    .style('fill', function (_ref4) {\n\t      var task = _ref4.task,\n\t          segment = _ref4.segment;\n\t      return '#' + segment.color;\n\t    })\n\t    // .attr('class', ({task, segment}) => {return {fill: segment.color}; })\n\t    // .transform()\n\t    .attr('transform', rectTransformSegment).attr('height', function (d) {\n\t      return y.rangeBand();\n\t    }).attr('width', function (_ref5) {\n\t      var task = _ref5.task,\n\t          total = _ref5.total,\n\t          segment = _ref5.segment;\n\t\n\t      var percent = segment.count / total;\n\t      return percent * (x(task.endDate) - x(task.startDate));\n\t    });\n\t\n\t    //       rect.enter()\n\t    //        .append(\"rect\")\n\t    //  .attr(\"class\", function(d){\n\t    //      return 'milestone-bars ' +d.status;\n\t    //      })\n\t    //  .transition()\n\t    //  .attr(\"y\", 0)\n\t    //  .attr(\"transform\", rectTransformCompleted)\n\t    //  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t    //  .attr(\"width\", function(d) {\n\t    //      return d.percent*(x(d.endDate) - x(d.startDate));\n\t    //      });\n\t    //\n\t    //       rect.transition()\n\t    //         .attr(\"transform\", rectTransform)\n\t    //  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t    //  .attr(\"width\", function(d) {\n\t    //      return d.percent*(x(d.endDate) - x(d.startDate));\n\t    //      });\n\t\n\t    // \trect.exit().remove();\n\t    //\n\t    //   //PHIL Copy-pasta\n\t    //   var rect = ganttChartGroup.selectAll(\"rect.milestone-remaining\").data(tasks, keyFunction);\n\t    //\n\t    //   rect.enter()\n\t    //    .append(\"rect\")\n\t    //    .attr(\"rx\", 5)\n\t    //    .attr(\"ry\", 5)\n\t    // .attr(\"class\", function(d){\n\t    //  return 'milestone-remaining ' +d.status;\n\t    //  })\n\t    // .transition()\n\t    // .attr(\"y\", 0)\n\t    // .attr(\"transform\", rectTransformRemaining)\n\t    // .attr(\"height\", function(d) { return y.rangeBand(); })\n\t    // .attr(\"width\", function(d) {\n\t    //  return (1-d.percent)*(x(d.endDate) - x(d.startDate));\n\t    //  });\n\t    //\n\t    //   rect.transition()\n\t    //     .attr(\"transform\", rectTransformRemaining)\n\t    // .attr(\"height\", function(d) { return y.rangeBand(); })\n\t    // .attr(\"width\", function(d) {\n\t    //  return (1-d.percent)*(x(d.endDate) - x(d.startDate));\n\t    //  });\n\t    //\n\t    // rect.exit().remove();\n\t\n\t\n\t    svg.select('.x').transition().call(xAxis);\n\t    svg.select('.y').transition().call(yAxis);\n\t\n\t    return gantt;\n\t  };\n\t\n\t  gantt.margin = function (value) {\n\t    if (!arguments.length) return margin;\n\t    margin = value;\n\t    return gantt;\n\t  };\n\t\n\t  gantt.timeDomain = function (value) {\n\t    if (!arguments.length) return [timeDomainStart, timeDomainEnd];\n\t    timeDomainStart = +value[0], timeDomainEnd = +value[1];\n\t    return gantt;\n\t  };\n\t\n\t  /**\n\t   * @param {string}\n\t   *                value The value can be \"fit\" - the domain fits the data or\n\t   *                \"fixed\" - fixed domain.\n\t   */\n\t  gantt.timeDomainMode = function (value) {\n\t    if (!arguments.length) return timeDomainMode;\n\t    timeDomainMode = value;\n\t    return gantt;\n\t  };\n\t\n\t  gantt.taskTypes = function (value) {\n\t    if (!arguments.length) return taskTypes;\n\t    taskTypes = value;\n\t    return gantt;\n\t  };\n\t\n\t  gantt.taskStatus = function (value) {\n\t    if (!arguments.length) return taskStatus;\n\t    taskStatus = value;\n\t    return gantt;\n\t  };\n\t\n\t  gantt.width = function (value) {\n\t    if (!arguments.length) return width;\n\t    width = +value;\n\t    return gantt;\n\t  };\n\t\n\t  gantt.height = function (value) {\n\t    if (!arguments.length) return height;\n\t    height = +value;\n\t    return gantt;\n\t  };\n\t\n\t  gantt.tickFormat = function (value) {\n\t    if (!arguments.length) return tickFormat;\n\t    tickFormat = value;\n\t    return gantt;\n\t  };\n\t\n\t  gantt.selector = function (value) {\n\t    if (!arguments.length) return selector;\n\t    selector = value;\n\t    return gantt;\n\t  };\n\t\n\t  return gantt;\n\t};\n\t\n\tvar _d = __webpack_require__(1574);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t;\n\t/**\n\t * From https://github.com/dk8996/Gantt-Chart\n\t * @author Dimitry Kudrayvtsev\n\t * @version 2.x\n\t */\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 3.bundle.js","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport _ from 'underscore';\n\nimport {getFilters} from '../route-utils';\nimport IssueStore from '../issue-store';\nimport Client from '../github-client';\nimport {getCardColumn, UNCATEGORIZED_NAME} from '../helpers';\nimport Loadable from './loadable';\nimport LabelBadge from './label-badge';\n\nimport d3 from 'd3';\nimport gantt from '../gantt-chart';\n\n\nconst filterByMilestoneAndKanbanColumn = (cards) => {\n  const data = {};\n  const columns = {};\n  const columnCounts = {}; // key is columnName\n  const add = (card) => {\n    if (card.issue.milestone) {\n      const column = getCardColumn(card);\n      const columnName = column.name;\n      columns[columnName] = column;\n      const msCounts = data[card.issue.milestone.title] || {};\n      data[card.issue.milestone.title] = msCounts;\n      msCounts[columnName] = msCounts[columnName] || 0;\n      msCounts[columnName] += 1;\n\n      columnCounts[columnName] = columnCounts[columnName] || 0;\n      columnCounts[columnName] += 1;\n    } else {\n      // TODO: Should account for issues not in a milestone somehow\n    }\n  };\n\n  cards.forEach((card) => {\n    add(card);\n  });\n  return {data, columns: _.values(columns), columnCounts};\n};\n\n\nconst GanttChart = React.createClass({\n  componentDidMount() {\n    this.renderChart();\n  },\n  componentDidUpdate() {\n    this.renderChart();\n  },\n  renderChart() {\n    const {milestones, data, columns} = this.props;\n    const now = new Date();\n\n    ReactDOM.findDOMNode(this._ganttWrapper).innerHTML = '';\n\n    const tasks = milestones.map((milestone) => {\n      const {createdAt, dueOn, title, state, closedIssues, openIssues} = milestone;\n      const dueAt = dueOn ? new Date(dueOn) : null;\n      let status;\n      if (dueAt && dueAt.getTime() < now.getTime()) {\n        status = 'milestone-status-overdue';\n      } else {\n        status = `milestone-status-${state}`;\n      }\n      const segments = [];\n      if (closedIssues) {\n        segments.push({count: closedIssues, color: '666666', title: 'Closed Issues'});\n      }\n      let accountedForCount = 0;\n      _.each(columns, ({name, color}) => {\n        if (data[milestone.title]) {\n          const count = data[milestone.title][name] || 0;\n          if (count) {\n            accountedForCount += count;\n            segments.push({count, color, title:name});\n          }\n        }\n      });\n      if (accountedForCount !== openIssues) {\n        segments.push({count: openIssues - accountedForCount, color: 'ffffff', title: 'Other Open Issues'});\n      }\n      return {\n        startDate: createdAt,\n        endDate: dueAt || now,\n        taskName: title,\n        status: status,\n        segments: segments\n      };\n    });\n\n    const taskStatus = {\n      'milestone-status-overdue': 'milestone-status-overdue',\n      'milestone-status-open' : 'milestone-status-open',\n      'milestone-status-closed' : 'milestone-status-closed'\n    };\n\n    const taskNames = tasks.map(({taskName}) => taskName).sort();\n\n    tasks.sort(function(a, b) {\n      return a.endDate - b.endDate;\n    });\n    const maxDate = tasks[tasks.length - 1].endDate;\n    tasks.sort(function(a, b) {\n      return a.startDate - b.startDate;\n    });\n    // const minDate = tasks[0].startDate;\n\n    const format = '%H:%M';\n\n    const chart = gantt(taskNames.length).taskTypes(taskNames).taskStatus(taskStatus).tickFormat(format).selector('#the-gantt-chart');\n    chart(tasks);\n\n\n    function changeTimeDomain(timeDomainString) {\n      let format;\n      switch (timeDomainString) {\n      case '1hr':\n        \tformat = '%H:%M:%S';\n        \tchart.timeDomain([ d3.time.hour.offset(maxDate, -1), maxDate ]);\n        \tbreak;\n      case '3hr':\n        \tformat = '%H:%M';\n        \tchart.timeDomain([ d3.time.hour.offset(maxDate, -3), maxDate ]);\n        \tbreak;\n\n      case '6hr':\n        \tformat = '%H:%M';\n        \tchart.timeDomain([ d3.time.hour.offset(maxDate, -6), maxDate ]);\n        \tbreak;\n\n      case '1day':\n        \tformat = '%H:%M';\n        \tchart.timeDomain([ d3.time.day.offset(maxDate, -1), maxDate ]);\n        \tbreak;\n\n      case '1week':\n        \tformat = '%m/%d';\n        \tchart.timeDomain([ d3.time.day.offset(maxDate, -7), maxDate ]);\n        \tbreak;\n      default:\n        \tformat = '%H:%M';\n\n      }\n      chart.tickFormat(format);\n      chart.redraw(tasks);\n    }\n\n    changeTimeDomain('1week');\n\n  },\n  render() {\n    const {columns, columnCounts, milestones} = this.props;\n\n    const legend = columns.map((label) => {\n      return (\n        <LabelBadge key={label.name} label={label} extra={columnCounts[label.name]}/>\n      );\n    });\n    let closedCount = 0;\n    milestones.forEach((milestone) => {\n      closedCount += milestone.closedIssues;\n    });\n    return (\n      <div className='-gantt-chart-and-legend'>\n        <div ref={r => this._ganttWrapper = r} id='the-gantt-chart'/>\n        <h3>Legend</h3>\n        <p>Blue vertical line is Today</p>\n        <LabelBadge key='completed' label={{name:'0 - Closed', color: '666666'}} extra={closedCount}/>\n        {legend}\n        <br/>{/* Add breaks to increase padding because I'm lazy and don't want to add CSS margins */}\n        <br/>\n      </div>\n    );\n  }\n\n});\n\nconst RepoKanbanShell = React.createClass({\n  componentWillMount() {\n    // Needs to be called before `render()`\n    IssueStore.startPolling();\n  },\n  componentWillUnmount() {\n    IssueStore.stopPolling();\n  },\n  renderLoaded([allMilestones, cards]) {\n    const {milestoneTitles} = getFilters().getState();\n\n    let {data, columns, columnCounts} = filterByMilestoneAndKanbanColumn(cards);\n    // COPYPASTA: Taken from repo-kanban\n    columns = _.sortBy(columns, ({name}) => {\n      if (name === UNCATEGORIZED_NAME) {\n        // make sure Uncategorized is the left-most column\n        return -1;\n      } else {\n        const result = /^(\\d+)/.exec(name);\n        return result && result[1] || name;\n      }\n    });\n    columns = columns.reverse();\n\n    // Remove milestones that are not in the URL filter\n    let milestones;\n    if (milestoneTitles.length > 0) {\n      milestones = allMilestones.filter((milestone) => {\n        return milestoneTitles.indexOf(milestone.title) >= 0;\n      });\n    } else {\n      milestones = allMilestones;\n    }\n\n    return (\n      <GanttChart milestones={milestones} data={data} columns={columns} columnCounts={columnCounts}/>\n    );\n  },\n  render() {\n    const {repoInfos} = getFilters().getState();\n    // Get the \"Primary\" repo for milestones and labels\n    const [{repoOwner, repoName}] = repoInfos;\n\n    // TODO: Actually do all the milestones\n    const allPromises = Promise.all([IssueStore.fetchMilestones(repoOwner, repoName), IssueStore.fetchIssues()]);\n\n    return (\n      <Loadable\n        promise={allPromises}\n        renderLoaded={this.renderLoaded}\n      />\n    );\n  }\n});\n\nexport default RepoKanbanShell;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/gantt-view.jsx","// https://d3js.org Version 4.4.2. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.4.2\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$2 + tau$2;\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$3 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * Math.sin(ap)),\n            p1 = asin$1(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 1574\n// module chunks = 3","import d3 from 'd3';\n/**\n * From https://github.com/dk8996/Gantt-Chart\n * @author Dimitry Kudrayvtsev\n * @version 2.x\n */\n\nexport default function(milestoneCount) {\n  const FIT_TIME_DOMAIN_MODE = 'fit';\n  const FIXED_TIME_DOMAIN_MODE = 'fixed';\n\n  let margin = {\n    top : 20,\n    right : 40,\n    bottom : 20,\n    left : 250\n  };\n  let selector = 'body';\n  let timeDomainStart = d3.time.day.offset(new Date(),-3);\n  let timeDomainEnd = d3.time.hour.offset(new Date(),+3);\n  let timeDomainMode = FIT_TIME_DOMAIN_MODE;// fixed or fit\n  let taskTypes = [];\n  let taskStatus = [];\n    // var height = document.body.clientHeight - margin.top - margin.bottom-5;\n  let height = milestoneCount * 50; // height of chart is based on # of milestones\n  let width = document.body.clientWidth - margin.right - margin.left-5;\n\n  let tickFormat = '%H:%M';\n\n  function keyFunction(d) {\n    return d.startDate + d.taskName + d.endDate;\n  };\n\n  function rectTransform(d) {\n    return 'translate(' + x(d.startDate) + ',' + y(d.taskName) + ')';\n  };\n  function rectTransformCompleted(d) {\n    return 'translate(' + x(d.startDate) + ',' + y(d.taskName) + ')';\n  };\n  function rectTransformRemaining(d) {\n    return 'translate(' + (x(d.startDate) + d.percent * (x(d.endDate)-x(d.startDate))) + ',' + y(d.taskName) + ')';\n  };\n  function rectTransformSegment({task, segment, total, prev}) {\n    const percent = prev / total;\n    return 'translate(' + (x(task.startDate) + percent * (x(task.endDate)-x(task.startDate))) + ',' + y(task.taskName) + ')';\n  };\n\n  let x = d3.time.scale().domain([ timeDomainStart, timeDomainEnd ]).range([ 0, width ]).clamp(true);\n\n  let y = d3.scale.ordinal().domain(taskTypes).rangeRoundBands([ 0, height - margin.top - margin.bottom ], .1);\n\n  let xAxis = d3.svg.axis().scale(x).orient('bottom').tickFormat(d3.time.format(tickFormat)).tickSubdivide(true)\n\t    .tickSize(8).tickPadding(8);\n\n  let yAxis = d3.svg.axis().scale(y).orient('right').tickSize(0);\n\n  function initTimeDomain(tasks) {\n    if (timeDomainMode === FIT_TIME_DOMAIN_MODE) {\n      if (tasks === undefined || tasks.length < 1) {\n        timeDomainStart = d3.time.day.offset(new Date(), -3);\n        timeDomainEnd = d3.time.hour.offset(new Date(), +3);\n        return;\n      }\n      tasks = tasks.sort(function(a, b) {\n        return a.endDate - b.endDate;\n      });\n      timeDomainEnd = tasks[tasks.length - 1].endDate;\n      tasks = tasks.sort(function(a, b) {\n        return a.startDate - b.startDate;\n      });\n      timeDomainStart = tasks[0].startDate;\n    }\n  };\n\n  function initAxis() {\n    x = d3.time.scale().domain([ timeDomainStart, timeDomainEnd ]).range([ 0, width ]).clamp(true);\n    y = d3.scale.ordinal().domain(taskTypes).rangeRoundBands([ 0, height - margin.top - margin.bottom ], .1);\n    xAxis = d3.svg.axis().scale(x).orient('bottom').tickFormat(d3.time.format(tickFormat)).tickSubdivide(true)\n\t\t  .tickSize(8).tickPadding(8);\n\n    yAxis = d3.svg.axis().scale(y).orient('right').tickSize(0);\n  };\n\n  function gantt(tasks) {\n    initTimeDomain(tasks);\n    initAxis();\n\n    const svg = d3.select(selector)\n\t    .append('svg')\n\t    .attr('class', 'chart')\n\t    .attr('width', width + margin.left + margin.right)\n    \t.attr('height', height + margin.top + margin.bottom)\n    \t.append('g')\n      .attr('class', 'gantt-chart')\n    \t.attr('width', width + margin.left + margin.right)\n    \t.attr('height', height + margin.top + margin.bottom)\n    \t.attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');\n\n    const PHIL = svg.selectAll('.chart');\n\n    PHIL.select('line.today').data([new Date()]).enter()\n      .append('line')\n      .attr('class', 'today')\n      .attr('x1', (d) => x(d))\n      .attr('x2', (d) => x(d))\n      .attr('y1', 0)\n      .attr('y2', height)\n      .style({stroke:'rgb(0,0,255)', 'stroke-width':2});\n\n    PHIL.selectAll('g.milestone-bars').data(tasks, keyFunction).enter()\n  \t  .append('g')\n  \t//  .attr(\"rx\", 5)\n    //        .attr(\"ry\", 5)\n  \t  .attr('class', 'milestone-bars')\n  \t//  .attr(\"y\", 0)\n  \t//  .attr(\"transform\", rectTransformCompleted)\n  \t//  .attr(\"height\", function(d) { return y.rangeBand(); })\n  \t//  .attr(\"width\", function(d) {\n  \t//      return d.percent * (x(d.endDate) - x(d.startDate));\n    //    })\n      .selectAll('rect').data((task) => {task.segments.map((segment) => ({task, segment}));}).enter()\n      .append('rect')\n      .attr('class', 'milestone-segment')\n      .style(({task, segment}) => ({fill: segment.color}))\n      .attr('transform', rectTransformSegment)\n      .attr('height', (d) => y.rangeBand())\n      .attr('width', ({task, total, segment}) => {\n        const percent = segment.count / total;\n        return percent * (x(task.endDate) - x(task.startDate));\n      });\n\n\n   // PHIL: Copy-pasta to show the 2nd half of the milestone (unfinished)\n //   PHIL.selectAll('rect.milestone-remaining').data(tasks, keyFunction).enter()\n //\n // \t .append(\"rect\")\n // // \t .attr(\"rx\", 5)\n //  //         .attr(\"ry\", 5)\n // \t .attr(\"class\", function(d){\n // \t     return 'milestone-remaining ' + d.status;\n // \t     })\n // \t .attr(\"y\", 0)\n // \t .attr(\"transform\", rectTransformRemaining)\n // \t .attr(\"height\", function(d) { return y.rangeBand(); })\n // \t .attr(\"width\", function(d) {\n // \t     return (1-d.percent) * (x(d.endDate) - x(d.startDate));\n // \t     });\n\n\n    svg.append('g')\n  \t  .attr('class', 'x axis')\n  \t  .attr('transform', 'translate(0, ' + (height - margin.top - margin.bottom) + ')')\n  \t  .transition()\n  \t  .call(xAxis);\n\n    svg.append('g').attr('class', 'y axis').attr('transform', 'translate(-' + margin.left + ',0)').transition().call(yAxis);\n\n    return gantt;\n  };\n\n  gantt.redraw = function(tasks) {\n\n    initTimeDomain(tasks);\n    initAxis();\n\n    const svg = d3.select('.chart');\n\n    const ganttChartGroup = svg.select('.gantt-chart');\n    const rect = ganttChartGroup.selectAll('g.milestone-bars').data(tasks, keyFunction);\n\n    rect.enter()\n      .append('g')\n      .attr('class', 'milestone-bars')\n       // \t .attr(\"y\", 0)\n       // \t .attr(\"transform\", rectTransformCompleted)\n       // \t .attr(\"height\", function(d) { return y.rangeBand(); })\n       // \t .attr(\"width\", function(d) {\n       // \t     return d.percent * (x(d.endDate) - x(d.startDate));\n        //     })\n      .selectAll('rect').data((task) => {\n        const total = task.segments.reduce((acc, segment) => acc + segment.count, 0);\n        let prev = 0;\n        const segments = task.segments.map((segment) => {\n          const ret = {task, segment, prev, total};\n          prev += segment.count;\n          return ret;\n        });\n        return segments;\n      }).enter()\n     .append('rect')\n          //  .attr('class', 'milestone-segment')\n      .style('fill', ({task, segment}) => `#${segment.color}`)\n          // .attr('class', ({task, segment}) => {return {fill: segment.color}; })\n           // .transform()\n      .attr('transform', rectTransformSegment)\n      .attr('height', (d) => y.rangeBand())\n      .attr('width', ({task, total, segment}) => {\n        const percent = segment.count / total;\n        return percent * (x(task.endDate) - x(task.startDate));\n      });\n\n\n  //       rect.enter()\n  //        .append(\"rect\")\n\t//  .attr(\"class\", function(d){\n\t//      return 'milestone-bars ' +d.status;\n\t//      })\n\t//  .transition()\n\t//  .attr(\"y\", 0)\n\t//  .attr(\"transform\", rectTransformCompleted)\n\t//  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t//  .attr(\"width\", function(d) {\n\t//      return d.percent*(x(d.endDate) - x(d.startDate));\n\t//      });\n   //\n  //       rect.transition()\n  //         .attr(\"transform\", rectTransform)\n\t//  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t//  .attr(\"width\", function(d) {\n\t//      return d.percent*(x(d.endDate) - x(d.startDate));\n\t//      });\n\n// \trect.exit().remove();\n//\n//   //PHIL Copy-pasta\n//   var rect = ganttChartGroup.selectAll(\"rect.milestone-remaining\").data(tasks, keyFunction);\n//\n//   rect.enter()\n//    .append(\"rect\")\n//    .attr(\"rx\", 5)\n//    .attr(\"ry\", 5)\n// .attr(\"class\", function(d){\n//  return 'milestone-remaining ' +d.status;\n//  })\n// .transition()\n// .attr(\"y\", 0)\n// .attr(\"transform\", rectTransformRemaining)\n// .attr(\"height\", function(d) { return y.rangeBand(); })\n// .attr(\"width\", function(d) {\n//  return (1-d.percent)*(x(d.endDate) - x(d.startDate));\n//  });\n//\n//   rect.transition()\n//     .attr(\"transform\", rectTransformRemaining)\n// .attr(\"height\", function(d) { return y.rangeBand(); })\n// .attr(\"width\", function(d) {\n//  return (1-d.percent)*(x(d.endDate) - x(d.startDate));\n//  });\n//\n// rect.exit().remove();\n\n\n    svg.select('.x').transition().call(xAxis);\n    svg.select('.y').transition().call(yAxis);\n\n    return gantt;\n  };\n\n  gantt.margin = function(value) {\n    if (!arguments.length)\n      return margin;\n    margin = value;\n    return gantt;\n  };\n\n  gantt.timeDomain = function(value) {\n    if (!arguments.length)\n      return [ timeDomainStart, timeDomainEnd ];\n    timeDomainStart = +value[0], timeDomainEnd = +value[1];\n    return gantt;\n  };\n\n  /**\n   * @param {string}\n   *                value The value can be \"fit\" - the domain fits the data or\n   *                \"fixed\" - fixed domain.\n   */\n  gantt.timeDomainMode = function(value) {\n    if (!arguments.length)\n      return timeDomainMode;\n    timeDomainMode = value;\n    return gantt;\n  };\n\n  gantt.taskTypes = function(value) {\n    if (!arguments.length)\n      return taskTypes;\n    taskTypes = value;\n    return gantt;\n  };\n\n  gantt.taskStatus = function(value) {\n    if (!arguments.length)\n      return taskStatus;\n    taskStatus = value;\n    return gantt;\n  };\n\n  gantt.width = function(value) {\n    if (!arguments.length)\n      return width;\n    width = +value;\n    return gantt;\n  };\n\n  gantt.height = function(value) {\n    if (!arguments.length)\n      return height;\n    height = +value;\n    return gantt;\n  };\n\n  gantt.tickFormat = function(value) {\n    if (!arguments.length)\n      return tickFormat;\n    tickFormat = value;\n    return gantt;\n  };\n\n  gantt.selector = function(value) {\n    if (!arguments.length)\n      return selector;\n    selector = value;\n    return gantt;\n  };\n\n  return gantt;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/gantt-chart.js"],"sourceRoot":""}
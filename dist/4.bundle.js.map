{"version":3,"sources":["webpack:///4.bundle.js","webpack:///./src/components/burnup.jsx","webpack:///./src/components/chart.jsx","webpack:///./~/c3/c3.js","webpack:///./~/c3/~/d3/d3.js"],"names":["webpackJsonp","1576","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_react","_react2","_underscore","_underscore2","_reactOcticons","_chart","_chart2","_database","_database2","_routeUtils","_issueStore","_issueStore2","_loadable","_loadable2","_moment","_moment2","BurnupShell","createClass","displayName","componentWillMount","startPolling","componentWillUnmount","stopPolling","renderLoaded","cards","getDay","dateStr","Math","floor","Date","parse","getChunk","chunkType","d","getFullYear","getMonth","Error","formatChunk","chunk","m","format","month","year","monthsShort","incrementChunk","formatChunkIndex","index","rows","length","createElement","sortBy","card","issue","createdAt","startDate","openedCards","closedCards","filter","closedAt","endDate","lastOpened","lastClosed","startDays","endDays","startChunk","endChunk","closedCount","openedCount","currentChunk","closedToday","openedToday","cardIndex","cardClosedDay","cardOpenedDay","splice","push","unshift","chartData","x","colors","closed","total","new","ideal","types","options","axis","type","tick","culling","max","className","data","element","render","promise","fetchCards","getFilters","GraphIcon","size","this","1577","_c","_c2","ChartComponent","propTypes","PropTypes","string","object","isRequired","chart","shouldComponentUpdate","nextProps","props","JSON","stringify","componentDidMount","_generateChart","componentDidUpdate","prevProps","_destroyChart","build","assign","bindto","generate","destroy","id","style","styles","1578","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","window","API","owner","inherit","base","derived","create","prototype","f","constructor","Chart","config","$$","internal","ChartInternal","loadConfig","beforeInit","init","afterInit","bindThis","fn","target","argThis","keys","forEach","key","bind","c3_chart_fn","api","d3","getDefaultConfig","cache","axes","Axis","call","c3_axis","params","axisX","selection","attr","ceil","tickOffset","axisY","y","scaleExtent","domain","start","stop","generateTicks","scale","i","ticks","apply","tickArguments","copyScale","newScale","copy","isCategory","textFormatted","v","formatted","tickFormat","getSizeFor1Char","tickTextCharSize","h","w","select","text","each","box","getBoundingClientRect","height","width","undefined","transitionise","withoutTransition","transition","g","splitTickText","maxWidth","split","splitted","spaceIndex","charAt","subtext","substr","textWidth","sizeFor1Char","concat","slice","tickText","toString","isVertical","scale1","tspanDy","dy","orient","counts","tickSize","tickPosition","tickCentered","range","innerTickSize","textAnchorForText","rotate","textTransform","dxForText","sin","PI","yForText","tickLength","tickTransform","tickX","tickY","scale0","__chart__","tickValues","selectAll","tickEnter","enter","insert","tickExit","exit","remove","tickUpdate","rangeExtent","path","pathUpdate","append","lineEnter","lineUpdate","textEnter","textUpdate","tspan","tickPadding","tickMultiline","tickWidth","map","s","tickTextRotate","outerTickSize","rangeBand","dx","linear","tickCulling","withOuterTick","arguments","top","right","bottom","left","isCentered","tickInterval","interval","node","getTotalLength","Infinity","c3_chart_internal_fn","c3_chart_internal_axis_fn","c3","version","initParams","data_url","convertUrlToData","data_mimeType","data_headers","data_keys","initWithData","data_json","convertJsonToData","data_rows","convertRowsToData","data_columns","convertColumnsToData","clipId","clipIdForXAxis","clipIdForYAxis","clipIdForGrid","clipIdForSubchart","clipPath","getClipPath","clipPathForXAxis","clipPathForYAxis","clipPathForGrid","clipPathForSubchart","dragStart","dragging","flowing","cancelClick","mouseover","transiting","color","generateColor","levelColor","generateLevelColor","dataTimeFormat","data_xLocaltime","time","utc","axisTimeFormat","axis_x_localtime","defaultAxisTimeFormat","multi","getMilliseconds","getSeconds","getMinutes","getHours","getDate","hiddenTargetIds","hiddenLegendIds","focusedTargetIds","defocusedTargetIds","xOrient","axis_rotated","yOrient","axis_y_inner","y2Orient","axis_y2_inner","subXOrient","isLegendRight","legend_position","isLegendInset","isLegendTop","legend_inset_anchor","isLegendLeft","legendStep","legendItemWidth","legendItemHeight","currentMaxTickWidths","y2","rotated_padding_left","rotated_padding_right","axis_x_show","rotated_padding_top","withoutFadeIn","intervalForObserveInserted","subx","initChartElements","initBar","initLine","initArc","initGauge","initText","defs","main","binding","initPie","initBrush","initZoom","selectChart","empty","document","observeInserted","html","classed","xs","targets","convertDataToTargets","data_filter","data_hide","addHiddenTargetIds","mapToIds","legend_hide","addHiddenLegendIds","hasType","legend_show","updateSizes","updateScales","extent","getXDomain","getYDomain","subX","subY","subY2","orgXDomain","brush","zoom_enabled","zoom","svg","on","onmouseover","onmouseout","svg_classname","clipChart","appendClip","clipXAxis","clipYAxis","clipGrid","clipSubchart","updateSvgSize","getTranslate","initSubchart","initTooltip","initLegend","initTitle","CLASS","initRegion","initGrid","grid_lines_front","initGridLines","initEventRect","zoom_privileged","regions","zoomRect","axis_x_extent","getDefaultExtent","updateTargets","updateDimension","oninit","redraw","withTransition","withTransform","withUpdateXDomain","withUpdateOrgXDomain","withTransitionForAxis","bindResize","smoothLines","el","x1","x2","y1","legendHeight","legend","getLegendHeight","legendWidth","getLegendWidth","legendHeightForBottom","hasArc","hasArcType","xAxisHeight","getHorizontalAxisHeight","subchartHeight","subchart_show","subchart_size_height","currentWidth","getCurrentWidth","currentHeight","getCurrentHeight","margin","getCurrentPaddingTop","getCurrentPaddingRight","getCurrentPaddingBottom","getCurrentPaddingLeft","margin2","NaN","margin3","updateSizeForLegend","width2","height2","arcWidth","arcHeight","gauge_fullCircle","getGaugeLabelHeight","updateRadius","radiusExpanded","updateTargetsForText","updateTargetsForBar","updateTargetsForLine","updateTargetsForArc","updateTargetsForSubchart","showTargets","isTargetToShow","duration","transition_duration","transitions","withY","withSubchart","withTransitionForExit","withTrimXDomain","withLegend","withEventRect","withDimension","withUpdateXAxis","drawArea","drawBar","drawLine","xForText","durationForExit","durationForAxis","waitForDraw","flow","intervalForCulling","xDomainForZoom","cx","cy","areaIndices","getShapeIndices","isAreaType","barIndices","isBarType","lineIndices","isLineType","hideAxis","targetsToShow","filterTargetsToShow","xv","getOption","generateTransitions","updateLegend","isCategorized","updateXDomain","axis_x_tick_values","updateXAxisTickValues","xAxis","subXAxis","zoom_rescale","orgDomain","axis_y_tick_values","axis_y_tick_count","yAxis","generateTickValues","axis_y2_tick_values","axis_y2_tick_count","y2Axis","updateLabels","axis_x_tick_culling","axis_x_tick_culling_max","e","indexOf","generateDrawArea","generateDrawBar","generateDrawLine","generateXYForText","updateXgridFocus","data_empty_label_text","updateGrid","updateRegion","updateBar","updateLine","updateArea","updateCircle","hasDataLabel","updateText","redrawTitle","redrawArc","redrawSubchart","selectedCircles","interaction_enabled","redrawEventRect","updateZoom","updateCircleY","circleY","circleX","generateFlow","isTabVisible","transitionsToWait","redrawBar","redrawLine","redrawArea","redrawCircle","redrawText","redrawRegion","redrawGrid","generateWait","t","add","onrendered","updateAndRedraw","withTransitionForTransform","transformAll","redrawWithoutRescale","isTimeSeries","axis_x_type","isCustomX","data_x","notEmpty","data_xs","isTimeSeriesY","axis_y_type","asHalfPixel","initialOpacity","initialOpacityForCircle","opacityForCircle","opacity","point_show","isValue","isScatterType","opacityForText","xx","parseDate","axis_x_categories","yv","yScale","subxx","transformMain","axisY2","chartArcs","transformContext","transformLegend","getXAxisClipX","getXAxisClipY","getXAxisClipWidth","getXAxisClipHeight","getYAxisClipX","getYAxisClipY","getYAxisClipWidth","getYAxisClipHeight","withoutAxis","observer","MutationObserver","console","error","mutations","mutation","previousSibling","disconnect","setInterval","parentNode","clearInterval","update","observe","attributes","childList","characterData","resizeFunction","generateResize","onresize","resize_auto","resizeTimeout","clearTimeout","setTimeout","flush","onresized","attachEvent","addEventListener","wrapper","callResizeFunctions","resizeFunctions","endall","callback","n","timer","done","date","parsedDate","data_xFormat","isNaN","hidden","mozHidden","msHidden","webkitHidden","size_width","size_height","padding_left","padding_right","padding_top","padding_bottom","zoom_extent","zoom_onzoom","zoom_onzoomstart","zoom_onzoomend","zoom_x_min","zoom_x_max","interaction_brighten","data_xSort","data_idConverter","data_names","data_classes","data_groups","data_axes","data_type","data_types","data_labels","data_order","data_regions","data_color","data_colors","data_selection_enabled","data_selection_grouped","data_selection_isselectable","data_selection_multiple","data_selection_draggable","data_onclick","data_onmouseover","data_onmouseout","data_onselected","data_onunselected","subchart_axis_x_show","subchart_onbrush","color_pattern","color_threshold","legend_inset_x","legend_inset_y","legend_inset_step","legend_item_onclick","legend_item_onmouseover","legend_item_onmouseout","legend_equally","legend_padding","legend_item_tile_width","legend_item_tile_height","axis_x_tick_centered","axis_x_tick_format","axis_x_tick_count","axis_x_tick_fit","axis_x_tick_rotate","axis_x_tick_outer","axis_x_tick_multiline","axis_x_tick_width","axis_x_max","axis_x_min","axis_x_padding","axis_x_height","axis_x_label","axis_y_show","axis_y_max","axis_y_min","axis_y_inverted","axis_y_center","axis_y_label","axis_y_tick_format","axis_y_tick_outer","axis_y_tick_rotate","axis_y_tick_time_value","axis_y_tick_time_interval","axis_y_padding","axis_y_default","axis_y2_show","axis_y2_max","axis_y2_min","axis_y2_inverted","axis_y2_center","axis_y2_label","axis_y2_tick_format","axis_y2_tick_outer","axis_y2_padding","axis_y2_default","grid_x_show","grid_x_type","grid_x_lines","grid_y_show","grid_y_lines","grid_y_ticks","grid_focus_show","point_r","point_sensitivity","point_focus_expand_enabled","point_focus_expand_r","point_select_r","line_connectNull","line_step_type","bar_width","bar_width_ratio","bar_width_max","bar_zerobased","area_zerobased","area_above","pie_label_show","pie_label_format","pie_label_threshold","pie_label_ratio","pie_expand","pie_expand_duration","gauge_label_show","gauge_label_format","gauge_min","gauge_max","gauge_startingAngle","gauge_units","gauge_width","gauge_expand","gauge_expand_duration","donut_label_show","donut_label_format","donut_label_threshold","donut_label_ratio","donut_width","donut_title","donut_expand","donut_expand_duration","spline_interpolation_type","tooltip_show","tooltip_grouped","tooltip_format_title","tooltip_format_name","tooltip_format_value","tooltip_position","tooltip_contents","defaultTitleFormat","defaultValueFormat","getTooltipContent","tooltip_init_show","tooltip_init_x","tooltip_init_position","tooltip_onshow","tooltip_onhide","title_text","title_padding","title_position","additionalConfig","find","shift","read","this_config","isDefined","getScale","min","forTimeseries","getX","offset","_scale","raw","getY","getYScale","getId","getSubYScale","forInit","xMin","xMax","yMin","yMax","subXMin","subXMax","subYMin","subYMax","xAxisTickFormat","getXAxisTickFormat","xAxisTickValues","getXAxisTickValues","yAxisTickValues","getYAxisTickValues","y2AxisTickValues","getY2AxisTickValues","getXAxis","getYAxis","updateArc","getYDomainMin","j","k","baseId","idsInGroup","hasNegativeValue","ids","ys","getValuesAsIdKeyed","hasNegativeValueInTargets","getYDomainMax","hasPositiveValue","hasPositiveValueInTargets","axisId","xDomain","domainLength","padding","yDomainAbs","lengths","diff","ratio","isAllPositive","isAllNegative","targetsByAxisId","yTargets","filterByXDomain","yDomainMin","yDomainMax","center","isZeroBased","isInverted","showHorizontalDataLabel","showVerticalDataLabel","abs","getDataLabelLength","diffDomain","convertPixelsToAxisPadding","getPadding","reverse","getXDomainMin","values","getXDomainMax","getXDomainPadding","maxDataCount","paddingLeft","paddingRight","getMaxDataCount","firstX","lastX","getTime","withTrim","updateScaleExtent","trimXDomain","zoomDomain","getZoomDomain","isX","hasValue","isNotX","getXKey","getXValuesOfXKey","xValues","getIndexByX","filterByX","getXValue","getOtherTargetXs","idsForX","getOtherTargetX","addXs","hasMultipleX","set","isMultipleX","addName","name","getValueOnIndex","valueOnIndex","updateTargetX","generateTargetX","updateTargetXs","rawX","cloneTarget","id_org","updateXs","getPrevX","getNextX","getMaxDataCountTarget","maxTarget","getEdgeX","mapToTargetIds","hasTarget","targetId","isLegendToShow","mapTargetsToUniqueXs","merge","sort","a","b","targetIds","removeHiddenTargetIds","removeHiddenLegendIds","checkValueInTargets","checker","isOrderDesc","toLowerCase","isOrderAsc","orderTargets","orderAsc","orderDesc","t1","t2","reducer","p","c","t1Sum","reduce","t2Sum","isFunction","filterRemoveNull","paddingCoef","dataLabelFormat","isNoneArc","isArc","findSameXOfValues","targetX","sames","findClosestFromTargets","pos","candidates","findClosest","closest","minDist","shape","bars","getTargetSelectorSuffix","bar","isWithinBar","dist","xIndex","yIndex","sqrt","pow","convertValuesToStep","converted","updateDataAttributes","attrs","current","url","mimeType","headers","req","xhr","header","get","responseURL","status","statusText","response","convertTsvToData","convertCsvToData","convertXsvToData","xsv","parser","parseRows","csv","tsv","json","targetKeys","new_rows","o","new_row","findValueInJson","isUndefined","replace","pathArray","columns","appendXs","xKey","convertedId","v1","v2","setTargetType","addCache","load","args","loadFromArgs","unload","selectorTarget","legendItem","categoryName","eventRects","eventRectUpdate","maxDataCountTarget","eventRectsMultiple","eventRectsSingle","eventRect","generateEventRectsForMultipleXs","updateEventRect","datum","generateEventRectsForSingleX","rectW","rectX","getEventRectWidth","prevX","nextX","thisX","classEvent","eventRectEnter","expandCircles","expandBars","hideXGridFocus","hideTooltip","unexpandCircles","unexpandBars","selectedData","isStepType","mouse","showTooltip","showXGridFocus","EXPANDED","isWithinShape","toggleShape","drag","behavior","origin","dragstart","dragend","mouseout","sameXData","shapes","dispatchEvent","selector","event","createEvent","initMouseEvent","getParentWidth","getParentHeight","title","getTitlePadding","withoutRecompute","ceil10","getAxisWidthByAxisId","getYAxisLabelPosition","isOuter","defaultPadding","legendWidthOnRight","getY2AxisLabelPosition","getParentRectValue","parent","tagName","offsetWidth","getSvgLeft","hasLeftAxisRect","leftAxisClass","leftAxis","svgRect","chartRect","svgLeft","position","getLabelPositionById","getMaxTickWidth","isInner","cos","typeFilter","indices","__max__","getShapeX","targetsNum","isSub","getShapeY","getShapeOffset","y0","that","isWithin","nodeName","isWithinStep","isWithinCircle","pointSelectR","getInterpolate","interpolation","isInterpolationType","isSplineType","chartLines","mainLineUpdate","mainLineEnter","classChartLine","classLines","classAreas","classCircles","classFocus","chartLine","generateClass","selectedCircle","mainLine","lines","line","lineData","classLine","random","getPoints","generateGetLinePoints","yScaleGetter","xValue","yValue","defined","x0","lineWithRegions","interpolate","lineTargetsNum","lineOffset","posX","posY","_regions","isWithinRegions","end","generateM","points","sWithRegion","xp","yp","dd","diffx2","prev","xOffset","d0","d1","x_diff","xv0","xv1","mainArea","areas","area","classArea","orgAreaOpacity","generateGetAreaPoints","value0","getAreaBaseValue","value1","areaTargetsNum","areaOffset","mainCircle","circles","circle","lineOrScatterData","classCircle","pointR","getCircles","reset","r","pointExpandedR","d3_this","chartBars","mainBarUpdate","mainBarEnter","classChartBar","classBars","chartBar","barData","classBar","mainBar","getBarW","barTargetsNum","getBars","generateGetBarPoints","indexX","indexY","barW","barX","barY","barOffset","seg0","pathSegList","getItem","seg1","sx","ex","sy","ey","chartTexts","mainText","mainTextUpdate","mainTextEnter","classChartText","classTexts","chartText","barOrLineData","classText","texts","forFlow","getTextRect","cls","rect","dummy","font","forX","getAreaPoints","getBarPoints","getLinePoints","getter","getXForText","getYForText","textElement","xPos","yPos","isSafari","isChrome","has","isString","isPieType","isGaugeType","isDonutType","isArcType","arcData","grid","xgrids","ygrids","xgridFocus","xgrid","gridLines","xgridLines","ygridLines","updateXGrid","withoutUpdate","xgridData","generateGridData","xgridAttr","updateYGrid","gridValues","ygrid","gridTextAnchor","gridTextDx","xGridTextX","yGridTextX","xgridLine","ygridLine","dataToShow","focusEl","firstYear","lastYear","gridData","tickNum","getGridFilterToRemove","found","param","removeGridLines","toRemove","toShow","tooltip","tooltipContainer","getYFormat","bgcolor","titleFormat","nameFormat","valueFormat","sanitise","tooltipName","tooltipPosition","tWidth","tHeight","tooltipLeft","tooltipRight","tooltipTop","chartRight","forArc","positionFunction","property","legendItemTextBox","legendHasRendered","updateLegendWithDefaults","insetLegendPosition","updateLegendStep","step","updateLegendItemWidth","updateLegendItemHeight","opacityForLegend","legendItemHidden","opacityForUnfocusedLegend","toggleFocusLegend","focus","legendItemFocused","revertLegend","showLegend","selectorLegends","hideLegend","isEmpty","clearLegendItemTextBoxCache","getTextBox","textContent","updatePositions","updateValues","withoutStep","areaLength","totalLength","itemLength","posMin","steps","margins","offsets","maxLength","isLast","itemWidth","tileWidth","itemHeight","paddingTop","maxHeight","widths","heights","xForLegend","xForLegendText","xForLegendRect","yForLegend","yForLegendText","yForLegendRect","x1ForLegendTile","x2ForLegendTile","yForLegendTile","l","rects","tiles","background","altKey","hide","show","toggle","revert","legendItemEvent","legendItemTile","legendBackground","xForTitle","yForTitle","axisXLabel","textAnchorForXAxisLabel","axisYLabel","textAnchorForYAxisLabel","axisY2Label","textAnchorForY2AxisLabel","withoutRotateTickText","axisParams","toFixed","getTickValues","getLabelOptionByAxisId","option","getLabelText","setLabelText","getLabelPosition","defaultPosition","isLeft","isCenter","isRight","isTop","isMiddle","isBottom","getXAxisLabelPosition","textForXAxisLabel","textForYAxisLabel","textForY2AxisLabel","xForAxisLabel","forHorizontal","dxForAxisLabel","textAnchorForAxisLabel","xForXAxisLabel","xForYAxisLabel","xForY2AxisLabel","dxForXAxisLabel","dxForYAxisLabel","dxForY2AxisLabel","dyForXAxisLabel","dyForYAxisLabel","dyForY2AxisLabel","defaultValue","unit","pixels","tickCount","forTimeSeries","targetCount","count","tickValue","axisSubX","isHidden","isIE9","navigator","appVersion","URL","getAxisClipX","getAxisClipY","getAxisClipWidth","getAxisClipHeight","pie","layout","radius","innerRadiusRatio","innerRadius","svgArc","getSvgArc","svgArcExpanded","getSvgArcExpanded","svgArcExpandedSub","updateAngle","gMin","gMax","gTic","gValue","startAngle","endAngle","arc","outerRadius","newArc","updated","centroid","rate","getArc","force","transformForArcLabel","translate","getArcRatio","whole","convertToArcData","textForArcLabel","shouldShowArcLabel","meetsArcLabelThreshold","getArcLabelFormat","defaultArcValueFormat","expandArc","selectorTargets","chartArc","shouldExpand","expandDuration","unexpandArc","shouldShow","threshold","getArcTitle","mainPieUpdate","mainPieEnter","classChartArc","classArcs","arcs","chartArcsTitle","mainArc","classArc","_current","attrTween","interpolated","gaugeValue","round","chartArcsBackground","chartArcsGaugeUnit","chartArcsGaugeMin","chartArcsGaugeMax","region","mainRegion","classRegion","parentData","regionX","regionY","regionWidth","regionHeight","isRegionOnX","mx","my","minX","maxX","minY","maxY","altDomain","dragarea","_x","_y","_w","_h","isSelected","SELECTED","isIncluded","INCLUDED","togglePoint","getPathBox","togglePath","selectPoint","unselectPoint","selected","selectPath","rgb","brighter","unselectPath","getToggle","redrawForBrush","context","visibility","contextLineEnter","contextLineUpdate","contextBarEnter","contextBarUpdate","updateBarForSubchart","contextBar","redrawBarForSubchart","drawBarOnSub","updateLineForSubchart","contextLine","redrawLineForSubchart","drawLineOnSub","updateAreaForSubchart","contextArea","redrawAreaForSubchart","drawAreaOnSub","startEvent","sourceEvent","redrawForZoom","clientX","clientY","orgScaleExtent","z","pattern","category10","Function","asValue","formatForY","yFormat","formatForY2","y2Format","defaultFormat","hasCaches","getCaches","focused","defocused","prefix","classShape","classShapes","classTarget","additionalClassSuffix","additionalClass","classFocused","classDefocused","selectorLegend","dict","str","items","defocus","enable","enabled","unzoom","clear","names","classes","categories","cacheIds","Array","dataCount","baseTarget","baseValue","to","notfoundIds","orgDataCount","tail","missing","translateX","transform","scaleX","flowIndex","flowLength","flowStart","flowEnd","durationForFlow","wait","ease","__data__","resetOther","isTargetId","isTargetIndex","unselect","transformTo","optionsForRedraw","groups","grids","shown","category","labels","resize","detachEvent","removeEventListener","ua","userAgent","oThis","TypeError","aArgs","fToBind","fNOP","fBound","SVGPathSeg","typeAsLetter","owningPathSegList","pathSegType","pathSegTypeAsLetter","_owningPathSegList","PATHSEG_UNKNOWN","PATHSEG_CLOSEPATH","PATHSEG_MOVETO_ABS","PATHSEG_MOVETO_REL","PATHSEG_LINETO_ABS","PATHSEG_LINETO_REL","PATHSEG_CURVETO_CUBIC_ABS","PATHSEG_CURVETO_CUBIC_REL","PATHSEG_CURVETO_QUADRATIC_ABS","PATHSEG_CURVETO_QUADRATIC_REL","PATHSEG_ARC_ABS","PATHSEG_ARC_REL","PATHSEG_LINETO_HORIZONTAL_ABS","PATHSEG_LINETO_HORIZONTAL_REL","PATHSEG_LINETO_VERTICAL_ABS","PATHSEG_LINETO_VERTICAL_REL","PATHSEG_CURVETO_CUBIC_SMOOTH_ABS","PATHSEG_CURVETO_CUBIC_SMOOTH_REL","PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS","PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL","_segmentChanged","segmentChanged","SVGPathSegClosePath","_asPathString","clone","SVGPathSegMovetoAbs","enumerable","SVGPathSegMovetoRel","SVGPathSegLinetoAbs","SVGPathSegLinetoRel","SVGPathSegCurvetoCubicAbs","_x1","_y1","_x2","_y2","SVGPathSegCurvetoCubicRel","SVGPathSegCurvetoQuadraticAbs","SVGPathSegCurvetoQuadraticRel","SVGPathSegArcAbs","r1","r2","angle","largeArcFlag","sweepFlag","_r1","_r2","_angle","_largeArcFlag","_sweepFlag","SVGPathSegArcRel","SVGPathSegLinetoHorizontalAbs","SVGPathSegLinetoHorizontalRel","SVGPathSegLinetoVerticalAbs","SVGPathSegLinetoVerticalRel","SVGPathSegCurvetoCubicSmoothAbs","SVGPathSegCurvetoCubicSmoothRel","SVGPathSegCurvetoQuadraticSmoothAbs","SVGPathSegCurvetoQuadraticSmoothRel","SVGPathElement","createSVGPathSegClosePath","createSVGPathSegMovetoAbs","createSVGPathSegMovetoRel","createSVGPathSegLinetoAbs","createSVGPathSegLinetoRel","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicRel","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticRel","createSVGPathSegArcAbs","createSVGPathSegArcRel","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoHorizontalRel","createSVGPathSegLinetoVerticalAbs","createSVGPathSegLinetoVerticalRel","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoCubicSmoothRel","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegCurvetoQuadraticSmoothRel","SVGPathSegList","pathElement","_pathElement","_list","_parsePath","getAttribute","_mutationObserverConfig","attributeFilter","_pathElementMutationObserver","_updateListFromPathMutations","_checkPathSynchronizedToList","_pathSegList","takeRecords","mutationRecords","hasPathMutations","record","attributeName","_writeListToPath","setAttribute","_pathSegArrayAsString","pathSeg","initialize","newItem","_checkValidIndex","numberOfItems","insertItemBefore","replaceItem","removeItem","item","appendItem","pathSegArray","first","Builder","appendSegment","Source","_string","_currentIndex","_endIndex","_previousCommand","_skipOptionalSpaces","_isCurrentSpace","character","_skipOptionalSpacesOrDelimiter","hasMoreData","peekSegmentType","lookahead","_pathSegTypeFromChar","_nextCommandHelper","previousCommand","initialCommandIsMoveTo","command","_parseNumber","exponent","integer","frac","decimal","sign","expsign","startIndex","startIntPartIndex","scanIntPartIndex","multiplier","number","_parseArcFlag","flag","flagChar","parseSegment","arcAngle","arcLarge","arcSweep","builder","source","1579","__WEBPACK_AMD_DEFINE_FACTORY__","d3_documentElement","ownerDocument","documentElement","d3_window","defaultView","d3_ascending","d3_number","d3_numeric","d3_bisector","compare","lo","hi","mid","d3_transposeLength","d3_range_integerScale","d3_class","ctor","properties","d3_Map","_","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","method","d3_vendorSymbol","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","d3_subclass","d3_selectionPrototype","d3_selection_selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","d3_selection_classedRe","RegExp","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElementNS","createNS","d3_selectionRemove","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","group","d3_selection_enter","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","d3_selection_on","capture","onRemove","$","onAdd","wrap","d3_array","removeAll","match","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","d3_event_dragSelect","suppressClick","off","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","border","ctm","getScreenCTM","pageX","pageY","matrixTransform","inverse","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","d3_hcl_lab","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgb_hex","hsl","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","d3_xhr","respond","result","request","d3_xhrHasResponse","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","now","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","d3_format_precision","log","LN10","d3_formatPrefix","symbol","d3_locale_numberFormat","locale","locale_decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","join","specifier","d3_format_re","fill","align","zfill","comma","precision","suffix","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","formatPrefix","before","after","lastIndexOf","d3_date_utc","UTC","d3_time_interval","d3_date","dt","times","range_utc","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","charCodeAt","d3_time_formatPads","d3_time_formats","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","B","d3_time_formatPad","I","d3_time","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","z0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","pointLine","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","d3_geo_clipSegmentLength1","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","direction","meridian","parallel","meridianNormal","polarAngle","winding","point0","antimeridian","τ","intersection","φarc","d3_geo_clipCircle","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","ax","ay","bx","by","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","input","Number","rangeRound","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearNice","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","d3_svg_arcOuterRadius","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","d3_transitionNamespace","d3_transitionNode","schedule","elapsed","cancelId","cancel","tweens","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","d3_json","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","isArray","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","contains","getComputedStyle","getPropertyValue","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","nextSibling","upgroup","mouseenter","mouseleave","touch","touches","mousedown","touchstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","correspondingElement","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","translateTo","zoomTo","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","locations0","started","touchmove","touchend","changed","touchtime","distance0","l0","l1","distance1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","token","EOF","eol","EOL","formatRows","fieldSet","fields","field","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","stack","childs","revalue","partition","d3_layout_pieSortByValue","series","orders","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTweenNS","styleString","styleTween","inheritId","id0","id1","tickArguments_","tickFormat_","tickSpacing","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSubdivide","brushstart","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","xExtent","yExtent","keydown","keyCode","keyup","brushmove","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","d3_svg_brushResizes","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","responseXML"],"mappings":"AAAAA,cAAc,IAERC,KACA,SAASC,EAAQC,EAASC,GAE/B,YAsCA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GApCvFG,OAAOC,eAAeP,EAAS,cAC7BQ,OAAO,GCRV,IAAAC,GAAAR,EAAA,KDaKS,EAAUR,EAAuBO,GCZtCE,EAAAV,EAAA,KDgBKW,EAAeV,EAAuBS,GCf3CE,EAAAZ,EAAA,MAEAa,EAAAb,EAAA,MDmBKc,EAAUb,EAAuBY,GClBtCE,EAAAf,EAAA,MDsBKgB,EAAaf,EAAuBc,GCrBzCE,EAAAjB,EAAA,KACAkB,EAAAlB,EAAA,MD0BKmB,EAAelB,EAAuBiB,GCzB3CE,EAAApB,EAAA,MD6BKqB,EAAapB,EAAuBmB,GC5BzCE,EAAAtB,EAAA,MDgCKuB,EAAWtB,EAAuBqB,GC9BjCE,EAAcf,EAAAL,QAAMqB,aAAYC,YAAA,cACpCC,mBADoC,WAGlCR,EAAAf,QAAWwB,gBAEbC,qBALoC,WAMlCV,EAAAf,QAAW0B,eAEbC,aARoC,SAQvBC,GACX,QAASC,GAAOC,GACd,MAAOC,MAAKC,MAAMC,KAAKC,MAAMJ,GAAW,IAAO,GAAK,GAAK,IAI3D,QAASK,GAASL,GAChB,GAAkB,QAAdM,EACF,MAAOL,MAAKC,MAAMC,KAAKC,MAAMJ,GAAW,IAAO,GAAK,GAAK,GAGpD,IAAkB,UAAdM,EAAuB,CAChC,GAAMC,GAAI,GAAIJ,MAAKH,EACnB,OAAyB,KAAlBO,EAAEC,cAAsBD,EAAEE,WAC5B,GAAkB,SAAdH,EAAsB,CAC/B,GAAMC,GAAI,GAAIJ,MAAKH,EACnB,OAAOO,GAAEC,cAET,KAAM,IAAIE,OAAM,sCAGpB,QAASC,GAAYC,GACnB,GAAkB,QAAdN,EAAqB,CACvB,GAAMO,GAAI,GAAAxB,GAAAnB,QAAmB,IAAR0C,EAAe,GAAK,GAAK,GAC9C,OAAOC,GAAEC,OAAO,UAGX,GAAkB,UAAdR,EAAuB,CAChC,GAAMS,GAAQH,EAAQ,GACtB,IAAc,IAAVG,EAAa,CACf,GAAMC,GAAQJ,EAAQ,IAAO,GAC7B,OAAUvB,GAAAnB,QAAO+C,YAAYF,GAA7B,KAAwCC,EAExC,MAAO3B,GAAAnB,QAAO+C,YAAYF,GAEvB,GAAkB,SAAdT,EACT,MAAOM,EAEP,MAAM,IAAIF,OAAM,sCAGpB,QAASQ,GAAeN,GACtB,GAAkB,QAAdN,EACF,MAAOM,GAAQ,CAGV,IAAkB,UAAdN,EAAuB,CAChC,GAAMS,GAAQH,EAAQ,GACtB,OAAIG,IAAS,GACJH,EAAQG,EAAQ,IAEhBH,EAAQ,EAEZ,GAAkB,SAAdN,EACT,MAAOM,GAAQ,CAEf,MAAM,IAAIF,OAAM,sCA6HpB,QAASS,GAAiBC,GACxB,MAAOT,GAAYU,EAAKD,EAAM,GAAG,IAjLnC,GAAId,GAAY,IAwDFR,GAAMwB,MAEpB,KAAKxB,EAAMwB,OACT,MACE/C,GAAAL,QAAAqD,cAAA,oEAIJzB,GAAQrB,EAAAP,QAAEsD,OAAO1B,EAAO,SAAC2B,GAAD,MAAU1B,GAAO0B,EAAKC,MAAMC,YAEpD,IAAMC,GAAY9B,EAAM,GAAG4B,MAAMC,UAE7BE,EAAc/B,EAGdgC,EAAchC,EAAMiC,OAAO,SAACN,GAAD,MAAUA,GAAKC,MAAMM,UACpDF,GAAcrD,EAAAP,QAAEsD,OAAOM,EAAa,SAACL,GAAD,MAAU1B,GAAO0B,EAAKC,MAAMM,WAChE,IAAIC,SACJ,IAAIH,EAAYR,QAAUO,EAAYP,OAAQ,CAC5C,GAAMY,GAAaL,EAAYA,EAAYP,OAAS,GAAGI,MAAMC,UACvDQ,EAAaL,EAAYA,EAAYR,OAAS,GAAGI,MAAMM,QAE3DC,GADE9B,KAAKC,MAAM8B,GAAc/B,KAAKC,MAAM+B,GAC5BA,EAEAD,MAEP,IAAIL,EAAYP,OACrBW,EAAUJ,EAAYA,EAAYP,OAAS,GAAGI,MAAMC,cAC/C,KAAIG,EAAYR,OAGrB,KAAM,IAAIZ,OAAM,mCAFhBuB,GAAUH,EAAYA,EAAYR,OAAS,GAAGI,MAAMM,SAKtD,GAAMI,GAAYrC,EAAO6B,GACnBS,EAAUtC,EAAOkC,EAGrB3B,GADE+B,EAAUD,EAAY,GACZ,MAGHC,EAAUD,EAAY,KACnB,QAEA,MAWd,KAAK,GARCE,GAAajC,EAASuB,GACtBW,EAAWlC,EAAS4B,GAItBO,EAAc,EACdC,EAAc,EACZpB,KACGqB,EAAeJ,EAAYI,GAAgBH,EAAUG,EAAexB,EAAewB,GAAe,CAIzG,IAAK,GAFDC,GAAc,EACdC,EAAc,EACTC,EAAY,EAAGA,EAAYf,EAAYR,OAAQuB,IAAa,CACnE,GAAMC,GAAgBzC,EAASyB,EAAYe,GAAWnB,MAAMM,SAC5D,MAAIc,GAAiBJ,GAGnB,KAFAC,KAKJ,IAAK,GAAIE,GAAY,EAAGA,EAAYhB,EAAYP,OAAQuB,IAAa,CACnE,GAAME,GAAgB1C,EAASwB,EAAYgB,GAAWnB,MAAMC,UAC5D,MAAIoB,GAAiBL,GAGnB,KAFAE,KAMAD,IACFb,EAAYkB,OAAO,EAAGL,GACtBH,GAAeG,GAEbC,IACFf,EAAYmB,OAAO,EAAGJ,GACtBH,GAAeG,GAGjBvB,EAAK4B,MACHP,EAGAF,EACAC,EACAG,GAAe,OASnBvB,EAAK,GAAG4B,KAAK,GACb5B,EAAKA,EAAKC,OAAS,GAAG2B,KAAKR,GAC3BpB,EAAK6B,SAAS,QAAS,SAAU,QAAS,MAAO,SAEjD,IAAMC,IACJC,EAAG,QACH/B,KAAMA,EACNgC,QACEC,OAAQ,UACRC,MAAO,UACPC,IAAO,UACPC,MAAO,WAETC,OACEJ,OAAQ,cACRC,MAAO,cACPC,IAAO,QAOLG,GACJC,MACER,GACES,KAAM,WACNC,MACEhD,OAAQK,EACR4C,SACEC,IAAK,OAmBf,OACEzF,GAAAL,QAAAqD,cAAA3C,EAAAV,SAAO+F,UAAU,eAAeC,KAAMf,EAAWQ,QAASA,EAASQ,QAAQ,YAG/EC,OA9NoC,WAgOlC,GAAMC,GAAUvF,EAAAZ,QAASoG,YAAW,EAAAvF,EAAAwF,cAEpC,OACEhG,GAAAL,QAAAqD,cAAA,OAAK0C,UAAU,UACb1F,EAAAL,QAAAqD,cAAA,UAAIhD,EAAAL,QAAAqD,cAAA7C,EAAA8F,WAAWC,KAAK,SAApB,kBACAlG,EAAAL,QAAAqD,cAAA,mCAA0BhD,EAAAL,QAAAqD,cAAA,wBAA1B,QAAsDhD,EAAAL,QAAAqD,cAAA,wBAAtD,gFACAhD,EAAAL,QAAAqD,cAAA,6JACAhD,EAAAL,QAAAqD,cAAApC,EAAAjB,SACEmG,QAASA,EACTxE,aAAc6E,KAAK7E,kBDuD5BhC,GAAQK,QChDMoB,GDoDTqF,KACA,SAAS/G,EAAQC,EAASC,GAE/B,YAcA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAZvFG,OAAOC,eAAeP,EAAS,cAC7BQ,OAAO,GEhTV,IAAAuG,GAAA9G,EAAA,MFqTK+G,EAAM9G,EAAuB6G,GEpTlCtG,EAAAR,EAAA,KFwTKS,EAAUR,EAAuBO,GEtThCwG,EAAiBvG,EAAAL,QAAMqB,aAC3BC,YAAa,iBAEbuF,WACEd,UAAW1F,EAAAL,QAAM8G,UAAUC,OAC3Bf,KAAM3F,EAAAL,QAAM8G,UAAUE,OAAOC,WAC7BhB,QAAS5F,EAAAL,QAAM8G,UAAUC,OAAOE,WAChCxB,QAASpF,EAAAL,QAAM8G,UAAUE,QAG3BE,MAAO,KAEPC,sBAAuB,SAASC,GAC9B,MAAGZ,MAAKa,MAAMrB,KAAK7C,KAAKC,SACdgE,EAAUpB,KAAK7C,KAAKC,QAEpBkE,KAAKC,UAAUf,KAAKa,MAAMrB,KAAK7C,QAC7BmE,KAAKC,UAAUH,EAAUpB,KAAK7C,OAM5CqE,kBAAmB,WACjBhB,KAAKiB,eACHjB,KAAKa,MAAMrB,KACXQ,KAAKa,MAAMpB,QACXO,KAAKa,MAAM5B,UAIfiC,mBAAoB,SAASC,GACxBA,EAAU3B,KAAK7C,OAASqD,KAAKa,MAAMrB,KAAK7C,MACzCqD,KAAKiB,eACHjB,KAAKa,MAAMrB,KACXQ,KAAKa,MAAMpB,QACXO,KAAKa,MAAM5B,UAKjBhE,qBAAsB,WACpB+E,KAAKoB,iBAGPH,eAAgB,SAASzB,EAAMC,EAASR,GACtC,GAAIoC,GAAQ5H,OAAO6H,WACjBC,OAAQ,IAAM9B,EACdD,KAAMA,GACLP,EACHe,MAAKU,MAAQP,EAAA3G,QAAGgI,SAASH,IAG3BD,cAAe,WACbpB,KAAKU,MAAMe,WAGb/B,OAAQ,WACN,GAAIH,SAMJ,OAJEA,GADES,KAAKa,MAAMtB,UACD,MAAQS,KAAKa,MAAMtB,UAEnB,KAGZ1F,EAAAL,QAAAqD,cAAA,OAAK0C,UAAWA,EACXmC,GAAI1B,KAAKa,MAAMpB,QACfkC,MAAO3B,KAAKa,MAAMe,WF0T5BzI,GAAQK,QEnTM4G,GFuTTyB,KACA,SAAS3I,EAAQC,EAASC,GG1YhC,GAAA0I,GAAAC,GAAA,SAAAC,GACA,YAUA,SAAAC,GAAAC,GACAlC,KAAAkC,QAGA,QAAAC,GAAAC,EAAAC,GAEA,GAAA5I,OAAA6I,OACAD,EAAAE,UAAA9I,OAAA6I,OAAAF,EAAAG,eACS,CACT,GAAAC,GAAA,YACAA,GAAAD,UAAAH,EAAAG,UACAF,EAAAE,UAAA,GAAAC,GAKA,MAFAH,GAAAE,UAAAE,YAAAJ,EAEAA,EAGA,QAAAK,GAAAC,GACA,GAAAC,GAAA5C,KAAA6C,SAAA,GAAAC,GAAA9C,KACA4C,GAAAG,WAAAJ,GAEAC,EAAAI,WAAAL,GACAC,EAAAK,OACAL,EAAAM,UAAAP,GAGA,QAAAQ,GAAAC,EAAAC,EAAAC,GACA7J,OAAA8J,KAAAH,GAAAI,QAAA,SAAAC,GACAJ,EAAAI,GAAAL,EAAAK,GAAAC,KAAAJ,GACA7J,OAAA8J,KAAAH,EAAAK,IAAA7G,OAAA,GACAuG,EAAAC,EAAAK,GAAAJ,EAAAI,GAAAH,MAGSK,EAAA3D,WAGT,QAAA8C,GAAAc,GACA,GAAAhB,GAAA5C,IACA4C,GAAAiB,GAAA7B,EAAA6B,GAAA7B,EAAA6B,GAAAzK,EAAA,MACAwJ,EAAAgB,MACAhB,EAAAD,OAAAC,EAAAkB,mBACAlB,EAAApD,QACAoD,EAAAmB,SACAnB,EAAAoB,QAqtIA,QAAAC,GAAA/B,GACAD,EAAAiC,KAAAlE,KAAAkC,GAylFA,QAAAiC,GAAAN,EAAAO,GAQA,QAAAC,GAAAC,EAAA5F,GACA4F,EAAAC,KAAA,qBAAA1I,GACA,mBAAAN,KAAAiJ,KAAA9F,EAAA7C,GAAA4I,GAAA,SAGA,QAAAC,GAAAJ,EAAAK,GACAL,EAAAC,KAAA,qBAAA1I,GACA,qBAAAN,KAAAiJ,KAAAG,EAAA9I,IAAA,MAGA,QAAA+I,GAAAC,GACA,GAAAC,GAAAD,EAAA,GAAAE,EAAAF,IAAAjI,OAAA,EACA,OAAAkI,GAAAC,GAAAD,EAAAC,MAAAD,GAEA,QAAAE,GAAAC,GACA,GAAAC,GAAAL,EAAAM,IACA,IAAAF,EAAAE,MACA,MAAAF,GAAAE,MAAAC,MAAAH,EAAAI,EAGA,KADAR,EAAAI,EAAAJ,SACAK,EAAA3J,KAAAiJ,KAAAK,EAAA,IAA0CK,EAAAL,EAAA,GAAeK,IACzDC,EAAA5G,KAAA2G,EAKA,OAHAC,GAAAvI,OAAA,GAAAuI,EAAA,MACAA,EAAA3G,QAAA2G,EAAA,IAAAA,EAAA,GAAAA,EAAA,KAEAA,EAEA,QAAAG,KACA,GAAAT,GAAAU,EAAAN,EAAAO,MAKA,OAJApB,GAAAqB,aACAZ,EAAAI,EAAAJ,SACAU,EAAAV,UAAA,GAAAA,EAAA,QAEAU,EAEA,QAAAG,GAAAC,GACA,GAAAC,GAAAC,IAAAF,IACA,0BAAAC,KAAA,GAEA,QAAAE,GAAA1G,GACA,GAAA2G,EACA,MAAAA,EAEA,IAAAhG,IACAiG,EAAA,KACAC,EAAA,IAaA,OAXA7G,GAAA8G,OAAA,QAAAC,KAAAT,GAAAU,KAAA,SAAAvK,GACA,GAAAwK,GAAArG,KAAAsG,wBACAH,EAAAT,EAAA7J,GACAmK,EAAAK,EAAAE,OACAN,EAAAE,EAAAE,EAAAG,MAAAL,EAAAvJ,OAAA6J,MACAT,IAAAC,IACAlG,EAAAiG,IACAjG,EAAAkG,OAEaE,KAAA,IACbJ,EAAAhG,EACAA,EAEA,QAAA2G,GAAApC,GACA,MAAAF,GAAAuC,kBAAArC,EAAAT,EAAA+C,WAAAtC,GAEA,QAAApF,GAAA2H,GACAA,EAAAT,KAAA,WAqCA,QAAAU,GAAAjL,EAAAkL,GAYA,QAAAC,GAAAC,EAAAd,GACAe,EAAAT,MACA,QAAAvB,GAAA,EAAuCA,EAAAiB,EAAAvJ,OAAiBsI,IAOxD,GANA,MAAAiB,EAAAgB,OAAAjC,KACAgC,EAAAhC,GAEAkC,EAAAjB,EAAAkB,OAAA,EAAAnC,EAAA,GACAoC,EAAAC,EAAAtB,EAAAmB,EAAAxK,OAEAmK,EAAAO,EACA,MAAAN,GACAC,EAAAO,OAAArB,EAAAkB,OAAA,EAAAH,IAAAhC,IACAiB,EAAAsB,MAAAP,IAAA,EAAAhC,GAIA,OAAA+B,GAAAO,OAAArB,GA3BA,GACAiB,GAAAF,EAAAI,EADAI,EAAAhC,EAAA7J,GACAoL,IAEA,0BAAAxN,OAAA8I,UAAAoF,SAAAzD,KAAAwD,GACAA,KAGAX,MAAA,KACAA,EAAAa,EAAA,GAAAxD,EAAAqB,WAAAlK,KAAAiJ,KAAAqD,EAAA1C,EAAA,IAAA0C,EAAA1C,EAAA,aAsBA6B,EAAAC,EAAAS,EAAA,KAGA,QAAAI,GAAAjM,EAAAqJ,GACA,GAAA6C,GAAAR,EAAAvB,CAQA,OAPA,KAAAd,IAEA6C,EADA,SAAAC,GAAA,UAAAA,KACAC,EAAApM,EAAAa,OAAA,IAAA6K,EAAAvB,EAAA,MAEA,SAGA+B,EAGA,QAAAG,GAAArM,GACA,GAAAsM,GAAAlD,EAAApJ,IAAAuM,EAAA,EAAA3D,EACA,OAAA4D,GAAA,GAAAF,KAAAE,EAAA,GAAAC,EAAA,EAkBA,QAAAC,GAAAC,GACA,MAAAA,GAGAA,EAAA,gBAFA,SAIA,QAAAC,GAAAD,GACA,MAAAA,GAGA,UAAAA,EAAA,IAFA,GAIA,QAAAE,GAAAF,GACA,MAAAA,GAGA,EAAAjN,KAAAoN,IAAApN,KAAAqN,IAAAJ,EAAA,MAFA,EAIA,QAAAK,GAAAL,GACA,MAAAA,GAGA,UAAAA,EAAA,KAAAA,EAAA,QAFAM,EA1HA,GAUAC,GAAAC,EAAAC,EAVApC,EAAA3H,EAAA2H,EAAAhD,EAAAqC,OAAAlG,MAEAkJ,EAAAlJ,KAAAmJ,WAAAlE,EAAA4C,EAAA7H,KAAAmJ,UAAA7D,IAEAH,EAAAiE,IAAApE,EAAA6C,GACAzI,EAAAyH,EAAAwC,UAAA,SAAA7J,KAAA2F,EAAA0C,GACAyB,EAAAlK,EAAAmK,QAAAC,OAAA,eAAAjF,KAAA,gBAAA5C,MAAA,gBAEA8H,EAAArK,EAAAsK,OAAAC,SACAC,EAAAlD,EAAAtH,GAAAuC,MAAA,aAGA0G,EAAApD,EAAA4E,YAAA5E,EAAA4E,cAAAjF,EAAAK,EAAAoD,SACAyB,EAAAjD,EAAAwC,UAAA,WAAA7J,MAAA,IACAuK,GAAAD,EAAAP,QAAAS,OAAA,QAAAzF,KAAA,kBAAAmC,EAAAoD,GACAR,GAAAU,OAAA,QACAV,EAAAU,OAAA,OAEA,IAAAC,GAAAX,EAAApD,OAAA,QACAgE,EAAAN,EAAA1D,OAAA,QACAiE,EAAAb,EAAApD,OAAA,QACAkE,EAAAR,EAAA1D,OAAA,OAEA9B,GAAAqB,YACAhB,EAAAlJ,KAAAiJ,MAAAqD,EAAA,GAAAA,EAAA,OACAmB,EAAAZ,EAAA,EAAA3D,EACAwE,EAAAb,EAAA3D,EAAA,GAEAA,EAAAuE,EAAA,CAGA,IAAA7C,GAAAkE,EAAA9C,EAAAzB,EAAAe,EAAAX,OAAA,UAAA+B,KACAa,EAAAvN,KAAA+D,IAAAgJ,EAAA,GAAAgC,EACA1C,EAAA,SAAAI,GAAA,UAAAA,CAsDA7B,GAAA/G,EAAA8G,OAAA,QACAmE,EAAAlE,EAAAkD,UAAA,SACA7J,KAAA,SAAA3D,EAAAqJ,GACA,GAAA+B,GAAA7C,EAAAmG,cAAAzD,EAAAjL,EAAAuI,EAAAoG,cAAAhD,OAAA9B,EAAA7J,GAEA,OADAoM,GAAA/C,GAAA+B,EAAArK,OACAqK,EAAAwD,IAAA,SAAAC,GACA,OAAoChO,MAAAwI,EAAA+B,SAAAyD,OAGpCL,EAAAd,QAAAS,OAAA,SACAK,EAAAX,OAAAC,SACAU,EAAAlE,KAAA,SAAAtK,GAAyC,MAAAA,GAAAoL,UAEzC,IAAAuB,GAAApE,EAAAuG,cA2BA,QAAA3C,GACA,aAEAe,EAAA1E,EACA4F,EAAA1F,KAAA,KAAA+D,GACA6B,EAAA5F,KAAA,IAAAuE,GACAoB,EAAA3F,KAAA,KAAAyE,GAAAzE,KAAA,KAAAyE,GAAAzE,KAAA,KAAA2D,GACAkC,EAAA7F,KAAA,OAAAA,KAAA,IAAAsE,EAAAL,IACA7G,MAAA,cAAA4G,EAAAC,IACAjE,KAAA,YAAAkE,EAAAD,IACA6B,EAAA9F,KAAA,OAAAA,KAAA,KAAAuD,GAAAvD,KAAA,KAAAmE,EAAAF,IACAuB,EAAAxF,KAAA,QAAA8D,EAAA,OAAAuC,EAAA,MAAAvC,EAAA,OAAAuC,EACA,MAEA,WAGA7B,EAAA1E,EACA4F,EAAA1F,KAAA,MAAA+D,GACA6B,EAAA5F,KAAA,KAAAuE,GACAoB,EAAA3F,KAAA,QAAAA,KAAA,MAAA+D,GACA8B,EAAA7F,KAAA,OAAAA,KAAA,KAAAuE,GACA3C,EAAAxE,MAAA,wBACA0I,EAAA9F,KAAA,OAAAA,KAAA,YACAwF,EAAAxF,KAAA,QAAA8D,EAAA,QAAAuC,EAAA,MAAAvC,EAAA,QAAAuC,EACA,MAEA,YAEA7B,EAAArE,EACAuF,EAAA1F,KAAA,MAAA+D,GACA6B,EAAA5F,KAAA,KAAAuE,GACAoB,EAAA3F,KAAA,MAAA+D,GAAA/D,KAAA,KAAA0E,GAAA1E,KAAA,KAAA0E,GACAmB,EAAA7F,KAAA,KAAAuE,GAAAvE,KAAA,IAAAE,GACA0B,EAAAxE,MAAA,qBACA0I,EAAA9F,KAAA,KAAAuE,GAAAvE,KAAA,KAAAuD,GACAiC,EAAAxF,KAAA,SAAAqG,EAAA,IAAAvC,EAAA,SAAAA,EAAA,QAAAuC,EACA,MAEA,aAEA7B,EAAArE,EACAuF,EAAA1F,KAAA,KAAA+D,GACA6B,EAAA5F,KAAA,IAAAuE,GACAoB,EAAA3F,KAAA,KAAA+D,GAAA/D,KAAA,QACA6F,EAAA7F,KAAA,IAAAuE,GAAAvE,KAAA,OACA4B,EAAAxE,MAAA,uBACA0I,EAAA9F,KAAA,IAAAuE,GAAAvE,KAAA,KAAAuD,GACAiC,EAAAxF,KAAA,QAAAqG,EAAA,IAAAvC,EAAA,SAAAA,EAAA,OAAAuC,GAIA,GAAA/C,EAAAgD,UAAA,CACA,GAAAnM,GAAAmJ,EAAAiD,EAAApM,EAAAmM,YAAA,CACA3B,GAAArB,EAAA,SAAAhM,GACA,MAAA6C,GAAA7C,GAAAiP,OAEiB5B,GAAA2B,UACjB3B,EAAArB,EAEA4B,EAAAvF,KAAA6E,EAAAlB,EAEAyB,GAAApF,KAAA6E,EAAAG,GACAU,EAAA1F,KAAA6E,EAAAlB,KAvQA,GAAA+C,GAAA/E,EAAAR,EAEA+C,EAFAnD,EAAApB,EAAAoB,MAAA8F,SAAA/C,EAAA,SAAAM,EAAA,EAAAgC,EAAA,EAAAlB,EAAA,KAEA3E,EAAA,EAAAuG,GAAA,CAgUA,OA9TA5G,SACAwG,EAAAxG,EAAA6G,cAAA,IAqQA/L,EAAA+F,MAAA,SAAAvG,GACA,MAAAwM,WAAAtO,QACAqI,EAAAvG,EACAQ,GAFoC+F,GAIpC/F,EAAA8I,OAAA,SAAAtJ,GACA,MAAAwM,WAAAtO,QACAoL,EAAAtJ,KAA2ByM,IAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,KAAA,GAAqC5M,EAAA,YAChEQ,GAFoC8I,GAIpC9I,EAAA2G,WAAA,SAAAzJ,GACA,MAAA8O,WAAAtO,QACAiJ,EAAAzJ,EACA8C,GAFoC2G,GAIpC3G,EAAAkJ,aAAA,SAAAmD,GACA,MAAAL,WAAAtO,QACAwL,EAAAmD,EACArM,GAFoCkJ,GAIpClJ,EAAAuF,WAAA,WACA,MAAAA,IAEAvF,EAAAsM,aAAA,WACA,GAAAC,GAAA7O,CAQA,OAPAwH,GAAAqB,WACAgG,EAAA,EAAAhH,GAGA7H,EAAAsC,EAAA2H,EAAAX,OAAA,eAAAwF,OAAAC,iBAAA,EAAAf,EACAa,EAAA7O,EAAAsC,EAAA2H,EAAAwC,UAAA,QAAAtJ,QAEA0L,IAAAG,IAAA,EAAAH,GAEAvM,EAAAiG,MAAA,WACA,MAAA+F,WAAAtO,QACAyI,EAAA6F,UACAhM,GAFoCmG,GAIpCnG,EAAA8L,YAAA,SAAA3L,GACA,MAAA6L,WAAAtO,QACAoO,EAAA3L,EACAH,GAFoC8L,GAIpC9L,EAAAkK,WAAA,SAAA1K,GACA,qBAAAA,GACA0K,EAAA,WACA,MAAA1K,GAAAuG,EAAAJ,eAGA,CACA,IAAAqG,UAAAtO,OAAwC,MAAAwM,EACxCA,GAAA1K,EAEA,MAAAQ,IAEAA,EArqOA,GAEAyE,GACAkI,EACAC,EAJAC,GAAcC,QAAA,SAsDdD,GAAAvK,SAAA,SAAAmB,GACA,UAAAD,GAAAC,IAGAoJ,EAAArL,OACA0C,GAAAV,EAAAH,UACAM,UACAO,GAAAN,EAAAP,UACArD,MACAkE,GAAAa,EAAA1B,aAIAoB,EAAAoI,EAAArL,MAAA0C,GACAyI,EAAAE,EAAArL,MAAAmC,SAAAO,GACA0I,EAAAC,EAAArL,MAAAmC,SAAA3D,KAAAkE,GAEAyI,EAAA7I,WAAA,aAGA6I,EAAA3I,UAAA,aAGA2I,EAAA5I,KAAA,WACA,GAAAL,GAAA5C,KAAA2C,EAAAC,EAAAD,MAIA,IAFAC,EAAAqJ,aAEAtJ,EAAAuJ,SACAtJ,EAAAuJ,iBAAAxJ,EAAAuJ,SAAAvJ,EAAAyJ,cAAAzJ,EAAA0J,aAAA1J,EAAA2J,UAAA1J,EAAA2J,kBAEA,IAAA5J,EAAA6J,UACA5J,EAAA2J,aAAA3J,EAAA6J,kBAAA9J,EAAA6J,UAAA7J,EAAA2J,gBAEA,IAAA3J,EAAA+J,UACA9J,EAAA2J,aAAA3J,EAAA+J,kBAAAhK,EAAA+J,gBAEA,KAAA/J,EAAAiK,aAIA,KAAA5Q,OAAA,8CAHA4G,GAAA2J,aAAA3J,EAAAiK,qBAAAlK,EAAAiK,iBAOAf,EAAAI,WAAA,WACA,GAAArJ,GAAA5C,KAAA6D,EAAAjB,EAAAiB,GAAAlB,EAAAC,EAAAD,MAGAC,GAAAkK,OAAA,WAAArR,MAAA,QACAmH,EAAAmK,eAAAnK,EAAAkK,OAAA,SACAlK,EAAAoK,eAAApK,EAAAkK,OAAA,SACAlK,EAAAqK,cAAArK,EAAAkK,OAAA,QACAlK,EAAAsK,kBAAAtK,EAAAkK,OAAA,YACAlK,EAAAuK,SAAAvK,EAAAwK,YAAAxK,EAAAkK,QACAlK,EAAAyK,iBAAAzK,EAAAwK,YAAAxK,EAAAmK,gBACAnK,EAAA0K,iBAAA1K,EAAAwK,YAAAxK,EAAAoK,gBACApK,EAAA2K,gBAAA3K,EAAAwK,YAAAxK,EAAAqK,eACArK,EAAA4K,oBAAA5K,EAAAwK,YAAAxK,EAAAsK,mBAEAtK,EAAA6K,UAAA,KACA7K,EAAA8K,UAAA,EACA9K,EAAA+K,SAAA,EACA/K,EAAAgL,aAAA,EACAhL,EAAAiL,WAAA,EACAjL,EAAAkL,YAAA,EAEAlL,EAAAmL,MAAAnL,EAAAoL,gBACApL,EAAAqL,WAAArL,EAAAsL,qBAEAtL,EAAAuL,eAAAxL,EAAAyL,gBAAAvK,EAAAwK,KAAAjS,OAAAyH,EAAAwK,KAAAjS,OAAAkS,IACA1L,EAAA2L,eAAA5L,EAAA6L,iBAAA3K,EAAAwK,KAAAjS,OAAAyH,EAAAwK,KAAAjS,OAAAkS,IACA1L,EAAA6L,sBAAA7L,EAAA2L,eAAAG,QACA,eAAA7S,GAAkC,MAAAA,GAAA8S,qBAClC,eAAA9S,GAAkC,MAAAA,GAAA+S,gBAClC,iBAAA/S,GAAoC,MAAAA,GAAAgT,gBACpC,iBAAAhT,GAAoC,MAAAA,GAAAiT,cACpC,mBAAAjT,GAAsC,MAAAA,GAAAR,UAAA,IAAAQ,EAAAkT,aACtC,mBAAAlT,GAAsC,WAAAA,EAAAkT,aACtC,mBAAAlT,GAAsC,MAAAA,GAAAE,cACtC,wBAAwC,aAGxC6G,EAAAoM,mBACApM,EAAAqM,mBACArM,EAAAsM,oBACAtM,EAAAuM,sBAEAvM,EAAAwM,QAAAzM,EAAA0M,aAAA,gBACAzM,EAAA0M,QAAA3M,EAAA0M,aAAA1M,EAAA4M,aAAA,eAAA5M,EAAA4M,aAAA,eACA3M,EAAA4M,SAAA7M,EAAA0M,aAAA1M,EAAA8M,cAAA,eAAA9M,EAAA8M,cAAA,eACA7M,EAAA8M,WAAA/M,EAAA0M,aAAA,gBAEAzM,EAAA+M,cAAA,UAAAhN,EAAAiN,gBACAhN,EAAAiN,cAAA,UAAAlN,EAAAiN,gBACAhN,EAAAkN,YAAA,aAAAnN,EAAAoN,qBAAA,cAAApN,EAAAoN,oBACAnN,EAAAoN,aAAA,aAAArN,EAAAoN,qBAAA,gBAAApN,EAAAoN,oBACAnN,EAAAqN,WAAA,EACArN,EAAAsN,gBAAA,EACAtN,EAAAuN,iBAAA,EAEAvN,EAAAwN,sBACA1R,EAAA,EACAiG,EAAA,EACA0L,GAAA,GAGAzN,EAAA0N,qBAAA,GACA1N,EAAA2N,sBAAA5N,EAAA0M,eAAA1M,EAAA6N,YAAA,KACA5N,EAAA6N,oBAAA,EAEA7N,EAAA8N,iBAEA9N,EAAA+N,2BAAAlK,OAEA7D,EAAAoB,KAAA4M,KAAA/M,EAAAwF,eAGAwC,EAAAgF,kBAAA,WACA7Q,KAAA8Q,SAA2B9Q,KAAA8Q,UAC3B9Q,KAAA+Q,UAA4B/Q,KAAA+Q,WAC5B/Q,KAAAgR,SAA2BhR,KAAAgR,UAC3BhR,KAAAiR,WAA6BjR,KAAAiR,YAC7BjR,KAAAkR,UAA4BlR,KAAAkR,YAG5BrF,EAAAU,aAAA,SAAA/M,GACA,GACA2R,GAAAC,EADAxO,EAAA5C,KAAA6D,EAAAjB,EAAAiB,GAAAlB,EAAAC,EAAAD,OACA0O,GAAA,CAEAzO,GAAA1D,KAAA,GAAA+E,GAAArB,GAEAA,EAAA0O,SAAyB1O,EAAA0O,UACzB1O,EAAA2O,WAA2B3O,EAAA2O,YAC3B3O,EAAA4O,UAA0B5O,EAAA4O,WAE1B7O,EAAApB,OAGA,kBAAAoB,GAAApB,OAAAmK,KACA9I,EAAA6O,YAAA9O,EAAApB,OAGAqB,EAAA6O,YAAA5N,EAAAqC,OAAAvD,EAAApB,QANAqB,EAAA6O,YAAA5N,EAAAwF,cAQAzG,EAAA6O,YAAAC,UACA9O,EAAA6O,YAAA5N,EAAAqC,OAAAyL,SAAA9U,cAAA,QAAA8E,MAAA,aACAiB,EAAAgP,gBAAAhP,EAAA6O,aACAJ,GAAA,GAEAzO,EAAA6O,YAAAI,KAAA,IAAAC,QAAA,SAGAlP,EAAApD,KAAAuS,MACAnP,EAAApD,KAAAwS,QAAApP,EAAAqP,qBAAAzS,GAEAmD,EAAAuP,cACAtP,EAAApD,KAAAwS,QAAApP,EAAApD,KAAAwS,QAAA3U,OAAAsF,EAAAuP,cAIAvP,EAAAwP,WACAvP,EAAAwP,mBAAAzP,EAAAwP,aAAA,EAAAvP,EAAAyP,SAAAzP,EAAApD,KAAAwS,SAAArP,EAAAwP,WAEAxP,EAAA2P,aACA1P,EAAA2P,mBAAA5P,EAAA2P,eAAA,EAAA1P,EAAAyP,SAAAzP,EAAApD,KAAAwS,SAAArP,EAAA2P,aAIA1P,EAAA4P,QAAA,WACA7P,EAAA8P,aAAA,GAIA7P,EAAA8P,cACA9P,EAAA+P,eAGA/P,EAAAlE,EAAAmG,OAAAhB,EAAA+O,OAAAhQ,EAAAiQ,WAAAjQ,EAAApD,KAAAwS,WACApP,EAAA+B,EAAAE,OAAAjC,EAAAkQ,WAAAlQ,EAAApD,KAAAwS,QAAA,MACApP,EAAAyN,GAAAxL,OAAAjC,EAAAkQ,WAAAlQ,EAAApD,KAAAwS,QAAA,OACApP,EAAAmQ,KAAAlO,OAAAjC,EAAAlE,EAAAmG,UACAjC,EAAAoQ,KAAAnO,OAAAjC,EAAA+B,EAAAE,UACAjC,EAAAqQ,MAAApO,OAAAjC,EAAAyN,GAAAxL,UAGAjC,EAAAsQ,WAAAtQ,EAAAlE,EAAAmG,SAGAjC,EAAAuQ,OAAuBvQ,EAAAuQ,MAAAlO,MAAArC,EAAAmQ,MACvBpQ,EAAAyQ,cAAkCxQ,EAAAyQ,KAAApO,MAAArC,EAAAlE,GAKlCkE,EAAA0Q,IAAA1Q,EAAA6O,YAAAzH,OAAA,OACArI,MAAA,qBACA4R,GAAA,wBAA2C,MAAA5Q,GAAA6Q,YAAAtP,KAAAtB,KAC3C2Q,GAAA,wBAA2C,MAAA5Q,GAAA8Q,WAAAvP,KAAAtB,KAE3CA,EAAAD,OAAA+Q,eACA9Q,EAAA0Q,IAAA/O,KAAA,QAAA3B,EAAAD,OAAA+Q,eAIAvC,EAAAvO,EAAA0Q,IAAAtJ,OAAA,QACApH,EAAA+Q,UAAA/Q,EAAAgR,WAAAzC,EAAAvO,EAAAkK,QACAlK,EAAAiR,UAAAjR,EAAAgR,WAAAzC,EAAAvO,EAAAmK,gBACAnK,EAAAkR,UAAAlR,EAAAgR,WAAAzC,EAAAvO,EAAAoK,gBACApK,EAAAmR,SAAAnR,EAAAgR,WAAAzC,EAAAvO,EAAAqK,eACArK,EAAAoR,aAAApR,EAAAgR,WAAAzC,EAAAvO,EAAAsK,mBACAtK,EAAAqR,gBAGA7C,EAAAxO,EAAAwO,KAAAxO,EAAA0Q,IAAAtJ,OAAA,KAAAzF,KAAA,YAAA3B,EAAAsR,aAAA,SAEAtR,EAAAuR,cAA8BvR,EAAAuR,eAC9BvR,EAAAwR,aAA6BxR,EAAAwR,cAC7BxR,EAAAyR,YAA4BzR,EAAAyR,aAC5BzR,EAAA0R,WAA2B1R,EAAA0R,YAK3BlD,EAAApH,OAAA,QACAzF,KAAA,QAAAgQ,EAAApO,KAAA,IAAAoO,EAAA7C,OACAnN,KAAA,wBACAA,KAAA,8BAGA3B,EAAA4R,aAGA5R,EAAA6R,WAGArD,EAAApH,OAAA,KACAzF,KAAA,YAAA3B,EAAAuK,UACA5I,KAAA,QAAAgQ,EAAA7T,OAGAiC,EAAA+R,kBAAsC9R,EAAA+R,gBAGtC/R,EAAAgS,gBAGAhS,EAAAiO,oBAIAO,EAAA5H,OAAA,OAAA7G,EAAAkS,gBAAA,UAAAN,EAAAO,SACAvQ,KAAA,QAAAgQ,EAAAQ,UACAxQ,KAAA,QAAA3B,EAAA4D,OACAjC,KAAA,SAAA3B,EAAA2D,QACA5E,MAAA,aACA4R,GAAA,sBAGA5Q,EAAAqS,eAAmCpS,EAAAuQ,MAAAP,OAAAhQ,EAAAqS,oBAGnCrS,EAAA1D,KAAA+D,OAGAL,EAAAsS,cAAAtS,EAAApD,KAAAwS,SAGAX,IACAzO,EAAAuS,kBACAvS,EAAAD,OAAAyS,OAAAlR,KAAAtB,GACAA,EAAAyS,QACAC,gBAAA,EACAC,eAAA,EACAC,mBAAA,EACAC,sBAAA,EACAC,uBAAA,KAKA9S,EAAA+S,aAGA/S,EAAAgB,IAAAnE,QAAAmD,EAAA6O,YAAA/F,QAGAG,EAAA+J,YAAA,SAAAC,EAAA1W,GACA,GAAAyD,GAAA5C,IACA,UAAAb,GACA0W,EAAAzP,KAAA,WACA,GAAAS,GAAAjE,EAAAiB,GAAAqC,OAAAlG,MACA8V,EAAAjP,EAAAtC,KAAA,MACAwR,EAAAlP,EAAAtC,KAAA,MACAyR,EAAAnP,EAAAtC,KAAA,MACA8L,EAAAxJ,EAAAtC,KAAA,KACAsC,GAAAtC,MACAuR,GAAAva,KAAAiJ,KAAAsR,GACAC,GAAAxa,KAAAiJ,KAAAuR,GACAC,GAAAza,KAAAiJ,KAAAwR,GACA3F,GAAA9U,KAAAiJ,KAAA6L,QAOAxE,EAAA6G,YAAA,WACA,GAAA9P,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAsT,EAAArT,EAAAsT,OAAAtT,EAAAuT,kBAAA,EACAC,EAAAxT,EAAAsT,OAAAtT,EAAAyT,iBAAA,EACAC,EAAA1T,EAAA+M,eAAA/M,EAAAiN,cAAA,EAAAoG,EACAM,EAAA3T,EAAA4T,aACAC,EAAA9T,EAAA0M,cAAAkH,EAAA,EAAA3T,EAAA8T,wBAAA,KACAC,EAAAhU,EAAAiU,gBAAAL,EAAA5T,EAAAkU,qBAAAJ,EAAA,CAEA7T,GAAAkU,aAAAlU,EAAAmU,kBACAnU,EAAAoU,cAAApU,EAAAqU,mBAGArU,EAAAsU,OAAAvU,EAAA0M,cACAlE,IAAAvI,EAAA8T,wBAAA,MAAA9T,EAAAuU,uBACA/L,MAAAmL,EAAA,EAAA3T,EAAAwU,yBACA/L,OAAAzI,EAAA8T,wBAAA,KAAAJ,EAAA1T,EAAAyU,0BACA/L,KAAAqL,GAAAJ,EAAA,EAAA3T,EAAA0U,2BAEAnM,IAAA,EAAAvI,EAAAuU,uBACA/L,MAAAmL,EAAA,EAAA3T,EAAAwU,yBACA/L,OAAAoL,EAAAE,EAAAL,EAAA1T,EAAAyU,0BACA/L,KAAAiL,EAAA,EAAA3T,EAAA0U,yBAIA1U,EAAA2U,QAAA5U,EAAA0M,cACAlE,IAAAvI,EAAAsU,OAAA/L,IACAC,MAAAoM,IACAnM,OAAA,GAAAiL,EACAhL,KAAA1I,EAAA0N,uBAEAnF,IAAAvI,EAAAoU,cAAAL,EAAAL,EACAlL,MAAAoM,IACAnM,OAAAoL,EAAAH,EACAhL,KAAA1I,EAAAsU,OAAA5L,MAIA1I,EAAA6U,SACAtM,IAAA,EACAC,MAAAoM,IACAnM,OAAA,EACAC,KAAA,GAEA1I,EAAA8U,qBAAqC9U,EAAA8U,oBAAAzB,EAAAG,GAErCxT,EAAA4D,MAAA5D,EAAAkU,aAAAlU,EAAAsU,OAAA5L,KAAA1I,EAAAsU,OAAA9L,MACAxI,EAAA2D,OAAA3D,EAAAoU,cAAApU,EAAAsU,OAAA/L,IAAAvI,EAAAsU,OAAA7L,OACAzI,EAAA4D,MAAA,IAA2B5D,EAAA4D,MAAA,GAC3B5D,EAAA2D,OAAA,IAA4B3D,EAAA2D,OAAA,GAE5B3D,EAAA+U,OAAAhV,EAAA0M,aAAAzM,EAAAsU,OAAA5L,KAAA1I,EAAA0N,qBAAA1N,EAAA2N,sBAAA3N,EAAA4D,MACA5D,EAAAgV,QAAAjV,EAAA0M,aAAAzM,EAAA2D,OAAA3D,EAAAoU,cAAApU,EAAA2U,QAAApM,IAAAvI,EAAA2U,QAAAlM,OACAzI,EAAA+U,OAAA,IAA4B/U,EAAA+U,OAAA,GAC5B/U,EAAAgV,QAAA,IAA6BhV,EAAAgV,QAAA,GAG7BhV,EAAAiV,SAAAjV,EAAA4D,OAAA5D,EAAA+M,cAAAyG,EAAA,MACAxT,EAAAkV,UAAAlV,EAAA2D,QAAA3D,EAAA+M,cAAA,MACA/M,EAAA4P,QAAA,WAAA7P,EAAAoV,mBACAnV,EAAAkV,WAAAlV,EAAA2D,OAAA3D,EAAAoV,uBAEApV,EAAAqV,cAA8BrV,EAAAqV,eAE9BrV,EAAA+M,eAAA4G,IACA3T,EAAA6U,QAAAnM,KAAA1I,EAAAiV,SAAA,MAAAjV,EAAAsV,iBAIArM,EAAAqJ,cAAA,SAAAlD,GACA,GAAApP,GAAA5C,IAKA4C,GAAAuV,qBAAAnG,GAGApP,EAAAwV,oBAAApG,GAGApP,EAAAyV,qBAAArG,GAGApP,EAAA4T,cAAA5T,EAAA0V,qBAAwD1V,EAAA0V,oBAAAtG,GAIxDpP,EAAA2V,0BAA0C3V,EAAA2V,yBAAAvG,GAG1CpP,EAAA4V,eAEA3M,EAAA2M,YAAA,WACA,GAAA5V,GAAA5C,IACA4C,GAAA0Q,IAAAjK,UAAA,IAAAkL,EAAAlR,QAAAhG,OAAA,SAAAxB,GAAkE,MAAA+G,GAAA6V,eAAA5c,EAAA6F,MAClEkF,aAAA8R,SAAA9V,EAAAD,OAAAgW,qBACAhX,MAAA,cAGAkK,EAAAwJ,OAAA,SAAApW,EAAA2Z,GACA,GAEAC,GAAAC,EAAAxD,EAAAyD,EAAArD,EACAH,EAAAC,EAAAC,EAAAuD,EAAAC,EACAC,EAAAC,EAAAC,EAEAC,EAAAC,EAAAC,EAAAC,EAAA3Q,EACA6P,EAAAe,EAAAC,EACAC,EAAAC,EACAxQ,EAAAlE,EAAA2U,EAAAC,EACAC,EAAAC,EAVApX,EAAA5C,KAAAoR,EAAAxO,EAAAwO,KAAAvN,EAAAjB,EAAAiB,GAAAlB,EAAAC,EAAAD,OACAsX,EAAArX,EAAAsX,gBAAAtX,EAAAuX,YAAAC,EAAAxX,EAAAsX,gBAAAtX,EAAAyX,WAAAC,EAAA1X,EAAAsX,gBAAAtX,EAAA2X,YAIAC,EAAA5X,EAAA4T,aAIAiE,EAAA7X,EAAA8X,oBAAA9X,EAAApD,KAAAwS,SACA2I,EAAA/X,EAAA+X,GAAAjX,KAAAd,EAoEA,IAlEA3D,QACA4Z,EAAA+B,EAAA3b,EAAA,YACA6Z,EAAA8B,EAAA3b,EAAA,mBACAqW,EAAAsF,EAAA3b,EAAA,qBACAsW,EAAAqF,EAAA3b,EAAA,oBACAuW,EAAAoF,EAAA3b,EAAA,wBACAwW,EAAAmF,EAAA3b,EAAA,2BACA+Z,EAAA4B,EAAA3b,EAAA,sBACAma,EAAAwB,EAAA3b,EAAA,kBAAAuW,GACAyD,EAAA2B,EAAA3b,EAAA,iBACAia,EAAA0B,EAAA3b,EAAA,oBACAka,EAAAyB,EAAA3b,EAAA,oBACA8Z,EAAA6B,EAAA3b,EAAA,wBAAAqW,GACAI,EAAAkF,EAAA3b,EAAA,wBAAAqW,GAEAoD,EAAApD,EAAA3S,EAAAgW,oBAAA,EACAc,EAAAV,EAAAL,EAAA,EACAgB,EAAAhE,EAAAgD,EAAA,EAEAE,KAAAhW,EAAA1D,KAAA2b,oBAAAnB,GAGAT,GAAAtW,EAAA8P,YACA7P,EAAAkY,aAAAlY,EAAAyP,SAAAzP,EAAApD,KAAAwS,SAAA/S,EAAA2Z,GACSO,GAGTvW,EAAAuS,iBAAA,GAIAvS,EAAAmY,iBAAA,IAAAN,EAAA7d,QACAgG,EAAAlE,EAAAmG,QAAA,EAAAjC,EAAAoB,KAAAtF,EAAA2K,UAAA,SAAAtJ,SAGA0a,EAAA7d,QACAgG,EAAAoY,cAAAP,EAAAjF,EAAAC,EAAAuD,GACArW,EAAAsY,qBACA7R,EAAAxG,EAAA1D,KAAAgc,sBAAAT,MAGA7X,EAAAuY,MAAA/R,eACAxG,EAAAwY,SAAAhS,gBAGAzG,EAAA0Y,eAAApc,EAAA2a,OACAE,EAAAlX,EAAAlE,EAAA4c,aAGA1Y,EAAA+B,EAAAE,OAAAjC,EAAAkQ,WAAA2H,EAAA,IAAAX,IACAlX,EAAAyN,GAAAxL,OAAAjC,EAAAkQ,WAAA2H,EAAA,KAAAX,KAEAnX,EAAA4Y,oBAAA5Y,EAAA6Y,mBACA5Y,EAAA6Y,MAAArS,WAAAxG,EAAA1D,KAAAwc,mBAAA9Y,EAAA+B,EAAAE,SAAAlC,EAAA6Y,qBAEA7Y,EAAAgZ,qBAAAhZ,EAAAiZ,oBACAhZ,EAAAiZ,OAAAzS,WAAAxG,EAAA1D,KAAAwc,mBAAA9Y,EAAAyN,GAAAxL,SAAAlC,EAAAiZ,qBAIAhZ,EAAA1D,KAAAmW,OAAAuD,EAAA4B,GAGA5X,EAAA1D,KAAA4c,aAAAxG,IAGAE,GAAA4D,IAAAqB,EAAA7d,OACA,GAAA+F,EAAAoZ,qBAAA3S,EAAA,CACA,IAAAlE,EAAA,EAA2BA,EAAAkE,EAAAxM,OAAuBsI,IAClD,GAAAkE,EAAAxM,OAAAsI,EAAAvC,EAAAqZ,wBAAA,CACAnC,EAAA3U,CACA,OAGAtC,EAAA0Q,IAAAjK,UAAA,IAAAkL,EAAAlQ,MAAA,eAAA+B,KAAA,SAAA6V,GACA,GAAAvf,GAAA0M,EAAA8S,QAAAD,EACAvf,IAAA,GACAmH,EAAAqC,OAAAlG,MAAA2B,MAAA,UAAAjF,EAAAmd,EAAA,sBAIAjX,GAAA0Q,IAAAjK,UAAA,IAAAkL,EAAAlQ,MAAA,eAAA1C,MAAA,kBAKA0X,GAAAzW,EAAAuZ,iBAAAvZ,EAAAuZ,iBAAAlC,GAAA,GAAAxT,OACA6S,EAAA1W,EAAAwZ,gBAAAxZ,EAAAwZ,gBAAAhC,GAAA3T,OACA8S,EAAA3W,EAAAyZ,iBAAAzZ,EAAAyZ,iBAAA/B,GAAA,GAAA7T,OACA+S,EAAA5W,EAAA0Z,kBAAArC,EAAAG,EAAAE,GAAA,GACAzR,EAAAjG,EAAA0Z,kBAAArC,EAAAG,EAAAE,GAAA,GAGAzB,IACAjW,EAAAoQ,KAAAnO,OAAAjC,EAAAkQ,WAAA2H,EAAA,MACA7X,EAAAqQ,MAAApO,OAAAjC,EAAAkQ,WAAA2H,EAAA,QAIA7X,EAAA2Z,mBAGAnL,EAAAlL,OAAA,QAAAqO,EAAApO,KAAA,IAAAoO,EAAA7C,OACAnN,KAAA,IAAA3B,EAAA4D,MAAA,GACAjC,KAAA,IAAA3B,EAAA2D,OAAA,GACAJ,KAAAxD,EAAA6Z,uBACA5V,aACAjF,MAAA,UAAA8Y,EAAA7d,OAAA,KAGAgG,EAAA6Z,WAAA/D,GAGA9V,EAAA8Z,aAAAhE,GAGA9V,EAAA+Z,UAAAlD,GAGA7W,EAAAga,WAAAnD,GACA7W,EAAAia,WAAApD,GACA7W,EAAAka,eAGAla,EAAAma,gBACAna,EAAAoa,WAAAvD,GAIA7W,EAAAqa,aAA6Bra,EAAAqa,cAG7Bra,EAAAsa,WAA2Bta,EAAAsa,UAAAxE,EAAAe,EAAAlE,GAG3B3S,EAAAua,gBACAva,EAAAua,eAAArE,EAAAF,EAAAF,EAAAe,EAAAQ,EAAAG,EAAAE,GAIAlJ,EAAA/H,UAAA,IAAAkL,EAAA6I,iBACA/f,OAAAuF,EAAAyX,UAAA3W,KAAAd,IACAyG,UAAA,UACAM,SAGAhH,EAAA0a,sBAAApe,EAAA2a,MAAAV,IACAtW,EAAA0a,kBACA1a,EAAA2a,YAAgC3a,EAAA2a,cAIhC3a,EAAA4a,gBAGAzD,GAAAnX,EAAAD,OAAA0M,aAAAzM,EAAA6a,QAAA7a,EAAA8a,SAAAha,KAAAd,GACAoX,GAAApX,EAAAD,OAAA0M,aAAAzM,EAAA8a,QAAA9a,EAAA6a,SAAA/Z,KAAAd,GAEA3D,EAAA2a,OACAA,EAAAhX,EAAA+a,cACA3L,QAAAyI,EACAb,KAAA3a,EAAA2a,KACAlB,SAAAzZ,EAAA2a,KAAAlB,SACAY,UACAC,WACAF,WACAU,KACAC,KACAW,KACAnB,WACA3Q,eAIA6P,GAAAkB,IAAAhX,EAAAgb,eAEA/Z,EAAA+C,aAAA8R,YAAAtS,KAAA,WACA,GAAAyX,OAIAjb,EAAAkb,UAAAxE,GAAA,GACA1W,EAAAmb,WAAAxE,GAAA,GACA3W,EAAAob,WAAA3E,GAAA,GACAzW,EAAAqb,aAAAlE,EAAAC,GAAA,GACApX,EAAAsb,WAAA1E,EAAA3Q,EAAA5J,EAAA2a,MAAA,GACAhX,EAAAub,cAAA,GACAvb,EAAAwb,YAAA,IACA5a,QAAA,SAAAoV,GACAA,EAAApV,QAAA,SAAAoD,GACAiX,EAAAtf,KAAAqI,OAKA+S,EAAA/W,EAAAyb,eACAR,EAAAra,QAAA,SAAA8a,GACA3E,EAAA4E,IAAAD,OAGApa,KAAAyV,EAAA,WACAC,GACAA,IAEAjX,EAAA6b,YACA7b,EAAA6b,WAAAta,KAAAtB,MAKAA,EAAAkb,UAAAxE,GACA1W,EAAAmb,WAAAxE,GACA3W,EAAAob,WAAA3E,GACAzW,EAAAqb,aAAAlE,EAAAC,GACApX,EAAAsb,WAAA1E,EAAA3Q,EAAA5J,EAAA2a,MACAhX,EAAAub,eACAvb,EAAAwb,aACAzb,EAAA6b,YACA7b,EAAA6b,WAAAta,KAAAtB,IAKAA,EAAAyP,SAAAzP,EAAApD,KAAAwS,SAAAxO,QAAA,SAAA9B,GACAkB,EAAA8N,cAAAhP,IAAA,KAIAmK,EAAA4S,gBAAA,SAAAxf,GACA,GAAA2Z,GAAAhW,EAAA5C,KAAA2C,EAAAC,EAAAD,MACA1D,SAEAA,EAAAqW,eAAAsF,EAAA3b,EAAA,qBACAA,EAAAsW,cAAAqF,EAAA3b,EAAA,oBACAA,EAAAga,WAAA2B,EAAA3b,EAAA,iBAEAA,EAAAuW,mBAAA,EACAvW,EAAAwW,sBAAA,EACAxW,EAAA8Z,uBAAA,EACA9Z,EAAAyf,2BAAA9D,EAAA3b,EAAA,6BAAAA,EAAAqW,gBAEA1S,EAAA8P,cAEAzT,EAAAga,YAAAtW,EAAA8P,cACAmG,EAAAhW,EAAA1D,KAAA2b,oBAAA5b,EAAAyW,sBAAA/S,EAAAgW,oBAAA,GAEA/V,EAAA+P,eACA/P,EAAAqR,gBAEArR,EAAA+b,aAAA1f,EAAAyf,2BAAA9F,IAGAhW,EAAAyS,OAAApW,EAAA2Z,IAEA/M,EAAA+S,qBAAA,WACA5e,KAAAqV,QACAwD,OAAA,EACAC,cAAA,EACAI,eAAA,EACAxD,uBAAA,KAIA7J,EAAAgT,aAAA,WACA,qBAAA7e,KAAA2C,OAAAmc,aAEAjT,EAAAkP,cAAA,WACA,MAAA/a,MAAA2C,OAAAmc,YAAA5C,QAAA,eAEArQ,EAAAkT,UAAA,WACA,GAAAnc,GAAA5C,KAAA2C,EAAAC,EAAAD,MACA,QAAAC,EAAAic,iBAAAlc,EAAAqc,QAAAC,EAAAtc,EAAAuc,WAGArT,EAAAsT,cAAA,WACA,qBAAAnf,KAAA2C,OAAAyc,aAGAvT,EAAAqI,aAAA,SAAA7Q,GACA,GAAA3E,GAAAiG,EAAA/B,EAAA5C,KAAA2C,EAAAC,EAAAD,MA0BA,OAzBA,SAAAU,GACA3E,EAAA2gB,EAAAzc,EAAAsU,OAAA5L,MACA3G,EAAA0a,EAAAzc,EAAAsU,OAAA/L,MACS,YAAA9H,GACT3E,EAAA2gB,EAAAzc,EAAA2U,QAAAjM,MACA3G,EAAA0a,EAAAzc,EAAA2U,QAAApM,MACS,WAAA9H,GACT3E,EAAAkE,EAAA6U,QAAAnM,KACA3G,EAAA/B,EAAA6U,QAAAtM,KACS,MAAA9H,GACT3E,EAAA,EACAiG,EAAAhC,EAAA0M,aAAA,EAAAzM,EAAA2D,QACS,MAAAlD,GACT3E,EAAA,EACAiG,EAAAhC,EAAA0M,aAAAzM,EAAA2D,OAAA,GACS,OAAAlD,GACT3E,EAAAiE,EAAA0M,aAAA,EAAAzM,EAAA4D,MACA7B,EAAAhC,EAAA0M,aAAA,KACS,SAAAhM,GACT3E,EAAA,EACAiG,EAAAhC,EAAA0M,aAAA,EAAAzM,EAAAgV,SACS,QAAAvU,IACT3E,EAAAkE,EAAAiV,SAAA,EACAlT,EAAA/B,EAAAkV,UAAA,GAEA,aAAApZ,EAAA,IAAAiG,EAAA,KAEAkH,EAAAyT,eAAA,SAAAzjB,GACA,cAAAA,EAAAlC,OAAAqG,KAAA0Q,cAAA7U,EAAA6F,IAAA,KAEAmK,EAAA0T,wBAAA,SAAA1jB,GACA,cAAAA,EAAAlC,OAAAqG,KAAA0Q,cAAA7U,EAAA6F,IAAA1B,KAAAwf,iBAAA3jB,GAAA,GAEAgQ,EAAA2T,iBAAA,SAAA3jB,GACA,GAAA4jB,GAAAzf,KAAA2C,OAAA+c,WAAA,GACA,OAAAC,GAAA9jB,EAAAlC,OAAAqG,KAAA4f,cAAA/jB,GAAA,GAAA4jB,EAAA,GAEA5T,EAAAgU,eAAA,WACA,MAAA7f,MAAA+c,eAAA,KAEAlR,EAAAiU,GAAA,SAAAjkB,GACA,MAAAA,GAAAmE,KAAAtB,EAAA7C,EAAA6C,GAAA,MAEAmN,EAAA8O,GAAA,SAAA9e,GACA,GAAA+G,GAAA5C,KAAArG,EAAAkC,EAAAlC,KAOA,OANAiJ,GAAAic,eACAllB,EAAAiJ,EAAAmd,UAAAlkB,EAAAlC,OAEAiJ,EAAAmY,iBAAA,gBAAAlf,GAAAlC,QACAA,EAAAiJ,EAAAD,OAAAqd,kBAAA9D,QAAArgB,EAAAlC,QAEA4B,KAAAiJ,KAAA5B,EAAAlE,EAAA/E,KAEAkS,EAAAoU,GAAA,SAAApkB,GACA,GAAA+G,GAAA5C,KACAkgB,EAAArkB,EAAAqD,MAAA,OAAArD,EAAAqD,KAAA0D,EAAAyN,GAAAzN,EAAA+B,CACA,OAAApJ,MAAAiJ,KAAA0b,EAAArkB,EAAAlC,SAEAkS,EAAAsU,MAAA,SAAAtkB,GACA,MAAAA,GAAAmE,KAAA+S,KAAAlX,EAAA6C,GAAA,MAGAmN,EAAAuU,cAAA,SAAA9K,EAAAsD,GACA,GACAuC,GAAAM,EAAAI,EADAjZ,EAAA5C,IAEA4Y,MAAAvU,MACA8W,EAAAvC,EAAAvU,OAEA8W,EAAAvY,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAAlQ,OACAiR,IAAiC6F,IAAAvU,eAEjCgS,KAAAlU,MACA+W,EAAA7C,EAAAlU,OAEA+W,EAAA7Y,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAA7P,OACA4Q,IAAiCmG,IAAA7U,eAEjCgS,KAAAyH,OACAxE,EAAAjD,EAAAyH,QAEAxE,EAAAjZ,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAA8L,QACA/K,IAAiCuG,IAAAjV,gBAEjC0O,EAAA1S,EAAAwO,KAAAxK,aAAAhE,EAAAwO,MAAA7M,KAAA,YAAA3B,EAAAsR,aAAA,SACAiH,EAAA5W,KAAA,YAAA3B,EAAAsR,aAAA,MACAuH,EAAAlX,KAAA,YAAA3B,EAAAsR,aAAA,MACA2H,EAAAtX,KAAA,YAAA3B,EAAAsR,aAAA,OACAtR,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAA+L,WAAA/b,KAAA,YAAA3B,EAAAsR,aAAA,SAEArI,EAAA8S,aAAA,SAAArJ,EAAAsD,GACA,GAAAhW,GAAA5C,IACA4C,GAAAwd,cAAA9K,EAAAsD,GACAhW,EAAAD,OAAAiU,eAAsChU,EAAA2d,iBAAAjL,EAAAsD,GACtChW,EAAAsT,QAAwBtT,EAAA4d,gBAAAlL,IAGxBzJ,EAAAoI,cAAA,WACA,GAAArR,GAAA5C,KACAmT,EAAAvQ,EAAA0Q,IAAApN,OAAA,wBACAtD,GAAA0Q,IAAA/O,KAAA,QAAA3B,EAAAkU,cAAAvS,KAAA,SAAA3B,EAAAoU,eACApU,EAAA0Q,IAAAjK,WAAA,IAAAzG,EAAAkK,OAAA,IAAAlK,EAAAqK,gBAAA/G,OAAA,QACA3B,KAAA,QAAA3B,EAAA4D,OACAjC,KAAA,SAAA3B,EAAA2D,QACA3D,EAAA0Q,IAAApN,OAAA,IAAAtD,EAAAmK,gBAAA7G,OAAA,QACA3B,KAAA,IAAA3B,EAAA6d,cAAA/c,KAAAd,IACA2B,KAAA,IAAA3B,EAAA8d,cAAAhd,KAAAd,IACA2B,KAAA,QAAA3B,EAAA+d,kBAAAjd,KAAAd,IACA2B,KAAA,SAAA3B,EAAAge,mBAAAld,KAAAd,IACAA,EAAA0Q,IAAApN,OAAA,IAAAtD,EAAAoK,gBAAA9G,OAAA,QACA3B,KAAA,IAAA3B,EAAAie,cAAAnd,KAAAd,IACA2B,KAAA,IAAA3B,EAAAke,cAAApd,KAAAd,IACA2B,KAAA,QAAA3B,EAAAme,kBAAArd,KAAAd,IACA2B,KAAA,SAAA3B,EAAAoe,mBAAAtd,KAAAd,IACAA,EAAA0Q,IAAApN,OAAA,IAAAtD,EAAAsK,mBAAAhH,OAAA,QACA3B,KAAA,QAAA3B,EAAA4D,OACAjC,KAAA,SAAA4O,EAAApT,OAAAoT,EAAA5O,KAAA,aACA3B,EAAA0Q,IAAApN,OAAA,IAAAqO,EAAAQ,UACAxQ,KAAA,QAAA3B,EAAA4D,OACAjC,KAAA,SAAA3B,EAAA2D,QAEA3D,EAAA6O,YAAA9P,MAAA,aAAAiB,EAAAoU,cAAA,OAIAnL,EAAAsJ,gBAAA,SAAA8L,GACA,GAAAre,GAAA5C,IACAihB,KACAre,EAAAD,OAAA0M,cACAzM,EAAAoB,KAAAtF,EAAAwF,KAAAtB,EAAAuY,OACAvY,EAAAoB,KAAA4M,KAAA1M,KAAAtB,EAAAwY,YAEAxY,EAAAoB,KAAAW,EAAAT,KAAAtB,EAAA6Y,OACA7Y,EAAAoB,KAAAqM,GAAAnM,KAAAtB,EAAAiZ,UAGAjZ,EAAA8P,cACA9P,EAAA+P,eACA/P,EAAAqR,gBACArR,EAAA+b,cAAA,IAGA9S,EAAA+F,gBAAA,SAAAtN,GACA,GAAA4c,GAAAte,EAAA5C,IACA,0BAAAmhB,sBACAnf,GAAAof,QAAAC,MAAA,kCAGAH,EAAA,GAAAC,kBAAA,SAAAG,GACAA,EAAA9d,QAAA,SAAA+d,GACA,cAAAA,EAAApiB,MAAAoiB,EAAAC,kBACAN,EAAAO,aAEA7e,EAAA+N,2BAAA3O,EAAA0f,YAAA,WAEApd,EAAAoH,OAAAiW,aACA3f,EAAA4f,cAAAhf,EAAA+N,4BACA/N,EAAAuS,kBACAvS,EAAAuQ,OAA2CvQ,EAAAuQ,MAAA0O,SAC3Cjf,EAAAD,OAAAyS,OAAAlR,KAAAtB,GACAA,EAAAyS,QACAE,eAAA,EACAC,mBAAA,EACAC,sBAAA,EACAH,gBAAA,EACAoJ,4BAAA,EACAzF,YAAA,IAEA3U,EAAAsC,aAAAjF,MAAA,eAEqB,aAIrBuf,GAAAY,QAAAxd,EAAAoH,QAA4CqW,YAAA,EAAAC,WAAA,EAAAC,eAAA,MAG5CpW,EAAA8J,WAAA,WACA,GAAA/S,GAAA5C,KAAA2C,EAAAC,EAAAD,MAsBA,IApBAC,EAAAsf,eAAAtf,EAAAuf,iBAEAvf,EAAAsf,eAAA3D,IAAA,WACA5b,EAAAyf,SAAAle,KAAAtB,KAEAD,EAAA0f,aACAzf,EAAAsf,eAAA3D,IAAA,WACA9X,SAAA7D,EAAA0f,eACAtgB,EAAAugB,aAAA3f,EAAA0f,eAEA1f,EAAA0f,cAAAtgB,EAAAwgB,WAAA,iBACA5f,GAAA0f,cACA1f,EAAAgB,IAAA6e,SACiB,OAGjB7f,EAAAsf,eAAA3D,IAAA,WACA5b,EAAA+f,UAAAxe,KAAAtB,KAGAZ,EAAA2gB,YACA3gB,EAAA2gB,YAAA,WAAA/f,EAAAsf,oBACS,IAAAlgB,EAAA4gB,iBACT5gB,EAAA4gB,iBAAA,SAAAhgB,EAAAsf,gBAAA,OACS,CAET,GAAAW,GAAA7gB,EAAAogB,QACAS,GAGaA,EAAAtE,KAAAsE,EAAAlZ,SAEbkZ,EAAAjgB,EAAAuf,iBACAU,EAAAtE,IAAAvc,EAAAogB,WAJAS,EAAAjgB,EAAAuf,iBAOAU,EAAAtE,IAAA3b,EAAAsf,gBACAlgB,EAAAogB,SAAAS,IAIAhX,EAAAsW,eAAA,WAEA,QAAAW,KACAC,EAAAvf,QAAA,SAAAhB,GACAA,MAHA,GAAAugB,KAiBA,OAXAD,GAAAvE,IAAA,SAAA/b,GACAugB,EAAAxkB,KAAAiE,IAEAsgB,EAAAnZ,OAAA,SAAAnH,GACA,OAAA0C,GAAA,EAA2BA,EAAA6d,EAAAnmB,OAA4BsI,IACvD,GAAA6d,EAAA7d,KAAA1C,EAAA,CACAugB,EAAAzkB,OAAA4G,EAAA,EACA,SAIA4d,GAGAjX,EAAAmX,OAAA,SAAApc,EAAAqc,GACA,GAAAC,GAAA,CACAtc,GACAR,KAAA,aAA+B8c,IAC/B9c,KAAA,mBACA8c,GAA2BD,EAAA7d,MAAApF,KAAAkL,cAG3BW,EAAAwS,aAAA,WACA,GAAAR,MACArb,EAAA,SAAAoE,EAAAqc,GACA,GAAAE,GAAAzB,YAAA,WACA,GAAA0B,GAAA,CACAvF,GAAAra,QAAA,SAAA8a,GACA,GAAAA,EAAA5M,QAEA,YADA0R,GAAA,EAGA,KACA9E,EAAA1X,aACyB,MAAAqV,GACzBmH,GAAA,KAGAA,IAAAvF,EAAAjhB,SACAglB,cAAAuB,GACAF,GAAuCA,MAEtB,IAKjB,OAHAzgB,GAAA+b,IAAA,SAAA3X,GACAiX,EAAAtf,KAAAqI,IAEApE,GAGAqJ,EAAAkU,UAAA,SAAAsD,GACA,GAAAC,GAAA1gB,EAAA5C,IAWA,OAVAqjB,aAAA5nB,MACA6nB,EAAAD,EACS,gBAAAA,GACTC,EAAA1gB,EAAAuL,eAAAvL,EAAAD,OAAA4gB,cAAA7nB,MAAA2nB,GACS,gBAAAA,IAAAG,MAAAH,KACTC,EAAA,GAAA7nB,OAAA4nB,IAEAC,IAAAE,OAAAF,IACAthB,EAAAof,QAAAC,MAAA,sBAAAgC,EAAA,oBAEAC,GAGAzX,EAAA+R,aAAA,WACA,GAAA6F,EAWA,OAVA,mBAAA9R,UAAA8R,OACAA,EAAA,SACS,mBAAA9R,UAAA+R,UACTD,EAAA,YACS,mBAAA9R,UAAAgS,SACTF,EAAA,WACS,mBAAA9R,UAAAiS,eACTH,EAAA,iBAGA9R,SAAA8R,IAGA5X,EAAA/H,iBAAA,WACA,GAAAnB,IACApB,OAAA,SACAmS,cAAAjN,OACAod,WAAApd,OACAqd,YAAArd,OACAsd,aAAAtd,OACAud,cAAAvd,OACAwd,YAAAxd,OACAyd,eAAAzd,OACA4b,aAAA,EACAjP,cAAA,EACA+Q,YAAA1d,OACAoO,iBAAA,EACAwG,cAAA,EACA+I,YAAA,aACAC,iBAAA,aACAC,eAAA,aACAC,WAAA9d,OACA+d,WAAA/d,OACAge,sBAAA,EACApH,qBAAA,EACA7J,YAAA,aACAC,WAAA,aACA2O,SAAA,aACAM,UAAA,aACAtN,OAAA,aACAoJ,WAAA,aACA7F,oBAAA,IACAqG,OAAAvY,OACAyY,WACAqE,aAAA,WACAnV,iBAAA,EACAsW,YAAA,EACAC,iBAAA,SAAAjjB,GAA6C,MAAAA,IAC7CkjB,cACAC,gBACAC,eACAC,aACAC,UAAAve,OACAwe,cACAC,eACAC,WAAA,OACAC,gBACAC,WAAA5e,OACA6e,eACAnT,WAAA,EACAD,YAAAzL,OACA8e,wBAAA,EACAC,wBAAA,EACAC,4BAAA,WAAsD,UACtDC,yBAAA,EACAC,0BAAA,EACAC,aAAA,aACAC,iBAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,kBAAA,aACA9Z,SAAAzF,OACA4F,aAAA5F,OACA+F,UAAA/F,OACAiG,UAAAjG,OACAmG,aAAAnG,OACA2F,cAAA3F,OACA6F,UAAA7F,OAEA+V,sBAAA,GAEA5F,eAAA,EACAC,qBAAA,GACAoP,sBAAA,EACAC,iBAAA,aAEAC,iBACAC,mBAEA3T,aAAA,EACAH,aAAA,EACA1C,gBAAA,SACAG,oBAAA,WACAsW,eAAA,GACAC,eAAA,EACAC,kBAAA9f,OACA+f,oBAAA/f,OACAggB,wBAAAhgB,OACAigB,uBAAAjgB,OACAkgB,gBAAA,EACAC,eAAA,EACAC,uBAAA,GACAC,wBAAA,GAEAzX,cAAA,EACAmB,aAAA,EACAsO,YAAA,UACAtQ,kBAAA,EACAwR,qBACA+G,sBAAA,EACAC,mBAAAvgB,OACAsV,uBACAC,wBAAA,GACAiL,kBAAAxgB,OACAygB,iBAAA,EACAjM,mBAAA,KACAkM,mBAAA,EACAC,mBAAA,EACAC,uBAAA,EACAC,kBAAA,KACAC,WAAA9gB,OACA+gB,WAAA/gB,OACAghB,kBACAC,cAAAjhB,OACAuO,cAAAvO,OACAkhB,gBACAC,aAAA,EACAxI,YAAA3Y,OACAohB,WAAAphB,OACAqhB,WAAArhB,OACAshB,iBAAA,EACAC,cAAAvhB,OACA8I,aAAA9I,OACAwhB,gBACAC,mBAAAzhB,OACA0hB,mBAAA,EACA5M,mBAAA,KACA6M,mBAAA,EACA5M,kBAAA/U,OACA4hB,uBAAA5hB,OACA6hB,0BAAA7hB,OACA8hB,kBACAC,eAAA/hB,OACAgiB,cAAA,EACAC,YAAAjiB,OACAkiB,YAAAliB,OACAmiB,kBAAA,EACAC,eAAApiB,OACAgJ,cAAAhJ,OACAqiB,iBACAC,oBAAAtiB,OACAuiB,oBAAA,EACArN,oBAAA,KACAC,mBAAAnV,OACAwiB,mBACAC,gBAAAziB,OAEA0iB,aAAA,EACAC,YAAA,OACAC,gBACAC,aAAA,EAGAC,gBACAC,aAAA,GACAC,iBAAA,EACA/U,kBAAA,EAEAgL,YAAA,EACAgK,QAAA,IACAC,kBAAA,GACAC,4BAAA,EACAC,qBAAApjB,OACAqjB,eAAArjB,OAEAsjB,kBAAA,EACAC,eAAA,OAEAC,UAAAxjB,OACAyjB,gBAAA,GACAC,cAAA1jB,OACA2jB,eAAA,EAEAC,gBAAA,EACAC,YAAA,EAEAC,gBAAA,EACAC,iBAAA/jB,OACAgkB,oBAAA,IACAC,gBAAAjkB,OACAkkB,cACAC,oBAAA,GAEA7S,kBAAA,EACA8S,kBAAA,EACAC,mBAAArkB,OACAskB,UAAA,EACAC,UAAA,IACAC,qBAAA,EAAA1vB,KAAAqN,GAAA,EACAsiB,YAAAzkB,OACA0kB,YAAA1kB,OACA2kB,gBACAC,sBAAA,GAEAC,kBAAA,EACAC,mBAAA9kB,OACA+kB,sBAAA,IACAC,kBAAAhlB,OACAilB,YAAAjlB,OACAklB,YAAA,GACAC,gBACAC,sBAAA,GAEAC,0BAAA,WAEAhX,WAEAiX,cAAA,EACAC,iBAAA,EACAC,qBAAAxlB,OACAylB,oBAAAzlB,OACA0lB,qBAAA1lB,OACA2lB,iBAAA3lB,OACA4lB,iBAAA,SAAAxwB,EAAAywB,EAAAC,EAAAxe,GACA,MAAA/N,MAAAwsB,kBAAAxsB,KAAAwsB,kBAAA3wB,EAAAywB,EAAAC,EAAAxe,GAAA,IAEA0e,mBAAA,EACAC,eAAA,EACAC,uBAAoCxhB,IAAA,MAAAG,KAAA,QACpCshB,eAAA,aACAC,eAAA;AAEAC,WAAArmB,OACAsmB,eACA5hB,IAAA,EACAC,MAAA,EACAC,OAAA,EACAC,KAAA,GAEA0hB,eAAA,aAOA,OAJAvzB,QAAA8J,KAAAvD,KAAAitB,kBAAAzpB,QAAA,SAAAC,GACAd,EAAAc,GAAAzD,KAAAitB,iBAAAxpB,IACSzD,MAET2C,GAEAkJ,EAAAohB,oBAEAphB,EAAA9I,WAAA,SAAAJ,GAEA,QAAAuqB,KACA,GAAAzpB,GAAAF,EAAA4pB,OAEA,OAAA1pB,IAAAJ,GAAA,gBAAAA,IAAAI,IAAAJ,IACAA,IAAAI,GACAypB,KAEAzpB,EAIA,OAHAJ,EATA,GAAAA,GAAAE,EAAA6pB,EAAAC,EAAArtB,KAAA2C,MAeAlJ,QAAA8J,KAAA8pB,GAAA7pB,QAAA,SAAAC,GACAJ,EAAAV,EACAY,EAAAE,EAAAuD,MAAA,KACAomB,EAAAF,IAEAI,EAAAF,KACAC,EAAA5pB,GAAA2pB,MAKAvhB,EAAA0hB,SAAA,SAAAC,EAAAluB,EAAAmuB,GACA,OAAAA,EAAAztB,KAAA6D,GAAAwK,KAAApJ,QAAAjF,KAAA6D,GAAAoB,MAAA8F,UAAA1C,OAAAmlB,EAAAluB,KAEAuM,EAAA6hB,KAAA,SAAAF,EAAAluB,EAAAuF,EAAA8oB,GACA,GAEAlqB,GAFAb,EAAA5C,KACAiF,EAAArC,EAAA2qB,SAAAC,EAAAluB,EAAAsD,EAAAic,gBACA+O,EAAA/oB,EAAAI,EAAAJ,UAAAI,CAEArC,GAAAmY,iBACA4S,KAAA,WAA4C,UAC5C1oB,EAAA,SAAApJ,EAAAgyB,GACA,GAAAloB,GAAAioB,EAAA/xB,GAAA8xB,EAAA9xB,EACA,OAAAgyB,GAAAloB,EAAApK,KAAAiJ,KAAAmB,KAGAV,EAAA,SAAApJ,EAAAgyB,GACA,GAAAloB,GAAAioB,EAAA/xB,EACA,OAAAgyB,GAAAloB,EAAApK,KAAAiJ,KAAAmB,GAIA,KAAAlC,IAAAmqB,GACA3oB,EAAAxB,GAAAmqB,EAAAnqB,EAgBA,OAdAwB,GAAAqW,UAAA,WACA,MAAAsS,GAAA/oB,UAGAjC,EAAAmY,kBACA9V,EAAAJ,OAAA,SAAAA,GACA,MAAAqG,WAAAtO,QAIAgxB,EAAA/oB,UACAI,IAJAJ,EAAA7E,KAAAsb,aACAzW,EAAA,GAAAA,EAAA,SAMAI,GAEA4G,EAAAiiB,KAAA,SAAAN,EAAAluB,EAAAuF,GACA,GAAAI,GAAAjF,KAAAutB,SAAAC,EAAAluB,EAAAU,KAAAmf,gBAEA,OADAta,IAAqBI,EAAAJ,UACrBI,GAEA4G,EAAAkiB,UAAA,SAAArsB,GACA,aAAA1B,KAAAd,KAAA8uB,MAAAtsB,GAAA1B,KAAAqQ,GAAArQ,KAAA2E,GAEAkH,EAAAoiB,aAAA,SAAAvsB,GACA,aAAA1B,KAAAd,KAAA8uB,MAAAtsB,GAAA1B,KAAAiT,MAAAjT,KAAAgT,MAEAnH,EAAA8G,aAAA,WACA,GAAA/P,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAurB,GAAAtrB,EAAAlE,CAEAkE,GAAAurB,KAAAxrB,EAAA0M,aAAA,IACAzM,EAAAwrB,KAAAzrB,EAAA0M,aAAAzM,EAAA2D,OAAA3D,EAAA4D,MACA5D,EAAAyrB,KAAA1rB,EAAA0M,aAAA,EAAAzM,EAAA2D,OACA3D,EAAA0rB,KAAA3rB,EAAA0M,aAAAzM,EAAA4D,MAAA,EACA5D,EAAA2rB,QAAA3rB,EAAAurB,KACAvrB,EAAA4rB,QAAA5rB,EAAAwrB,KACAxrB,EAAA6rB,QAAA9rB,EAAA0M,aAAA,EAAAzM,EAAAgV,QACAhV,EAAA8rB,QAAA/rB,EAAA0M,aAAAzM,EAAA+U,OAAA,EAEA/U,EAAAlE,EAAAkE,EAAA8qB,KAAA9qB,EAAAurB,KAAAvrB,EAAAwrB,KAAAF,EAAAznB,OAAA7D,EAAAlE,EAAA4c,YAAA,WAA8F,MAAA1Y,GAAAuY,MAAA1W,eAC9F7B,EAAA+B,EAAA/B,EAAAkrB,KAAAlrB,EAAAyrB,KAAAzrB,EAAA0rB,KAAAJ,EAAAvrB,EAAA6lB,eAAA5lB,EAAA+B,EAAAE,UACAjC,EAAAyN,GAAAzN,EAAAkrB,KAAAlrB,EAAAyrB,KAAAzrB,EAAA0rB,KAAAJ,EAAAvrB,EAAAumB,gBAAAtmB,EAAAyN,GAAAxL,UACAjC,EAAAmQ,KAAAnQ,EAAA8qB,KAAA9qB,EAAAurB,KAAAvrB,EAAAwrB,KAAAxrB,EAAAsQ,WAAA,SAAArX,GAAyE,MAAAA,GAAA,IAAA+G,EAAAwY,SAAA3W,eACzE7B,EAAAoQ,KAAApQ,EAAAkrB,KAAAlrB,EAAA6rB,QAAA7rB,EAAA8rB,QAAAR,EAAAvrB,EAAA6lB,eAAA5lB,EAAAoQ,KAAAnO,UACAjC,EAAAqQ,MAAArQ,EAAAkrB,KAAAlrB,EAAA6rB,QAAA7rB,EAAA8rB,QAAAR,EAAAvrB,EAAAumB,gBAAAtmB,EAAAqQ,MAAApO,UAEAjC,EAAA+rB,gBAAA/rB,EAAA1D,KAAA0vB,qBACAhsB,EAAAisB,gBAAAjsB,EAAA1D,KAAA4vB,qBACAlsB,EAAAmsB,gBAAAnsB,EAAA1D,KAAA8vB,qBACApsB,EAAAqsB,iBAAArsB,EAAA1D,KAAAgwB,sBAEAtsB,EAAAuY,MAAAvY,EAAA1D,KAAAiwB,SAAAvsB,EAAAlE,EAAAkE,EAAAwM,QAAAxM,EAAA+rB,gBAAA/rB,EAAAisB,gBAAAlsB,EAAAykB,mBACAxkB,EAAAwY,SAAAxY,EAAA1D,KAAAiwB,SAAAvsB,EAAAmQ,KAAAnQ,EAAA8M,WAAA9M,EAAA+rB,gBAAA/rB,EAAAisB,gBAAAlsB,EAAAykB,mBACAxkB,EAAA6Y,MAAA7Y,EAAA1D,KAAAkwB,SAAAxsB,EAAA+B,EAAA/B,EAAA0M,QAAA3M,EAAAulB,mBAAAtlB,EAAAmsB,gBAAApsB,EAAAwlB,mBACAvlB,EAAAiZ,OAAAjZ,EAAA1D,KAAAkwB,SAAAxsB,EAAAyN,GAAAzN,EAAA4M,SAAA7M,EAAAomB,oBAAAnmB,EAAAqsB,iBAAAtsB,EAAAqmB,oBAGAkF,IACAtrB,EAAAuQ,OAA2BvQ,EAAAuQ,MAAAlO,MAAArC,EAAAmQ,MAC3BpQ,EAAAyQ,cAAsCxQ,EAAAyQ,KAAApO,MAAArC,EAAAlE,IAGtCkE,EAAAysB,WAA2BzsB,EAAAysB,aAG3BxjB,EAAAyjB,cAAA,SAAAtd,GACA,GAEAud,GAAAC,EAAAC,EAAAC,EAAAhuB,EAAAiuB,EAFA/sB,EAAA5C,KAAA2C,EAAAC,EAAAD,OACAitB,EAAAhtB,EAAAyP,SAAAL,GAAA6d,EAAAjtB,EAAAktB,mBAAA9d,EAEA,IAAArP,EAAAmiB,YAAAloB,OAAA,EAEA,IADA+yB,EAAA/sB,EAAAmtB,0BAAA/d,GACAud,EAAA,EAAuBA,EAAA5sB,EAAAmiB,YAAAloB,OAA+B2yB,IAGtD,GADAG,EAAA/sB,EAAAmiB,YAAAyK,GAAAlyB,OAAA,SAAAqE,GAAyE,MAAAkuB,GAAA1T,QAAAxa,IAAA,IACzE,IAAAguB,EAAA9yB,OASA,IARA6yB,EAAAC,EAAA,GAEAC,GAAAE,EAAAJ,IACAI,EAAAJ,GAAAjsB,QAAA,SAAAmC,EAAAT,GACA2qB,EAAAJ,GAAAvqB,GAAAS,EAAA,EAAAA,EAAA,IAIA6pB,EAAA,EAA2BA,EAAAE,EAAA9yB,OAAuB4yB,IAClD9tB,EAAAguB,EAAAF,GACAK,EAAAnuB,IACAmuB,EAAAnuB,GAAA8B,QAAA,SAAAmC,EAAAT,GACAtC,EAAA1D,KAAA8uB,MAAAtsB,KAAAkB,EAAA1D,KAAA8uB,MAAAyB,KAAAI,EAAAJ,IAAAE,IAAAhqB,EAAA,IACAkqB,EAAAJ,GAAAvqB,KAAAS,IAMA,OAAA/C,GAAAiB,GAAA2pB,IAAA/zB,OAAA8J,KAAAssB,GAAAplB,IAAA,SAAAhH,GAA6D,MAAAb,GAAAiB,GAAA2pB,IAAAqC,EAAApsB,QAE7DoI,EAAAmkB,cAAA,SAAAhe,GACA,GAEAud,GAAAC,EAAAC,EAAAC,EAAAhuB,EAAAuuB,EAFArtB,EAAA5C,KAAA2C,EAAAC,EAAAD,OACAitB,EAAAhtB,EAAAyP,SAAAL,GAAA6d,EAAAjtB,EAAAktB,mBAAA9d,EAEA,IAAArP,EAAAmiB,YAAAloB,OAAA,EAEA,IADAqzB,EAAArtB,EAAAstB,0BAAAle,GACAud,EAAA,EAAuBA,EAAA5sB,EAAAmiB,YAAAloB,OAA+B2yB,IAGtD,GADAG,EAAA/sB,EAAAmiB,YAAAyK,GAAAlyB,OAAA,SAAAqE,GAAyE,MAAAkuB,GAAA1T,QAAAxa,IAAA,IACzE,IAAAguB,EAAA9yB,OASA,IARA6yB,EAAAC,EAAA,GAEAO,GAAAJ,EAAAJ,IACAI,EAAAJ,GAAAjsB,QAAA,SAAAmC,EAAAT,GACA2qB,EAAAJ,GAAAvqB,GAAAS,EAAA,EAAAA,EAAA,IAIA6pB,EAAA,EAA2BA,EAAAE,EAAA9yB,OAAuB4yB,IAClD9tB,EAAAguB,EAAAF,GACAK,EAAAnuB,IACAmuB,EAAAnuB,GAAA8B,QAAA,SAAAmC,EAAAT,GACAtC,EAAA1D,KAAA8uB,MAAAtsB,KAAAkB,EAAA1D,KAAA8uB,MAAAyB,KAAAI,EAAAJ,IAAAQ,IAAAtqB,EAAA,IACAkqB,EAAAJ,GAAAvqB,KAAAS,IAMA,OAAA/C,GAAAiB,GAAAvE,IAAA7F,OAAA8J,KAAAssB,GAAAplB,IAAA,SAAAhH,GAA6D,MAAAb,GAAAiB,GAAAvE,IAAAuwB,EAAApsB,QAE7DoI,EAAAiH,WAAA,SAAAd,EAAAme,EAAAC,GACA,GAOAvrB,GAAAwrB,EAAAC,EAAArM,EAAAC,EAEAqM,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EATAhuB,EAAA5C,KAAA2C,EAAAC,EAAAD,OACAkuB,EAAA7e,EAAA3U,OAAA,SAAAihB,GAA2D,MAAA1b,GAAA1D,KAAA8uB,MAAA1P,EAAA5c,MAAAyuB,IAC3DW,EAAAV,EAAAxtB,EAAAmuB,gBAAAF,EAAAT,GAAAS,EACAxC,EAAA,OAAA8B,EAAAxtB,EAAAgmB,YAAAhmB,EAAAmlB,WACAwG,EAAA,OAAA6B,EAAAxtB,EAAA+lB,YAAA/lB,EAAAklB,WACAmJ,EAAApuB,EAAA0sB,cAAAwB,GACAG,EAAAruB,EAAAotB,cAAAc,GAEAI,EAAA,OAAAf,EAAAxtB,EAAAkmB,eAAAlmB,EAAAqlB,cAEAmJ,EAAAvuB,EAAA4P,QAAA,MAAAse,IAAAnuB,EAAAynB,eAAAxnB,EAAA4P,QAAA,OAAAse,IAAAnuB,EAAA0nB,eACA+G,EAAA,OAAAjB,EAAAxtB,EAAAimB,iBAAAjmB,EAAAolB,gBACAsJ,EAAAzuB,EAAAma,gBAAApa,EAAA0M,aACAiiB,EAAA1uB,EAAAma,iBAAApa,EAAA0M,YAMA,OAHA2hB,GAAArR,EAAA0O,KAAA1O,EAAA2O,GAAA0C,EAAA1C,EAAA0C,EAAA1C,EAAA,GAAA0C,EACAC,EAAAtR,EAAA2O,KAAA3O,EAAA0O,KAAA4C,IAAA5C,EAAA,GAAA4C,EAEA,IAAAH,EAAAl0B,OACA,OAAAuzB,EAAAvtB,EAAAyN,GAAAxL,SAAAjC,EAAA+B,EAAAE,UAEA2e,MAAAwN,KACAA,EAAA,GAEAxN,MAAAyN,KACAA,EAAAD,GAEAA,IAAAC,IACAD,EAAA,EAAAC,EAAA,EAAAD,EAAA,GAEAL,EAAAK,GAAA,GAAAC,GAAA,EACAL,EAAAI,GAAA,GAAAC,GAAA,GAGAtR,EAAA0O,IAAAsC,GAAAhR,EAAA2O,IAAAsC,KACAO,GAAA,GAIAA,IACAR,IAAgCK,EAAA,GAChCJ,IAAgCK,EAAA,IAGhCZ,EAAA90B,KAAAg2B,IAAAN,EAAAD,GACAV,EAAArM,EAAAC,EAAA,GAAAmM,EAEA,mBAAAa,KACAX,EAAAh1B,KAAA+D,IAAA/D,KAAAg2B,IAAAP,GAAAz1B,KAAAg2B,IAAAN,IACAA,EAAAC,EAAAX,EACAS,EAAAE,EAAAX,GAGAc,GACAb,EAAA5tB,EAAA4uB,mBAAAR,EAAAC,EAAA,SACAR,EAAAgB,EAAA7uB,EAAA+B,EAAA0D,SACAqoB,GAAAF,EAAA,GAAAC,EAAAD,EAAA,GAAAC,GACAxM,GAAAoM,GAAAK,EAAA,MAAAA,EAAA,GAAAA,EAAA,KACAxM,GAAAmM,GAAAK,EAAA,MAAAA,EAAA,GAAAA,EAAA,MACSY,IACTd,EAAA5tB,EAAA4uB,mBAAAR,EAAAC,EAAA,UACAhN,GAAArhB,EAAA1D,KAAAwyB,2BAAAlB,EAAA,GAAAH,GACAnM,GAAAthB,EAAA1D,KAAAwyB,2BAAAlB,EAAA,GAAAH,IAEA,MAAAF,GAAAlR,EAAAtc,EAAA4lB,kBACAtE,EAAArhB,EAAA1D,KAAAyyB,WAAAhvB,EAAA4lB,eAAA,MAAAtE,EAAAoM,GACAnM,EAAAthB,EAAA1D,KAAAyyB,WAAAhvB,EAAA4lB,eAAA,SAAArE,EAAAmM,IAEA,OAAAF,GAAAlR,EAAAtc,EAAAsmB,mBACAhF,EAAArhB,EAAA1D,KAAAyyB,WAAAhvB,EAAAsmB,gBAAA,MAAAhF,EAAAoM,GACAnM,EAAAthB,EAAA1D,KAAAyyB,WAAAhvB,EAAAsmB,gBAAA,SAAA/E,EAAAmM,IAGAc,IACAR,IAAgCzM,EAAA8M,GAChCJ,IAAgC3M,GAAAgN,IAEhCpsB,GAAAmsB,EAAA9M,EAAA+M,EAAAhN,GACAmN,EAAAvsB,EAAA+sB,UAAA/sB,IAEAgH,EAAAgmB,cAAA,SAAA7f,GACA,GAAApP,GAAA5C,KAAA2C,EAAAC,EAAAD,MACA,OAAA2qB,GAAA3qB,EAAA6kB,YACA5kB,EAAAic,eAAA7e,KAAA+f,UAAApd,EAAA6kB,YAAA7kB,EAAA6kB,WACA5kB,EAAAiB,GAAA2pB,IAAAxb,EAAA,SAAAsM,GAAyC,MAAA1b,GAAAiB,GAAA2pB,IAAAlP,EAAAwT,OAAA,SAAAnsB,GAA0C,MAAAA,GAAAjH,OAEnFmN,EAAAkmB,cAAA,SAAA/f,GACA,GAAApP,GAAA5C,KAAA2C,EAAAC,EAAAD,MACA,OAAA2qB,GAAA3qB,EAAA4kB,YACA3kB,EAAAic,eAAA7e,KAAA+f,UAAApd,EAAA4kB,YAAA5kB,EAAA4kB,WACA3kB,EAAAiB,GAAAvE,IAAA0S,EAAA,SAAAsM,GAAyC,MAAA1b,GAAAiB,GAAAvE,IAAAgf,EAAAwT,OAAA,SAAAnsB,GAA0C,MAAAA,GAAAjH,OAEnFmN,EAAAmmB,kBAAA,SAAAntB,GACA,GAEAotB,GAAA3B,EAAA4B,EAAAC,EAFAvvB,EAAA5C,KAAA2C,EAAAC,EAAAD,OACA8tB,EAAA5rB,EAAA,GAAAA,EAAA,EAkBA,OAhBAjC,GAAAmY,gBACAuV,EAAA,EACS1tB,EAAA4P,QAAA,QACTyf,EAAArvB,EAAAwvB,kBACA9B,EAAA2B,EAAA,EAAAxB,GAAAwB,EAAA,SAEA3B,EAAA,IAAAG,EAEA,gBAAA9tB,GAAA8kB,gBAAAxI,EAAAtc,EAAA8kB,iBACAyK,EAAAvS,EAAAhd,EAAA8kB,eAAAnc,MAAA3I,EAAA8kB,eAAAnc,KAAAglB,EACA6B,EAAAxS,EAAAhd,EAAA8kB,eAAArc,OAAAzI,EAAA8kB,eAAArc,MAAAklB,GAEA4B,EAAAC,EADS,gBAAAxvB,GAAA8kB,eACT9kB,EAAA8kB,eAEA6I,GAEgBhlB,KAAA4mB,EAAA9mB,MAAA+mB,IAEhBtmB,EAAAgH,WAAA,SAAAb,GACA,GAAApP,GAAA5C,KACAowB,GAAAxtB,EAAAivB,cAAA7f,GAAApP,EAAAmvB,cAAA/f,IACAqgB,EAAAjC,EAAA,GAAAkC,EAAAlC,EAAA,GACAE,EAAA1tB,EAAAovB,kBAAA5B,GACA5C,EAAA,EAAAluB,EAAA,CAiBA,OAfA+yB,GAAAC,IAAA,GAAA1vB,EAAAmY,kBACAnY,EAAAic,gBACAwT,EAAA,GAAA52B,MAAA,GAAA42B,EAAAE,WACAD,EAAA,GAAA72B,MAAA,IAAA62B,EAAAC,aAEAF,EAAA,IAAAA,EAAA,KAAAA,EACAC,EAAA,IAAAA,GAAA,MAAAA,KAGAD,GAAA,IAAAA,KACA7E,EAAA5qB,EAAAic,eAAA,GAAApjB,MAAA42B,EAAAE,UAAAjC,EAAAhlB,MAAA+mB,EAAA/B,EAAAhlB,OAEAgnB,GAAA,IAAAA,KACAhzB,EAAAsD,EAAAic,eAAA,GAAApjB,MAAA62B,EAAAC,UAAAjC,EAAAllB,OAAAknB,EAAAhC,EAAAllB,QAEAoiB,EAAAluB,IAEAuM,EAAAmP,cAAA,SAAAhJ,EAAAwD,EAAAC,EAAA+c,EAAA3tB,GACA,GAAAjC,GAAA5C,KAAA2C,EAAAC,EAAAD,MAiBA,OAfA8S,KACA7S,EAAAlE,EAAAmG,WAAAjC,EAAAiB,GAAA+O,OAAAhQ,EAAAiQ,WAAAb,KACApP,EAAAsQ,WAAAtQ,EAAAlE,EAAAmG,SACAlC,EAAAyQ,cAAsCxQ,EAAAyQ,KAAApO,MAAArC,EAAAlE,GAAA+zB,oBACtC7vB,EAAAmQ,KAAAlO,OAAAjC,EAAAlE,EAAAmG,UACAjC,EAAAuQ,OAA2BvQ,EAAAuQ,MAAAlO,MAAArC,EAAAmQ,OAE3ByC,IACA5S,EAAAlE,EAAAmG,YAAAjC,EAAAuQ,OAAAvQ,EAAAuQ,MAAAzB,QAAA9O,EAAAsQ,WAAAtQ,EAAAuQ,MAAAP,UACAjQ,EAAAyQ,cAAsCxQ,EAAAyQ,KAAApO,MAAArC,EAAAlE,GAAA+zB,qBAItCD,GAAuB5vB,EAAAlE,EAAAmG,OAAAjC,EAAA8vB,YAAA9vB,EAAAlE,EAAA4c,cAEvB1Y,EAAAlE,EAAAmG,UAEAgH,EAAA6mB,YAAA,SAAA7tB,GACA,GAAA8tB,GAAA3yB,KAAA4yB,gBACApF,EAAAmF,EAAA,GAAArzB,EAAAqzB,EAAA,EASA,OARA9tB,GAAA,IAAA2oB,IACA3oB,EAAA,IAAAA,EAAA,IAAA2oB,EAAA3oB,EAAA,IACAA,EAAA,GAAA2oB,GAEAluB,GAAAuF,EAAA,KACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAvF,GACAuF,EAAA,GAAAvF,GAEAuF,GAGAgH,EAAAgnB,IAAA,SAAApvB,GACA,GAAAb,GAAA5C,KAAA2C,EAAAC,EAAAD,MACA,OAAAA,GAAAqc,QAAAvb,IAAAd,EAAAqc,QAAAC,EAAAtc,EAAAuc,UAAA4T,EAAAnwB,EAAAuc,QAAAzb,IAEAoI,EAAAknB,OAAA,SAAAtvB,GACA,OAAAzD,KAAA6yB,IAAApvB,IAEAoI,EAAAmnB,QAAA,SAAAtxB,GACA,GAAAkB,GAAA5C,KAAA2C,EAAAC,EAAAD,MACA,OAAAA,GAAAqc,OAAArc,EAAAqc,OAAAC,EAAAtc,EAAAuc,SAAAvc,EAAAuc,QAAAxd,GAAA,MAEAmK,EAAAonB,iBAAA,SAAAxvB,EAAAuO,GACA,GACAkhB,GADAtwB,EAAA5C,KACA4vB,EAAA5d,GAAAiN,EAAAjN,GAAApP,EAAAyP,SAAAL,KAMA,OALA4d,GAAApsB,QAAA,SAAA9B,GACAkB,EAAAowB,QAAAtxB,KAAA+B,IACAyvB,EAAAtwB,EAAApD,KAAAuS,GAAArQ,MAGAwxB,GAEArnB,EAAAsnB,YAAA,SAAAz0B,GACA,GAAAkE,GAAA5C,KACAR,EAAAoD,EAAAwwB,UAAAxwB,EAAApD,KAAAwS,QAAAtT,EACA,OAAAc,GAAA5C,OAAA4C,EAAA,GAAA9C,MAAA,MAEAmP,EAAAwnB,UAAA,SAAA3xB,EAAAwD,GACA,GAAAtC,GAAA5C,IACA,OAAA0B,KAAAkB,GAAApD,KAAAuS,IAAAnP,EAAApD,KAAAuS,GAAArQ,IAAAie,EAAA/c,EAAApD,KAAAuS,GAAArQ,GAAAwD,IAAAtC,EAAApD,KAAAuS,GAAArQ,GAAAwD,MAEA2G,EAAAynB,iBAAA,WACA,GAAA1wB,GAAA5C,KACAuzB,EAAA95B,OAAA8J,KAAAX,EAAApD,KAAAuS,GACA,OAAAwhB,GAAA32B,OAAAgG,EAAApD,KAAAuS,GAAAwhB,EAAA,UAEA1nB,EAAA2nB,gBAAA,SAAA92B,GACA,GAAAqV,GAAA/R,KAAAszB,kBACA,OAAAvhB,IAAArV,EAAAqV,EAAAnV,OAAAmV,EAAArV,GAAA,MAEAmP,EAAA4nB,MAAA,SAAA1hB,GACA,GAAAnP,GAAA5C,IACAvG,QAAA8J,KAAAwO,GAAAvO,QAAA,SAAA9B,GACAkB,EAAAD,OAAAuc,QAAAxd,GAAAqQ,EAAArQ,MAGAmK,EAAA6nB,aAAA,SAAA3hB,GACA,MAAA/R,MAAA6D,GAAA8vB,IAAAl6B,OAAA8J,KAAAwO,GAAAtH,IAAA,SAAA/I,GAA8D,MAAAqQ,GAAArQ,MAAiB3B,OAAA,GAE/E8L,EAAA+nB,YAAA,WACA,MAAA3U,GAAAjf,KAAA2C,OAAAuc,WAAAlf,KAAA2C,OAAA+hB,YAAA1kB,KAAAwS,QAAA,YAEA3G,EAAAgoB,QAAA,SAAAr0B,GACA,GAAAs0B,GAAAlxB,EAAA5C,IAKA,OAJAR,KACAs0B,EAAAlxB,EAAAD,OAAAiiB,WAAAplB,EAAAkC,IACAlC,EAAAs0B,KAAArtB,SAAAqtB,IAAAt0B,EAAAkC,IAEAlC,GAEAqM,EAAAkoB,gBAAA,SAAAjC,EAAAp1B,GACA,GAAAs3B,GAAAlC,EAAAz0B,OAAA,SAAAsI,GAAuD,MAAAA,GAAAjJ,WACvD,OAAAs3B,GAAAp3B,OAAAo3B,EAAA,SAEAnoB,EAAAooB,cAAA,SAAAjiB,EAAAtT,GACA,GAAAkE,GAAA5C,IACAgS,GAAAxO,QAAA,SAAA8a,GACAA,EAAAwT,OAAAtuB,QAAA,SAAAmC,EAAAT,GACAS,EAAAjH,EAAAkE,EAAAsxB,gBAAAx1B,EAAAwG,GAAAoZ,EAAA5c,GAAAwD,KAEAtC,EAAApD,KAAAuS,GAAAuM,EAAA5c,IAAAhD,KAGAmN,EAAAsoB,eAAA,SAAAniB,EAAAD,GACA,GAAAnP,GAAA5C,IACAgS,GAAAxO,QAAA,SAAA8a,GACAvM,EAAAuM,EAAA5c,KACAkB,EAAAqxB,eAAA3V,GAAAvM,EAAAuM,EAAA5c,QAIAmK,EAAAqoB,gBAAA,SAAAE,EAAA1yB,EAAAhF,GACA,GAAAgC,GAAAkE,EAAA5C,IAUA,OARAtB,GADAkE,EAAAic,eACAuV,EAAAxxB,EAAAmd,UAAAqU,GAAAxxB,EAAAmd,UAAAnd,EAAAywB,UAAA3xB,EAAAhF,IAEAkG,EAAAmc,cAAAnc,EAAAmY,gBACA4E,EAAAyU,MAAAxxB,EAAAywB,UAAA3xB,EAAAhF,GAGAA,GAIAmP,EAAAwoB,YAAA,SAAAhxB,GACA,OACA3B,GAAA2B,EAAA3B,GACA4yB,OAAAjxB,EAAAixB,OACAxC,OAAAzuB,EAAAyuB,OAAArnB,IAAA,SAAA5O,GACA,OAAwB6C,EAAA7C,EAAA6C,EAAA/E,MAAAkC,EAAAlC,MAAA+H,GAAA7F,EAAA6F,QAIxBmK,EAAA0oB,SAAA,WACA,GAAA3xB,GAAA5C,IACA4C,GAAApD,KAAAwS,QAAApV,SACAgG,EAAAmP,MACAnP,EAAApD,KAAAwS,QAAA,GAAA8f,OAAAtuB,QAAA,SAAAmC,GACA/C,EAAAmP,GAAApM,EAAAjJ,OAAAiJ,EAAAjH,MAIAmN,EAAA2oB,SAAA,SAAAtvB,GACA,GAAAxG,GAAAsB,KAAA+R,GAAA7M,EAAA,EACA,0BAAAxG,KAAA,MAEAmN,EAAA4oB,SAAA,SAAAvvB,GACA,GAAAxG,GAAAsB,KAAA+R,GAAA7M,EAAA,EACA,0BAAAxG,KAAA,MAEAmN,EAAAumB,gBAAA,WACA,GAAAxvB,GAAA5C,IACA,OAAA4C,GAAAiB,GAAAvE,IAAAsD,EAAApD,KAAAwS,QAAA,SAAAsM,GAAwD,MAAAA,GAAAwT,OAAAl1B,UAExDiP,EAAA6oB,sBAAA,SAAA1iB,GACA,GAAA2iB,GAAA/3B,EAAAoV,EAAApV,OAAA0C,EAAA,CAWA,OAVA1C,GAAA,EACAoV,EAAAxO,QAAA,SAAA8a,GACAA,EAAAwT,OAAAl1B,OAAA0C,IACAq1B,EAAArW,EACAhf,EAAAgf,EAAAwT,OAAAl1B,UAIA+3B,EAAA/3B,EAAAoV,EAAA,QAEA2iB,GAEA9oB,EAAA+oB,SAAA,SAAA5iB,GACA,GAAApP,GAAA5C,IACA,OAAAgS,GAAApV,QACAgG,EAAAiB,GAAA2pB,IAAAxb,EAAA,SAAAsM,GAA6C,MAAAA,GAAAwT,OAAA,GAAApzB,IAC7CkE,EAAAiB,GAAAvE,IAAA0S,EAAA,SAAAsM,GAA6C,MAAAA,GAAAwT,OAAAxT,EAAAwT,OAAAl1B,OAAA,GAAA8B,MAF7C,MAKAmN,EAAAwG,SAAA,SAAAL,GACA,MAAAA,GAAAvH,IAAA,SAAA5O,GAAyC,MAAAA,GAAA6F,MAEzCmK,EAAAgpB,eAAA,SAAAjF,GACA,GAAAhtB,GAAA5C,IACA,OAAA4vB,MAAApoB,OAAAooB,GAAAhtB,EAAAyP,SAAAzP,EAAApD,KAAAwS,UAEAnG,EAAAipB,UAAA,SAAA9iB,EAAAtQ,GACA,GAAAwD,GAAA0qB,EAAA5vB,KAAAqS,SAAAL,EACA,KAAA9M,EAAA,EAAmBA,EAAA0qB,EAAAhzB,OAAgBsI,IACnC,GAAA0qB,EAAA1qB,KAAAxD,EACA,QAGA,WAEAmK,EAAA4M,eAAA,SAAAsc,GACA,MAAA/0B,MAAAgP,gBAAAkN,QAAA6Y,GAAA,GAEAlpB,EAAAmpB,eAAA,SAAAD,GACA,MAAA/0B,MAAAiP,gBAAAiN,QAAA6Y,GAAA,GAEAlpB,EAAA6O,oBAAA,SAAA1I,GACA,GAAApP,GAAA5C,IACA,OAAAgS,GAAA3U,OAAA,SAAAihB,GAA4C,MAAA1b,GAAA6V,eAAA6F,EAAA5c,OAE5CmK,EAAAopB,qBAAA,SAAAjjB,GACA,GAAApP,GAAA5C,KACA+R,EAAAnP,EAAAiB,GAAA8vB,IAAA/wB,EAAAiB,GAAAqxB,MAAAljB,EAAAvH,IAAA,SAAA6T,GAAiE,MAAAA,GAAAwT,OAAArnB,IAAA,SAAA9E,GAAmC,OAAAA,EAAAjH,QAAmBozB,QAEvH,OADA/f,GAAAnP,EAAAic,eAAA9M,EAAAtH,IAAA,SAAA/L,GAAsD,UAAAjD,OAAAiD,KAAuBqT,EAAAtH,IAAA,SAAA/L,GAAyB,OAAAA,IACtGqT,EAAAojB,KAAA,SAAAC,EAAAC,GAAwC,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAA7d,OAExC3L,EAAAuG,mBAAA,SAAAkjB,GACAt1B,KAAAgP,gBAAAhP,KAAAgP,gBAAAxH,OAAA8tB,IAEAzpB,EAAA0pB,sBAAA,SAAAD,GACAt1B,KAAAgP,gBAAAhP,KAAAgP,gBAAA3R,OAAA,SAAAqE,GAA0E,MAAA4zB,GAAApZ,QAAAxa,GAAA,KAE1EmK,EAAA0G,mBAAA,SAAA+iB,GACAt1B,KAAAiP,gBAAAjP,KAAAiP,gBAAAzH,OAAA8tB,IAEAzpB,EAAA2pB,sBAAA,SAAAF,GACAt1B,KAAAiP,gBAAAjP,KAAAiP,gBAAA5R,OAAA,SAAAqE,GAA0E,MAAA4zB,GAAApZ,QAAAxa,GAAA,KAE1EmK,EAAAikB,mBAAA,SAAA9d,GACA,GAAA6d,KAOA,OANA7d,GAAAxO,QAAA,SAAA8a,GACAuR,EAAAvR,EAAA5c,OACA4c,EAAAwT,OAAAtuB,QAAA,SAAAmC,GACAkqB,EAAAvR,EAAA5c,IAAAnD,KAAAoH,EAAAhM,WAGAk2B,GAEAhkB,EAAA4pB,oBAAA,SAAAzjB,EAAA0jB,GACA,GAAAxwB,GAAAqqB,EAAAuC,EAAAlC,EAAAn2B,OAAA8J,KAAAyO,EACA,KAAA9M,EAAA,EAAmBA,EAAA0qB,EAAAhzB,OAAgBsI,IAEnC,IADA4sB,EAAA9f,EAAA4d,EAAA1qB,IAAA4sB,OACAvC,EAAA,EAAuBA,EAAAuC,EAAAl1B,OAAmB2yB,IAC1C,GAAAmG,EAAA5D,EAAAvC,GAAA51B,OACA,QAIA,WAEAkS,EAAAkkB,0BAAA,SAAA/d,GACA,MAAAhS,MAAAy1B,oBAAAzjB,EAAA,SAAArM,GAA+D,MAAAA,GAAA,KAE/DkG,EAAAqkB,0BAAA,SAAAle,GACA,MAAAhS,MAAAy1B,oBAAAzjB,EAAA,SAAArM,GAA+D,MAAAA,GAAA,KAE/DkG,EAAA8pB,YAAA,WACA,GAAAhzB,GAAA3C,KAAA2C,MACA,uBAAAA,GAAA,qBAAAA,EAAAwiB,WAAAyQ,eAEA/pB,EAAAgqB,WAAA,WACA,GAAAlzB,GAAA3C,KAAA2C,MACA,uBAAAA,GAAA,oBAAAA,EAAAwiB,WAAAyQ,eAEA/pB,EAAAiqB,aAAA,SAAA9jB,GACA,GAAApP,GAAA5C,KAAA2C,EAAAC,EAAAD,OAAAozB,EAAAnzB,EAAAizB,aAAAG,EAAApzB,EAAA+yB,aAWA,OAVAI,IAAAC,EACAhkB,EAAAmjB,KAAA,SAAAc,EAAAC,GACA,GAAAC,GAAA,SAAAC,EAAAC,GAA+C,MAAAD,GAAA76B,KAAAg2B,IAAA8E,EAAA18B,QAC/C28B,EAAAL,EAAAnE,OAAAyE,OAAAJ,EAAA,GACAK,EAAAN,EAAApE,OAAAyE,OAAAJ,EAAA,EACA,OAAAJ,GAAAS,EAAAF,IAAAE,IAESC,EAAA9zB,EAAAwiB,aACTnT,EAAAmjB,KAAAxyB,EAAAwiB,YAEAnT,GAEAnG,EAAAunB,UAAA,SAAAphB,EAAAtT,GACA,MAAAsB,MAAA6D,GAAAqxB,MAAAljB,EAAAvH,IAAA,SAAA6T,GAAuD,MAAAA,GAAAwT,UAAmBz0B,OAAA,SAAAsI,GAAwB,MAAAA,GAAAjH,MAAA,KAElGmN,EAAA6qB,iBAAA,SAAAl3B,GACA,MAAAA,GAAAnC,OAAA,SAAAxB,GAAyC,MAAA8jB,GAAA9jB,EAAAlC,UAEzCkS,EAAAklB,gBAAA,SAAA/e,EAAAoe,GACA,MAAApe,GAAAvH,IAAA,SAAA6T,GACA,OACA5c,GAAA4c,EAAA5c,GACA4yB,OAAAhW,EAAAgW,OACAxC,OAAAxT,EAAAwT,OAAAz0B,OAAA,SAAAsI,GACA,MAAAyqB,GAAA,IAAAzqB,EAAAjH,GAAAiH,EAAAjH,GAAA0xB,EAAA,SAKAvkB,EAAAkR,aAAA,WACA,GAAApa,GAAA3C,KAAA2C,MACA,0BAAAA,GAAAuiB,cAAAviB,EAAAuiB,gBAES,gBAAAviB,GAAAuiB,cAAAjG,EAAAtc,EAAAuiB,eAKTrZ,EAAA2lB,mBAAA,SAAAhE,EAAAluB,EAAAmE,GACA,GAAAb,GAAA5C,KACAwwB,GAAA,KAAAmG,EAAA,GASA,OARA/zB,GAAA6O,YAAAvL,OAAA,OAAAmD,UAAA,UACA7J,MAAAguB,EAAAluB,IACAiK,QAAAS,OAAA,QACA7D,KAAA,SAAAtK,GAAgC,MAAA+G,GAAAg0B,gBAAA/6B,EAAA6F,IAAA7F,KAChCuK,KAAA,SAAAvK,EAAAqJ,GACAsrB,EAAAtrB,GAAAlF,KAAAsG,wBAAA7C,GAAAkzB,IAEAhtB,SACA6mB,GAEA3kB,EAAAgrB,UAAA,SAAAh7B,GACA,MAAAmE,MAAA80B,UAAA90B,KAAAR,KAAAwS,QAAAnW,EAAA6F,KAEAmK,EAAAirB,MAAA,SAAAj7B,GACA,cAAAA,IAAAmE,KAAA80B,UAAA90B,KAAAR,KAAAwS,QAAAnW,EAAA2D,KAAAkC,KAEAmK,EAAAkrB,kBAAA,SAAAjF,EAAAp1B,GACA,GAAAwI,GAAA8xB,EAAAlF,EAAAp1B,GAAAgC,EAAAu4B,IACA,KAAA/xB,EAAAxI,EAAA,EAA2BwI,GAAA,GAC3B8xB,IAAAlF,EAAA5sB,GAAAxG,EADmCwG,IAEnC+xB,EAAA14B,KAAAuzB,EAAA5sB,GAEA,KAAAA,EAAAxI,EAAuBwI,EAAA4sB,EAAAl1B,QACvBo6B,IAAAlF,EAAA5sB,GAAAxG,EAD0CwG,IAE1C+xB,EAAA14B,KAAAuzB,EAAA5sB,GAEA,OAAA+xB,IAGAprB,EAAAqrB,uBAAA,SAAAllB,EAAAmlB,GACA,GAAAC,GAAAx0B,EAAA5C,IAQA,OALAo3B,GAAAplB,EAAAvH,IAAA,SAAApH,GACA,MAAAT,GAAAy0B,YAAAh0B,EAAAyuB,OAAAqF,KAIAv0B,EAAAy0B,YAAAD,EAAAD,IAEAtrB,EAAAwrB,YAAA,SAAAvF,EAAAqF,GACA,GAAAG,GAAA10B,EAAA5C,KAAAu3B,EAAA30B,EAAAD,OAAAgnB,iBAmBA,OAhBAmI,GAAAz0B,OAAA,SAAAsI,GAAoC,MAAAA,IAAA/C,EAAAyX,UAAA1U,EAAAjE,MAAkC8B,QAAA,SAAAmC,GACtE,GAAA6xB,GAAA50B,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAAkjB,KAAA70B,EAAA80B,wBAAA/xB,EAAAjE,IAAA,KAAA6S,EAAAojB,IAAA,IAAAhyB,EAAAjJ,OAAAgP,QACA4rB,GAAA10B,EAAAg1B,YAAAJ,KACAF,EAAA3xB,KAKAmsB,EAAAz0B,OAAA,SAAAsI,GAAoC,MAAAA,KAAA/C,EAAAyX,UAAA1U,EAAAjE,MAAmC8B,QAAA,SAAAmC,GACvE,GAAA9J,GAAA+G,EAAAi1B,KAAAlyB,EAAAwxB,EACAt7B,GAAA07B,IACAA,EAAA17B,EACAy7B,EAAA3xB,KAIA2xB,GAEAzrB,EAAAgsB,KAAA,SAAAr4B,EAAA23B,GACA,GAAAv0B,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAm1B,EAAAn1B,EAAA0M,aAAA,IACA0oB,EAAAp1B,EAAA0M,aAAA,IACA1K,EAAA/B,EAAA6a,QAAAje,IAAA9C,OACAgC,EAAAkE,EAAAlE,EAAAc,EAAAd,EACA,OAAAnD,MAAAy8B,KAAAz8B,KAAA08B,IAAAv5B,EAAAy4B,EAAAW,GAAA,GAAAv8B,KAAA08B,IAAAtzB,EAAAwyB,EAAAY,GAAA,KAEAlsB,EAAAqsB,oBAAA,SAAApG,GACA,GAAA5sB,GAAAizB,KAAA3wB,OAAAsqB,EAEA,KAAA9xB,KAAA+a,gBACA,MAAA+W,EAGA,KAAA5sB,EAAA4sB,EAAAl1B,OAAA,EAAmC,EAAAsI,EAAOA,IAC1CizB,EAAAjzB,GAAAizB,EAAAjzB,EAAA,EAcA,OAXAizB,GAAA,IACAz5B,EAAAy5B,EAAA,GAAAz5B,EAAA,EACA/E,MAAAw+B,EAAA,GAAAx+B,MACA+H,GAAAy2B,EAAA,GAAAz2B,IAEAy2B,EAAArG,EAAAl1B,OAAA,IACA8B,EAAAy5B,EAAArG,EAAAl1B,QAAA8B,EAAA,EACA/E,MAAAw+B,EAAArG,EAAAl1B,QAAAjD,MACA+H,GAAAy2B,EAAArG,EAAAl1B,QAAA8E,IAGAy2B,GAEAtsB,EAAAusB,qBAAA,SAAAtE,EAAAuE,GACA,GAAAz1B,GAAA5C,KAAA2C,EAAAC,EAAAD,OAAA21B,EAAA31B,EAAA,QAAAmxB,EACA,0BAAAuE,GAA2CC,GAC3C7+B,OAAA8J,KAAA80B,GAAA70B,QAAA,SAAA9B,GACA42B,EAAA52B,GAAA22B,EAAA32B,KAEAkB,EAAAyS,QAAmB4D,YAAA,IACnBqf,IAGAzsB,EAAAM,iBAAA,SAAAosB,EAAAC,EAAAC,EAAAl1B,EAAA6f,GACA,GAAAxgB,GAAA5C,KAAAb,EAAAq5B,IAAA,MACAE,EAAA91B,EAAAiB,GAAA80B,IAAAJ,EACAE,IACAh/B,OAAA8J,KAAAk1B,GAAAj1B,QAAA,SAAAo1B,GACAF,EAAAE,SAAAH,EAAAG,MAGAF,EAAAG,IAAA,SAAAxX,EAAA7hB,GACA,GAAA3D,EACA,KAAA2D,EACA,SAAAxD,OAAAqlB,EAAAyX,YAAA,IAAAzX,EAAA0X,OAAA,KAAA1X,EAAA2X,WAAA,IAGAn9B,GADA,SAAAsD,EACAyD,EAAA6J,kBAAA3L,KAAApF,MAAA8D,EAAAy5B,UAAA11B,GACa,QAAApE,EACbyD,EAAAs2B,iBAAA15B,EAAAy5B,UAEAr2B,EAAAu2B,iBAAA35B,EAAAy5B,UAEA7V,EAAAlf,KAAAtB,EAAA/G,MAGAgQ,EAAAutB,iBAAA,SAAAC,EAAAC,GACA,GAAAz9B,GAAAc,EAAA28B,EAAAC,UAAAF,EASA,OARA,KAAA18B,EAAAC,QACAf,OACAc,EAAA,GAAA6G,QAAA,SAAA9B,GACA7F,EAAA,GAAA6F,GAAA,QAGA7F,EAAAy9B,EAAA59B,MAAA29B,GAEAx9B,GAEAgQ,EAAAstB,iBAAA,SAAAK,GACA,MAAAx5B,MAAAo5B,iBAAAI,EAAAx5B,KAAA6D,GAAA21B,MAEA3tB,EAAAqtB,iBAAA,SAAAO,GACA,MAAAz5B,MAAAo5B,iBAAAK,EAAAz5B,KAAA6D,GAAA41B,MAEA5tB,EAAAY,kBAAA,SAAAitB,EAAAn2B,GACA,GACAo2B,GAAAn6B,EADAoD,EAAA5C,KACA45B,IA4BA,OA3BAr2B,IACAA,EAAA7E,GACAi7B,EAAAp2B,EAAA5J,MAAA6N,OAAAjE,EAAA7E,GACAkE,EAAAD,OAAAqc,OAAAzb,EAAA7E,GAEAi7B,EAAAp2B,EAAA5J,MAEAigC,EAAAr7B,KAAAo7B,GACAD,EAAAl2B,QAAA,SAAAq2B,GACA,GAAAC,KACAH,GAAAn2B,QAAA,SAAAC,GAEA,GAAAkC,GAAA/C,EAAAm3B,gBAAAF,EAAAp2B,EACAu2B,GAAAr0B,KACAA,EAAA,MAEAm0B,EAAAv7B,KAAAoH,KAEAi0B,EAAAr7B,KAAAu7B,KAEAt6B,EAAAoD,EAAA+J,kBAAAitB,KAEAngC,OAAA8J,KAAAm2B,GAAAl2B,QAAA,SAAAC,GACAm2B,EAAAr7B,MAAAkF,GAAA+D,OAAAkyB,EAAAj2B,OAEAjE,EAAAoD,EAAAiK,qBAAA+sB,IAEAp6B,GAEAqM,EAAAkuB,gBAAA,SAAAv5B,EAAAsJ,GACAA,IAAAmwB,QAAA,oBACAnwB,IAAAmwB,QAAA,SAEA,QADAC,GAAApwB,EAAA9C,MAAA,KACA9B,EAAA,EAAuBA,EAAAg1B,EAAAt9B,SAAsBsI,EAAA,CAC7C,GAAAsqB,GAAA0K,EAAAh1B,EACA,MAAAsqB,IAAAhvB,IAGA,MAFAA,KAAAgvB,GAKA,MAAAhvB,IAEAqL,EAAAc,kBAAA,SAAAhQ,GACA,GAAwCuI,GAAAqqB,EAAxChsB,EAAA5G,EAAA,GAAAm9B,KAAwCF,IACxC,KAAA10B,EAAA,EAAmBA,EAAAvI,EAAAC,OAAiBsI,IAAA,CAEpC,IADA40B,KACAvK,EAAA,EAAuBA,EAAA5yB,EAAAuI,GAAAtI,OAAoB2yB,IAAA,CAC3C,GAAAyK,EAAAr9B,EAAAuI,GAAAqqB,IACA,SAAAvzB,OAAA,0CAAAkJ,EAAA,IAAAqqB,EAAA,KAEAuK,GAAAv2B,EAAAgsB,IAAA5yB,EAAAuI,GAAAqqB,GAEAqK,EAAAr7B,KAAAu7B,GAEA,MAAAF,IAEA/tB,EAAAgB,qBAAA,SAAAstB,GACA,GAAAj1B,GAAAqqB,EAAA9rB,EAAAm2B,IACA,KAAA10B,EAAA,EAAmBA,EAAAi1B,EAAAv9B,OAAoBsI,IAEvC,IADAzB,EAAA02B,EAAAj1B,GAAA,GACAqqB,EAAA,EAAuBA,EAAA4K,EAAAj1B,GAAAtI,OAAuB2yB,IAAA,CAI9C,GAHAyK,EAAAJ,EAAArK,EAAA,MACAqK,EAAArK,EAAA,OAEAyK,EAAAG,EAAAj1B,GAAAqqB,IACA,SAAAvzB,OAAA,0CAAAkJ,EAAA,IAAAqqB,EAAA,KAEAqK,GAAArK,EAAA,GAAA9rB,GAAA02B,EAAAj1B,GAAAqqB,GAGA,MAAAqK,IAEA/tB,EAAAoG,qBAAA,SAAAzS,EAAA46B,GACA,GAGApoB,GAHApP,EAAA5C,KAAA2C,EAAAC,EAAAD,OACAitB,EAAAhtB,EAAAiB,GAAAN,KAAA/D,EAAA,IAAAnC,OAAAuF,EAAAmwB,OAAAnwB,GACAmP,EAAAnP,EAAAiB,GAAAN,KAAA/D,EAAA,IAAAnC,OAAAuF,EAAAiwB,IAAAjwB,EAyGA,OArGAgtB,GAAApsB,QAAA,SAAA9B,GACA,GAAA24B,GAAAz3B,EAAAowB,QAAAtxB,EAEAkB,GAAAmc,aAAAnc,EAAAic,eAEA9M,EAAAmK,QAAAme,IAAA,EACAz3B,EAAApD,KAAAuS,GAAArQ,IAAA04B,GAAAx3B,EAAApD,KAAAuS,GAAArQ,GAAAkB,EAAApD,KAAAuS,GAAArQ,OAAA8F,OACAhI,EAAAiL,IAAA,SAAA5O,GAA+C,MAAAA,GAAAw+B,KAC/Ch9B,OAAAsiB,GACAlV,IAAA,SAAA2pB,EAAAlvB,GAAqD,MAAAtC,GAAAsxB,gBAAAE,EAAA1yB,EAAAwD,MAIrDvC,EAAAqc,OACApc,EAAApD,KAAAuS,GAAArQ,GAAAkB,EAAA0wB,mBAGArU,EAAAtc,EAAAuc,WACAtc,EAAApD,KAAAuS,GAAArQ,GAAAkB,EAAAqwB,iBAAAoH,EAAAz3B,EAAApD,KAAAwS,UAIApP,EAAApD,KAAAuS,GAAArQ,GAAAlC,EAAAiL,IAAA,SAAA5O,EAAAqJ,GAA2D,MAAAA,OAM3D0qB,EAAApsB,QAAA,SAAA9B,GACA,IAAAkB,EAAApD,KAAAuS,GAAArQ,GACA,SAAA1F,OAAA,8BAAA0F,EAAA,QAKAsQ,EAAA4d,EAAAnlB,IAAA,SAAA/I,EAAAhF,GACA,GAAA49B,GAAA33B,EAAAgiB,iBAAAjjB,EACA,QACAA,GAAA44B,EACAhG,OAAA5yB,EACAowB,OAAAtyB,EAAAiL,IAAA,SAAA5O,EAAAqJ,GACA,GACAxG,GADA27B,EAAAz3B,EAAAowB,QAAAtxB,GAAA0yB,EAAAv4B,EAAAw+B,GACA1gC,EAAA,OAAAkC,EAAA6F,IAAA8hB,MAAA3nB,EAAA6F,IAAA,MAAA7F,EAAA6F,EAkBA,OAhBAkB,GAAAmc,aAAAnc,EAAAmY,iBAAA,IAAAre,IAAAs9B,EAAA5F,IACA,IAAA13B,GAAA,IAAAwI,IACAvC,EAAAqd,sBAEAthB,EAAAiE,EAAAqd,kBAAA9D,QAAAkY,GACA11B,KAAA,IACAA,EAAAiE,EAAAqd,kBAAApjB,OACA+F,EAAAqd,kBAAAzhB,KAAA61B,KAGA11B,EAAAkE,EAAAsxB,gBAAAE,EAAA1yB,EAAAwD,IAGA80B,EAAAn+B,EAAA6F,KAAAkB,EAAApD,KAAAuS,GAAArQ,GAAA9E,QAAAsI,KACAxG,EAAA+H,SAE4B/H,IAAA/E,QAAA+H,GAAA44B,KACXj9B,OAAA,SAAAsI,GAAuB,MAAA2nB,GAAA3nB,EAAAjH,QAKxCsT,EAAAxO,QAAA,SAAA8a,GACA,GAAApZ,EAEAvC,GAAA+hB,aACApG,EAAAwT,OAAAxT,EAAAwT,OAAAqD,KAAA,SAAAoF,EAAAC,GACA,GAAA1kB,GAAAykB,EAAA77B,GAAA,IAAA67B,EAAA77B,EAAA67B,EAAA77B,EAAAkN,IACAmK,EAAAykB,EAAA97B,GAAA,IAAA87B,EAAA97B,EAAA87B,EAAA97B,EAAAkN,GACA,OAAAkK,GAAAC,KAIA7Q,EAAA,EACAoZ,EAAAwT,OAAAtuB,QAAA,SAAAmC,GACAA,EAAAjJ,MAAAwI,MAGAtC,EAAApD,KAAAuS,GAAAuM,EAAA5c,IAAAyzB,KAAA,SAAAoF,EAAAC,GACA,MAAAD,GAAAC,MAKA53B,EAAA+sB,iBAAA/sB,EAAAmtB,0BAAA/d,GACApP,EAAAqtB,iBAAArtB,EAAAstB,0BAAAle,GAGArP,EAAAqiB,WACApiB,EAAA63B,cAAA73B,EAAAyP,SAAAL,GAAA3U,OAAA,SAAAqE,GAAwE,QAAAA,IAAAiB,GAAAsiB,cAAsCtiB,EAAAqiB,WAI9GhT,EAAAxO,QAAA,SAAA3H,GACA+G,EAAA83B,SAAA7+B,EAAAy4B,OAAAz4B,KAGAmW,GAGAnG,EAAA8uB,KAAA,SAAA3oB,EAAA4oB,GACA,GAAAh4B,GAAA5C,IACAgS,KAEA4oB,EAAAv9B,SACA2U,IAAA3U,OAAAu9B,EAAAv9B,UAGAu9B,EAAAz7B,MAAAy7B,EAAA57B,QACAgT,EAAAxO,QAAA,SAAA8a,GACA,GAAAnf,GAAAy7B,EAAA57B,OAAA47B,EAAA57B,MAAAsf,EAAA5c,IAAAk5B,EAAA57B,MAAAsf,EAAA5c,IAAAk5B,EAAAz7B,IACAyD,GAAA63B,cAAAnc,EAAA5c,GAAAvC,KAIAyD,EAAApD,KAAAwS,QAAAxO,QAAA,SAAA3H,GACA,OAAAqJ,GAAA,EAA+BA,EAAA8M,EAAApV,OAAoBsI,IACnD,GAAArJ,EAAA6F,KAAAsQ,EAAA9M,GAAAxD,GAAA,CACA7F,EAAAi2B,OAAA9f,EAAA9M,GAAA4sB,OACA9f,EAAA1T,OAAA4G,EAAA,EACA,UAIAtC,EAAApD,KAAAwS,QAAApP,EAAApD,KAAAwS,QAAAxK,OAAAwK,IAIApP,EAAAsS,cAAAtS,EAAApD,KAAAwS,SAGApP,EAAAyS,QAAmBI,sBAAA,EAAAD,mBAAA,EAAAyD,YAAA,IAEnB2hB,EAAAxX,MAAwBwX,EAAAxX,QAExBvX,EAAAgvB,aAAA,SAAAD,GACA,GAAAh4B,GAAA5C,IACA46B,GAAAp7B,KACAoD,EAAA+3B,KAAA/3B,EAAAqP,qBAAA2oB,EAAAp7B,MAAAo7B,GAEAA,EAAArC,IACA31B,EAAAuJ,iBAAAyuB,EAAArC,IAAAqC,EAAApC,SAAAoC,EAAAnC,QAAAmC,EAAAr3B,KAAA,SAAA/D,GACAoD,EAAA+3B,KAAA/3B,EAAAqP,qBAAAzS,GAAAo7B,KAGAA,EAAAlB,KACA92B,EAAA+3B,KAAA/3B,EAAAqP,qBAAArP,EAAA6J,kBAAAmuB,EAAAlB,KAAAkB,EAAAr3B,OAAAq3B,GAEAA,EAAAj+B,KACAiG,EAAA+3B,KAAA/3B,EAAAqP,qBAAArP,EAAA+J,kBAAAiuB,EAAAj+B,OAAAi+B,GAEAA,EAAAT,QACAv3B,EAAA+3B,KAAA/3B,EAAAqP,qBAAArP,EAAAiK,qBAAA+tB,EAAAT,UAAAS,GAGAh4B,EAAA+3B,KAAA,KAAAC,IAGA/uB,EAAAivB,OAAA,SAAAxF,EAAAlS,GACA,GAAAxgB,GAAA5C,IAOA,OANAojB,KACAA,EAAA,cAGAkS,IAAAj4B,OAAA,SAAAqE,GAAoD,MAAAkB,GAAAkyB,UAAAlyB,EAAApD,KAAAwS,QAAAtQ,KAEpD4zB,GAAA,IAAAA,EAAA14B,QAIAgG,EAAA0Q,IAAAjK,UAAAisB,EAAA7qB,IAAA,SAAA/I,GAAsD,MAAAkB,GAAAm4B,eAAAr5B,MACtDkF,aACAjF,MAAA,aACAgI,SACAzF,KAAAtB,EAAAogB,OAAAI,OACAkS,GAAA9xB,QAAA,SAAA9B,GAEAkB,EAAA8N,cAAAhP,IAAA,EAEAkB,EAAAsT,QACAtT,EAAAsT,OAAA7M,UAAA,IAAAkL,EAAAymB,WAAAp4B,EAAA80B,wBAAAh2B,IAAAiI,SAGA/G,EAAApD,KAAAwS,QAAApP,EAAApD,KAAAwS,QAAA3U,OAAA,SAAAihB,GACA,MAAAA,GAAA5c,gBAjBA0hB,MAsBAvX,EAAAovB,aAAA,SAAA/1B,GACA,GAAAvC,GAAA3C,KAAA2C,MACA,OAAAuC,GAAAvC,EAAAqd,kBAAApjB,OAAA+F,EAAAqd,kBAAA9a,MAGA2G,EAAA+I,cAAA,WACA,GAAAhS,GAAA5C,IACA4C,GAAAwO,KAAAlL,OAAA,IAAAqO,EAAA7T,OAAAsJ,OAAA,KACAzF,KAAA,QAAAgQ,EAAA2mB,YACAv5B,MAAA,mBAEAkK,EAAAyR,gBAAA,WACA,GACA6d,GAAAC,EADAx4B,EAAA5C,KAAA2C,EAAAC,EAAAD,OAEAixB,EAAAhxB,EAAAgxB,cAGAsH,EAAAt4B,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAA2mB,YACAv5B,MAAA,SAAAgB,EAAAyQ,aAAAzQ,EAAA0M,aAAA,8BACAyC,QAAAyC,EAAA8mB,mBAAAzH,GACA9hB,QAAAyC,EAAA+mB,kBAAA1H,EAGAsH,GAAA7xB,UAAA,IAAAkL,EAAAgnB,WAAA5xB,SAGA/G,EAAA24B,UAAAL,EAAA7xB,UAAA,IAAAkL,EAAAgnB,WAEA3H,GACAuH,EAAAv4B,EAAA24B,UAAA/7B,MAAA,IAEAoD,EAAA44B,gCAAAL,EAAA5xB,SAEA3G,EAAA64B,gBAAAN,KAKAC,EAAAx4B,EAAA8xB,sBAAA9xB,EAAApD,KAAAwS,SACAkpB,EAAAQ,MAAAN,IAAAtJ,WACAlvB,EAAA24B,UAAAL,EAAA7xB,UAAA,IAAAkL,EAAAgnB,WACAJ,EAAAv4B,EAAA24B,UAAA/7B,KAAA,SAAA3D,GAA8D,MAAAA,KAE9D+G,EAAA+4B,6BAAAR,EAAA5xB,SAEA3G,EAAA64B,gBAAAN,GAEAA,EAAAzxB,OAAAC,WAGAkC,EAAA4vB,gBAAA,SAAAN,GACA,GACAz8B,GAAAiG,EAAAsB,EAAAD,EAAA41B,EAAAC,EADAj5B,EAAA5C,KAAA2C,EAAAC,EAAAD,MAIAw4B,MAAAv4B,EAAA24B,UAAA/7B,KAAA,SAAA3D,GAA6E,MAAAA,KAE7E+G,EAAAgxB,eAEAl1B,EAAA,EACAiG,EAAA,EACAsB,EAAArD,EAAA4D,MACAR,EAAApD,EAAA2D,UAGA3D,EAAAmc,cAAAnc,EAAAic,gBAAAjc,EAAAmY,iBAgCA6gB,EAAAh5B,EAAAk5B,oBACAD,EAAA,SAAAhgC,GACA,MAAA+G,GAAAlE,EAAA7C,EAAA6C,GAAAk9B,EAAA,KA/BAh5B,EAAA2xB,WAEAqH,EAAA,SAAA//B,GACA,GAAAkgC,GAAAn5B,EAAA4xB,SAAA34B,EAAAa,OAAAs/B,EAAAp5B,EAAA6xB,SAAA54B,EAAAa,MAGA,eAAAq/B,GAAA,OAAAC,EACAr5B,EAAA0M,aAAAzM,EAAA2D,OAAA3D,EAAA4D,OAGA,OAAAu1B,IAAyCA,EAAAn5B,EAAAlE,EAAAmG,SAAA,IACzC,OAAAm3B,IAAyCA,EAAAp5B,EAAAlE,EAAAmG,SAAA,IAEzCtJ,KAAA+D,IAAA,GAAAsD,EAAAlE,EAAAs9B,GAAAp5B,EAAAlE,EAAAq9B,IAAA,KAEAF,EAAA,SAAAhgC,GACA,GAAAkgC,GAAAn5B,EAAA4xB,SAAA34B,EAAAa,OAAAs/B,EAAAp5B,EAAA6xB,SAAA54B,EAAAa,OACAu/B,EAAAr5B,EAAApD,KAAAuS,GAAAlW,EAAA6F,IAAA7F,EAAAa,MAGA,eAAAq/B,GAAA,OAAAC,EACA,GAGA,OAAAD,IAAyCA,EAAAn5B,EAAAlE,EAAAmG,SAAA,KAEzCjC,EAAAlE,EAAAu9B,GAAAr5B,EAAAlE,EAAAq9B,IAAA,KAQAr9B,EAAAiE,EAAA0M,aAAA,EAAAwsB,EACAl3B,EAAAhC,EAAA0M,aAAAwsB,EAAA,EACA51B,EAAAtD,EAAA0M,aAAAzM,EAAA4D,MAAAo1B,EACA51B,EAAArD,EAAA0M,aAAAusB,EAAAh5B,EAAA2D,QAGA40B,EACA52B,KAAA,QAAA3B,EAAAs5B,WAAAx4B,KAAAd,IACA2B,KAAA,IAAA7F,GACA6F,KAAA,IAAAI,GACAJ,KAAA,QAAA0B,GACA1B,KAAA,SAAAyB,IAEA6F,EAAA8vB,6BAAA,SAAAQ,GACA,GAAAv5B,GAAA5C,KAAA6D,EAAAjB,EAAAiB,GAAAlB,EAAAC,EAAAD,MACAw5B,GAAAnyB,OAAA,QACAzF,KAAA,QAAA3B,EAAAs5B,WAAAx4B,KAAAd,IACAjB,MAAA,SAAAgB,EAAA4iB,wBAAA5iB,EAAA6iB,uBAAA,gBACAjS,GAAA,qBAAA1X,GACA,GAAAa,GAAAb,EAAAa,KAEAkG,GAAA8K,UAAA9K,EAAA+K,SACA/K,EAAA4T,eAGA7T,EAAAinB,4BAAwDhnB,EAAAw5B,cAAA1/B,EAAA,SACxDkG,EAAAy5B,WAAA3/B,EAAA,SAGAkG,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAijB,MAAA,IAAA96B,GAAA0J,KAAA,SAAAvK,GACA8G,EAAAkjB,iBAAA3hB,KAAAtB,EAAAgB,IAAA/H,QAGA0X,GAAA,oBAAA1X,GACA,GAAAa,GAAAb,EAAAa,KACAkG,GAAAD,SACAC,EAAA4T,eACA5T,EAAA05B,iBACA15B,EAAA25B,cAEA35B,EAAA45B,kBACA55B,EAAA65B,eAEA75B,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAijB,MAAA,IAAA96B,GAAA0J,KAAA,SAAAvK,GACA8G,EAAAmjB,gBAAA5hB,KAAAtB,EAAAgB,IAAA/H,SAGA0X,GAAA,qBAAA1X,GACA,GAAA6gC,GAAAhgC,EAAAb,EAAAa,MACA6+B,EAAA34B,EAAA0Q,IAAApN,OAAA,IAAAqO,EAAAgnB,UAAA,IAAA7+B,EAEAkG,GAAA8K,UAAA9K,EAAA+K,SACA/K,EAAA4T,eAEA5T,EAAA+5B,WAAA9gC,IAAA,eAAA+G,EAAAD,OAAAqnB,gBAAAnmB,EAAA+4B,MAAA58B,MAAA,GAAA4C,EAAAlE,EAAAkE,EAAAywB,UAAAx3B,EAAA6F,GAAAhF,MACAA,GAAA,GAIAggC,EAAA95B,EAAA8X,oBAAA9X,EAAApD,KAAAwS,SAAAvH,IAAA,SAAA6T,GACA,MAAA1b,GAAAixB,QAAAjxB,EAAAmxB,gBAAAzV,EAAAwT,OAAAp1B,MAGAiG,EAAAqpB,kBACAppB,EAAAi6B,YAAAH,EAAA18B,MACA4C,EAAAk6B,eAAAJ,MAGA/5B,EAAAqpB,iBAAArpB,EAAA4iB,yBAAA5iB,EAAA6iB,yBAIA5iB,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAijB,MAAA,IAAA96B,GACA0J,KAAA,WACAvC,EAAAqC,OAAAlG,MAAA8R,QAAAyC,EAAAwoB,UAAA,GACAp6B,EAAA4iB,wBACAgW,EAAA55B,MAAA,SAAAgB,EAAA6iB,uBAAA,gBAEA7iB,EAAAqpB,kBACAppB,EAAA05B,iBACA15B,EAAA25B,cACA55B,EAAA6iB,yBACA5iB,EAAA45B,gBAAA9/B,GACAkG,EAAA65B,aAAA//B,OAIAW,OAAA,SAAAxB,GACA,MAAA+G,GAAAo6B,cAAAh9B,KAAAnE,KAEAuK,KAAA,SAAAvK,GACA8G,EAAA4iB,yBAAA5iB,EAAA6iB,wBAAA7iB,EAAA8iB,4BAAA5pB,KACA0/B,EAAA55B,MAAA,oBAEAgB,EAAAqpB,kBACAppB,EAAAi6B,aAAAhhC,GAAAmE,MACA4C,EAAAk6B,gBAAAjhC,IACA8G,EAAAinB,4BAAoEhnB,EAAAw5B,cAAA1/B,EAAAb,EAAA6F,IAAA,GACpEkB,EAAAy5B,WAAA3/B,EAAAb,EAAA6F,IAAA,SAIA6R,GAAA,iBAAA1X,GACA,GAAAa,GAAAb,EAAAa,KACA,KAAAkG,EAAA4T,cAAA5T,EAAAq6B,YAAA,CACA,GAAAr6B,EAAAgL,YAEA,YADAhL,EAAAgL,aAAA,EAGAhL,GAAA+5B,WAAA9gC,IAAA,eAAA8G,EAAAqnB,gBAAAnmB,EAAA+4B,MAAA58B,MAAA,GAAA4C,EAAAlE,EAAAkE,EAAAywB,UAAAx3B,EAAA6F,GAAAhF,MACAA,GAAA,GAEAkG,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAijB,MAAA,IAAA96B,GAAA0J,KAAA,SAAAvK,IACA8G,EAAA6iB,wBAAA5iB,EAAAo6B,cAAAh9B,KAAAnE,MACA+G,EAAAq6B,YAAAj9B,KAAAnE,EAAAa,GACAkG,EAAAD,OAAAijB,aAAA1hB,KAAAtB,EAAAgB,IAAA/H,EAAAmE,YAIAkE,KACAvB,EAAAgjB,0BAAA/iB,EAAAs6B,KACAr5B,EAAAs5B,SAAAD,OAAAE,OAAA3jC,QACA8Z,GAAA,kBAAiD3Q,EAAAs6B,KAAAr5B,EAAA+4B,MAAA58B,SACjDuT,GAAA,uBAAsD3Q,EAAAy6B,UAAAx5B,EAAA+4B,MAAA58B,SACtDuT,GAAA,qBAAoD3Q,EAAA06B,YACpD,eAIAzxB,EAAA2vB,gCAAA,SAAAW,GAGA,QAAAoB,KACA36B,EAAA0Q,IAAApN,OAAA,IAAAqO,EAAAgnB,WAAA55B,MAAA,eACAiB,EAAA05B,iBACA15B,EAAA25B,cACA35B,EAAA45B,kBACA55B,EAAA65B,eAPA,GAAA75B,GAAA5C,KAAA6D,EAAAjB,EAAAiB,GAAAlB,EAAAC,EAAAD,MAUAw5B,GAAAnyB,OAAA,QACAzF,KAAA,OACAA,KAAA,OACAA,KAAA,QAAA3B,EAAA4D,OACAjC,KAAA,SAAA3B,EAAA2D,QACAhC,KAAA,QAAAgQ,EAAAgnB,WACAhoB,GAAA,sBACA3Q,EAAAD,SACAC,EAAA4T,cACA+mB,OAEAhqB,GAAA,uBACA,GACAqpB,GAAAtF,EAAAkG,EAAAd,EADAjiB,EAAA7X,EAAA8X,oBAAA9X,EAAApD,KAAAwS,QAGA,KAAApP,EAAA8K,WACA9K,EAAA4T,WAAAiE,GAAA,CAUA,GARAmiB,EAAA/4B,EAAA+4B,MAAA58B,MACAs3B,EAAA10B,EAAAs0B,uBAAAzc,EAAAmiB,IAEAh6B,EAAAiL,WAAAypB,KAAA51B,KAAAkB,EAAAiL,UAAAnM,KACAiB,EAAAmjB,gBAAA5hB,KAAAtB,EAAAgB,IAAAhB,EAAAiL,WACAjL,EAAAiL,UAAApH,SAGA6wB,EAEA,WADAiG,IAKAC,GADA56B,EAAAgd,cAAA0X,KAAA30B,EAAAqpB,iBACAsL,GAEA10B,EAAAwwB,UAAA3Y,EAAA6c,EAAA54B,GAIAg+B,EAAAc,EAAA/yB,IAAA,SAAA5O,GACA,MAAA+G,GAAAixB,QAAAh4B,KAEA+G,EAAAi6B,YAAAH,EAAA18B,MAGA2C,EAAAinB,4BACAhnB,EAAAw5B,cAAA9E,EAAA56B,MAAA46B,EAAA51B,IAAA,GAEAkB,EAAAy5B,WAAA/E,EAAA56B,MAAA46B,EAAA51B,IAAA,GAGAkB,EAAAk6B,eAAAJ,IAGA95B,EAAAyX,UAAAid,EAAA51B,KAAAkB,EAAAi1B,KAAAP,EAAAsF,GAAAj6B,EAAAgnB,qBACA/mB,EAAA0Q,IAAApN,OAAA,IAAAqO,EAAAgnB,WAAA55B,MAAA,oBACAiB,EAAAiL,YACAlL,EAAAkjB,iBAAA3hB,KAAAtB,EAAAgB,IAAA0zB,GACA10B,EAAAiL,UAAAypB,OAIA/jB,GAAA,mBACA,GACAqpB,GAAAtF,EADA7c,EAAA7X,EAAA8X,oBAAA9X,EAAApD,KAAAwS,QAEApP,GAAA4T,WAAAiE,KAEAmiB,EAAA/4B,EAAA+4B,MAAA58B,MACAs3B,EAAA10B,EAAAs0B,uBAAAzc,EAAAmiB,GACAtF,IAEA10B,EAAAyX,UAAAid,EAAA51B,KAAAkB,EAAAi1B,KAAAP,EAAAsF,GAAAj6B,EAAAgnB,oBACA/mB,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAkpB,OAAA76B,EAAA80B,wBAAAJ,EAAA51B,KAAA2H,UAAA,IAAAkL,EAAAijB,MAAA,IAAAF,EAAA56B,OAAA0J,KAAA,YACAzD,EAAA6iB,wBAAA5iB,EAAAo6B,cAAAh9B,KAAAs3B,MACA10B,EAAAq6B,YAAAj9B,KAAAs3B,IAAA56B,OACAkG,EAAAD,OAAAijB,aAAA1hB,KAAAtB,EAAAgB,IAAA0zB,EAAAt3B,YAKAkE,KACAvB,EAAAgjB,0BAAA/iB,EAAAs6B,KACAr5B,EAAAs5B,SAAAD,OAAAE,OAAA3jC,QACA8Z,GAAA,kBAAiD3Q,EAAAs6B,KAAAr5B,EAAA+4B,MAAA58B,SACjDuT,GAAA,uBAAsD3Q,EAAAy6B,UAAAx5B,EAAA+4B,MAAA58B,SACtDuT,GAAA,qBAAoD3Q,EAAA06B,YACpD,eAGAzxB,EAAA6xB,cAAA,SAAAv+B,EAAAzC,EAAAkgC,GACA,GAAAh6B,GAAA5C,KACA29B,EAAA,IAAAppB,EAAAgnB,WAAA34B,EAAAgxB,cAAA,OAAAl3B,GACA6+B,EAAA34B,EAAAwO,KAAAlL,OAAAy3B,GAAAjyB,OACArF,EAAAk1B,EAAAj1B,wBACA5H,EAAA2H,EAAAiF,MAAAsxB,IAAA,MACAj4B,EAAA0B,EAAA8E,KAAAyxB,IAAA,MACAgB,EAAAjsB,SAAAksB,YAAA,cAEAD,GAAAE,eAAA3+B,GAAA,KAAA6C,EAAA,EAAAtD,EAAAiG,EAAAjG,EAAAiG,GACA,mBACA42B,EAAAmC,cAAAE,IAGA/xB,EAAAkL,gBAAA,WACA,GAAAnU,GAAA5C,KAAA2C,EAAAC,EAAAD,MACA,OAAAA,GAAAkhB,WAAAlhB,EAAAkhB,WAAAjhB,EAAAm7B,kBAEAlyB,EAAAoL,iBAAA,WACA,GAAArU,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAqD,EAAArD,EAAAmhB,YAAAnhB,EAAAmhB,YAAAlhB,EAAAo7B,iBACA,OAAAh4B,GAAA,EAAAA,EAAA,KAAApD,EAAA4P,QAAA,WAAA7P,EAAAoV,iBAAA,MAEAlM,EAAAsL,qBAAA,WACA,GAAAvU,GAAA5C,KACA2C,EAAAC,EAAAD,OACA2tB,EAAA3Q,EAAAhd,EAAAshB,aAAAthB,EAAAshB,YAAA,CAIA,OAHArhB,GAAAq7B,OAAAr7B,EAAAq7B,MAAAvyB,SACA4kB,GAAA1tB,EAAAs7B,mBAEA5N,GAEAzkB,EAAAwL,wBAAA,WACA,GAAA1U,GAAA3C,KAAA2C,MACA,OAAAgd,GAAAhd,EAAAuhB,gBAAAvhB,EAAAuhB,eAAA,GAEArY,EAAAyL,sBAAA,SAAA6mB,GACA,GAAAv7B,GAAA5C,KAAA2C,EAAAC,EAAAD,MACA,OAAAgd,GAAAhd,EAAAohB,cACAphB,EAAAohB,aACSphB,EAAA0M,aACT1M,EAAA6N,YAAAjV,KAAA+D,IAAA8+B,EAAAx7B,EAAAy7B,qBAAA,IAAAF,IAAA,OACSx7B,EAAAilB,aAAAjlB,EAAA4M,aACT3M,EAAA1D,KAAAo/B,wBAAAC,QAAA,KAEAH,EAAAx7B,EAAAy7B,qBAAA,IAAAF,KAGAtyB,EAAAuL,uBAAA,WACA,GAAAxU,GAAA5C,KAAA2C,EAAAC,EAAAD,OACA67B,EAAA,GAAAC,EAAA77B,EAAA+M,cAAA/M,EAAAyT,iBAAA,IACA,OAAAsJ,GAAAhd,EAAAqhB,eACArhB,EAAAqhB,cAAA,EACSrhB,EAAA0M,aACTmvB,EAAAC,GACS97B,EAAA8lB,cAAA9lB,EAAA8M,cACT,EAAAgvB,GAAA77B,EAAA1D,KAAAw/B,yBAAAH,QAAA,MAEAH,EAAAx7B,EAAAy7B,qBAAA,OAAAI,GAIA5yB,EAAA8yB,mBAAA,SAAAl7B,GAEA,IADA,GAAAkC,GAAAi5B,EAAA5+B,KAAAyR,YAAA/F,OACAkzB,GAAA,SAAAA,EAAAC,SAAA,CACA,IACAl5B,EAAAi5B,EAAAt4B,wBAAA7C,GACa,MAAAwY,GACb,UAAAxY,IAGAkC,EAAAi5B,EAAAE,aAGA,GAAAn5B,EACA,KAEAi5B,KAAAjd,WAEA,MAAAhc,IAEAkG,EAAAkyB,eAAA,WACA,MAAA/9B,MAAA2+B,mBAAA,UAEA9yB,EAAAmyB,gBAAA,WACA,GAAAh4B,GAAAhG,KAAAyR,YAAA9P,MAAA,SACA,OAAAqE,GAAAkW,QAAA,SAAAlW,EAAAi0B,QAAA,YAIApuB,EAAAkzB,WAAA,SAAAZ,GACA,GAAAv7B,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAq8B,EAAAr8B,EAAA0M,eAAA1M,EAAA0M,eAAA1M,EAAA4M,aACA0vB,EAAAt8B,EAAA0M,aAAAkF,EAAAlQ,MAAAkQ,EAAA7P,MACAw6B,EAAAt8B,EAAAwO,KAAAlL,OAAA,IAAA+4B,GAAAvzB,OACAyzB,EAAAD,GAAAF,EAAAE,EAAA54B,yBAAwF8E,MAAA,GACxFg0B,EAAAx8B,EAAA6O,YAAA/F,OAAApF,wBACAiQ,EAAA3T,EAAA4T,aACA6oB,EAAAF,EAAA/zB,MAAAg0B,EAAA9zB,MAAAiL,EAAA,EAAA3T,EAAA0U,sBAAA6mB,GACA,OAAAkB,GAAA,EAAAA,EAAA,GAIAxzB,EAAAwyB,qBAAA,SAAA38B,EAAAy8B,GACA,GAAAv7B,GAAA5C,KAAAs/B,EAAA18B,EAAA1D,KAAAqgC,qBAAA79B,EACA,OAAAkB,GAAA1D,KAAAsgC,gBAAA99B,EAAAy8B,IAAAmB,EAAAG,QAAA,QAEA5zB,EAAA6K,wBAAA,SAAAyZ,GACA,GAAAvtB,GAAA5C,KAAA2C,EAAAC,EAAAD,OAAAqD,EAAA,EACA,aAAAmqB,GAAAxtB,EAAA6N,YACA,MAAA2f,GAAAxtB,EAAA+kB,cAAqD/kB,EAAA+kB,cACrD,MAAAyI,GAAAxtB,EAAAilB,YAGA,OAAAuI,GAAAxtB,EAAA8lB,cAEA,MAAA0H,IAAAxtB,EAAA0M,cAAA1M,EAAAwkB,qBACAnhB,EAAA,GAAApD,EAAA1D,KAAAsgC,gBAAArP,GAAA50B,KAAAmkC,IAAAnkC,KAAAqN,IAAA,GAAAjG,EAAAwkB,oBAAA,MAGA,MAAAgJ,GAAAxtB,EAAA0M,cAAA1M,EAAAylB,qBACApiB,EAAA,GAAApD,EAAA1D,KAAAsgC,gBAAArP,GAAA50B,KAAAmkC,IAAAnkC,KAAAqN,IAAA,GAAAjG,EAAAylB,oBAAA,MAEApiB,GAAApD,EAAA1D,KAAAqgC,qBAAApP,GAAAsP,QAAA,cAAAtP,GAAA,OATsDvtB,EAAA6N,qBAFtD9N,EAAA8P,aAAA7P,EAAA+M,eAAA/M,EAAAiN,cAAA,KAHoD,GAiBpDhE,EAAAiwB,kBAAA,WACA,MAAAvgC,MAAA+D,IAAA,EAAAU,KAAAmb,MAAA3P,iBAGAK,EAAAqO,gBAAA,SAAAylB,GACA,GACwBpQ,GAAAC,EADxB5sB,EAAA5C,KAAA2C,EAAAC,EAAAD,OACAi9B,KAAwB16B,EAAA,CAcxB,OAbAtC,GAAA8X,oBAAA9X,EAAApD,KAAAwS,QAAA3U,OAAAsiC,EAAA/8B,IAAAY,QAAA,SAAA3H,GACA,IAAA0zB,EAAA,EAAuBA,EAAA5sB,EAAAmiB,YAAAloB,OAA+B2yB,IACtD,KAAA5sB,EAAAmiB,YAAAyK,GAAArT,QAAArgB,EAAA6F,IAAA,GACA,IAAA8tB,EAAA,EAA2BA,EAAA7sB,EAAAmiB,YAAAyK,GAAA3yB,OAAkC4yB,IAC7D,GAAA7sB,EAAAmiB,YAAAyK,GAAAC,IAAAoQ,GAAA,CACAA,EAAA/jC,EAAA6F,IAAAk+B,EAAAj9B,EAAAmiB,YAAAyK,GAAAC,GACA,OAIAwK,EAAA4F,EAAA/jC,EAAA6F,OAA6Ck+B,EAAA/jC,EAAA6F,IAAAwD,OAE7C06B,EAAAC,QAAA36B,EAAA,EACA06B,GAEA/zB,EAAAi0B,UAAA,SAAAnS,EAAAoS,EAAAH,EAAAI,GACA,GAAAp9B,GAAA5C,KAAAiF,EAAA+6B,EAAAp9B,EAAAmQ,KAAAnQ,EAAAlE,CACA,iBAAA7C,GACA,GAAAa,GAAAb,EAAA6F,KAAAk+B,KAAA/jC,EAAA6F,IAAA,CACA,OAAA7F,GAAA6C,GAAA,IAAA7C,EAAA6C,EAAAuG,EAAApJ,EAAA6C,GAAAivB,GAAAoS,EAAA,EAAArjC,GAAA,IAGAmP,EAAAo0B,UAAA,SAAAD,GACA,GAAAp9B,GAAA5C,IACA,iBAAAnE,GACA,GAAAoJ,GAAA+6B,EAAAp9B,EAAAqrB,aAAApyB,EAAA6F,IAAAkB,EAAAmrB,UAAAlyB,EAAA6F,GACA,OAAAuD,GAAApJ,EAAAlC,SAGAkS,EAAAq0B,eAAA,SAAAP,EAAAC,EAAAI,GACA,GAAAp9B,GAAA5C,KACAgS,EAAApP,EAAAkzB,aAAAlzB,EAAA8X,oBAAA9X,EAAApD,KAAAwS,QAAA3U,OAAAsiC,EAAA/8B,KACA0yB,EAAAtjB,EAAAvH,IAAA,SAAA6T,GAAkD,MAAAA,GAAA5c,IAClD,iBAAA7F,EAAAqJ,GACA,GAAAD,GAAA+6B,EAAAp9B,EAAAqrB,aAAApyB,EAAA6F,IAAAkB,EAAAmrB,UAAAlyB,EAAA6F,IACAy+B,EAAAl7B,EAAA,GAAA0oB,EAAAwS,CAoBA,OAnBAnuB,GAAAxO,QAAA,SAAA8a,GACA,GAAAwT,GAAAlvB,EAAA+5B,WAAA9gC,GAAA+G,EAAAs1B,oBAAA5Z,EAAAwT,QAAAxT,EAAAwT,MACAxT,GAAA5c,KAAA7F,EAAA6F,IAAAk+B,EAAAthB,EAAA5c,MAAAk+B,EAAA/jC,EAAA6F,KACA4zB,EAAApZ,QAAAoC,EAAA5c,IAAA4zB,EAAApZ,QAAArgB,EAAA6F,MAEA,mBAAAowB,GAAA5sB,KAAA4sB,EAAA5sB,GAAAxG,KAAA7C,EAAA6C,IAEAwG,GAAA,EACA4sB,EAAAtuB,QAAA,SAAAmC,EAAA4pB,GACA5pB,EAAAjH,IAAA7C,EAAA6C,IACAwG,EAAAqqB,MAIArqB,IAAA4sB,MAAA5sB,GAAAvL,MAAAkC,EAAAlC,OAAA,IACAg0B,GAAA1oB,EAAA6sB,EAAA5sB,GAAAvL,OAAAwmC,MAIAxS,IAGA9hB,EAAAmxB,cAAA,SAAAoD,EAAAvkC,GACA,GACAwkC,GADAz9B,EAAA5C,KACAw3B,EAAA50B,EAAAiB,GAAAqC,OAAAk6B,EAUA,OATAx9B,GAAA6V,eAAA5c,EAAA6F,IAGA,WAAA0+B,EAAAE,SACAD,EAAAz9B,EAAA+5B,WAAA9gC,GAAA+G,EAAA29B,aAAAH,EAAAx9B,EAAAmrB,UAAAlyB,EAAA6F,IAAA7F,EAAAlC,QAAAiJ,EAAA49B,eAAAJ,EAAA,IAAAx9B,EAAA69B,aAAA5kC,IAEA,SAAAukC,EAAAE,WACAD,GAAA7I,EAAA1lB,QAAAyC,EAAAojB,MAAA/0B,EAAAg1B,YAAAwI,IANAC,GAAA,EAQAA,GAIAx0B,EAAA60B,eAAA,SAAA7kC,GACA,GAAA+G,GAAA5C,KACA2gC,EAAA/9B,EAAAg+B,oBAAAh+B,EAAAD,OAAAmpB,2BAAAlpB,EAAAD,OAAAmpB,0BAAA,UACA,OAAAlpB,GAAAi+B,aAAAhlC,GAAA8kC,EAAA/9B,EAAA+5B,WAAA9gC,GAAA+G,EAAAD,OAAAqnB,eAAA,UAGAne,EAAAkF,SAAA,WACA,GAAAnO,GAAA5C,IACA4C,GAAAwO,KAAAlL,OAAA,IAAAqO,EAAA7T,OAAAsJ,OAAA,KACAzF,KAAA,QAAAgQ,EAAAusB,aAEAj1B,EAAAwM,qBAAA,SAAArG,GACA,GACA+uB,GAAAC,EADAp+B,EAAA5C,KAAA2C,EAAAC,EAAAD,OAEAs+B,EAAAr+B,EAAAq+B,eAAAv9B,KAAAd,GACAs+B,EAAAt+B,EAAAs+B,WAAAx9B,KAAAd,GACAu+B,EAAAv+B,EAAAu+B,WAAAz9B,KAAAd,GACAw+B,EAAAx+B,EAAAw+B,aAAA19B,KAAAd,GACAy+B,EAAAz+B,EAAAy+B,WAAA39B,KAAAd,EACAm+B,GAAAn+B,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAAusB,YAAAz3B,UAAA,IAAAkL,EAAA+sB,WACA9hC,KAAAwS,GACAzN,KAAA,iBAAA1I,GAAyC,MAAAolC,GAAAplC,GAAAwlC,EAAAxlC,KACzCmlC,EAAAD,EAAAx3B,QAAAS,OAAA,KACAzF,KAAA,QAAA08B,GACAt/B,MAAA,aACAA,MAAA,yBAEAq/B,EAAAh3B,OAAA,KACAzF,KAAA,QAAA28B,GAEAF,EAAAh3B,OAAA,KACAzF,KAAA,QAAA48B,GAEAH,EAAAh3B,OAAA,KACAzF,KAAA,iBAAA1I,GAAyC,MAAA+G,GAAA2+B,cAAAhtB,EAAA6I,gBAAAvhB,EAAA6F,MACzCs/B,EAAAh3B,OAAA,KACAzF,KAAA,QAAA68B,GACAz/B,MAAA,kBAAA9F,GAA2C,MAAA8G,GAAA8iB,4BAAA5pB,GAAA,iBAE3CmW,EAAAxO,QAAA,SAAA8a,GACA1b,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAA6I,gBAAAxa,EAAA80B,wBAAApZ,EAAA5c,KAAA2H,UAAA,IAAAkL,EAAAitB,gBAAAp7B,KAAA,SAAAvK,GACAA,EAAAlC,MAAA2kB,EAAAwT,OAAAj2B,EAAAa,OAAA/C,WAMAkS,EAAA+Q,WAAA,SAAAnD,GACA,GAAA7W,GAAA5C,IACA4C,GAAA6+B,SAAA7+B,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAmtB,OAAAr4B,UAAA,IAAAkL,EAAAotB,MACAniC,KAAAoD,EAAAg/B,SAAAl+B,KAAAd,IACAA,EAAA6+B,SAAAl4B,QAAAS,OAAA,QACAzF,KAAA,QAAA3B,EAAAi/B,UAAAn+B,KAAAd,IACAjB,MAAA,SAAAiB,EAAAmL,OACAnL,EAAA6+B,SACA9/B,MAAA,UAAAiB,EAAA0c,eAAA5b,KAAAd,IACAjB,MAAA,2BAAA9F,GAAoD,MAAA+G,GAAA+5B,WAAA9gC,GAAA,kBACpD0I,KAAA,kBACA3B,EAAA6+B,SAAA/3B,OAAA9C,aAAA8R,SAAAe,GACA9X,MAAA,aACAgI,UAEAkC,EAAAkS,WAAA,SAAAxE,EAAAjE,GACA,QACAA,EAAAtV,KAAAyhC,SAAA76B,WAAArL,KAAAumC,SAAAn6B,YAAA3H,KAAAyhC,UACAl9B,KAAA,IAAAgV,GACA5X,MAAA,SAAA3B,KAAA+N,OACApM,MAAA,eAGAkK,EAAAwQ,iBAAA,SAAA/B,EAAA0lB,GACA,GAAAp9B,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAg/B,EAAA/+B,EAAAiB,GAAAyP,IAAAquB,OACAI,EAAAn/B,EAAAo/B,sBAAA1nB,EAAA0lB,GACAiC,EAAAjC,EAAAp9B,EAAAqrB,aAAArrB,EAAAmrB,UACAmU,EAAA,SAAArmC,GAAmC,OAAAmkC,EAAAp9B,EAAAud,MAAAvd,EAAAkd,IAAA5b,KAAAtB,EAAA/G,IACnCsmC,EAAA,SAAAtmC,EAAAqJ,GACA,MAAAvC,GAAAmiB,YAAAloB,OAAA,EAAAmlC,EAAAlmC,EAAAqJ,GAAA,MAAA+8B,EAAA/9B,KAAAtB,EAAA/G,EAAA6F,IAAA7F,EAAAlC,OAKA,OAFAgoC,GAAAh/B,EAAA0M,aAAAsyB,EAAAjjC,EAAAyjC,GAAAx9B,EAAAu9B,GAAAP,EAAAjjC,EAAAwjC,GAAAv9B,EAAAw9B,GACAx/B,EAAAonB,mBAAuC4X,IAAAS,QAAA,SAAAvmC,GAAmC,aAAAA,EAAAlC,SAC1E,SAAAkC,GACA,GACAiO,GADAgoB,EAAAnvB,EAAAonB,iBAAAnnB,EAAA8zB,iBAAA76B,EAAAi2B,QAAAj2B,EAAAi2B,OACApzB,EAAAshC,EAAAp9B,EAAAlE,EAAAkE,EAAAmQ,KAAApO,EAAAs9B,EAAA/9B,KAAAtB,EAAA/G,EAAA6F,IAAA2gC,EAAA,EAAAlC,EAAA,CAeA,OAdAv9B,GAAA2X,WAAA1e,GACA8G,EAAAyiB,aAAAvpB,EAAA6F,IACAoI,EAAAlH,EAAA0/B,gBAAAxQ,EAAApzB,EAAAiG,EAAAhC,EAAAyiB,aAAAvpB,EAAA6F,MAEAkB,EAAA+5B,WAAA9gC,KAA2Ci2B,EAAAlvB,EAAAs1B,oBAAApG,IAC3ChoB,EAAA63B,EAAAY,YAAA3/B,EAAA89B,eAAA7kC,IAAAi2B,KAGAA,EAAA,KACAuQ,EAAA3jC,EAAAozB,EAAA,GAAApzB,GACAyhC,EAAAx7B,EAAAmtB,EAAA,GAAAn4B,QAEAmQ,EAAAnH,EAAA0M,aAAA,KAAA8wB,EAAA,IAAAkC,EAAA,KAAAA,EAAA,IAAAlC,GAEAr2B,IAAA,UAGA+B,EAAAm2B,sBAAA,SAAA1nB,EAAA0lB,GACA,GAAAp9B,GAAA5C,KAAA2C,EAAAC,EAAAD,OACA6/B,EAAAloB,EAAAulB,QAAA,EACAnhC,EAAAkE,EAAAk9B,UAAA,EAAA0C,EAAAloB,IAAA0lB,GACAr7B,EAAA/B,EAAAq9B,YAAAD,GACAyC,EAAA7/B,EAAAs9B,eAAAt9B,EAAA2X,WAAAD,IAAA0lB,GACA9f,EAAA8f,EAAAp9B,EAAAqrB,aAAArrB,EAAAmrB,SACA,iBAAAlyB,EAAAqJ,GACA,GAAAi7B,GAAAjgB,EAAAhc,KAAAtB,EAAA/G,EAAA6F,IAAA,GACAisB,EAAA8U,EAAA5mC,EAAAqJ,IAAAi7B,EACAuC,EAAAhkC,EAAA7C,GAAA8mC,EAAAh+B,EAAA9I,EAMA,OAJA8G,GAAA0M,eACA,EAAAxT,EAAAlC,OAAAgpC,EAAAxC,GAAAtkC,EAAAlC,MAAA,GAAAwmC,EAAAwC,KAA+EA,EAAAxC,KAI/EuC,EAAAC,GAAAxC,EAAAxS,KACA+U,EAAAC,GAAAxC,EAAAxS,KACA+U,EAAAC,GAAAxC,EAAAxS,KACA+U,EAAAC,GAAAxC,EAAAxS,OAMA9hB,EAAAy2B,gBAAA,SAAAzmC,EAAA6C,EAAAiG,EAAAi+B,GASA,QAAAC,GAAAnkC,EAAAoW,GACA,GAAA5P,EACA,KAAAA,EAAA,EAAuBA,EAAA4P,EAAAlY,OAAoBsI,IAC3C,GAAA4P,EAAA5P,GAAAJ,MAAApG,MAAAoW,EAAA5P,GAAA49B,IAAkE;AAElE,SAyBA,QAAAC,GAAAC,GACA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,MAvCA,GACA99B,GAAAqqB,EACA0T,EACAC,EAAAC,EAAAr4B,EAAA/C,EAAAq7B,EAAA3S,EAAA4S,EAEAnB,EAAAC,EALAv/B,EAAA5C,KAAA2C,EAAAC,EAAAD,OACA2gC,GAAA,EACA54B,EAAA,IAEA64B,EAAA3gC,EAAAmY,gBAAA,KAEAjG,IAWA,IAAAwY,EAAAsV,GACA,IAAA19B,EAAA,EAAuBA,EAAA09B,EAAAhmC,OAAqBsI,IAC5C4P,EAAA5P,MACA80B,EAAA4I,EAAA19B,GAAAJ,OACAgQ,EAAA5P,GAAAJ,MAAAjJ,EAAA,GAAA6C,EAEAoW,EAAA5P,GAAAJ,MAAAlC,EAAAic,eAAAjc,EAAAmd,UAAA6iB,EAAA19B,GAAAJ,OAAA89B,EAAA19B,GAAAJ,MAEAk1B,EAAA4I,EAAA19B,GAAA49B,KACAhuB,EAAA5P,GAAA49B,IAAAjnC,IAAAe,OAAA,GAAA8B,EAEAoW,EAAA5P,GAAA49B,IAAAlgC,EAAAic,eAAAjc,EAAAmd,UAAA6iB,EAAA19B,GAAA49B,KAAAF,EAAA19B,GAAA49B,GAuCA,KAjCAZ,EAAAv/B,EAAA0M,aAAA,SAAAxT,GAAqD,MAAA8I,GAAA9I,EAAAlC,QAAqB,SAAAkC,GAAiB,MAAA6C,GAAA7C,EAAA6C,IAC3FyjC,EAAAx/B,EAAA0M,aAAA,SAAAxT,GAAqD,MAAA6C,GAAA7C,EAAA6C,IAAiB,SAAA7C,GAAiB,MAAA8I,GAAA9I,EAAAlC,QAOvFspC,EADArgC,EAAAic,eACA,SAAA2kB,EAAAC,EAAAlU,EAAAkB,GACA,GAGAuS,GAHAX,EAAAmB,EAAA9kC,EAAA6zB,UAAAmR,EAAAD,EAAA/kC,EAAA8kC,EAAA9kC,EACAilC,EAAA,GAAAloC,MAAA4mC,EAAAqB,EAAAnU,GACAqU,EAAA,GAAAnoC,MAAA4mC,EAAAqB,GAAAnU,EAAAkB,GAOA,OAJAuS,GADArgC,EAAA0M,eACA1K,EAAAw+B,EAAA5T,IAAA7wB,EAAAilC,KAAAh/B,EAAAw+B,EAAA5T,EAAAkB,IAAA/xB,EAAAklC,OAEAllC,EAAAilC,GAAAh/B,EAAAw+B,EAAA5T,MAAA7wB,EAAAklC,GAAAj/B,EAAAw+B,EAAA5T,EAAAkB,MAEAsS,EAAAC,IAGA,SAAAQ,EAAAC,EAAAlU,EAAAkB,GACA,GAAAuS,EAMA,OAJAA,GADArgC,EAAA0M,eACA1K,EAAAw+B,EAAA5T,IAAA,GAAA7wB,EAAAwkC,EAAA3T,MAAA5qB,EAAAw+B,EAAA5T,EAAAkB,IAAA,GAAA/xB,EAAAwkC,EAAA3T,EAAAkB,QAEA/xB,EAAAwkC,EAAA3T,IAAA,GAAA5qB,EAAAw+B,EAAA5T,MAAA7wB,EAAAwkC,EAAA3T,EAAAkB,IAAA,GAAA9rB,EAAAw+B,EAAA5T,EAAAkB,MAEAsS,EAAAC,IAKA99B,EAAA,EAAmBA,EAAArJ,EAAAe,OAAcsI,IAAA,CAGjC,GAAA80B,EAAAllB,KAAA+tB,EAAAhnC,EAAAqJ,GAAAxG,EAAAoW,GACApK,GAAA,IAAAw3B,EAAArmC,EAAAqJ,IAAA,IAAAi9B,EAAAtmC,EAAAqJ,QAaA,KATAg+B,EAAAtgC,EAAA2qB,SAAA1xB,EAAAqJ,EAAA,GAAAxG,EAAA6kC,EAAA1nC,EAAAqJ,GAAAxG,EAAA6kC,EAAA3gC,EAAAic,gBACAskB,EAAAvgC,EAAA2qB,SAAA1xB,EAAAqJ,EAAA,GAAAvL,MAAAkC,EAAAqJ,GAAAvL,OAEAmR,EAAApM,EAAA7C,EAAAqJ,GAAAxG,KAAA7C,EAAAqJ,EAAA,GAAAxG,GACAqJ,EAAApD,EAAA9I,EAAAqJ,GAAAvL,OAAAgL,EAAA9I,EAAAqJ,EAAA,GAAAvL,OACAypC,EAAA7nC,KAAAy8B,KAAAz8B,KAAA08B,IAAAntB,EAAA,GAAAvP,KAAA08B,IAAAlwB,EAAA,IACA0oB,EAAA,EAAA2S,EACAC,EAAA,EAAA5S,EAEAlB,EAAAkB,EAA8BlB,GAAA,EAAQA,GAAA8T,EACtC34B,GAAAu4B,EAAApnC,EAAAqJ,EAAA,GAAArJ,EAAAqJ,GAAAqqB,EAAAkB,EAGA6S,GAAAznC,EAAAqJ,GAAAxG,EAGA,MAAAgM,IAIAmB,EAAAgR,WAAA,SAAApD,GACA,GAAA7W,GAAA5C,KAAA6D,EAAAjB,EAAAiB,EACAjB,GAAAihC,SAAAjhC,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAuvB,OAAAz6B,UAAA,IAAAkL,EAAAwvB,MACAvkC,KAAAoD,EAAAg/B,SAAAl+B,KAAAd,IACAA,EAAAihC,SAAAt6B,QAAAS,OAAA,QACAzF,KAAA,QAAA3B,EAAAohC,UAAAtgC,KAAAd,IACAjB,MAAA,OAAAiB,EAAAmL,OACApM,MAAA,qBAAkG,MAAvDiB,GAAAqhC,gBAAApgC,EAAAqC,OAAAlG,MAAA2B,MAAA,WAAuD,IAClGiB,EAAAihC,SACAliC,MAAA,UAAAiB,EAAAqhC,gBACArhC,EAAAihC,SAAAn6B,OAAA9C,aAAA8R,SAAAe,GACA9X,MAAA,aACAgI,UAEAkC,EAAAmS,WAAA,SAAA3E,EAAA/D,GACA,QACAA,EAAAtV,KAAA6jC,SAAAj9B,WAAArL,KAAAumC,SAAAn6B,YAAA3H,KAAA6jC,UACAt/B,KAAA,IAAA8U,GACA1X,MAAA,OAAA3B,KAAA+N,OACApM,MAAA,UAAA3B,KAAAikC,kBAGAp4B,EAAAsQ,iBAAA,SAAAlC,EAAA+lB,GACA,GAAAp9B,GAAA5C,KAAA2C,EAAAC,EAAAD,OAAAohC,EAAAnhC,EAAAiB,GAAAyP,IAAAywB,OACAhC,EAAAn/B,EAAAshC,sBAAAjqB,EAAA+lB,GACAiC,EAAAjC,EAAAp9B,EAAAqrB,aAAArrB,EAAAmrB,UACAmU,EAAA,SAAArmC,GAAmC,OAAAmkC,EAAAp9B,EAAAud,MAAAvd,EAAAkd,IAAA5b,KAAAtB,EAAA/G,IACnCsoC,EAAA,SAAAtoC,EAAAqJ,GACA,MAAAvC,GAAAmiB,YAAAloB,OAAA,EAAAmlC,EAAAlmC,EAAAqJ,GAAA,MAAA+8B,EAAA/9B,KAAAtB,EAAA/G,EAAA6F,IAAAkB,EAAAwhC,iBAAAvoC,EAAA6F,MAEA2iC,EAAA,SAAAxoC,EAAAqJ,GACA,MAAAvC,GAAAmiB,YAAAloB,OAAA,EAAAmlC,EAAAlmC,EAAAqJ,GAAA,MAAA+8B,EAAA/9B,KAAAtB,EAAA/G,EAAA6F,IAAA7F,EAAAlC,OAQA,OALAoqC,GAAAphC,EAAA0M,aAAA00B,EAAA1B,GAAA8B,GAAAruB,GAAAuuB,GAAA1/B,EAAAu9B,GAAA6B,EAAArlC,EAAAwjC,GAAA/B,GAAAx9B,EAAA2nB,WAAA,EAAA6Z,GAAAnuB,GAAAquB,GACA1hC,EAAAonB,mBACAga,IAAA3B,QAAA,SAAAvmC,GAA8C,cAAAA,EAAAlC,SAG9C,SAAAkC,GACA,GACAiO,GADAgoB,EAAAnvB,EAAAonB,iBAAAnnB,EAAA8zB,iBAAA76B,EAAAi2B,QAAAj2B,EAAAi2B,OACAuQ,EAAA,EAAAlC,EAAA,CAWA,OAVAv9B,GAAAuX,WAAAte,IACA+G,EAAA+5B,WAAA9gC,KAAuCi2B,EAAAlvB,EAAAs1B,oBAAApG,IACvChoB,EAAAi6B,EAAAxB,YAAA3/B,EAAA89B,eAAA7kC,IAAAi2B,KAEAA,EAAA,KACAuQ,EAAAz/B,EAAAlE,EAAAozB,EAAA,GAAApzB,GACAyhC,EAAAv9B,EAAAmrB,UAAAlyB,EAAA6F,IAAAowB,EAAA,GAAAn4B,QAEAmQ,EAAAnH,EAAA0M,aAAA,KAAA8wB,EAAA,IAAAkC,EAAA,KAAAA,EAAA,IAAAlC,GAEAr2B,IAAA,UAGA+B,EAAAu4B,iBAAA,WACA,UAEAv4B,EAAAq4B,sBAAA,SAAAjqB,EAAA+lB,GACA,GAAAp9B,GAAA5C,KAAA2C,EAAAC,EAAAD,OACA2hC,EAAArqB,EAAA4lB,QAAA,EACAnhC,EAAAkE,EAAAk9B,UAAA,EAAAwE,EAAArqB,IAAA+lB,GACAr7B,EAAA/B,EAAAq9B,YAAAD,GACAuE,EAAA3hC,EAAAs9B,eAAAt9B,EAAAuX,WAAAF,IAAA+lB,GACA9f,EAAA8f,EAAAp9B,EAAAqrB,aAAArrB,EAAAmrB,SACA,iBAAAlyB,EAAAqJ,GACA,GAAAi7B,GAAAjgB,EAAAhc,KAAAtB,EAAA/G,EAAA6F,IAAA,GACAisB,EAAA4W,EAAA1oC,EAAAqJ,IAAAi7B,EACAuC,EAAAhkC,EAAA7C,GAAA8mC,EAAAh+B,EAAA9I,EAMA,OAJA8G,GAAA0M,eACA,EAAAxT,EAAAlC,OAAAgpC,EAAAxC,GAAAtkC,EAAAlC,MAAA,GAAAwmC,EAAAwC,KAA+EA,EAAAxC,KAI/EuC,EAAA/U,IACA+U,EAAAC,GAAAxC,EAAAxS,KACA+U,EAAAC,GAAAxC,EAAAxS,KACA+U,EAAA/U,MAMA9hB,EAAAiR,aAAA,WACA,GAAAla,GAAA5C,IACA4C,GAAA4hC,WAAA5hC,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAkwB,SAAAp7B,UAAA,IAAAkL,EAAAmwB,QACAllC,KAAAoD,EAAA+hC,kBAAAjhC,KAAAd,IACAA,EAAA4hC,WAAAj7B,QAAAS,OAAA,UACAzF,KAAA,QAAA3B,EAAAgiC,YAAAlhC,KAAAd,IACA2B,KAAA,IAAA3B,EAAAiiC,OAAAnhC,KAAAd,IACAjB,MAAA,OAAAiB,EAAAmL,OACAnL,EAAA4hC,WACA7iC,MAAA,UAAAiB,EAAA2c,wBAAA7b,KAAAd,IACAA,EAAA4hC,WAAA96B,OAAAC,UAEAkC,EAAAoS,aAAA,SAAAlE,EAAAC,EAAA1E,GACA,GAAA8H,GAAApd,KAAAoR,KAAA/H,UAAA,IAAAkL,EAAAitB,eACA,SACAlsB,EAAAtV,KAAAwkC,WAAA59B,WAAArL,KAAAumC,SAAAn6B,YAAA3H,KAAAwkC,YACA7iC,MAAA,UAAA3B,KAAAwf,iBAAA9b,KAAA1D,OACA2B,MAAA,OAAA3B,KAAA+N,OACAxJ,KAAA,KAAAwV,GACAxV,KAAA,KAAAyV,IACA1E,EAAA8H,EAAAxW,WAAArL,KAAAumC,SAAAn6B,YAAAyV,GACA7Y,KAAA,KAAAwV,GACAxV,KAAA,KAAAyV,KAGAnO,EAAA6R,QAAA,SAAA7hB,GACA,MAAAA,GAAA6C,GAAA,IAAA7C,EAAA6C,EAAAsB,KAAAtB,EAAA7C,EAAA6C,GAAA,MAEAmN,EAAA2R,cAAA,WACA,GAAAlD,GAAAynB,EAAAn/B,EAAA5C,IACA4C,GAAAD,OAAAmiB,YAAAloB,OAAA,GACA0d,EAAA1X,EAAAsX,gBAAAtX,EAAA2X,YACAwnB,EAAAn/B,EAAAo/B,sBAAA1nB,GACA1X,EAAA6a,QAAA,SAAA5hB,EAAAqJ,GACA,MAAA68B,GAAAlmC,EAAAqJ,GAAA,QAGAtC,EAAA6a,QAAA,SAAA5hB,GACA,MAAA+G,GAAAmrB,UAAAlyB,EAAA6F,IAAA7F,EAAAlC,SAIAkS,EAAAi5B,WAAA,SAAA5/B,EAAAxD,GACA,GAAAkB,GAAA5C,IACA,QAAA0B,EAAAkB,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAkwB,QAAA7hC,EAAA80B,wBAAAh2B,IAAAkB,EAAAwO,MAAA/H,UAAA,IAAAkL,EAAAmwB,QAAA/kB,EAAAza,GAAA,IAAAA,EAAA,MAEA2G,EAAAuwB,cAAA,SAAAl3B,EAAAxD,EAAAqjC,GACA,GAAAniC,GAAA5C,KACAglC,EAAApiC,EAAAqiC,eAAAvhC,KAAAd,EACAmiC,IAAoBniC,EAAA45B,kBACpB55B,EAAAkiC,WAAA5/B,EAAAxD,GACAoQ,QAAAyC,EAAAwoB,UAAA,GACAx4B,KAAA,IAAAygC,IAEAn5B,EAAA2wB,gBAAA,SAAAt3B,GACA,GAAAtC,GAAA5C,KACAglC,EAAApiC,EAAAiiC,OAAAnhC,KAAAd,EACAA,GAAAkiC,WAAA5/B,GACA7H,OAAA,WAAiC,MAAAuF,GAAAiB,GAAAqC,OAAAlG,MAAA8R,QAAAyC,EAAAwoB,YACjCjrB,QAAAyC,EAAAwoB,UAAA,GACAx4B,KAAA,IAAAygC,IAEAn5B,EAAAg5B,OAAA,SAAAhpC,GACA,GAAA+G,GAAA5C,KAAA2C,EAAAC,EAAAD,MACA,OAAAC,GAAA+5B,WAAA9gC,GAAA,EAAA46B,EAAA9zB,EAAA+mB,SAAA/mB,EAAA+mB,QAAA7tB,GAAA8G,EAAA+mB,SAEA7d,EAAAo5B,eAAA,SAAAppC,GACA,GAAA+G,GAAA5C,KAAA2C,EAAAC,EAAAD,MACA,OAAAA,GAAAinB,2BAAAjnB,EAAAknB,qBAAAlnB,EAAAknB,qBAAA,KAAAjnB,EAAAiiC,OAAAhpC,GAAA+G,EAAAiiC,OAAAhpC,IAEAgQ,EAAA40B,aAAA,SAAA5kC,GACA,GAAA+G,GAAA5C,KAAA2C,EAAAC,EAAAD,MACA,OAAA8zB,GAAA9zB,EAAAmnB,gBAAAnnB,EAAAmnB,eAAAjuB,GAAA8G,EAAA,eAAAA,EAAAmnB,eAAA,EAAAlnB,EAAAiiC,OAAAhpC,IAEAgQ,EAAA20B,eAAA,SAAAJ,EAAA4E,GACA,GAAAnhC,GAAA7D,KAAA6D,GACA+4B,EAAA/4B,EAAA+4B,MAAAwD,GAAA8E,EAAArhC,EAAAqC,OAAAk6B,GACArmB,GAAAmrB,EAAA3gC,KAAA,MAAAyV,GAAAkrB,EAAA3gC,KAAA,KACA,OAAAhJ,MAAAy8B,KAAAz8B,KAAA08B,IAAAle,EAAA6iB,EAAA,MAAArhC,KAAA08B,IAAAje,EAAA4iB,EAAA,OAAAoI,GAEAn5B,EAAA00B,aAAA,SAAAH,EAAAz7B,GACA,MAAApJ,MAAAg2B,IAAA5sB,EAAA3E,KAAA6D,GAAA+4B,MAAAwD,GAAA,QAGAv0B,EAAAiF,QAAA,WACA,GAAAlO,GAAA5C,IACA4C,GAAAwO,KAAAlL,OAAA,IAAAqO,EAAA7T,OAAAsJ,OAAA,KACAzF,KAAA,QAAAgQ,EAAA4wB,YAEAt5B,EAAAuM,oBAAA,SAAApG,GACA,GACAozB,GAAAC,EADAziC,EAAA5C,KAAA2C,EAAAC,EAAAD,OAEA2iC,EAAA1iC,EAAA0iC,cAAA5hC,KAAAd,GACA2iC,EAAA3iC,EAAA2iC,UAAA7hC,KAAAd,GACAy+B,EAAAz+B,EAAAy+B,WAAA39B,KAAAd,EACAwiC,GAAAxiC,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAA4wB,WAAA97B,UAAA,IAAAkL,EAAAixB,UACAhmC,KAAAwS,GACAzN,KAAA,iBAAA1I,GAAyC,MAAAypC,GAAAzpC,GAAAwlC,EAAAxlC,KACzCwpC,EAAAD,EAAA77B,QAAAS,OAAA,KACAzF,KAAA,QAAA+gC,GACA3jC,MAAA,aACAA,MAAA,yBAEA0jC,EAAAr7B,OAAA,KACAzF,KAAA,QAAAghC,GACA5jC,MAAA,kBAAA9F,GAA2C,MAAA8G,GAAA8iB,4BAAA5pB,GAAA,kBAG3CgQ,EAAA8Q,UAAA,SAAAlD,GACA,GAAA7W,GAAA5C,KACAylC,EAAA7iC,EAAA6iC,QAAA/hC,KAAAd,GACA8iC,EAAA9iC,EAAA8iC,SAAAhiC,KAAAd,GACA0c,EAAA1c,EAAA0c,eAAA5b,KAAAd,GACAmL,EAAA,SAAAlS,GAAkC,MAAA+G,GAAAmL,MAAAlS,EAAA6F,IAClCkB,GAAA+iC,QAAA/iC,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAkjB,MAAApuB,UAAA,IAAAkL,EAAAojB,KACAn4B,KAAAimC,GACA7iC,EAAA+iC,QAAAp8B,QAAAS,OAAA,QACAzF,KAAA,QAAAmhC,GACA/jC,MAAA,SAAAoM,GACApM,MAAA,OAAAoM,GACAnL,EAAA+iC,QACAhkC,MAAA,UAAA2d,GACA1c,EAAA+iC,QAAAj8B,OAAA9C,aAAA8R,SAAAe,GACA9X,MAAA,aACAgI,UAEAkC,EAAAiS,UAAA,SAAAxE,EAAAhE,GACA,QACAA,EAAAtV,KAAA2lC,QAAA/+B,WAAArL,KAAAumC,SAAAn6B,YAAA3H,KAAA2lC,SACAphC,KAAA,IAAA+U,GACA3X,MAAA,OAAA3B,KAAA+N,OACApM,MAAA,eAGAkK,EAAA+5B,QAAA,SAAA1mC,EAAA2mC,GACA,GAAAjjC,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAsD,EAAA,gBAAAtD,GAAAsnB,UAAAtnB,EAAAsnB,UAAA4b,EAAA3mC,EAAAsM,eAAA7I,EAAAunB,gBAAA2b,EAAA,CACA,OAAAljC,GAAAwnB,eAAAlkB,EAAAtD,EAAAwnB,cAAAxnB,EAAAwnB,cAAAlkB,GAEA4F,EAAAi6B,QAAA,SAAA5gC,EAAAxD,GACA,GAAAkB,GAAA5C,IACA,QAAA0B,EAAAkB,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAkjB,KAAA70B,EAAA80B,wBAAAh2B,IAAAkB,EAAAwO,MAAA/H,UAAA,IAAAkL,EAAAojB,KAAAhY,EAAAza,GAAA,IAAAA,EAAA,MAEA2G,EAAAwwB,WAAA,SAAAn3B,EAAAxD,EAAAqjC,GACA,GAAAniC,GAAA5C,IACA+kC,IAAoBniC,EAAA65B,eACpB75B,EAAAkjC,QAAA5gC,EAAAxD,GAAAoQ,QAAAyC,EAAAwoB,UAAA,IAEAlxB,EAAA4wB,aAAA,SAAAv3B,GACA,GAAAtC,GAAA5C,IACA4C,GAAAkjC,QAAA5gC,GAAA4M,QAAAyC,EAAAwoB,UAAA,IAEAlxB,EAAAuQ,gBAAA,SAAAhC,EAAA4lB,GACA,GAAAp9B,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAo/B,EAAAn/B,EAAAmjC,qBAAA3rB,EAAA4lB,EACA,iBAAAnkC,EAAAqJ,GAEA,GAAA89B,GAAAjB,EAAAlmC,EAAAqJ,GAGA8gC,EAAArjC,EAAA0M,aAAA,IACA42B,EAAAtjC,EAAA0M,aAAA,IAEAvF,EAAA,KAAAk5B,EAAA,GAAAgD,GAAA,IAAAhD,EAAA,GAAAiD,GAAA,KACAjD,EAAA,GAAAgD,GAAA,IAAAhD,EAAA,GAAAiD,GAAA,KACAjD,EAAA,GAAAgD,GAAA,IAAAhD,EAAA,GAAAiD,GAAA,KACAjD,EAAA,GAAAgD,GAAA,IAAAhD,EAAA,GAAAiD,GAAA,IAGA,OAAAn8B,KAGA+B,EAAAk6B,qBAAA,SAAA3rB,EAAA4lB,GACA,GAAAp9B,GAAA5C,KACAd,EAAA8gC,EAAAp9B,EAAAwY,SAAAxY,EAAAuY,MACA0qB,EAAAzrB,EAAAylB,QAAA,EACAqG,EAAAtjC,EAAAgjC,QAAA1mC,EAAA2mC,GACAM,EAAAvjC,EAAAk9B,UAAAoG,EAAAL,EAAAzrB,IAAA4lB,GACAoG,EAAAxjC,EAAAq9B,YAAAD,GACAqG,EAAAzjC,EAAAs9B,eAAAt9B,EAAAyX,UAAAD,IAAA4lB,GACA9f,EAAA8f,EAAAp9B,EAAAqrB,aAAArrB,EAAAmrB,SACA,iBAAAlyB,EAAAqJ,GACA,GAAAi7B,GAAAjgB,EAAAhc,KAAAtB,EAAA/G,EAAA6F,IAAA,GACAisB,EAAA0Y,EAAAxqC,EAAAqJ,IAAAi7B,EACAuC,EAAAyD,EAAAtqC,GAAA8mC,EAAAyD,EAAAvqC,EAMA,OAJA+G,GAAAD,OAAA0M,eACA,EAAAxT,EAAAlC,OAAAgpC,EAAAxC,GAAAtkC,EAAAlC,MAAA,GAAAwmC,EAAAwC,KAA+EA,EAAAxC,KAI/EuC,EAAA/U,IACA+U,EAAAC,GAAAxC,EAAAxS,KACA+U,EAAAwD,EAAAvD,GAAAxC,EAAAxS,KACA+U,EAAAwD,EAAAvY,MAIA9hB,EAAA+rB,YAAA,SAAAwI,GACA,GAAAxD,GAAA58B,KAAA6D,GAAA+4B,MAAAwD,GAAA/5B,EAAA+5B,EAAA95B,wBACAggC,EAAAlG,EAAAmG,YAAAC,QAAA,GAAAC,EAAArG,EAAAmG,YAAAC,QAAA,GACA9nC,EAAAnD,KAAAiyB,IAAA8Y,EAAA5nC,EAAA+nC,EAAA/nC,GAAAiG,EAAApJ,KAAAiyB,IAAA8Y,EAAA3hC,EAAA8hC,EAAA9hC,GACAsB,EAAAI,EAAAG,MAAAR,EAAAK,EAAAE,OAAAonB,EAAA,EACA+Y,EAAAhoC,EAAAivB,EAAAgZ,EAAAjoC,EAAAuH,EAAA0nB,EAAAiZ,EAAAjiC,EAAAqB,EAAA2nB,EAAAkZ,EAAAliC,EAAAgpB,CACA,OAAA+Y,GAAA9J,EAAA,IAAAA,EAAA,GAAA+J,GAAAE,EAAAjK,EAAA,IAAAA,EAAA,GAAAgK,GAGA/6B,EAAAqF,SAAA,WACA,GAAAtO,GAAA5C,IACA4C,GAAAwO,KAAAlL,OAAA,IAAAqO,EAAA7T,OAAAsJ,OAAA,KACAzF,KAAA,QAAAgQ,EAAAuyB,YACAlkC,EAAAmkC,SAAAnkC,EAAAiB,GAAAwF,eAEAwC,EAAAsM,qBAAA,SAAAnG,GACA,GAAAg1B,GAAAC,EAAArkC,EAAA5C,KACAknC,EAAAtkC,EAAAskC,eAAAxjC,KAAAd,GACAukC,EAAAvkC,EAAAukC,WAAAzjC,KAAAd,GACAy+B,EAAAz+B,EAAAy+B,WAAA39B,KAAAd,EACAokC,GAAApkC,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAAuyB,YAAAz9B,UAAA,IAAAkL,EAAA6yB,WACA5nC,KAAAwS,GACAzN,KAAA,iBAAA1I,GAAyC,MAAAqrC,GAAArrC,GAAAwlC,EAAAxlC,KACzCorC,EAAAD,EAAAz9B,QAAAS,OAAA,KACAzF,KAAA,QAAA2iC,GACAvlC,MAAA,aACAA,MAAA,yBACAslC,EAAAj9B,OAAA,KACAzF,KAAA,QAAA4iC,IAEAt7B,EAAAmR,WAAA,SAAAvD,GACA,GAAA7W,GAAA5C,KAAA2C,EAAAC,EAAAD,OACA0kC,EAAAzkC,EAAAykC,cAAA3jC,KAAAd,GACA0kC,EAAA1kC,EAAA0kC,UAAA5jC,KAAAd,EACAA,GAAAmkC,SAAAnkC,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAgzB,OAAAl+B,UAAA,IAAAkL,EAAApO,MACA3G,KAAA6nC,GACAzkC,EAAAmkC,SAAAx9B,QAAAS,OAAA,QACAzF,KAAA,QAAA+iC,GACA/iC,KAAA,uBAAA1I,GAA+C,MAAA8G,GAAA0M,aAAAxT,EAAAlC,MAAA,2BAC/CgI,MAAA,iBACAA,MAAA,gBAAA9F,GAAyC,MAAA+G,GAAAmL,MAAAlS,KACzC8F,MAAA,kBACAiB,EAAAmkC,SACA5gC,KAAA,SAAAtK,EAAAqJ,EAAAqqB,GAAsC,MAAA3sB,GAAAg0B,gBAAA/6B,EAAA6F,IAAA7F,EAAAlC,MAAAkC,EAAA6F,GAAAwD,EAAAqqB,KACtC3sB,EAAAmkC,SAAAr9B,OACA9C,aAAA8R,SAAAe,GACA9X,MAAA,kBACAgI,UAEAkC,EAAAqS,WAAA,SAAA1E,EAAA3Q,EAAA2+B,EAAAlyB,GACA,QACAA,EAAAtV,KAAA+mC,SAAAngC,aAAA5G,KAAA+mC,UACAxiC,KAAA,IAAAiV,GACAjV,KAAA,IAAAsE,GACAlH,MAAA,OAAA3B,KAAA+N,OACApM,MAAA,eAAA6lC,EAAA,EAAAxnC,KAAA6f,eAAAnc,KAAA1D,SAGA6L,EAAA47B,YAAA,SAAAthC,EAAAuhC,EAAAjoC,GACA,GAGAkoC,GAHAC,EAAA5nC,KAAA6D,GAAAqC,OAAA,QAAA8D,OAAA,OAAA8H,QAAA,SACAwB,EAAAs0B,EAAA59B,OAAA,OAAArI,MAAA,uBAAAA,MAAA,oBAAAA,MAAA,SAAAA,MAAA,UACAkmC,EAAA7nC,KAAA6D,GAAAqC,OAAAzG,GAAAkC,MAAA,OAUA,OARA2R,GAAAjK,UAAA,UACA7J,MAAA2G,IACAoD,QAAAS,OAAA,QACA8H,QAAA41B,IAAA,OACA/lC,MAAA,OAAAkmC,GACA1hC,QACAC,KAAA,WAA6BuhC,EAAA3nC,KAAAsG,0BAC7BshC,EAAAj+B,SACAg+B,GAEA97B,EAAAyQ,kBAAA,SAAArC,EAAAG,EAAAE,EAAAwtB,GACA,GAAAllC,GAAA5C,KACA+nC,EAAAnlC,EAAAshC,sBAAAjqB,GAAA,GACA+tB,EAAAplC,EAAAmjC,qBAAA3rB,GAAA,GACA6tB,EAAArlC,EAAAo/B,sBAAA1nB,GAAA,GACA4tB,EAAAJ,EAAAllC,EAAAulC,YAAAvlC,EAAAwlC,WACA,iBAAAvsC,EAAAqJ,GACA,GAAA68B,GAAAn/B,EAAAuX,WAAAte,GAAAksC,EAAAnlC,EAAAyX,UAAAxe,GAAAmsC,EAAAC,CACA,OAAAC,GAAAhkC,KAAAtB,EAAAm/B,EAAAlmC,EAAAqJ,GAAArJ,EAAAmE,QAGA6L,EAAAs8B,YAAA,SAAAnF,EAAAnnC,EAAAwsC,GACA,GACAC,GAAAhY,EADA1tB,EAAA5C,KACAqG,EAAAgiC,EAAA/hC,uBAeA,OAdA1D,GAAAD,OAAA0M,cACAihB,EAAA1tB,EAAAyX,UAAAxe,GAAA,IACAysC,EAAAtF,EAAA,MAAA1S,GAAAz0B,EAAAlC,MAAA,SAEA2uC,EAAA1lC,EAAA4P,QAAA,QAAAwwB,EAAA,MAAAA,EAAA,SAAAA,EAAA,MAGA,OAAAnnC,EAAAlC,QACA2uC,EAAA1lC,EAAA4D,MACA8hC,EAAA1lC,EAAA4D,MAAAH,EAAAG,MACa8hC,EAAA,IACbA,EAAA,IAGAA,GAEAz8B,EAAAu8B,YAAA,SAAApF,EAAAnnC,EAAAwsC,GACA,GAEAE,GAFA3lC,EAAA5C,KACAqG,EAAAgiC,EAAA/hC,uBA0BA,OAxBA1D,GAAAD,OAAA0M,aACAk5B,GAAAvF,EAAA,MAAAA,EAAA,SAAA38B,EAAAE,QAAA,GAEAgiC,EAAAvF,EAAA,MACAnnC,EAAAlC,MAAA,OAAAkC,EAAAlC,QAAAiJ,EAAAqtB,kBACAsY,GAAAliC,EAAAE,OACA3D,EAAAyX,UAAAxe,IAAA+G,EAAA4lC,WACAD,GAAA,GAEA3lC,EAAAyX,UAAAxe,IAAA+G,EAAA6lC,aACAF,GAAA,IAGAA,GAAA3lC,EAAAyX,UAAAxe,IAAA,MAIA,OAAAA,EAAAlC,OAAAiJ,EAAAD,OAAA0M,eACAk5B,EAAAliC,EAAAE,OACAgiC,EAAAliC,EAAAE,OACagiC,EAAAvoC,KAAAuG,SACbgiC,EAAAvoC,KAAAuG,OAAA,IAGAgiC,GAGA18B,EAAA4uB,cAAA,SAAAnF,EAAAn2B,GACA,GAAAyD,GAAA5C,KAAA2C,EAAAC,EAAAD,MACAC,GAAAiyB,eAAAS,GAAA9xB,QAAA,SAAA9B,GACAkB,EAAA8N,cAAAhP,GAAAvC,IAAAwD,EAAAsiB,WAAAvjB,GACAiB,EAAAsiB,WAAAvjB,GAAAvC,IAEAm2B,IACA3yB,EAAAqiB,UAAA7lB,IAGA0M,EAAA2G,QAAA,SAAArT,EAAA6S,GACA,GAAApP,GAAA5C,KAAAhB,EAAA4D,EAAAD,OAAAsiB,WAAAyjB,GAAA,CAgBA,OAfA12B,MAAApP,EAAApD,KAAAwS,QACAA,KAAApV,OACAoV,EAAAxO,QAAA,SAAAH,GACA,GAAAib,GAAAtf,EAAAqE,EAAA3B,KACA4c,KAAApC,QAAA/c,IAAA,IAAAmf,GAAA,SAAAnf,KACAupC,GAAA,KAGSjvC,OAAA8J,KAAAvE,GAAApC,OACTnD,OAAA8J,KAAAvE,GAAAwE,QAAA,SAAA9B,GACA1C,EAAA0C,KAAAvC,IAAyCupC,GAAA,KAGzCA,EAAA9lC,EAAAD,OAAAqiB,YAAA7lB,EAEAupC,GAEA78B,EAAA2K,WAAA,SAAAxE,GACA,MAAAhS,MAAAwS,QAAA,MAAAR,IAAAhS,KAAAwS,QAAA,QAAAR,IAAAhS,KAAAwS,QAAA,QAAAR,IAEAnG,EAAA0O,WAAA,SAAA1e,GACA,GAAA8G,GAAA3C,KAAA2C,OAAAjB,EAAAinC,EAAA9sC,OAAA6F,EACA,QAAAiB,EAAAsiB,WAAAvjB,KAAA,yDAAAwa,QAAAvZ,EAAAsiB,WAAAvjB,KAAA,GAEAmK,EAAA8wB,WAAA,SAAA9gC,GACA,GAAA6F,GAAAinC,EAAA9sC,OAAA6F,EACA,4BAAAwa,QAAAlc,KAAA2C,OAAAsiB,WAAAvjB,KAAA,GAEAmK,EAAAg1B,aAAA,SAAAhlC,GACA,GAAA6F,GAAAinC,EAAA9sC,OAAA6F,EACA,gCAAAwa,QAAAlc,KAAA2C,OAAAsiB,WAAAvjB,KAAA,GAEAmK,EAAAsO,WAAA,SAAAte,GACA,GAAA6F,GAAAinC,EAAA9sC,OAAA6F,EACA,0CAAAwa,QAAAlc,KAAA2C,OAAAsiB,WAAAvjB,KAAA,GAEAmK,EAAAwO,UAAA,SAAAxe,GACA,GAAA6F,GAAAinC,EAAA9sC,OAAA6F,EACA,eAAA1B,KAAA2C,OAAAsiB,WAAAvjB,IAEAmK,EAAA+T,cAAA,SAAA/jB,GACA,GAAA6F,GAAAinC,EAAA9sC,OAAA6F,EACA,mBAAA1B,KAAA2C,OAAAsiB,WAAAvjB,IAEAmK,EAAA+8B,UAAA,SAAA/sC,GACA,GAAA6F,GAAAinC,EAAA9sC,OAAA6F,EACA,eAAA1B,KAAA2C,OAAAsiB,WAAAvjB,IAEAmK,EAAAg9B,YAAA,SAAAhtC,GACA,GAAA6F,GAAAinC,EAAA9sC,OAAA6F,EACA,iBAAA1B,KAAA2C,OAAAsiB,WAAAvjB,IAEAmK,EAAAi9B,YAAA,SAAAjtC,GACA,GAAA6F,GAAAinC,EAAA9sC,OAAA6F,EACA,iBAAA1B,KAAA2C,OAAAsiB,WAAAvjB,IAEAmK,EAAAk9B,UAAA,SAAAltC,GACA,MAAAmE,MAAA4oC,UAAA/sC,IAAAmE,KAAA8oC,YAAAjtC,IAAAmE,KAAA6oC,YAAAhtC,IAEAgQ,EAAA+1B,SAAA,SAAA/lC,GACA,MAAAmE,MAAAua,WAAA1e,WAEAgQ,EAAAm9B,QAAA,SAAAntC,GACA,MAAAmE,MAAA+oC,UAAAltC,EAAA2D,OAAA3D,OAOAgQ,EAAA45B,QAAA,SAAA5pC,GACA,MAAAmE,MAAAqa,UAAAxe,KAAAi2B,WAEAjmB,EAAA84B,kBAAA,SAAA9oC,GACA,MAAAmE,MAAAua,WAAA1e,IAAAmE,KAAA4f,cAAA/jB,KAAAi2B,WAEAjmB,EAAAw7B,cAAA,SAAAxrC,GACA,MAAAmE,MAAAqa,UAAAxe,IAAAmE,KAAAua,WAAA1e,KAAAi2B,WAEAjmB,EAAA+0B,oBAAA,SAAAzhC,GACA,sIAAA+c,QAAA/c,IAAA,GAGA0M,EAAA4I,SAAA,WACA,GAAA7R,GAAA5C,KAAA2C,EAAAC,EAAAD,OAAAkB,EAAAjB,EAAAiB,EACAjB,GAAAqmC,KAAArmC,EAAAwO,KAAApH,OAAA,KACAzF,KAAA,YAAA3B,EAAA2K,iBACAhJ,KAAA,QAAAgQ,EAAA00B,MACAtmC,EAAAwmB,aACAvmB,EAAAqmC,KAAAj/B,OAAA,KAAAzF,KAAA,QAAAgQ,EAAA20B,QAEAvmC,EAAA2mB,aACA1mB,EAAAqmC,KAAAj/B,OAAA,KAAAzF,KAAA,QAAAgQ,EAAA40B,QAEAxmC,EAAA8mB,iBACA7mB,EAAAqmC,KAAAj/B,OAAA,KACAzF,KAAA,QAAAgQ,EAAA60B,YACAp/B,OAAA,QACAzF,KAAA,QAAAgQ,EAAA60B,YAEAxmC,EAAAymC,MAAAxlC,EAAAwF,cACA1G,EAAA+R,kBAAuC9R,EAAA+R,iBAEvC9I,EAAA8I,cAAA,WACA,GAAA/R,GAAA5C,KAAA6D,EAAAjB,EAAAiB,EACAjB,GAAA0mC,UAAA1mC,EAAAwO,KAAApH,OAAA,KACAzF,KAAA,YAAA3B,EAAA2K,iBACAhJ,KAAA,QAAAgQ,EAAA00B,KAAA,IAAA10B,EAAA+0B,WACA1mC,EAAA0mC,UAAAt/B,OAAA,KAAAzF,KAAA,QAAAgQ,EAAAg1B,YACA3mC,EAAA0mC,UAAAt/B,OAAA,KAAAzF,KAAA,QAAAgQ,EAAAi1B,YACA5mC,EAAA2mC,WAAA1lC,EAAAwF,eAEAwC,EAAA49B,YAAA,SAAAC,GACA,GAAA9mC,GAAA5C,KAAA2C,EAAAC,EAAAD,OAAAkB,EAAAjB,EAAAiB,GACA8lC,EAAA/mC,EAAAgnC,iBAAAjnC,EAAAymB,YAAAxmB,EAAAlE,GACA+F,EAAA7B,EAAAmY,gBAAAnY,EAAAuY,MAAA1W,aAAA,CAEA7B,GAAAinC,UAAAlnC,EAAA0M,cACAyG,GAAA,EACAC,GAAAnT,EAAA4D,MACAwP,GAAA,SAAAna,GAAgC,MAAA+G,GAAAlE,EAAA7C,GAAA4I,GAChC4L,GAAA,SAAAxU,GAAgC,MAAA+G,GAAAlE,EAAA7C,GAAA4I,KAEhCqR,GAAA,SAAAja,GAAgC,MAAA+G,GAAAlE,EAAA7C,GAAA4I,GAChCsR,GAAA,SAAAla,GAAgC,MAAA+G,GAAAlE,EAAA7C,GAAA4I,GAChCuR,GAAA,EACA3F,GAAAzN,EAAA2D,QAGA3D,EAAAymC,MAAAzmC,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAA20B,QAAA7/B,UAAA,IAAAkL,EAAA80B,OACA7pC,KAAAmqC,GACA/mC,EAAAymC,MAAA9/B,QAAAS,OAAA,QAAAzF,KAAA,QAAAgQ,EAAA80B,OACAK,GACA9mC,EAAAymC,MAAA9kC,KAAA3B,EAAAinC,WACAloC,MAAA,qBAA+C,OAAAkC,EAAAqC,OAAAlG,MAAAuE,KAAA5B,EAAA0M,aAAA,cAAA1M,EAAA0M,aAAAzM,EAAA2D,OAAA,SAE/C3D,EAAAymC,MAAA3/B,OAAAC,UAGAkC,EAAAi+B,YAAA,WACA,GAAAlnC,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAonC,EAAAnnC,EAAA6Y,MAAArS,cAAAxG,EAAA+B,EAAAQ,MAAAxC,EAAA6mB,aACA5mB,GAAAonC,MAAApnC,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAA40B,QAAA9/B,UAAA,IAAAkL,EAAAy1B,OACAxqC,KAAAuqC,GACAnnC,EAAAonC,MAAAzgC,QAAAS,OAAA,QACAzF,KAAA,QAAAgQ,EAAAy1B,OACApnC,EAAAonC,MAAAzlC,KAAA,KAAA5B,EAAA0M,aAAAzM,EAAA+B,EAAA,GACAJ,KAAA,KAAA5B,EAAA0M,aAAAzM,EAAA+B,EAAA/B,EAAA4D,OACAjC,KAAA,KAAA5B,EAAA0M,aAAA,EAAAzM,EAAA+B,GACAJ,KAAA,KAAA5B,EAAA0M,aAAAzM,EAAA2D,OAAA3D,EAAA+B,GACA/B,EAAAonC,MAAAtgC,OAAAC,SACA/G,EAAAgT,YAAAhT,EAAAonC,MAAA,SAGAn+B,EAAAo+B,eAAA,SAAApuC,GACA,MAAAA,GAAAyjC,SAAAzjC,EAAAyjC,SAAA,OAEAzzB,EAAAq+B,WAAA,SAAAruC,GACA,gBAAAA,EAAAyjC,SAAA,aAAAzjC,EAAAyjC,SAAA,MAEAzzB,EAAAs+B,WAAA,SAAAtuC,GACA,gBAAAA,EAAAyjC,UAAAt/B,KAAAuG,OAAA,WAAA1K,EAAAyjC,UAAAt/B,KAAAuG,OAAA,KAEAsF,EAAAu+B,WAAA,SAAAvuC,GACA,gBAAAA,EAAAyjC,SAAA,aAAAzjC,EAAAyjC,SAAAt/B,KAAAwG,MAAA,EAAAxG,KAAAwG,OAEAqF,EAAA4Q,WAAA,SAAA/D,GACA,GACA2xB,GAAAC,EAAArqB,EADArd,EAAA5C,KAAAoR,EAAAxO,EAAAwO,KAAAzO,EAAAC,EAAAD,MAIAC,GAAAqmC,KAAAtnC,MAAA,aAAAiB,EAAA4T,aAAA,oBAEApF,EAAAlL,OAAA,QAAAqO,EAAA60B,YAAAznC,MAAA,uBACAgB,EAAAwmB,aACAvmB,EAAA6mC,cAEA7mC,EAAA2mC,WAAAn4B,EAAAlL,OAAA,IAAAqO,EAAAg1B,YAAAlgC,UAAA,IAAAkL,EAAA81B,WACA7qC,KAAAmD,EAAA0mB,cAEAghB,EAAAznC,EAAA2mC,WAAAhgC,QAAAS,OAAA,KACAzF,KAAA,iBAAA1I,GAAyC,MAAA0Y,GAAA81B,WAAAxuC,EAAA,UAAAA,EAAA,YACzCwuC,EAAArgC,OAAA,QACArI,MAAA,aACA0oC,EAAArgC,OAAA,QACAzF,KAAA,cAAA3B,EAAAqnC,gBACA1lC,KAAA,YAAA5B,EAAA0M,aAAA,kBACA9K,KAAA,KAAA3B,EAAAsnC,YACA3lC,KAAA,SACA5C,MAAA,aAIAiB,EAAA2mC,WAAA7/B,OAAA9C,aAAA8R,YACA/W,MAAA,aACAgI,SAGAhH,EAAA2mB,aACA1mB,EAAAknC,cAEAlnC,EAAA4mC,WAAAp4B,EAAAlL,OAAA,IAAAqO,EAAAi1B,YAAAngC,UAAA,IAAAkL,EAAA+1B,WACA9qC,KAAAmD,EAAA4mB,cAEA+gB,EAAA1nC,EAAA4mC,WAAAjgC,QAAAS,OAAA,KACAzF,KAAA,iBAAA1I,GAAyC,MAAA0Y,GAAA+1B,WAAAzuC,EAAA,UAAAA,EAAA,YACzCyuC,EAAAtgC,OAAA,QACArI,MAAA,aACA2oC,EAAAtgC,OAAA,QACAzF,KAAA,cAAA3B,EAAAqnC,gBACA1lC,KAAA,YAAA5B,EAAA0M,aAAA,kBACA9K,KAAA,KAAA3B,EAAAsnC,YACA3lC,KAAA,SACA5C,MAAA,aAEAse,EAAArd,EAAAqd,GAAAvc,KAAAd,GACAA,EAAA4mC,WAAAtjC,OAAA,QACAU,aAAA8R,YACAnU,KAAA,KAAA5B,EAAA0M,aAAA4Q,EAAA,GACA1b,KAAA,KAAA5B,EAAA0M,aAAA4Q,EAAArd,EAAA4D,OACAjC,KAAA,KAAA5B,EAAA0M,aAAA,EAAA4Q,GACA1b,KAAA,KAAA5B,EAAA0M,aAAAzM,EAAA2D,OAAA0Z,GACAte,MAAA,aACAiB,EAAA4mC,WAAAtjC,OAAA,QACAU,aAAA8R,YACAnU,KAAA,IAAA5B,EAAA0M,aAAAzM,EAAAunC,WAAAzmC,KAAAd,KAAAwnC,WAAA1mC,KAAAd,IACA2B,KAAA,IAAA0b,GACA9Z,KAAA,SAAAtK,GAAgC,MAAAA,GAAAsK,OAChCxE,MAAA,aAEAiB,EAAA4mC,WAAA9/B,OAAA9C,aAAA8R,YACA/W,MAAA,aACAgI,UAEAkC,EAAAuS,WAAA,SAAA9I,GACA,GAAA1S,GAAA5C,KAAA2C,EAAAC,EAAAD,OAAAgY,EAAA/X,EAAA+X,GAAAjX,KAAAd,GACA8+B,EAAA9+B,EAAA2mC,WAAArjC,OAAA,QACAqhC,EAAA3kC,EAAA2mC,WAAArjC,OAAA,OACA,SACAoP,EAAAosB,EAAA96B,aAAA86B,GACAn9B,KAAA,KAAA5B,EAAA0M,aAAA,EAAAsL,GACApW,KAAA,KAAA5B,EAAA0M,aAAAzM,EAAA4D,MAAAmU,GACApW,KAAA,KAAA5B,EAAA0M,aAAAsL,EAAA,GACApW,KAAA,KAAA5B,EAAA0M,aAAAsL,EAAA/X,EAAA2D,QACA5E,MAAA,cACA2T,EAAAiyB,EAAA3gC,aAAA2gC,GACAhjC,KAAA,IAAA5B,EAAA0M,aAAAzM,EAAAwnC,WAAA1mC,KAAAd,KAAAunC,WAAAzmC,KAAAd,IACA2B,KAAA,IAAAoW,GACAxU,KAAA,SAAAtK,GAAoC,MAAAA,GAAAsK,OACpCxE,MAAA,eAGAkK,EAAAixB,eAAA,SAAAJ,GACA,GAAA95B,GAAA5C,KAAA2C,EAAAC,EAAAD,OACA4nC,EAAA7N,EAAAr/B,OAAA,SAAAxB,GAA2D,MAAAA,IAAA8jB,EAAA9jB,EAAAlC,SAC3D6wC,EAAA5nC,EAAAwO,KAAA/H,UAAA,QAAAkL,EAAA60B,YACAtpB,EAAAld,EAAAkd,GAAApc,KAAAd,EACAD,GAAAopB,eAEAnpB,EAAA4P,QAAA,YAAA5P,EAAA4T,eACAg0B,EACA7oC,MAAA,wBACAnC,MAAA+qC,EAAA,KACAhmC,KAAA5B,EAAA0M,aAAA,UAAAyQ,GACAvb,KAAA5B,EAAA0M,aAAA,UAAAyQ,GACAld,EAAAgT,YAAA40B,EAAA,WAEA3+B,EAAAywB,eAAA,WACAt8B,KAAAoR,KAAAlL,OAAA,QAAAqO,EAAA60B,YAAAznC,MAAA,wBAEAkK,EAAA0Q,iBAAA,WACA,GAAA3Z,GAAA5C,KAAA2C,EAAAC,EAAAD,MACAC,GAAAwO,KAAAlL,OAAA,QAAAqO,EAAA60B,YACA7kC,KAAA,KAAA5B,EAAA0M,aAAA,OACA9K,KAAA,KAAA5B,EAAA0M,aAAAzM,EAAA4D,OAAA,IACAjC,KAAA,KAAA5B,EAAA0M,cAAA,MACA9K,KAAA,KAAA5B,EAAA0M,cAAA,GAAAzM,EAAA2D,SAEAsF,EAAA+9B,iBAAA,SAAAzqC,EAAA8F,GACA,GACAmrB,GAAAqa,EAAAC,EAAAxlC,EADAtC,EAAA5C,KACA2qC,KACAC,EAAAhoC,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAAlQ,OAAAgF,UAAA,SAAAtJ,MACA,aAAAZ,EAIA,IAHAixB,EAAAxtB,EAAAiQ,aACA43B,EAAAra,EAAA,GAAAt0B,cACA4uC,EAAAta,EAAA,GAAAt0B,cACAoJ,EAAAulC,EAA+BvlC,GAAAwlC,EAAexlC,IAC9CylC,EAAApsC,KAAA,GAAA9C,MAAAyJ,EAAA,wBAGAylC,GAAA1lC,EAAAE,MAAA,IACAwlC,EAAA/tC,OAAAguC,IACAD,IAAAttC,OAAA,SAAAxB,GAAyD,UAAAA,GAAAqgB,QAAA,SAGzD,OAAAyuB,IAEA9+B,EAAAg/B,sBAAA,SAAAzmC,GACA,MAAAA,GAAA,SAAAu9B,GACA,GAAAmJ,IAAA,CAMA,UALAtjC,OAAApD,GAAAZ,QAAA,SAAAunC,IACA,SAAAA,IAAApJ,EAAAhoC,QAAAoxC,EAAApxC,OAAA,SAAAoxC,IAAApJ,EAAA,QAAAoJ,EAAA,SACAD,GAAA,KAGAA,GACS,WAAgB,WAEzBj/B,EAAAm/B,gBAAA,SAAA5mC,EAAA0jC,GACA,GAAAllC,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAsoC,EAAAroC,EAAAioC,sBAAAzmC,GACA8mC,EAAA,SAAAvJ,GAAsC,OAAAsJ,EAAAtJ,IACtCT,EAAA4G,EAAAvzB,EAAAg1B,WAAAh1B,EAAAi1B,WACA3H,EAAAiG,EAAAvzB,EAAA81B,UAAA91B,EAAA+1B,SACA1nC,GAAAwO,KAAAlL,OAAA,IAAAg7B,GAAA73B,UAAA,IAAAw4B,GAAAxkC,OAAA4tC,GACArkC,aAAA8R,SAAA/V,EAAAgW,qBACAhX,MAAA,aAAAgI,SACAm+B,EACAnlC,EAAA0mB,aAAA1mB,EAAA0mB,aAAAhsB,OAAA6tC,GAEAvoC,EAAA4mB,aAAA5mB,EAAA4mB,aAAAlsB,OAAA6tC,IAIAr/B,EAAAuI,YAAA,WACA,GAAAlP,GAAAtC,EAAA5C,KAAA2C,EAAAC,EAAAD,MASA,IARAC,EAAAuoC,QAAAvoC,EAAA6O,YACA9P,MAAA,uBACAqI,OAAA,OACAzF,KAAA,QAAAgQ,EAAA62B,kBACAzpC,MAAA,uBACAA,MAAA,yBACAA,MAAA,kBAEAgB,EAAA8pB,kBAAA,CACA,GAAA7pB,EAAAic,gBAAA8pB,EAAAhmC,EAAA+pB,gBAAA,CAEA,IADA/pB,EAAA+pB,eAAA9pB,EAAAmd,UAAApd,EAAA+pB,gBACAxnB,EAAA,EAA2BA,EAAAtC,EAAApD,KAAAwS,QAAA,GAAA8f,OAAAl1B,QAC3BgG,EAAApD,KAAAwS,QAAA,GAAA8f,OAAA5sB,GAAAxG,EAAAiE,EAAA+pB,iBAAA,EADiExnB,KAGjEvC,EAAA+pB,eAAAxnB,EAEAtC,EAAAuoC,QAAAt5B,KAAAlP,EAAA0pB,iBAAAnoB,KAAAtB,IAAApD,KAAAwS,QAAAvH,IAAA,SAAA5O,GACA,MAAA+G,GAAAixB,QAAAh4B,EAAAi2B,OAAAnvB,EAAA+pB,mBACa9pB,EAAA1D,KAAA0vB,qBAAAhsB,EAAAyoC,WAAAzoC,EAAA4T,cAAA5T,EAAAmL,QACbnL,EAAAuoC,QAAAxpC,MAAA,MAAAgB,EAAAgqB,sBAAAxhB,KACAxJ,MAAA,OAAAgB,EAAAgqB,sBAAArhB,MACA3J,MAAA,qBAGAkK,EAAA2gB,kBAAA,SAAA3wB,EAAAywB,EAAAC,EAAAxe,GACA,GAIA5H,GAAAjB,EAAA+4B,EAAAtkC,EAAAm6B,EAAAwX,EAJA1oC,EAAA5C,KAAA2C,EAAAC,EAAAD,OACA4oC,EAAA5oC,EAAAspB,sBAAAK,EACAkf,EAAA7oC,EAAAupB,qBAAA,SAAA4H,GAAwE,MAAAA,IACxE2X,EAAA9oC,EAAAwpB,sBAAAI,EAEAwJ,EAAAnzB,EAAAizB,YAEA,QAAAlzB,EAAAmiB,YAAAloB,OACAf,EAAAs5B,KAAA,SAAAC,EAAAC,GACA,GAAAkF,GAAAnF,IAAAz7B,MAAA,KAAA6gC,EAAAnF,IAAA17B,MAAA,IACA,OAAAo8B,GAAAwE,EAAAC,IAAAD,QAES,CACT,GAAA3K,GAAAhtB,EAAAkzB,aAAAlzB,EAAApD,KAAAwS,SAAAvH,IAAA,SAAAvF,GACA,MAAAA,GAAAxD,IAEA7F,GAAAs5B,KAAA,SAAAC,EAAAC,GACA,GAAAkF,GAAAnF,IAAAz7B,MAAA,KAAA6gC,EAAAnF,IAAA17B,MAAA,IAKA,OAJA4gC,GAAA,GAAAC,EAAA,IACAD,EAAAnF,EAAAxF,EAAA1T,QAAAkZ,EAAA1zB,IAAA,KACA84B,EAAAnF,EAAAzF,EAAA1T,QAAAmZ,EAAA3zB,IAAA,MAEAq0B,EAAAwE,EAAAC,IAAAD,IAIA,IAAAr1B,EAAA,EAAmBA,EAAArJ,EAAAe,OAAcsI,IACjC,GAAArJ,EAAAqJ,KAAArJ,EAAAqJ,GAAAvL,OAAA,IAAAkC,EAAAqJ,GAAAvL,SAEAwM,IACA83B,EAAAyN,EAAAH,IAAA1vC,EAAAqJ,GAAAxG,GAAA7C,EAAAqJ,GAAAxG,GACAyH,EAAA,iBAAAvD,EAAA2R,MAAA42B,QAAA,MAAAlN,GAAA,IAAAA,EAAA,uBAAAA,EAAA,kBAGAtkC,EAAA+xC,EAAAD,EAAA5vC,EAAAqJ,GAAAvL,MAAAkC,EAAAqJ,GAAAwrB,MAAA70B,EAAAqJ,GAAAxD,GAAA7F,EAAAqJ,GAAAxI,MAAAb,IACA4K,SAAA9M,GAAA,CAEA,UAAAkC,EAAAqJ,GAAA4uB,KAAyC,QACzCA,GAAA4X,EAAAF,EAAA3vC,EAAAqJ,GAAA4uB,KAAAj4B,EAAAqJ,GAAAwrB,MAAA70B,EAAAqJ,GAAAxD,GAAA7F,EAAAqJ,GAAAxI,QACA4uC,EAAA1oC,EAAAqL,WAAArL,EAAAqL,WAAApS,EAAAqJ,GAAAvL,OAAAoU,EAAAlS,EAAAqJ,GAAAxD,IAEAyE,GAAA,cAAAvD,EAAA2R,MAAAo3B,YAAA,IAAA/oC,EAAA80B,wBAAA77B,EAAAqJ,GAAAxD,IAAA,KACAyE,GAAA,kDAAAmlC,EAAA,YAAAxX,EAAA,QACA3tB,GAAA,qBAAAxM,EAAA,QACAwM,GAAA,QAGA,MAAAA,GAAA,YAEA0F,EAAA+/B,gBAAA,SAAArB,EAAAsB,EAAAC,EAAArsC,GACA,GACA4/B,GAAA0M,EAAAC,EAAAC,EAAAC,EADAtpC,EAAA5C,KAAA2C,EAAAC,EAAAD,OAAAkB,EAAAjB,EAAAiB,GAEAsoC,EAAAvpC,EAAA4T,aACAomB,EAAA/4B,EAAA+4B,MAAAn9B,EA8BA,OA5BA0sC,IACAJ,GAAAnpC,EAAA4D,OAAA5D,EAAA+M,cAAA/M,EAAAyT,iBAAA,MAAAumB,EAAA,GACAqP,EAAArpC,EAAA2D,OAAA,EAAAq2B,EAAA,QAEAyC,EAAAz8B,EAAAm8B,YAAA,GACAp8B,EAAA0M,cACA08B,EAAA1M,EAAAzC,EAAA,OACAoP,EAAAD,EAAAF,EACAK,EAAAtpC,EAAAkU,aAAAlU,EAAAwU,yBACA60B,EAAArpC,EAAAlE,EAAA6rC,EAAA,GAAA7rC,GAAA,KAEAqtC,EAAA1M,EAAAz8B,EAAA0U,uBAAA,GAAA1U,EAAAlE,EAAA6rC,EAAA,GAAA7rC,GAAA,GACAstC,EAAAD,EAAAF,EACAK,EAAA7M,EAAAz8B,EAAAkU,aAAAlU,EAAAwU,yBACA60B,EAAArP,EAAA,OAGAoP,EAAAE,IAEAH,GAAAC,EAAAE,EAAA,IAEAD,EAAAH,EAAAlpC,EAAAoU,gBACAi1B,GAAAH,EAAA,KAGAG,EAAA,IACAA,EAAA,IAEgB9gC,IAAA8gC,EAAA3gC,KAAAygC,IAEhBlgC,EAAAgxB,YAAA,SAAAH,EAAAj9B,GACA,GACAosC,GAAAC,EAAAxM,EADA18B,EAAA5C,KAAA2C,EAAAC,EAAAD,OAEAwpC,EAAAvpC,EAAA4T,aACA+zB,EAAA7N,EAAAr/B,OAAA,SAAAxB,GAA2D,MAAAA,IAAA8jB,EAAA9jB,EAAAlC,SAC3DyyC,EAAAzpC,EAAAypB,kBAAAvgB,EAAA+/B,eACA,KAAArB,EAAA3tC,QAAA+F,EAAAopB,eAGAnpB,EAAAuoC,QAAAt5B,KAAAlP,EAAA0pB,iBAAAnoB,KAAAtB,EAAA85B,EAAA95B,EAAA1D,KAAA0vB,qBAAAhsB,EAAAyoC,WAAAc,GAAAvpC,EAAAmL,QAAApM,MAAA,mBAGAkqC,EAAAjpC,EAAAuoC,QAAAkB,SAAA,eACAP,EAAAlpC,EAAAuoC,QAAAkB,SAAA,gBAEA/M,EAAA8M,EAAAloC,KAAAlE,KAAAuqC,EAAAsB,EAAAC,EAAArsC,GAEAmD,EAAAuoC,QACAxpC,MAAA,MAAA29B,EAAAn0B,IAAA,MACAxJ,MAAA,OAAA29B,EAAAh0B,KAAA,QAEAO,EAAA0wB,YAAA,WACAv8B,KAAAmrC,QAAAxpC,MAAA,mBAGAkK,EAAAwI,WAAA,WACA,GAAAzR,GAAA5C,IAIA,OAHA4C,GAAA0pC,qBACA1pC,EAAA2pC,mBAAA,EACA3pC,EAAAsT,OAAAtT,EAAA0Q,IAAAtJ,OAAA,KAAAzF,KAAA,YAAA3B,EAAAsR,aAAA,WACAtR,EAAAD,OAAA8P,gBAOA7P,GAAA4pC,4BANA5pC,EAAAsT,OAAAvU,MAAA,4BACAiB,EAAAqM,gBAAArM,EAAAyP,SAAAzP,EAAApD,KAAAwS,YAOAnG,EAAA2gC,yBAAA,WACA,GAAA5pC,GAAA5C,IACA4C,GAAAkY,aAAAlY,EAAAyP,SAAAzP,EAAApD,KAAAwS,UAAuDuD,eAAA,EAAAmJ,4BAAA,EAAApJ,gBAAA,KAEvDzJ,EAAA6L,oBAAA,SAAAzB,EAAAG,GACA,GAAAxT,GAAA5C,KAAA2C,EAAAC,EAAAD,OAAA8pC,GACAthC,IAAAvI,EAAAkN,YAAAlN,EAAAuU,uBAAAxU,EAAA2jB,eAAA,IAAA1jB,EAAAoU,cAAAf,EAAArT,EAAAyU,0BAAA1U,EAAA2jB,eACAhb,KAAA1I,EAAAoN,aAAApN,EAAA0U,wBAAA3U,EAAA0jB,eAAA,GAAAzjB,EAAAkU,aAAAV,EAAAxT,EAAAwU,yBAAAzU,EAAA0jB,eAAA,GAGAzjB,GAAA6U,SACAtM,IAAAvI,EAAA+M,cAAA,EAAA/M,EAAAiN,cAAA48B,EAAAthC,IAAAvI,EAAAoU,cAAAf,EACA7K,MAAAoM,IACAnM,OAAA,EACAC,KAAA1I,EAAA+M,cAAA/M,EAAAkU,aAAAV,EAAAxT,EAAAiN,cAAA48B,EAAAnhC,KAAA,IAGAO,EAAA2U,gBAAA,SAAAlL,GACA,GAAA1S,GAAA5C,MACAsV,EAAA1S,EAAAsT,OAAAtP,aAAAhE,EAAAsT,QAAA3R,KAAA,YAAA3B,EAAAsR,aAAA,YAEArI,EAAA6gC,iBAAA,SAAAC,GACA3sC,KAAAiQ,WAAA08B,GAEA9gC,EAAA+gC,sBAAA,SAAA3mC,GACAjG,KAAAkQ,gBAAAjK,GAEA4F,EAAAghC,uBAAA,SAAA7mC,GACAhG,KAAAmQ,iBAAAnK,GAEA6F,EAAAwK,eAAA,WACA,GAAAzT,GAAA5C,IACA,OAAA4C,GAAAD,OAAA8P,YAAA7P,EAAA+M,eAAA/M,EAAAiN,cAAAjN,EAAAsN,iBAAAtN,EAAAqN,WAAA,GAAArN,EAAAkU,aAAA,GAEAjL,EAAAsK,gBAAA,WACA,GAAAvT,GAAA5C,KAAAgG,EAAA,CAQA,OAPApD,GAAAD,OAAA8P,cAEAzM,EADApD,EAAA+M,cACA/M,EAAAoU,cAEAzb,KAAA+D,IAAA,GAAAsD,EAAAuN,mBAAAvN,EAAAqN,WAAA,IAGAjK,GAEA6F,EAAAihC,iBAAA,SAAA9R,GACA,MAAAA,GAAAlpB,QAAAyC,EAAAw4B,kBAAA,QAEAlhC,EAAAmhC,0BAAA,SAAAhS,GACA,MAAAA,GAAAlpB,QAAAyC,EAAAw4B,kBAAA,SAEAlhC,EAAAohC,kBAAA,SAAA3X,EAAA4X,GACA,GAAAtqC,GAAA5C,IACAs1B,GAAA1yB,EAAAiyB,eAAAS,GACA1yB,EAAAsT,OAAA7M,UAAA,IAAAkL,EAAAymB,YACA39B,OAAA,SAAAqE,GAAmC,MAAA4zB,GAAApZ,QAAAxa,IAAA,IACnCoQ,QAAAyC,EAAA44B,kBAAAD,GACAtmC,aAAA8R,SAAA,KACA/W,MAAA,qBACA,GAAA8d,GAAAytB,EAAAtqC,EAAAkqC,iBAAAlqC,EAAAoqC,yBACA,OAAAvtB,GAAAvb,KAAAtB,IAAAiB,GAAAqC,OAAAlG,UAGA6L,EAAAuhC,aAAA,WACA,GAAAxqC,GAAA5C,KAAA6D,EAAAjB,EAAAiB,EACAjB,GAAAsT,OAAA7M,UAAA,IAAAkL,EAAAymB,YACAlpB,QAAAyC,EAAA44B,mBAAA,GACAvmC,aAAA8R,SAAA,KACA/W,MAAA,qBAA2C,MAAAiB,GAAAkqC,iBAAAjpC,EAAAqC,OAAAlG,UAE3C6L,EAAAwhC,WAAA,SAAA/X,GACA,GAAA1yB,GAAA5C,KAAA2C,EAAAC,EAAAD,MACAA,GAAA8P,cACA9P,EAAA8P,aAAA,EACA7P,EAAAsT,OAAAvU,MAAA,wBACAiB,EAAA2pC,mBACA3pC,EAAA4pC,4BAGA5pC,EAAA4yB,sBAAAF,GACA1yB,EAAAsT,OAAA7M,UAAAzG,EAAA0qC,gBAAAhY,IACA3zB,MAAA,wBACAiF,aACAjF,MAAA,qBAA2C,MAAAiB,GAAAkqC,iBAAAlqC,EAAAiB,GAAAqC,OAAAlG,UAE3C6L,EAAA0hC,WAAA,SAAAjY,GACA,GAAA1yB,GAAA5C,KAAA2C,EAAAC,EAAAD,MACAA,GAAA8P,aAAA+6B,EAAAlY,KACA3yB,EAAA8P,aAAA,EACA7P,EAAAsT,OAAAvU,MAAA,wBAEAiB,EAAA2P,mBAAA+iB,GACA1yB,EAAAsT,OAAA7M,UAAAzG,EAAA0qC,gBAAAhY,IACA3zB,MAAA,aACAA,MAAA,wBAEAkK,EAAA4hC,4BAAA,WACAztC,KAAAssC,sBAEAzgC,EAAAiP,aAAA,SAAAwa,EAAAr2B,EAAA2Z,GAiBA,QAAA80B,GAAArF,EAAA3mC,GAIA,MAHAkB,GAAA0pC,kBAAA5qC,KACAkB,EAAA0pC,kBAAA5qC,GAAAkB,EAAA6kC,YAAAY,EAAAsF,YAAAp5B,EAAAymB,WAAAqN,IAEAzlC,EAAA0pC,kBAAA5qC,GAGA,QAAAksC,GAAAvF,EAAA3mC,EAAAhF,GAUA,QAAAmxC,GAAAnsC,EAAAosC,GACAA,IACA52B,GAAA62B,EAAAC,EAAAC,GAAA,EACA/2B,EAAAg3B,IACAh3B,GAAA62B,EAAAE,GAAA,EACAD,EAAA,EACArB,MAGAwB,EAAAzsC,GAAAirC,EACAyB,EAAAzB,GAAA/pC,EAAAiN,cAAA,GAAAqH,EACAm3B,EAAA3sC,GAAAssC,EACAA,GAAAC,EArBA,GAMA/2B,GAAAo3B,EANAvJ,EAAA,IAAAroC,EAAA6xC,EAAA7xC,IAAA44B,EAAA14B,OAAA,EACAyJ,EAAAqnC,EAAArF,EAAA3mC,GACA8sC,EAAAnoC,EAAAG,MAAAioC,IAAAF,GAAA3rC,EAAA+M,eAAA/M,EAAAiN,cAAAsiB,EAAA,GAAAxvB,EAAAikB,eACA8nB,EAAAroC,EAAAE,OAAAooC,EACAV,EAAArrC,EAAA+M,eAAA/M,EAAAiN,cAAA6+B,EAAAF,EACAT,EAAAnrC,EAAA+M,eAAA/M,EAAAiN,cAAAjN,EAAAuT,kBAAAvT,EAAAyT,gBA0BA,OAPA0uB,KACAiJ,EAAA,EACArB,EAAA,EACA5lC,EAAA,EACA6nC,EAAA,GAGAjsC,EAAA8P,cAAA7P,EAAAoyB,eAAAtzB,QACAmtC,EAAAntC,GAAAotC,EAAAptC,GAAAysC,EAAAzsC,GAAA2sC,EAAA3sC,GAAA,IAIAmtC,EAAAntC,GAAA8sC,EACAM,EAAAptC,GAAAgtC,IAEA3nC,GAAAynC,GAAAznC,KAAqDA,EAAAynC,KACrDI,GAAAF,GAAAE,KAAwDA,EAAAF,GACxDJ,EAAA1rC,EAAA+M,eAAA/M,EAAAiN,cAAA++B,EAAA7nC,OAEApE,EAAAgkB,gBACAltB,OAAA8J,KAAAsrC,GAAArrC,QAAA,SAAA9B,GAA2DmtC,EAAAntC,GAAAqF,IAC3DtN,OAAA8J,KAAAurC,GAAAtrC,QAAA,SAAA9B,GAA4DotC,EAAAptC,GAAAktC,IAC5D13B,GAAA62B,EAAAO,EAAAhZ,EAAA14B,QAAA,EACAsa,EAAAg3B,GACAF,EAAA,EACArB,EAAA,EACArX,EAAA9xB,QAAA,SAAA9B,GAAqDmsC,EAAAnsC,MAGrDmsC,EAAAnsC,GAAA,IAGAmsC,EAAAnsC,KAhFA,GACAqtC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAEAC,EACAl6B,EAAAoJ,EACA6oB,EAAAkI,EAAAC,EAAAC,EALA/sC,EAAA5C,KAAA2C,EAAAC,EAAAD,OAEAgsC,EAAA,EAAAxc,EAAA,GAAAprB,EAAA,EAAA6nC,EAAA,EAAAV,EAAA,GAAAO,EAAA9rC,EAAAkkB,uBAAA,EACAmnB,EAAA,EAAAK,KAA4CQ,KAAaC,KAAcV,GAAA,GAAAD,KAA2BxB,EAAA,CAKlGrX,KAAAj4B,OAAA,SAAAqE,GACA,OAAA4rB,EAAA3qB,EAAAiiB,WAAAljB,KAAA,OAAAiB,EAAAiiB,WAAAljB,KAGAzC,QACAqW,EAAAsF,EAAA3b,EAAA,qBACAyf,EAAA9D,EAAA3b,EAAA,iCAsEA2D,EAAAiN,gBACA88B,EAAAhqC,EAAA4jB,kBAAA5jB,EAAA4jB,kBAAA+O,EAAA14B,OACAgG,EAAA8pC,iBAAAC,IAGA/pC,EAAA+M,eACAo/B,EAAA,SAAArtC,GAAwC,MAAAqF,GAAAonC,EAAAzsC,IACxCwtC,EAAA,SAAAxtC,GAAwC,MAAA0sC,GAAAD,EAAAzsC,IAAA2sC,EAAA3sC,KAC/BkB,EAAAiN,eACTk/B,EAAA,SAAArtC,GAAwC,MAAAqF,GAAAonC,EAAAzsC,GAAA,IACxCwtC,EAAA,SAAAxtC,GAAwC,MAAA0sC,GAAAD,EAAAzsC,IAAA2sC,EAAA3sC,MAExCqtC,EAAA,SAAArtC,GAAwC,MAAA0sC,GAAAD,EAAAzsC,IAAA2sC,EAAA3sC,IACxCwtC,EAAA,SAAAxtC,GAAwC,MAAAktC,GAAAT,EAAAzsC,KAExCstC,EAAA,SAAAttC,EAAAwD,GAA2C,MAAA6pC,GAAArtC,EAAAwD,GAAA,EAAAvC,EAAAkkB,wBAC3CsoB,EAAA,SAAAztC,EAAAwD,GAA2C,MAAAgqC,GAAAxtC,EAAAwD,GAAA,GAC3C+pC,EAAA,SAAAvtC,EAAAwD,GAA2C,MAAA6pC,GAAArtC,EAAAwD,IAC3CkqC,EAAA,SAAA1tC,EAAAwD,GAA2C,MAAAgqC,GAAAxtC,EAAAwD,GAAA,GAC3CmqC,EAAA,SAAA3tC,EAAAwD,GAA4C,MAAA6pC,GAAArtC,EAAAwD,GAAA,GAC5CoqC,EAAA,SAAA5tC,EAAAwD,GAA4C,MAAA6pC,GAAArtC,EAAAwD,GAAA,EAAAvC,EAAAkkB,wBAC5C0oB,EAAA,SAAA7tC,EAAAwD,GAA2C,MAAAgqC,GAAAxtC,EAAAwD,GAAA,GAG3CsqC,EAAA5sC,EAAAsT,OAAA7M,UAAA,IAAAkL,EAAAymB,YACAx7B,KAAA81B,GACA/rB,QAAAS,OAAA,KACAzF,KAAA,iBAAA7C,GAA0C,MAAAkB,GAAA2+B,cAAAhtB,EAAAymB,WAAAt5B,KAC1CC,MAAA,sBAAAD,GAAgD,MAAAkB,GAAAoyB,eAAAtzB,GAAA,qBAChDC,MAAA,oBACA4R,GAAA,iBAAA7R,GACAiB,EAAA6jB,oBACA7jB,EAAA6jB,oBAAAtiB,KAAAtB,EAAAlB,GAEAkB,EAAAiB,GAAA+5B,MAAAgS,QACAhtC,EAAAgB,IAAAisC,OACAjtC,EAAAgB,IAAAksC,KAAApuC,KAEAkB,EAAAgB,IAAAmsC,OAAAruC,GACAkB,EAAA6V,eAAA/W,GAAAkB,EAAAgB,IAAAspC,MAAAxrC,GAAAkB,EAAAgB,IAAAosC,YAIAz8B,GAAA,qBAAA7R,GACAiB,EAAA8jB,wBACA9jB,EAAA8jB,wBAAAviB,KAAAtB,EAAAlB,IAGAkB,EAAAiB,GAAAqC,OAAAlG,MAAA8R,QAAAyC,EAAA44B,mBAAA,IACAvqC,EAAAkL,YAAAlL,EAAA6V,eAAA/W,IACAkB,EAAAgB,IAAAspC,MAAAxrC,MAIA6R,GAAA,oBAAA7R,GACAiB,EAAA+jB,uBACA/jB,EAAA+jB,uBAAAxiB,KAAAtB,EAAAlB,IAGAkB,EAAAiB,GAAAqC,OAAAlG,MAAA8R,QAAAyC,EAAA44B,mBAAA,GACAvqC,EAAAgB,IAAAosC,YAGAR,EAAAxlC,OAAA,QACA7D,KAAA,SAAAzE,GAAiC,MAAA4rB,GAAA3qB,EAAAiiB,WAAAljB,IAAAiB,EAAAiiB,WAAAljB,OACjC0E,KAAA,SAAA1E,EAAAwD,GAAoC0oC,EAAA5tC,KAAA0B,EAAAwD,KACpCvD,MAAA,yBACA4C,KAAA,IAAA3B,EAAA+M,eAAA/M,EAAAiN,cAAAm/B,GAAA,KACAzqC,KAAA,IAAA3B,EAAA+M,eAAA/M,EAAAiN,eAAA,IAAAs/B,GACAK,EAAAxlC,OAAA,QACAzF,KAAA,QAAAgQ,EAAA07B,iBACAtuC,MAAA,kBACA4C,KAAA,IAAA3B,EAAA+M,eAAA/M,EAAAiN,cAAAo/B,GAAA,KACA1qC,KAAA,IAAA3B,EAAA+M,eAAA/M,EAAAiN,eAAA,IAAAu/B,GACAI,EAAAxlC,OAAA,QACAzF,KAAA,QAAAgQ,EAAA27B,gBACAvuC,MAAA,SAAAiB,EAAAmL,OACApM,MAAA,yBACA4C,KAAA,KAAA3B,EAAA+M,eAAA/M,EAAAiN,cAAAw/B,GAAA,KACA9qC,KAAA,KAAA3B,EAAA+M,eAAA/M,EAAAiN,eAAA,IAAA0/B,GACAhrC,KAAA,KAAA3B,EAAA+M,eAAA/M,EAAAiN,cAAAy/B,GAAA,KACA/qC,KAAA,KAAA3B,EAAA+M,eAAA/M,EAAAiN,eAAA,IAAA0/B,GACAhrC,KAAA,eAAA5B,EAAAmkB,yBAGA6oB,EAAA/sC,EAAAsT,OAAAhQ,OAAA,IAAAqO,EAAA47B,iBAAA,SACAvtC,EAAAiN,eAAA9I,EAAA,OAAA4oC,EAAA5vC,SACA4vC,EAAA/sC,EAAAsT,OAAA1M,OAAA,QAAA+K,EAAAymB,YACAz2B,KAAA,QAAAgQ,EAAA47B,kBACAnmC,OAAA,SAGAu9B,EAAA3kC,EAAAsT,OAAA7M,UAAA,QACA7J,KAAA81B,GACAnvB,KAAA,SAAAzE,GAAiC,MAAA4rB,GAAA3qB,EAAAiiB,WAAAljB,IAAAiB,EAAAiiB,WAAAljB,OACjC0E,KAAA,SAAA1E,EAAAwD,GAAoC0oC,EAAA5tC,KAAA0B,EAAAwD,MACpCoQ,EAAAiyB,EAAA3gC,aAAA2gC,GACAhjC,KAAA,IAAAyqC,GACAzqC,KAAA,IAAA4qC,GAEAM,EAAA7sC,EAAAsT,OAAA7M,UAAA,QAAAkL,EAAA07B,iBACAzwC,KAAA81B,IACAhgB,EAAAm6B,EAAA7oC,aAAA6oC,GACAlrC,KAAA,iBAAA7C,GAA0C,MAAAmtC,GAAAntC,KAC1C6C,KAAA,kBAAA7C,GAA2C,MAAAotC,GAAAptC,KAC3C6C,KAAA,IAAA0qC,GACA1qC,KAAA,IAAA6qC,GAEAM,EAAA9sC,EAAAsT,OAAA7M,UAAA,QAAAkL,EAAA27B,gBACA1wC,KAAA81B,IACAhgB,EAAAo6B,EAAA9oC,aAAA8oC,GACA/tC,MAAA,SAAAiB,EAAAmL,OACAxJ,KAAA,KAAA8qC,GACA9qC,KAAA,KAAAgrC,GACAhrC,KAAA,KAAA+qC,GACA/qC,KAAA,KAAAgrC,GAEAI,IACAr6B,EAAAq6B,EAAA/oC,aAAA+oC,GACAprC,KAAA,SAAA3B,EAAAuT,kBAAA,IACA5R,KAAA,QAAAwC,GAAA4lC,EAAA,OAIA/pC,EAAAsT,OAAA7M,UAAA,IAAAkL,EAAAymB,YACAlpB,QAAAyC,EAAAw4B,iBAAA,SAAArrC,GAA4D,OAAAkB,EAAA6V,eAAA/W,KAG5DkB,EAAAgqC,sBAAA7lC,GACAnE,EAAAiqC,uBAAA+B,GACAhsC,EAAA8pC,iBAAAC,GAEA/pC,EAAA8P,cACA9P,EAAA+P,eACA/P,EAAAqR,gBAEArR,EAAA+b,aAAAD,EAAA9F,GACAhW,EAAA2pC,mBAAA,GAGA1gC,EAAAyI,UAAA,WACA,GAAA1R,GAAA5C,IACA4C,GAAAq7B,MAAAr7B,EAAA0Q,IAAAtJ,OAAA,QACA7D,KAAAvD,EAAAD,OAAAmqB,YACAvoB,KAAA,QAAA3B,EAAA2R,MAAA0pB,QAEApyB,EAAAoR,YAAA,WACA,GAAAra,GAAA5C,IACA4C,GAAAq7B,MACA15B,KAAA,IAAA3B,EAAAwtC,UAAA1sC,KAAAd,IACA2B,KAAA,IAAA3B,EAAAytC,UAAA3sC,KAAAd,KAEAiJ,EAAAukC,UAAA,WACA,GAAA1xC,GAAAkE,EAAA5C,KAAA2C,EAAAC,EAAAD,OAAA28B,EAAA38B,EAAAqqB,gBAAA,MAQA,OANAtuB,GADA4gC,EAAApjB,QAAA,YACAtZ,EAAAkU,aAAAlU,EAAA6kC,YAAA7kC,EAAAq7B,MAAAvyB,OAAAiiC,YAAA/qC,EAAA2R,MAAA0pB,MAAAr7B,EAAAq7B,MAAAvyB,QAAAlF,MAAA7D,EAAAoqB,cAAA3hB,MACSk0B,EAAApjB,QAAA,cACTtZ,EAAAkU,aAAAlU,EAAA6kC,YAAA7kC,EAAAq7B,MAAAvyB,OAAAiiC,YAAA/qC,EAAA2R,MAAA0pB,MAAAr7B,EAAAq7B,MAAAvyB,QAAAlF,OAAA,EAEA7D,EAAAoqB,cAAAzhB,MAIAO,EAAAwkC,UAAA,WACA,GAAAztC,GAAA5C,IACA,OAAA4C,GAAAD,OAAAoqB,cAAA5hB,IAAAvI,EAAA6kC,YAAA7kC,EAAAq7B,MAAAvyB,OAAAiiC,YAAA/qC,EAAA2R,MAAA0pB,MAAAr7B,EAAAq7B,MAAAvyB,QAAAnF,QAEAsF,EAAAqyB,gBAAA,WACA,GAAAt7B,GAAA5C,IACA,OAAA4C,GAAAytC,YAAAztC,EAAAD,OAAAoqB,cAAA1hB,QAOAlJ,EAAAF,EAAAgC,GAEAA,EAAA1B,UAAAU,KAAA,WAEA,GAAAL,GAAA5C,KAAAkC,MAAAS,EAAAC,EAAAD,OAAAyO,EAAAxO,EAAAwO,IACAxO,GAAAoB,KAAAtF,EAAA0S,EAAApH,OAAA,KACAzF,KAAA,QAAAgQ,EAAArV,KAAA,IAAAqV,EAAAlQ,OACAE,KAAA,YAAA3B,EAAAyK,kBACA9I,KAAA,YAAA3B,EAAAsR,aAAA,MACAvS,MAAA,aAAAgB,EAAA6N,YAAA,oBACA5N,EAAAoB,KAAAtF,EAAAsL,OAAA,QACAzF,KAAA,QAAAgQ,EAAA+7B,YACA/rC,KAAA,YAAA5B,EAAA0M,aAAA,kBACA1N,MAAA,cAAA3B,KAAAuwC,wBAAA7sC,KAAA1D,OACA4C,EAAAoB,KAAAW,EAAAyM,EAAApH,OAAA,KACAzF,KAAA,QAAAgQ,EAAArV,KAAA,IAAAqV,EAAA7P,OACAH,KAAA,YAAA5B,EAAA4M,aAAA,GAAA3M,EAAA0K,kBACA/I,KAAA,YAAA3B,EAAAsR,aAAA,MACAvS,MAAA,aAAAgB,EAAAilB,YAAA,oBACAhlB,EAAAoB,KAAAW,EAAAqF,OAAA,QACAzF,KAAA,QAAAgQ,EAAAi8B,YACAjsC,KAAA,YAAA5B,EAAA0M,aAAA,kBACA1N,MAAA,cAAA3B,KAAAywC,wBAAA/sC,KAAA1D,OAEA4C,EAAAoB,KAAAqM,GAAAe,EAAApH,OAAA,KACAzF,KAAA,QAAAgQ,EAAArV,KAAA,IAAAqV,EAAA8L,QAEA9b,KAAA,YAAA3B,EAAAsR,aAAA,OACAvS,MAAA,aAAAgB,EAAA8lB,aAAA,oBACA7lB,EAAAoB,KAAAqM,GAAArG,OAAA,QACAzF,KAAA,QAAAgQ,EAAAm8B,aACAnsC,KAAA,YAAA5B,EAAA0M,aAAA,kBACA1N,MAAA,cAAA3B,KAAA2wC,yBAAAjtC,KAAA1D,QAEAiE,EAAA1B,UAAA4sB,SAAA,SAAAlqB,EAAA+C,EAAAnC,EAAAuD,EAAA6B,EAAAtE,EAAAiqC,GACA,GAAAhuC,GAAA5C,KAAAkC,MAAAS,EAAAC,EAAAD,OACAkuC,GACAprC,WAAA7C,EAAAmY,gBACA9P,gBACAV,cAAA5H,EAAA0kB,sBACA7c,UAAA7H,EAAA2kB,kBACA3c,eAAAimC,EAAA,EAAAjuC,EAAAwkB,mBACAxgB,qBAEAzH,EAAAiF,EAAAvB,EAAAiB,GAAAgtC,GAAA5rC,SAAA+C,SAeA,OAbApF,GAAAic,gBAAAzV,GAAA,kBAAAA,KACAA,IAAAqB,IAAA,SAAA9E,GAAsD,MAAA/C,GAAAmd,UAAApa,MAItDzG,EAAA2G,cAAAuD,cACAxG,EAAAmY,kBACA7b,EAAAkJ,aAAAzF,EAAAokB,sBACAymB,EAAA7qC,EAAAoZ,uBACApZ,EAAAoZ,qBAAA,IAIA7c,GAEA+E,EAAA1B,UAAA2Y,sBAAA,SAAAlJ,EAAA9S,GACA,GAAAkK,GAAAxG,EAAA5C,KAAAkC,MAAAS,EAAAC,EAAAD,MAUA,QATAA,EAAAukB,iBAAAvkB,EAAAskB,qBACA7d,EAAApJ,KAAA0b,mBAAA9Y,EAAAqyB,qBAAAjjB,GAAArP,EAAAskB,kBAAArkB,EAAAic,iBAEA3f,EACAA,EAAAkK,eAEAxG,EAAAuY,MAAA/R,cACAxG,EAAAwY,SAAAhS,eAEAA,GAEAnF,EAAA1B,UAAA6sB,SAAA,SAAAnqB,EAAA+C,EAAAnC,EAAAuD,EAAA6B,EAAAtE,EAAAiqC,GACA,GAAAhuC,GAAA5C,KAAAkC,MAAAS,EAAAC,EAAAD,OACAkuC,GACA5lC,gBACAtE,oBACAgE,eAAAimC,EAAA,EAAAjuC,EAAAylB,oBAEAlpB,EAAAiF,EAAAvB,EAAAiB,GAAAgtC,GAAA5rC,SAAA+C,UAAAnC,aAMA,OALAjD,GAAAuc,gBACAjgB,EAAAiG,MAAAvC,EAAAiB,GAAAwK,KAAA1L,EAAA0lB,wBAAA1lB,EAAA2lB,2BAEAppB,EAAAkK,cAEAlK,GAEA+E,EAAA1B,UAAAyrB,MAAA,SAAAtsB,GACA,GAAAiB,GAAA3C,KAAAkC,MAAAS,MACA,OAAAjB,KAAAiB,GAAAoiB,UAAApiB,EAAAoiB,UAAArjB,GAAA,KAEAuC,EAAA1B,UAAAqsB,mBAAA,WACA,GAAAhsB,GAAA5C,KAAAkC,MAAAS,EAAAC,EAAAD,OACAvG,EAAAwG,EAAAic,eAAAjc,EAAA6L,sBAAA7L,EAAAmY,gBAAAnY,EAAAq4B,aAAA,SAAAt1B,GAAyH,MAAAA,GAAA,EAAAA,EAAAmrC,QAAA,GAAAnrC,EAUzH,OATAhD,GAAAqkB,qBACAyP,EAAA9zB,EAAAqkB,oBACA5qB,EAAAuG,EAAAqkB,mBACapkB,EAAAic,iBACbziB,EAAA,SAAAinB,GACA,MAAAA,GAAAzgB,EAAA2L,eAAA5L,EAAAqkB,oBAAA3D,GAAA,MAIAoT,EAAAr6B,GAAA,SAAAuJ,GAAkD,MAAAvJ,GAAA8H,KAAAtB,EAAA+C,IAA6BvJ,GAE/E6H,EAAA1B,UAAAwuC,cAAA,SAAA3nC,EAAAlK,GACA,MAAAkK,KAAAlK,IAAAkK,aAAA3C,QAEAxC,EAAA1B,UAAAusB,mBAAA;AACA,MAAA9uB,MAAA+wC,cAAA/wC,KAAAkC,MAAAS,OAAAsY,mBAAAjb,KAAAkC,MAAAiZ,QAEAlX,EAAA1B,UAAAysB,mBAAA,WACA,MAAAhvB,MAAA+wC,cAAA/wC,KAAAkC,MAAAS,OAAA4Y,mBAAAvb,KAAAkC,MAAAuZ,QAEAxX,EAAA1B,UAAA2sB,oBAAA,WACA,MAAAlvB,MAAA+wC,cAAA/wC,KAAAkC,MAAAS,OAAAgZ,oBAAA3b,KAAAkC,MAAA2Z,SAEA5X,EAAA1B,UAAAyuC,uBAAA,SAAA7gB,GACA,GAAA8gB,GAAAruC,EAAA5C,KAAAkC,MAAAS,EAAAC,EAAAD,MAQA,OAPA,MAAAwtB,EACA8gB,EAAAtuC,EAAAslB,aACS,OAAAkI,EACT8gB,EAAAtuC,EAAAmmB,cACS,MAAAqH,IACT8gB,EAAAtuC,EAAAglB,cAEAspB,GAEAhtC,EAAA1B,UAAA2uC,aAAA,SAAA/gB,GACA,GAAA8gB,GAAAjxC,KAAAgxC,uBAAA7gB,EACA,OAAAwY,GAAAsI,SAAA9qC,KAAA,MAEAlC,EAAA1B,UAAA4uC,aAAA,SAAAhhB,EAAAhqB,GACA,GAAAvD,GAAA5C,KAAAkC,MAAAS,EAAAC,EAAAD,OACAsuC,EAAAjxC,KAAAgxC,uBAAA7gB,EACAwY,GAAAsI,GACA,MAAA9gB,EACAxtB,EAAAslB,aAAA9hB,EACa,OAAAgqB,EACbxtB,EAAAmmB,cAAA3iB,EACa,MAAAgqB,IACbxtB,EAAAglB,aAAAxhB,GAES8qC,IACTA,EAAA9qC,SAGAlC,EAAA1B,UAAA6uC,iBAAA,SAAAjhB,EAAAkhB,GACA,GAAAJ,GAAAjxC,KAAAgxC,uBAAA7gB,GACAmP,EAAA2R,GAAA,gBAAAA,MAAA3R,SAAA2R,EAAA3R,SAAA+R,CACA,QACA5R,QAAAH,EAAApjB,QAAA,YACAqiB,QAAAe,EAAApjB,QAAA,YACAo1B,OAAAhS,EAAApjB,QAAA,WACAq1B,SAAAjS,EAAApjB,QAAA,aACAs1B,QAAAlS,EAAApjB,QAAA,YACAu1B,MAAAnS,EAAApjB,QAAA,UACAw1B,SAAApS,EAAApjB,QAAA,aACAy1B,SAAArS,EAAApjB,QAAA,eAGAjY,EAAA1B,UAAAqvC,sBAAA,WACA,MAAA5xC,MAAAoxC,iBAAA,IAAApxC,KAAAkC,MAAAS,OAAA0M,aAAA,4BAEApL,EAAA1B,UAAA+7B,sBAAA,WACA,MAAAt+B,MAAAoxC,iBAAA,IAAApxC,KAAAkC,MAAAS,OAAA0M,aAAA,4BAEApL,EAAA1B,UAAAm8B,uBAAA,WACA,MAAA1+B,MAAAoxC,iBAAA,KAAApxC,KAAAkC,MAAAS,OAAA0M,aAAA,4BAEApL,EAAA1B,UAAAg9B,qBAAA,SAAA79B,GACA,aAAAA,EAAA1B,KAAA0+B,yBAAA,MAAAh9B,EAAA1B,KAAAs+B,wBAAAt+B,KAAA4xC,yBAEA3tC,EAAA1B,UAAAsvC,kBAAA,WACA,MAAA7xC,MAAAkxC,aAAA,MAEAjtC,EAAA1B,UAAAuvC,kBAAA,WACA,MAAA9xC,MAAAkxC,aAAA,MAEAjtC,EAAA1B,UAAAwvC,mBAAA,WACA,MAAA/xC,MAAAkxC,aAAA,OAEAjtC,EAAA1B,UAAAyvC,cAAA,SAAAC,EAAA3S,GACA,GAAA18B,GAAA5C,KAAAkC,KACA,OAAA+vC,GACA3S,EAAAgS,OAAA,EAAAhS,EAAAiS,SAAA3uC,EAAA4D,MAAA,EAAA5D,EAAA4D,MAEA84B,EAAAqS,UAAA/uC,EAAA2D,OAAA+4B,EAAAoS,UAAA9uC,EAAA2D,OAAA,KAGAtC,EAAA1B,UAAA2vC,eAAA,SAAAD,EAAA3S,GACA,MAAA2S,GACA3S,EAAAgS,OAAA,QAAAhS,EAAAkS,QAAA,aAEAlS,EAAAmS,MAAA,SAAAnS,EAAAqS,SAAA,aAGA1tC,EAAA1B,UAAA4vC,uBAAA,SAAAF,EAAA3S,GACA,MAAA2S,GACA3S,EAAAgS,OAAA,QAAAhS,EAAAiS,SAAA,eAEAjS,EAAAqS,SAAA,QAAArS,EAAAoS,SAAA,gBAGAztC,EAAA1B,UAAA6vC,eAAA,WACA,MAAApyC,MAAAgyC,eAAAhyC,KAAAkC,MAAAS,OAAA0M,aAAArP,KAAA4xC,0BAEA3tC,EAAA1B,UAAA8vC,eAAA,WACA,MAAAryC,MAAAgyC,cAAAhyC,KAAAkC,MAAAS,OAAA0M,aAAArP,KAAAs+B,0BAEAr6B,EAAA1B,UAAA+vC,gBAAA,WACA,MAAAtyC,MAAAgyC,cAAAhyC,KAAAkC,MAAAS,OAAA0M,aAAArP,KAAA0+B,2BAEAz6B,EAAA1B,UAAAgwC,gBAAA,WACA,MAAAvyC,MAAAkyC,gBAAAlyC,KAAAkC,MAAAS,OAAA0M,aAAArP,KAAA4xC,0BAEA3tC,EAAA1B,UAAAiwC,gBAAA,WACA,MAAAxyC,MAAAkyC,eAAAlyC,KAAAkC,MAAAS,OAAA0M,aAAArP,KAAAs+B,0BAEAr6B,EAAA1B,UAAAkwC,iBAAA,WACA,MAAAzyC,MAAAkyC,eAAAlyC,KAAAkC,MAAAS,OAAA0M,aAAArP,KAAA0+B,2BAEAz6B,EAAA1B,UAAAmwC,gBAAA,WACA,GAAA9vC,GAAA5C,KAAAkC,MAAAS,EAAAC,EAAAD,OACA28B,EAAAt/B,KAAA4xC,uBACA,OAAAjvC,GAAA0M,aACAiwB,EAAAG,QAAA,YAAAz/B,KAAAw/B,gBAAA,KAEAF,EAAAG,QAAA,SAAA98B,EAAA+kB,cAAA/kB,EAAA+kB,cAAA,UAGAzjB,EAAA1B,UAAAowC,gBAAA,WACA,GAAA/vC,GAAA5C,KAAAkC,MACAo9B,EAAAt/B,KAAAs+B,uBACA,OAAA17B,GAAAD,OAAA0M,aACAiwB,EAAAG,QAAA,eAEAH,EAAAG,QAAA,aAAA78B,EAAAD,OAAA4M,aAAA,EAAAvP,KAAAw/B,gBAAA,UAGAv7B,EAAA1B,UAAAqwC,iBAAA,WACA,GAAAhwC,GAAA5C,KAAAkC,MACAo9B,EAAAt/B,KAAA0+B,wBACA,OAAA97B,GAAAD,OAAA0M,aACAiwB,EAAAG,QAAA,iBAEAH,EAAAG,QAAA,aAAA78B,EAAAD,OAAA8M,cAAA,EAAAzP,KAAAw/B,gBAAA,WAGAv7B,EAAA1B,UAAAguC,wBAAA,WACA,GAAA3tC,GAAA5C,KAAAkC,KACA,OAAAlC,MAAAmyC,wBAAAvvC,EAAAD,OAAA0M,aAAArP,KAAA4xC,0BAEA3tC,EAAA1B,UAAAkuC,wBAAA,WACA,GAAA7tC,GAAA5C,KAAAkC,KACA,OAAAlC,MAAAmyC,uBAAAvvC,EAAAD,OAAA0M,aAAArP,KAAAs+B,0BAEAr6B,EAAA1B,UAAAouC,yBAAA,WACA,GAAA/tC,GAAA5C,KAAAkC,KACA,OAAAlC,MAAAmyC,uBAAAvvC,EAAAD,OAAA0M,aAAArP,KAAA0+B,2BAEAz6B,EAAA1B,UAAAi9B,gBAAA,SAAA99B,EAAAy8B,GACA,GACA1jB,GAAAxV,EAAA/F,EAAA0oC,EAAAt0B,EADA1Q,EAAA5C,KAAAkC,MAAAS,EAAAC,EAAAD,OACAoE,EAAA,CACA,OAAAo3B,IAAAv7B,EAAAwN,qBAAA1O,GACAkB,EAAAwN,qBAAA1O,IAEAkB,EAAA0Q,MACAmH,EAAA7X,EAAA8X,oBAAA9X,EAAApD,KAAAwS,SACA,MAAAtQ,GACAuD,EAAArC,EAAA+B,EAAAa,OAAAX,OAAAjC,EAAAkQ,WAAA2H,EAAA,MACAvb,EAAAc,KAAAovB,SAAAnqB,EAAArC,EAAA0M,QAAA3M,EAAAulB,mBAAAtlB,EAAAmsB,iBAAA,UACa,OAAArtB,GACbuD,EAAArC,EAAAyN,GAAA7K,OAAAX,OAAAjC,EAAAkQ,WAAA2H,EAAA,OACAvb,EAAAc,KAAAovB,SAAAnqB,EAAArC,EAAA4M,SAAA7M,EAAAomB,oBAAAnmB,EAAAqsB,kBAAA,WAEAhqB,EAAArC,EAAAlE,EAAA8G,OAAAX,OAAAjC,EAAAiQ,WAAA4H,IACAvb,EAAAc,KAAAmvB,SAAAlqB,EAAArC,EAAAwM,QAAAxM,EAAA+rB,gBAAA/rB,EAAAisB,iBAAA,SACA7uB,KAAAkb,sBAAAT,EAAAvb,IAEA0oC,EAAAhlC,EAAAiB,GAAAqC,OAAA,QAAA8D,OAAA,OAAA8H,QAAA,SACAwB,EAAAs0B,EAAA59B,OAAA,OAAArI,MAAA,uBAAAA,MAAA,oBAAAA,MAAA,SAAAA,MAAA,UACA2R,EAAAtJ,OAAA,KAAA9F,KAAAhF,GAAAkH,KAAA,WACAxD,EAAAiB,GAAAqC,OAAAlG,MAAAqJ,UAAA,QAAAjD,KAAA,WACA,GAAAC,GAAArG,KAAAsG,uBACAS,GAAAV,EAAAG,QAA+CO,EAAAV,EAAAG,SAE/CohC,EAAAj+B,YAGA/G,EAAAwN,qBAAA1O,GAAAqF,GAAA,EAAAnE,EAAAwN,qBAAA1O,GAAAqF,EACAnE,EAAAwN,qBAAA1O,KAGAuC,EAAA1B,UAAAuZ,aAAA,SAAAxG,GACA,GAAA1S,GAAA5C,KAAAkC,MACAouC,EAAA1tC,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAAlQ,MAAA,KAAAkQ,EAAA+7B,YACAE,EAAA5tC,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAA7P,MAAA,KAAA6P,EAAAi8B,YACAE,EAAA9tC,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAA8L,OAAA,KAAA9L,EAAAm8B,cACAp7B,EAAAg7B,EAAA1pC,aAAA0pC,GACA/rC,KAAA,IAAAvE,KAAAoyC,eAAA1uC,KAAA1D,OACAuE,KAAA,KAAAvE,KAAAuyC,gBAAA7uC,KAAA1D,OACAuE,KAAA,KAAAvE,KAAA0yC,gBAAAhvC,KAAA1D,OACAmG,KAAAnG,KAAA6xC,kBAAAnuC,KAAA1D,QACAsV,EAAAk7B,EAAA5pC,aAAA4pC,GACAjsC,KAAA,IAAAvE,KAAAqyC,eAAA3uC,KAAA1D,OACAuE,KAAA,KAAAvE,KAAAwyC,gBAAA9uC,KAAA1D,OACAuE,KAAA,KAAAvE,KAAA2yC,gBAAAjvC,KAAA1D,OACAmG,KAAAnG,KAAA8xC,kBAAApuC,KAAA1D,QACAsV,EAAAo7B,EAAA9pC,aAAA8pC,GACAnsC,KAAA,IAAAvE,KAAAsyC,gBAAA5uC,KAAA1D,OACAuE,KAAA,KAAAvE,KAAAyyC,iBAAA/uC,KAAA1D,OACAuE,KAAA,KAAAvE,KAAA4yC,iBAAAlvC,KAAA1D,OACAmG,KAAAnG,KAAA+xC,mBAAAruC,KAAA1D,QAEAiE,EAAA1B,UAAAovB,WAAA,SAAArB,EAAA7sB,EAAAovC,EAAAxiB,GACA,GAAA+F,GAAA,gBAAA9F,OAAA7sB,EACA,OAAAkc,GAAAyW,GAGA,UAAA9F,EAAAwiB,KACAxiB,EAAA7sB,GAAA4sB,EAGArwB,KAAA0xB,2BAAA0E,EAAA/F,GANAwiB,GAQA5uC,EAAA1B,UAAAmvB,2BAAA,SAAAqhB,EAAA1iB,GACA,GAAAztB,GAAA5C,KAAAkC,MACAtF,EAAAgG,EAAAD,OAAA0M,aAAAzM,EAAA4D,MAAA5D,EAAA2D,MACA,OAAA8pB,IAAA0iB,EAAAn2C,IAEAqH,EAAA1B,UAAAmZ,mBAAA,SAAAoW,EAAAkhB,EAAAC,GACA,GAAAC,GAAApuC,EAAAg+B,EAAAqQ,EAAA1nC,EAAAvG,EAAAkuC,EAAAhqC,EAAA0oB,CACA,IAAAkhB,EAGA,GAFAE,EAAAzc,EAAAuc,SAEA,IAAAE,EACA9pC,GAAA0oB,EAAA,QACa,QAAAohB,EACb9pC,GAAA0oB,EAAA,GAAAA,IAAAl1B,OAAA,QACa,IAAAs2C,EAAA,GAOb,IANAC,EAAAD,EAAA,EACApuC,EAAAgtB,EAAA,GACAgR,EAAAhR,IAAAl1B,OAAA,GACA6O,GAAAq3B,EAAAh+B,IAAAquC,EAAA,GAEA/pC,GAAAtE,GACAI,EAAA,EAA2BA,EAAAiuC,EAAWjuC,IACtCkuC,GAAAtuC,EAAA2G,GAAAvG,EAAA,GACAkE,EAAA7K,KAAA00C,EAAA,GAAAx3C,MAAA23C,KAEAhqC,GAAA7K,KAAAukC,GAIA,MADAmQ,KAA6B7pC,IAAA+rB,KAAA,SAAAC,EAAAC,GAA+C,MAAAD,GAAAC,KAC5EjsB,GAEAnF,EAAA1B,UAAAsY,oBAAA,SAAAnC,GACA,GAAA9V,GAAA5C,KAAAkC,MAAA8B,EAAApB,EAAAoB,IACA,QACAK,MAAAqU,EAAA1U,EAAAtF,EAAAkI,aAAA8R,YAAA1U,EAAAtF,EACAgG,MAAAgU,EAAA1U,EAAAW,EAAAiC,aAAA8R,YAAA1U,EAAAW,EACA0b,OAAA3H,EAAA1U,EAAAqM,GAAAzJ,aAAA8R,YAAA1U,EAAAqM,GACAgjC,SAAA36B,EAAA1U,EAAA4M,KAAAhK,aAAA8R,YAAA1U,EAAA4M,OAGA3M,EAAA1B,UAAA8S,OAAA,SAAAuD,EAAA06B,GACA,GAAA1wC,GAAA5C,KAAAkC,KACAU,GAAAoB,KAAAtF,EAAAiD,MAAA,UAAA2xC,EAAA,KACA1wC,EAAAoB,KAAAW,EAAAhD,MAAA,UAAA2xC,EAAA,KACA1wC,EAAAoB,KAAAqM,GAAA1O,MAAA,UAAA2xC,EAAA,KACA1wC,EAAAoB,KAAA4M,KAAAjP,MAAA,UAAA2xC,EAAA,KACA16B,EAAAvU,MAAAH,KAAAtB,EAAAuY,OACAvC,EAAAlU,MAAAR,KAAAtB,EAAA6Y,OACA7C,EAAAyH,OAAAnc,KAAAtB,EAAAiZ,QACAjD,EAAAy6B,SAAAnvC,KAAAtB,EAAAwY,WAGAvP,EAAAuB,YAAA,SAAA1L,GACA,GAAA6xC,GAAAvxC,EAAAwxC,UAAAC,WAAA7d,cAAA1Z,QAAA,aACA,eAAAq3B,EAAA,GAAA5hC,SAAA+hC,IAAA1sC,MAAA,aAAAtF,EAAA,KAEAmK,EAAA+H,WAAA,SAAAgrB,EAAAl9B,GACA,MAAAk9B,GAAA50B,OAAA,YAAAzF,KAAA,KAAA7C,GAAAsI,OAAA,SAEA6B,EAAA8nC,aAAA,SAAA1B,GAEA,GAAA3mC,GAAA/P,KAAA+D,IAAA,GAAAU,KAAAkX,OAAA5L,KACA,OAAA2mC,KAAA,EAAA3mC,OAAA,IAEAO,EAAA+nC,aAAA,SAAA3B,GACA,MAAAA,IAAA,IAAAjyC,KAAAkX,OAAA/L,KAEAU,EAAA4U,cAAA,WACA,GAAA7d,GAAA5C,IACA,OAAA4C,GAAA+wC,cAAA/wC,EAAAD,OAAA0M,eAEAxD,EAAA6U,cAAA,WACA,GAAA9d,GAAA5C,IACA,OAAA4C,GAAAgxC,cAAAhxC,EAAAD,OAAA0M,eAEAxD,EAAAgV,cAAA,WACA,GAAAje,GAAA5C,IACA,OAAA4C,GAAAD,OAAA4M,cAAA,EAAA3M,EAAA+wC,aAAA/wC,EAAAD,OAAA0M,eAEAxD,EAAAiV,cAAA,WACA,GAAAle,GAAA5C,IACA,OAAA4C,GAAAgxC,aAAAhxC,EAAAD,OAAA0M,eAEAxD,EAAAgoC,iBAAA,SAAA5B,GACA,GAAArvC,GAAA5C,KACAsL,EAAA/P,KAAA+D,IAAA,GAAAsD,EAAAsU,OAAA5L,MACAF,EAAA7P,KAAA+D,IAAA,GAAAsD,EAAAsU,OAAA9L,MAEA,OAAA6mC,GAAArvC,EAAA4D,MAAA,EAAA8E,EAAAF,EAAAxI,EAAAsU,OAAA5L,KAAA,IAEAO,EAAAioC,kBAAA,SAAA7B,GAEA,OAAAA,EAAAjyC,KAAAkX,OAAA7L,OAAArL,KAAAkX,OAAA/L,IAAAnL,KAAAuG,QAAA,IAEAsF,EAAA8U,kBAAA,WACA,GAAA/d,GAAA5C,IACA,OAAA4C,GAAAixC,kBAAAjxC,EAAAD,OAAA0M,eAEAxD,EAAA+U,mBAAA,WACA,GAAAhe,GAAA5C,IACA,OAAA4C,GAAAkxC,mBAAAlxC,EAAAD,OAAA0M,eAEAxD,EAAAkV,kBAAA,WACA,GAAAne,GAAA5C,IACA,OAAA4C,GAAAixC,iBAAAjxC,EAAAD,OAAA0M,eAAAzM,EAAAD,OAAA4M,aAAA,OAEA1D,EAAAmV,mBAAA,WACA,GAAApe,GAAA5C,IACA,OAAA4C,GAAAkxC,kBAAAlxC,EAAAD,OAAA0M,eAGAxD,EAAAyF,QAAA,WACA,GAAA1O,GAAA5C,KAAA6D,EAAAjB,EAAAiB,GAAAlB,EAAAC,EAAAD,MACAC,GAAAmxC,IAAAlwC,EAAAmwC,OAAAD,MAAAp6C,MAAA,SAAAkC,GACA,MAAAA,GAAAi2B,OAAAyE,OAAA,SAAAnB,EAAAC,GAAoD,MAAAD,GAAAC,EAAA17B,OAAsB,KAE1EgJ,EAAAwiB,YACAviB,EAAAmxC,IAAA5e,KAAA,OAIAtpB,EAAAoM,aAAA,WACA,GAAArV,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAsD,EAAAtD,EAAAwoB,aAAAxoB,EAAA+oB,WACA9oB,GAAAsV,eAAA3c,KAAAiyB,IAAA5qB,EAAAiV,SAAAjV,EAAAkV,WAAA,EACAlV,EAAAqxC,OAAA,IAAArxC,EAAAsV,eACAtV,EAAAsxC,iBAAAjuC,GAAArD,EAAAqxC,OAAAhuC,GAAArD,EAAAqxC,OAAA,GACArxC,EAAAuxC,YAAAvxC,EAAA4P,QAAA,UAAA5P,EAAA4P,QAAA,SAAA5P,EAAAqxC,OAAArxC,EAAAsxC,iBAAA,GAGAroC,EAAAwjB,UAAA,WACA,GAAAzsB,GAAA5C,IACA4C,GAAAwxC,OAAAxxC,EAAAyxC,YACAzxC,EAAA0xC,eAAA1xC,EAAA2xC,oBACA3xC,EAAA4xC,kBAAA5xC,EAAA2xC,kBAAA,MAGA1oC,EAAA4oC,YAAA,SAAA54C,GACA,GAEA64C,GAAAC,EAAAC,EAAAC,EAFAjyC,EAAA5C,KAAA2C,EAAAC,EAAAD,OACAmoC,GAAA,EAAApuC,EAAA,CAGA,OAAAiG,IAIAC,EAAAmxC,IAAAnxC,EAAA8X,oBAAA9X,EAAApD,KAAAwS,UAAAxO,QAAA,SAAA8a,GACAwsB,GAAAxsB,EAAA9e,KAAAkC,KAAA7F,EAAA2D,KAAAkC,KACAopC,GAAA,EACAjvC,EAAAyiB,EACAziB,EAAAa,SAEAA,MAEA8mB,MAAA3nB,EAAAi5C,cACAj5C,EAAAi5C,WAAA,GAEAtxB,MAAA3nB,EAAAk5C,YACAl5C,EAAAk5C,SAAAl5C,EAAAi5C,YAEAlyC,EAAAimC,YAAAhtC,EAAA2D,QACAk1C,EAAA/xC,EAAAooB,UACA4pB,EAAAhyC,EAAAqoB,UACA4pB,EAAAr5C,KAAAqN,IAAAjG,EAAAoV,iBAAA,MAAA48B,EAAAD,GACAG,EAAAh5C,EAAAlC,MAAA+6C,EAAA,EAAA74C,EAAAlC,MAAAg7C,EAAA94C,EAAAlC,MAAA+6C,EAAAC,EAAAD,EACA74C,EAAAi5C,WAAAnyC,EAAAsoB,oBACApvB,EAAAk5C,SAAAl5C,EAAAi5C,WAAAF,EAAAC,GAEA/J,EAAAjvC,EAAA,MAzBA,MA4BAgQ,EAAAwoC,UAAA,WACA,GAAAzxC,GAAA5C,KACAg1C,EAAApyC,EAAAiB,GAAAyP,IAAA0hC,MAAAC,YAAAryC,EAAAqxC,QAAAE,YAAAvxC,EAAAuxC,aACAe,EAAA,SAAAr5C,EAAA6tC,GACA,GAAAyL,EACA,OAAAzL,GAAoCsL,EAAAn5C,IACpCs5C,EAAAvyC,EAAA6xC,YAAA54C,GACAs5C,EAAAH,EAAAG,GAAA,SAIA,OADAD,GAAAE,SAAAJ,EAAAI,SACAF,GAGArpC,EAAA0oC,kBAAA,SAAAc,GACA,GAAAzyC,GAAA5C,KACAg1C,EAAApyC,EAAAiB,GAAAyP,IAAA0hC,MAAAC,YAAAryC,EAAAsV,gBAAAm9B,IAAA,IAAAlB,YAAAvxC,EAAAuxC,YACA,iBAAAt4C,GACA,GAAAs5C,GAAAvyC,EAAA6xC,YAAA54C,EACA,OAAAs5C,GAAAH,EAAAG,GAAA,UAIAtpC,EAAAypC,OAAA,SAAAz5C,EAAA6tC,EAAA6L,GACA,MAAAA,IAAAv1C,KAAA+oC,UAAAltC,EAAA2D,MAAAQ,KAAAo0C,OAAAv4C,EAAA6tC,GAAA,SAIA79B,EAAA2pC,qBAAA,SAAA35C,GACA,GACAw6B,GAAA33B,EAAAiG,EAAAqB,EAAA0qB,EADA9tB,EAAA5C,KAAA2C,EAAAC,EAAAD,OACAwyC,EAAAvyC,EAAA6xC,YAAA54C,GAAA45C,EAAA,EAeA,OAdAN,KAAAvyC,EAAA4P,QAAA,WACA6jB,EAAAr2B,KAAAo0C,OAAAgB,SAAAD,GACAz2C,EAAA8kB,MAAA6S,EAAA,MAAAA,EAAA,GACA1xB,EAAA6e,MAAA6S,EAAA,MAAAA,EAAA,GACArwB,EAAAzK,KAAAy8B,KAAAt5B,IAAAiG,KAEA+rB,EADA9tB,EAAA4P,QAAA,UAAA7P,EAAA8oB,kBACAgL,EAAA9zB,EAAA8oB,mBAAA9oB,EAAA8oB,kBAAA5vB,EAAA+G,EAAAqxC,OAAAjuC,GAAArD,EAAA8oB,kBACa7oB,EAAA4P,QAAA,QAAA7P,EAAA+nB,gBACb+L,EAAA9zB,EAAA+nB,iBAAA/nB,EAAA+nB,gBAAA7uB,EAAA+G,EAAAqxC,OAAAjuC,GAAArD,EAAA+nB,gBAEA9nB,EAAAqxC,QAAAjuC,GAAA,GAAApD,EAAAqxC,OAAA,cAAArxC,EAAAqxC,OAAA,IAAArxC,EAAAqxC,OAAAjuC,EAAA,EAEAyvC,EAAA,aAAA/2C,EAAAgyB,EAAA,IAAA/rB,EAAA+rB,EAAA,KAEA+kB,GAGA5pC,EAAA6pC,YAAA,SAAA75C,GACA,GAAA+G,GAAA5C,KACA2C,EAAAC,EAAAD,OACAgzC,EAAAp6C,KAAAqN,IAAAhG,EAAA4P,QAAA,WAAA7P,EAAAoV,iBAAA,IACA,OAAAlc,MAAAk5C,SAAAl5C,EAAAi5C,YAAAa,EAAA,MAGA9pC,EAAA+pC,iBAAA,SAAA/5C,GACA,MAAAmE,MAAA6zB,SACAnyB,GAAA7F,EAAA2D,KAAAkC,GACA/H,MAAAkC,EAAAlC,MACA+2B,MAAA1wB,KAAA01C,YAAA75C,GACAa,MAAAb,EAAAa,SAIAmP,EAAAgqC,gBAAA,SAAAh6C,GACA,GACAs5C,GAAAx7C,EAAA+2B,EAAAhvB,EAAAtF,EADAwG,EAAA5C,IAEA,OAAA4C,GAAAkzC,sBACAX,EAAAvyC,EAAA6xC,YAAA54C,GACAlC,EAAAw7C,IAAAx7C,MAAA,KACA+2B,EAAA9tB,EAAA8yC,YAAAP,GACAzzC,EAAA7F,EAAA2D,KAAAkC,GACAkB,EAAA4P,QAAA,UAAA5P,EAAAmzC,uBAAArlB,IACAt0B,EAAAwG,EAAAozC,oBACA55C,IAAAzC,EAAA+2B,EAAAhvB,GAAAkB,EAAAqzC,sBAAAt8C,EAAA+2B,IAF0E,IALlC,IAUxC7kB,EAAAqqC,UAAA,SAAA5gB,GACA,GAAA7pB,GAAA7I,EAAA5C,IAGA,OAAA4C,GAAAkL,gBACArC,EAAAzJ,EAAA0f,YAAA,WACA9e,EAAAkL,aACA9L,EAAA4f,cAAAnW,GACA7I,EAAAsT,OAAA7M,UAAA,2BAAAtJ,OAAA,GACA6C,EAAAszC,UAAA5gB,KAGa,MAIbA,EAAA1yB,EAAAiyB,eAAAS,OAEA1yB,GAAA0Q,IAAAjK,UAAAzG,EAAAuzC,gBAAA7gB,EAAA,IAAA/gB,EAAA6hC,WAAAhwC,KAAA,SAAAvK,GACA+G,EAAAyzC,aAAAx6C,EAAA2D,KAAAkC,KACAkB,EAAAiB,GAAAqC,OAAAlG,MAAAqJ,UAAA,QACAzC,aAAA8R,SAAA9V,EAAA0zC,eAAAz6C,EAAA2D,KAAAkC,KACA6C,KAAA,IAAA3B,EAAA0xC,gBACA1tC,aAAA8R,SAAA,EAAA9V,EAAA0zC,eAAAz6C,EAAA2D,KAAAkC,KACA6C,KAAA,IAAA3B,EAAA4xC,mBACApuC,KAAA,SAAAvK,GACA+G,EAAAkmC,YAAAjtC,EAAA2D,YAOAqM,EAAA0qC,YAAA,SAAAjhB,GACA,GAAA1yB,GAAA5C,IAEA4C,GAAAkL,aAEAwnB,EAAA1yB,EAAAiyB,eAAAS,GAEA1yB,EAAA0Q,IAAAjK,UAAAzG,EAAAuzC,gBAAA7gB,EAAA,IAAA/gB,EAAA6hC,WAAA/sC,UAAA,QACAzC,aAAA8R,SAAA,SAAA7c,GACA,MAAA+G,GAAA0zC,eAAAz6C,EAAA2D,KAAAkC,MAEA6C,KAAA,IAAA3B,EAAAwxC,QACAxxC,EAAA0Q,IAAAjK,UAAA,IAAAkL,EAAAygC,KACArzC,MAAA,eAGAkK,EAAAyqC,eAAA,SAAA50C,GACA,GAAAkB,GAAA5C,KAAA2C,EAAAC,EAAAD,MAEA,OAAAC,GAAAkmC,YAAApnC,GACAiB,EAAAkpB,sBACSjpB,EAAAimC,YAAAnnC,GACTiB,EAAA0oB,sBACSzoB,EAAAgmC,UAAAlnC,GACTiB,EAAAioB,oBAEA,IAKA/e,EAAAwqC,aAAA,SAAA30C,GACA,GAAAkB,GAAA5C,KAAA2C,EAAAC,EAAAD,MACA,OAAAC,GAAAkmC,YAAApnC,IAAAiB,EAAAipB,cACAhpB,EAAAimC,YAAAnnC,IAAAiB,EAAAyoB,cACAxoB,EAAAgmC,UAAAlnC,IAAAiB,EAAAgoB,YAGA9e,EAAAiqC,mBAAA,WACA,GAAAlzC,GAAA5C,KAAA2C,EAAAC,EAAAD,OAAA6zC,GAAA,CAOA,OANA5zC,GAAA4P,QAAA,SACAgkC,EAAA7zC,EAAA2oB,iBACS1oB,EAAA4P,QAAA,SACTgkC,EAAA7zC,EAAA4nB,gBAGAisB,GAGA3qC,EAAAkqC,uBAAA,SAAArlB,GACA,GAAA9tB,GAAA5C,KAAA2C,EAAAC,EAAAD,OACA8zC,EAAA7zC,EAAA4P,QAAA,SAAA7P,EAAA6oB,sBAAA7oB,EAAA8nB,mBACA,OAAAiG,IAAA+lB,GAGA5qC,EAAAmqC,kBAAA,WACA,GAAApzC,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAvG,EAAAuG,EAAA6nB,gBAMA,OALA5nB,GAAA4P,QAAA,SACApW,EAAAuG,EAAAmoB,mBACSloB,EAAA4P,QAAA,WACTpW,EAAAuG,EAAA4oB,oBAEAnvB,GAGAyP,EAAA6qC,YAAA,WACA,GAAA9zC,GAAA5C,IACA,OAAA4C,GAAA4P,QAAA,SAAA5P,EAAAD,OAAAgpB,YAAA,IAGA9f,EAAAyM,oBAAA,SAAAtG,GACA,GACA2kC,GAAAC,EADAh0C,EAAA5C,KAAAoR,EAAAxO,EAAAwO,KAEAylC,EAAAj0C,EAAAi0C,cAAAnzC,KAAAd,GACAk0C,EAAAl0C,EAAAk0C,UAAApzC,KAAAd,GACAy+B,EAAAz+B,EAAAy+B,WAAA39B,KAAAd,EACA+zC,GAAAvlC,EAAAlL,OAAA,IAAAqO,EAAA+L,WAAAjX,UAAA,IAAAkL,EAAA6hC,UACA52C,KAAAoD,EAAAmxC,IAAA/hC,IACAzN,KAAA,iBAAA1I,GAAyC,MAAAg7C,GAAAh7C,GAAAwlC,EAAAxlC,EAAA2D,QACzCo3C,EAAAD,EAAAptC,QAAAS,OAAA,KACAzF,KAAA,QAAAsyC,GACAD,EAAA5sC,OAAA,KACAzF,KAAA,QAAAuyC,GACAF,EAAA5sC,OAAA,QACAzF,KAAA,KAAA3B,EAAA4P,QAAA,0BACA7Q,MAAA,aACAA,MAAA,wBACAA,MAAA,0BAKAkK,EAAAmF,QAAA,WACA,GAAApO,GAAA5C,IACA4C,GAAAm0C,KAAAn0C,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAA7T,OAAAsJ,OAAA,KACAzF,KAAA,QAAAgQ,EAAA+L,WACA/b,KAAA,YAAA3B,EAAAsR,aAAA,QACAtR,EAAAm0C,KAAA/sC,OAAA,QACAzF,KAAA,QAAAgQ,EAAAyiC,gBACAr1C,MAAA,wBACAwE,KAAAvD,EAAA8zC,gBAGA7qC,EAAAqR,UAAA,SAAAxE,EAAAe,EAAAlE,GACA,GACA0hC,GADAr0C,EAAA5C,KAAA6D,EAAAjB,EAAAiB,GAAAlB,EAAAC,EAAAD,OAAAyO,EAAAxO,EAAAwO,IAEA6lC,GAAA7lC,EAAA/H,UAAA,IAAAkL,EAAAwiC,MAAA1tC,UAAA,IAAAkL,EAAAygC,KACAx1C,KAAAoD,EAAAomC,QAAAtlC,KAAAd,IACAq0C,EAAA1tC,QAAAS,OAAA,QACAzF,KAAA,QAAA3B,EAAAs0C,SAAAxzC,KAAAd,IACAjB,MAAA,gBAAA9F,GAAyC,MAAA+G,GAAAmL,MAAAlS,EAAA2D,QACzCmC,MAAA,kBAAA9F,GAA2C,MAAA8G,GAAA0a,qBAAA1a,EAAA8iB,4BAAA5pB,GAAA,iBAC3C8F,MAAA,aACAyE,KAAA,SAAAvK,GACA+G,EAAAimC,YAAAhtC,EAAA2D,QACA3D,EAAAi5C,WAAAj5C,EAAAk5C,SAAApyC,EAAAsoB,qBAEAjrB,KAAAm3C,SAAAt7C,IAEAo7C,EACA1yC,KAAA,qBAAA1I,GAA6C,OAAA+G,EAAAimC,YAAAhtC,EAAA2D,OAAA+V,EAAA,gBAC7C5T,MAAA,mBAAA9F,GAA4C,MAAAA,KAAAmE,KAAAm3C,SAAA,MAC5C5jC,GAAA,YAAA5Q,EAAA0a,oBAAA,SAAAxhB,GACA,GAAAs5C,GAAAnM,CACApmC,GAAAkL,aAGAqnC,EAAAvyC,EAAA6xC,YAAA54C,GACAs5C,IACAnM,EAAApmC,EAAAgzC,iBAAAT,GAEAvyC,EAAAszC,UAAAf,EAAA31C,KAAAkC,IACAkB,EAAAgB,IAAAspC,MAAAiI,EAAA31C,KAAAkC,IACAkB,EAAAqqC,kBAAAkI,EAAA31C,KAAAkC,IAAA,GACAkB,EAAAD,OAAAkjB,iBAAAmjB,EAAAhpC,SAEa,MACbuT,GAAA,YAAA5Q,EAAA0a,oBAAA,SAAAxhB,GACA,GAAAmtC,GAAAtM,EAAAyY,EAAAvyC,EAAA6xC,YAAA54C,EACAs5C,KACAnM,EAAApmC,EAAAgzC,iBAAAT,GACAzY,GAAAsM,GACApmC,EAAAi6B,YAAAH,EAAA18B,QAEa,MACbuT,GAAA,WAAA5Q,EAAA0a,oBAAA,SAAAxhB,GACA,GAAAs5C,GAAAnM,CACApmC,GAAAkL,aAGAqnC,EAAAvyC,EAAA6xC,YAAA54C,GACAs5C,IACAnM,EAAApmC,EAAAgzC,iBAAAT,GAEAvyC,EAAA2zC,YAAApB,EAAA31C,KAAAkC,IACAkB,EAAAgB,IAAAosC,SACAptC,EAAAwqC,eACAxqC,EAAA25B,cACA35B,EAAAD,OAAAmjB,gBAAAkjB,EAAAhpC,SAEa,MACbuT,GAAA,QAAA5Q,EAAA0a,oBAAA,SAAAxhB,EAAAqJ,GACA,GAAA8jC,GAAAmM,EAAAvyC,EAAA6xC,YAAA54C,EACAs5C,KACAnM,EAAApmC,EAAAgzC,iBAAAT,GACAvyC,EAAAq6B,aACAr6B,EAAAq6B,YAAAj9B,KAAAgpC,EAAA9jC,GAEAtC,EAAAD,OAAAijB,aAAA1hB,KAAAtB,EAAAgB,IAAAolC,EAAAhpC,QAEa,MACboG,KAAA,WAA+BxD,EAAAkL,YAAA,IAC/BlH,aAAA8R,YACA0+B,UAAA,aAAAv7C,GACA,GAAA0mC,GAAA4S,EAAAvyC,EAAA6xC,YAAA54C,EACA,OAAAs5C,IASA3xB,MAAAxjB,KAAAm3C,SAAArC,cACA90C,KAAAm3C,SAAArC,WAAA,GAEAtxB,MAAAxjB,KAAAm3C,SAAApC,YACA/0C,KAAAm3C,SAAApC,SAAA/0C,KAAAm3C,SAAArC,YAEAvS,EAAA1+B,EAAA0+B,YAAAviC,KAAAm3C,SAAAhC,GACAn1C,KAAAm3C,SAAA5U,EAAA,GACA,SAAAjkB,GACA,GAAA+4B,GAAA9U,EAAAjkB,EAEA,OADA+4B,GAAA73C,KAAA3D,EAAA2D,KACAoD,EAAA0yC,OAAA+B,GAAA,KAnBA,WAAwC,iBAsBxC9yC,KAAA,YAAAgR,EAAA,eACA5T,MAAA,gBAAA9F,GACA,MAAA+G,GAAAqL,WAAArL,EAAAqL,WAAApS,EAAA2D,KAAAsyB,OAAA,GAAAn4B,OAAAiJ,EAAAmL,MAAAlS,EAAA2D,KAAAkC,MAEAC,MAAA,aACAuC,KAAAtB,EAAAogB,OAAA,WACApgB,EAAAkL,YAAA,IAEAmpC,EAAAvtC,OAAA9C,aAAA8R,SAAAe,GACA9X,MAAA,aACAgI,SACAyH,EAAA/H,UAAA,IAAAkL,EAAA6hC,UAAAlwC,OAAA,QACAvE,MAAA,aACA4C,KAAA,iBAAA1I,GAAyC,MAAA+G,GAAAimC,YAAAhtC,EAAA2D,MAAA+U,EAAA+iC,WAAA,KACzCnxC,KAAAvD,EAAAizC,gBAAAnyC,KAAAd,IACA2B,KAAA,YAAA3B,EAAA4yC,qBAAA9xC,KAAAd,IACAjB,MAAA,qBAAA9F,GAA8C,MAAA+G,GAAAimC,YAAAhtC,EAAA2D,MAAAjE,KAAAg8C,MAAA30C,EAAAqxC,OAAA,aAC9CrtC,aAAA8R,YACA/W,MAAA,mBAAA9F,GAA4C,MAAA+G,GAAA6V,eAAA5c,EAAA2D,KAAAkC,KAAAkB,EAAAmmC,UAAAltC,EAAA2D,MAAA,MAC5C4R,EAAAlL,OAAA,IAAAqO,EAAAyiC,gBACAr1C,MAAA,UAAAiB,EAAA4P,QAAA,UAAA5P,EAAA4P,QAAA,cAEA5P,EAAA4P,QAAA,WACA5P,EAAAm0C,KAAA7wC,OAAA,IAAAqO,EAAAijC,qBACAjzC,KAAA,eACA,GAAA1I,IACA2D,OAAgC7F,MAAAgJ,EAAAqoB,YAChC8pB,WAAAnyC,EAAAsoB,oBACA8pB,UAAA,EAAApyC,EAAAsoB,oBAEA,OAAAroB,GAAA0yC,OAAAz5C,GAAA,QAEA+G,EAAAm0C,KAAA7wC,OAAA,IAAAqO,EAAAkjC,oBACAlzC,KAAA,cACA4B,KAAAxD,EAAAkoB,iBAAAloB,EAAAuoB,YAAA,IACAtoB,EAAAm0C,KAAA7wC,OAAA,IAAAqO,EAAAmjC,mBACAnzC,KAAA,SAAA3B,EAAAuxC,aAAAvxC,EAAAqxC,OAAArxC,EAAAuxC,cAAAxxC,EAAAoV,iBAAA,YACAxT,KAAA,cACA4B,KAAAxD,EAAAkoB,iBAAAloB,EAAAooB,UAAA,IACAnoB,EAAAm0C,KAAA7wC,OAAA,IAAAqO,EAAAojC,mBACApzC,KAAA,KAAA3B,EAAAuxC,aAAAvxC,EAAAqxC,OAAArxC,EAAAuxC,cAAAxxC,EAAAoV,iBAAA,WACAxT,KAAA,cACA4B,KAAAxD,EAAAkoB,iBAAAloB,EAAAqoB,UAAA,MAGAnf,EAAAoF,UAAA,WACA,GAAA8lC,GAAA/2C,KAAA+2C,IACA/2C,MAAAwS,QAAA,WACAukC,EAAA/sC,OAAA,QACAzF,KAAA,QAAAgQ,EAAAijC,qBACAT,EAAA/sC,OAAA,QACAzF,KAAA,QAAAgQ,EAAAkjC,oBACA91C,MAAA,wBACAA,MAAA,yBACAo1C,EAAA/sC,OAAA,QACAzF,KAAA,QAAAgQ,EAAAmjC,mBACA/1C,MAAA,wBACAA,MAAA,yBACAo1C,EAAA/sC,OAAA,QACAzF,KAAA,QAAAgQ,EAAAojC,mBACAh2C,MAAA,wBACAA,MAAA,2BAGAkK,EAAAmM,oBAAA,WACA,MAAAhY,MAAA2C,OAAAkoB,iBAAA,MAGAhf,EAAA2I,WAAA,WACA,GAAA5R,GAAA5C,IACA4C,GAAAg1C,OAAAh1C,EAAAwO,KAAApH,OAAA,KACAzF,KAAA,YAAA3B,EAAAuK,UACA5I,KAAA,QAAAgQ,EAAAO,UAEAjJ,EAAA6Q,aAAA,SAAAhE,GACA,GAAA9V,GAAA5C,KAAA2C,EAAAC,EAAAD,MAGAC,GAAAg1C,OAAAj2C,MAAA,aAAAiB,EAAA4T,aAAA,oBAEA5T,EAAAi1C,WAAAj1C,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAAO,SAAAzL,UAAA,IAAAkL,EAAAqjC,QACAp4C,KAAAmD,EAAAmS,SACAlS,EAAAi1C,WAAAtuC,QAAAS,OAAA,KACAA,OAAA,QACArI,MAAA,kBACAiB,EAAAi1C,WACAtzC,KAAA,QAAA3B,EAAAk1C,YAAAp0C,KAAAd,IACAA,EAAAi1C,WAAAnuC,OAAA9C,aAAA8R,YACA/W,MAAA,aACAgI,UAEAkC,EAAAsS,aAAA,SAAA7I,GACA,GAAA1S,GAAA5C,KACA8U,EAAAlS,EAAAi1C,WAAAxuC,UAAA,QAAAjD,KAAA,WAIA,GAAA2xC,GAAAn1C,EAAAiB,GAAAqC,OAAAlG,KAAA2hB,YAAA+Z,OACA94B,GAAAiB,GAAAqC,OAAAlG,MAAA07B,MAAAqc,KAEAr5C,EAAAkE,EAAAo1C,QAAAt0C,KAAAd,GACA+B,EAAA/B,EAAAq1C,QAAAv0C,KAAAd,GACAqD,EAAArD,EAAAs1C,YAAAx0C,KAAAd,GACAoD,EAAApD,EAAAu1C,aAAAz0C,KAAAd,EACA,SACA0S,EAAAR,EAAAlO,aAAAkO,GACAvQ,KAAA,IAAA7F,GACA6F,KAAA,IAAAI,GACAJ,KAAA,QAAA0B,GACA1B,KAAA,SAAAyB,GACArE,MAAA,wBAAA9F,GAAqD,MAAA8jB,GAAA9jB,EAAA4jB,SAAA5jB,EAAA4jB,QAAA,OAGrD5T,EAAAmsC,QAAA,SAAAn8C,GACA,GACAysC,GADA1lC,EAAA5C,KAAA2C,EAAAC,EAAAD,OACAud,EAAA,MAAArkB,EAAAqD,KAAA0D,EAAA+B,EAAA/B,EAAAyN,EAMA,OAJAi4B,GADA,MAAAzsC,EAAAqD,MAAA,OAAArD,EAAAqD,KACAyD,EAAA0M,cAAA,SAAAxT,GAAAqkB,EAAArkB,EAAAiJ,OAAA,EAEAnC,EAAA0M,aAAA,WAAAxT,GAAA+G,EAAAlE,EAAAkE,EAAAic,eAAAjc,EAAAmd,UAAAlkB,EAAAiJ,OAAAjJ,EAAAiJ,OAAA,GAIA+G,EAAAosC,QAAA,SAAAp8C,GACA,GACA0sC,GADA3lC,EAAA5C,KAAA2C,EAAAC,EAAAD,OACAud,EAAA,MAAArkB,EAAAqD,KAAA0D,EAAA+B,EAAA/B,EAAAyN,EAMA,OAJAk4B,GADA,MAAA1sC,EAAAqD,MAAA,OAAArD,EAAAqD,KACAyD,EAAA0M,aAAA,SAAAxT,GAAAqkB,EAAArkB,EAAAinC,KAAA,EAEAngC,EAAA0M,cAAA,SAAAxT,GAAA+G,EAAAlE,EAAAkE,EAAAic,eAAAjc,EAAAmd,UAAAlkB,EAAAiJ,OAAAjJ,EAAAiJ,OAAA,GAIA+G,EAAAqsC,YAAA,SAAAr8C,GACA,GACAinC,GADAlgC,EAAA5C,KAAA2C,EAAAC,EAAAD,OACAmC,EAAAlC,EAAAo1C,QAAAn8C,GAAAqkB,EAAA,MAAArkB,EAAAqD,KAAA0D,EAAA+B,EAAA/B,EAAAyN,EAMA,OAJAyyB,GADA,MAAAjnC,EAAAqD,MAAA,OAAArD,EAAAqD,KACAyD,EAAA0M,cAAA,OAAAxT,GAAAqkB,EAAArkB,EAAAinC,KAAAlgC,EAAA4D,MAEA7D,EAAA0M,aAAAzM,EAAA4D,MAAA,OAAA3K,GAAA+G,EAAAlE,EAAAkE,EAAAic,eAAAjc,EAAAmd,UAAAlkB,EAAAinC,KAAAjnC,EAAAinC,KAAAlgC,EAAA4D,MAEAs8B,EAAAh+B,EAAA,EAAAg+B,EAAAh+B,GAEA+G,EAAAssC,aAAA,SAAAt8C,GACA,GACAinC,GADAlgC,EAAA5C,KAAA2C,EAAAC,EAAAD,OACAmC,EAAA9E,KAAAi4C,QAAAp8C,GAAAqkB,EAAA,MAAArkB,EAAAqD,KAAA0D,EAAA+B,EAAA/B,EAAAyN,EAMA,OAJAyyB,GADA,MAAAjnC,EAAAqD,MAAA,OAAArD,EAAAqD,KACAyD,EAAA0M,aAAAzM,EAAA2D,OAAA,SAAA1K,GAAAqkB,EAAArkB,EAAAiJ,OAAAlC,EAAA2D,OAEA5D,EAAA0M,cAAA,OAAAxT,GAAA+G,EAAAlE,EAAAkE,EAAAic,eAAAjc,EAAAmd,UAAAlkB,EAAAinC,KAAAjnC,EAAAinC,KAAAlgC,EAAA2D,OAEAu8B,EAAAh+B,EAAA,EAAAg+B,EAAAh+B,GAEA+G,EAAAusC,YAAA,SAAAv8C,GACA,OAAAA,EAAAqD,MAAA,MAAArD,EAAAqD,MAGA2M,EAAAqxB,KAAA,SAAAN,GACA,GACA8J,GAAAE,EAAAyR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EADA91C,EAAA5C,KAAA2C,EAAAC,EAAAD,OAAAyO,EAAAxO,EAAAwO,KAAAvN,EAAAjB,EAAAiB,EAGAjB,GAAA4T,cACA7T,EAAA4iB,yBACA5iB,EAAAyQ,eAAAxQ,EAAAyQ,KAAAslC,WACAh2C,EAAA+iB,0BAEAghB,EAAA9jC,EAAA6K,UAAA,GACAm5B,EAAAhkC,EAAA6K,UAAA,GACA4qC,EAAAzb,EAAA,GACA0b,EAAA1b,EAAA,GACA2b,EAAAh9C,KAAAiyB,IAAAkZ,EAAA2R,GACAG,EAAAj9C,KAAA+D,IAAAonC,EAAA2R,GACAI,EAAA91C,EAAA,uBAAAC,EAAAsU,OAAA/L,IAAA5P,KAAAiyB,IAAAoZ,EAAA0R,GACAI,EAAA/1C,EAAA,uBAAAC,EAAA2D,OAAAhL,KAAA+D,IAAAsnC,EAAA0R,GAEAlnC,EAAAlL,OAAA,IAAAqO,EAAAqkC,UACAr0C,KAAA,IAAAg0C,GACAh0C,KAAA,IAAAk0C,GACAl0C,KAAA,QAAAi0C,EAAAD,GACAh0C,KAAA,SAAAm0C,EAAAD,GAEArnC,EAAA/H,UAAA,IAAAkL,EAAAkpB,QAAAp0B,UAAA,IAAAkL,EAAAijB,OACAn6B,OAAA,SAAAxB,GAAkC,MAAA8G,GAAA8iB,4BAAA5pB,KAClCuK,KAAA,SAAAvK,EAAAqJ,GACA,GAGA2zC,GAAAC,EAAAC,EAAAC,EAAAjJ,EAAA1pC,EAHAmxB,EAAA3zB,EAAAqC,OAAAlG,MACAi5C,EAAAzhB,EAAA1lB,QAAAyC,EAAA2kC,UACAC,EAAA3hB,EAAA1lB,QAAAyC,EAAA6kC,UACA/Y,GAAA,CACA,IAAA7I,EAAA1lB,QAAAyC,EAAAmwB,QACAmU,EAAA,EAAArhB,EAAAjzB,KAAA,MACAu0C,EAAA,EAAAthB,EAAAjzB,KAAA,MACAwrC,EAAAntC,EAAAy2C,YACAhZ,EAAAkY,EAAAM,KAAAL,GAAAC,EAAAK,KAAAJ,MAEA,KAAAlhB,EAAA1lB,QAAAyC,EAAAojB,KAUA,MATAtxB,GAAAizC,EAAAt5C,MACA64C,EAAAxyC,EAAA3H,EACAo6C,EAAAzyC,EAAA1B,EACAo0C,EAAA1yC,EAAAG,MACAwyC,EAAA3yC,EAAAE,OACAwpC,EAAAntC,EAAA22C,WACAlZ,IAAAmY,EAAAK,KAAAE,EAAAR,GAAAG,EAAAI,KAAAE,EAAAP,GAKApY,EAAA8Y,IACA3hB,EAAA1lB,QAAAyC,EAAA6kC,UAAAD,GAEA3hB,EAAA1lB,QAAAyC,EAAA2kC,UAAAD,GACAlJ,EAAA7rC,KAAAtB,GAAAq2C,EAAAzhB,EAAA37B,EAAAqJ,SAKA2G,EAAAwxB,UAAA,SAAAT,GACA,GAAAh6B,GAAA5C,KAAA2C,EAAAC,EAAAD,MACAC,GAAA4T,cACA7T,EAAA4iB,yBACA3iB,EAAA6K,UAAAmvB,EACAh6B,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAA7T,OAAAsJ,OAAA,QACAzF,KAAA,QAAAgQ,EAAAqkC,UACAj3C,MAAA,cACAiB,EAAA8K,UAAA,IAGA7B,EAAAyxB,QAAA,WACA,GAAA16B,GAAA5C,KAAA2C,EAAAC,EAAAD,MACAC,GAAA4T,cACA7T,EAAA4iB,yBACA3iB,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAAqkC,UACAhyC,aAAA8R,SAAA,KACA/W,MAAA,aACAgI,SACA/G,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAijB,OACA1lB,QAAAyC,EAAA6kC,UAAA,GACAx2C,EAAA8K,UAAA,IAGA7B,EAAA2tC,YAAA,SAAAn2C,EAAAxH,EAAAqJ,GACA,GAAAtC,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAoX,GAAApX,EAAA0M,aAAAzM,EAAA6a,QAAA7a,EAAA8a,SAAAha,KAAAd,GACAoX,GAAArX,EAAA0M,aAAAzM,EAAA8a,QAAA9a,EAAA6a,SAAA/Z,KAAAd,GACAoiC,EAAApiC,EAAA69B,aAAA/8B,KAAAd,EACAD,GAAAojB,gBAAA7hB,KAAAtB,EAAAgB,IAAA/H,EAAAwH,EAAAqI,QAEA9I,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAA6I,gBAAAxa,EAAA80B,wBAAA77B,EAAA6F,KAAA2H,UAAA,IAAAkL,EAAAitB,eAAA,IAAAt8B,GACA1F,MAAA3D,IACA0N,QAAAS,OAAA,UACAzF,KAAA,mBAAwC,MAAA3B,GAAA2+B,cAAAhtB,EAAAitB,eAAAt8B,KACxCX,KAAA,KAAAwV,GACAxV,KAAA,KAAAyV,GACAzV,KAAA,oBAAyC,MAAA3B,GAAAmL,MAAAlS,KACzC0I,KAAA,aAAA1I,GAAqC,WAAA+G,EAAA69B,aAAA5kC,KACrC+K,aAAA8R,SAAA,KACAnU,KAAA,IAAAygC,IAEAn5B,EAAA4tC,cAAA,SAAAp2C,EAAAxH,EAAAqJ,GACA,GAAAtC,GAAA5C,IACA4C,GAAAD,OAAAqjB,kBAAA9hB,KAAAtB,EAAAgB,IAAA/H,EAAAwH,EAAAqI,QAEA9I,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAA6I,gBAAAxa,EAAA80B,wBAAA77B,EAAA6F,KAAA2H,UAAA,IAAAkL,EAAAitB,eAAA,IAAAt8B,GACA0B,aAAA8R,SAAA,KAAAnU,KAAA,OACAoF,UAEAkC,EAAAwtC,YAAA,SAAAK,EAAAr2C,EAAAxH,EAAAqJ,GACAw0C,EAAA15C,KAAAw5C,YAAAn2C,EAAAxH,EAAAqJ,GAAAlF,KAAAy5C,cAAAp2C,EAAAxH,EAAAqJ,IAEA2G,EAAA8tC,WAAA,SAAAt2C,EAAAxH,GACA,GAAA+G,GAAA5C,IACA4C,GAAAD,OAAAojB,gBAAA7hB,KAAAtB,EAAA/G,EAAAwH,EAAAqI,QACA9I,EAAAD,OAAA8hB,sBACAphB,EAAAuD,aAAA8R,SAAA,KACA/W,MAAA,kBAA4C,MAAAiB,GAAAiB,GAAA+1C,IAAAh3C,EAAAmL,MAAAlS,IAAAg+C,SAAA,QAG5ChuC,EAAAiuC,aAAA,SAAAz2C,EAAAxH,GACA,GAAA+G,GAAA5C,IACA4C,GAAAD,OAAAqjB,kBAAA9hB,KAAAtB,EAAA/G,EAAAwH,EAAAqI,QACA9I,EAAAD,OAAA8hB,sBACAphB,EAAAuD,aAAA8R,SAAA,KACA/W,MAAA,kBAA4C,MAAAiB,GAAAmL,MAAAlS,MAG5CgQ,EAAA0tC,WAAA,SAAAG,EAAAr2C,EAAAxH,EAAAqJ,GACAw0C,EAAA15C,KAAA25C,WAAAt2C,EAAAxH,EAAAqJ,GAAAlF,KAAA85C,aAAAz2C,EAAAxH,EAAAqJ,IAEA2G,EAAAkuC,UAAA,SAAA3Z,EAAAvkC,GACA,GAAAk0C,GAAAntC,EAAA5C,IAYA,OAXA,WAAAogC,EAAAE,SAGAyP,EAFAntC,EAAA+5B,WAAA9gC,GAEA,aAEA+G,EAAAy2C,YAGA,SAAAjZ,EAAAE,WACAyP,EAAAntC,EAAA22C,YAEAxJ,GAEAlkC,EAAAoxB,YAAA,SAAAmD,EAAAvkC,EAAAqJ,GACA,GAAAtC,GAAA5C,KAAA6D,EAAAjB,EAAAiB,GAAAlB,EAAAC,EAAAD,OACA60B,EAAA3zB,EAAAqC,OAAAk6B,GAAA6Y,EAAAzhB,EAAA1lB,QAAAyC,EAAA2kC,UACAnJ,EAAAntC,EAAAm3C,UAAA3Z,EAAAvkC,GAAA6H,KAAAd,EAEAD,GAAA4iB,wBAAA5iB,EAAA8iB,4BAAA5pB,KACA8G,EAAA+iB,yBACA9iB,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAkpB,QAAA96B,EAAA6iB,uBAAA5iB,EAAA80B,wBAAA77B,EAAA6F,IAAA,KAAA2H,UAAA,IAAAkL,EAAAijB,OAAApxB,KAAA,SAAAvK,EAAAqJ,GACA,GAAAsyB,GAAA3zB,EAAAqC,OAAAlG,KACAw3B,GAAA1lB,QAAAyC,EAAA2kC,WAAwDnJ,GAAA,EAAAvY,EAAA1lB,QAAAyC,EAAA2kC,UAAA,GAAAr9C,EAAAqJ,KAGxDsyB,EAAA1lB,QAAAyC,EAAA2kC,UAAAD,GACAlJ,GAAAkJ,EAAAzhB,EAAA37B,EAAAqJ,KAIA2G,EAAA0F,UAAA,WACA,GAAA3O,GAAA5C,KAAA6D,EAAAjB,EAAAiB,EACAjB,GAAAuQ,MAAAtP,EAAAyP,IAAAH,QAAAI,GAAA,mBAA2D3Q,EAAAo3C,mBAC3Dp3C,EAAAuQ,MAAA0O,OAAA,WAEA,MADAjf,GAAAq3C,SAA6Br3C,EAAAq3C,QAAA/zC,OAAA,IAAAqO,EAAApB,OAAAjP,KAAAlE,MAC7BA,MAEA4C,EAAAuQ,MAAAlO,MAAA,SAAAA,GACA,MAAArC,GAAAD,OAAA0M,aAAArP,KAAA2E,EAAAM,GAAAjF,KAAAtB,EAAAuG,KAGA4G,EAAAsI,aAAA,WACA,GAAAvR,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAs3C,EAAAr3C,EAAAq3C,QAAAr3C,EAAA0Q,IAAAtJ,OAAA,KAAAzF,KAAA,YAAA3B,EAAAsR,aAAA,YACAgmC,EAAAv3C,EAAAiU,cAAA,kBAEAqjC,GAAAt4C,MAAA,aAAAu4C,GAGAD,EAAAjwC,OAAA,KACAzF,KAAA,YAAA3B,EAAA4K,qBACAjJ,KAAA,QAAAgQ,EAAA7T,OAGAu5C,EAAA/zC,OAAA,IAAAqO,EAAA7T,OAAAsJ,OAAA,KACAzF,KAAA,QAAAgQ,EAAA4wB,WAGA8U,EAAA/zC,OAAA,IAAAqO,EAAA7T,OAAAsJ,OAAA,KACAzF,KAAA,QAAAgQ,EAAAusB,YAGAmZ,EAAAjwC,OAAA,KACAzF,KAAA,YAAA3B,EAAAuK,UACA5I,KAAA,QAAAgQ,EAAApB,OACAjP,KAAAtB,EAAAuQ,OAIAvQ,EAAAoB,KAAA4M,KAAAqpC,EAAAjwC,OAAA,KACAzF,KAAA,QAAAgQ,EAAAlQ,OACAE,KAAA,YAAA3B,EAAAsR,aAAA,SACA3P,KAAA,YAAA5B,EAAA0M,aAAA,GAAAzM,EAAAyK,kBACA1L,MAAA,aAAAgB,EAAAsjB,qBAAAi0B,EAAA,WAEAruC,EAAA0M,yBAAA,SAAAvG,GACA,GACAmoC,GAAAC,EAAAC,EAAAC,EADA13C,EAAA5C,KAAAi6C,EAAAr3C,EAAAq3C,QAAAt3C,EAAAC,EAAAD,OAEA2iC,EAAA1iC,EAAA0iC,cAAA5hC,KAAAd,GACA2iC,EAAA3iC,EAAA2iC,UAAA7hC,KAAAd,GACAq+B,EAAAr+B,EAAAq+B,eAAAv9B,KAAAd,GACAs+B,EAAAt+B,EAAAs+B,WAAAx9B,KAAAd,GACAu+B,EAAAv+B,EAAAu+B,WAAAz9B,KAAAd,EAEAD,GAAAiU,gBAEA0jC,EAAAL,EAAA/zC,OAAA,IAAAqO,EAAA4wB,WAAA97B,UAAA,IAAAkL,EAAAixB,UACAhmC,KAAAwS,GACAzN,KAAA,QAAA+gC,GACA+U,EAAAC,EAAA/wC,QAAAS,OAAA,KACArI,MAAA,aACA4C,KAAA,QAAA+gC,GAEA+U,EAAArwC,OAAA,KACAzF,KAAA,QAAAghC,GAGA6U,EAAAH,EAAA/zC,OAAA,IAAAqO,EAAAusB,YAAAz3B,UAAA,IAAAkL,EAAA+sB,WACA9hC,KAAAwS,GACAzN,KAAA,QAAA08B,GACAkZ,EAAAC,EAAA7wC,QAAAS,OAAA,KACArI,MAAA,aACA4C,KAAA,QAAA08B,GAEAkZ,EAAAnwC,OAAA,KACAzF,KAAA,QAAA28B,GAEAiZ,EAAAnwC,OAAA,KACAzF,KAAA,QAAA48B,GAGA8Y,EAAA5wC,UAAA,IAAAkL,EAAApB,MAAA,SACA5O,KAAA5B,EAAA0M,aAAA,iBAAA1M,EAAA0M,aAAAzM,EAAA+U,OAAA/U,EAAAgV,WAGA/L,EAAA0uC,qBAAA,SAAA9gC,GACA,GAAA7W,GAAA5C,IACA4C,GAAA43C,WAAA53C,EAAAq3C,QAAA5wC,UAAA,IAAAkL,EAAAkjB,MAAApuB,UAAA,IAAAkL,EAAAojB,KACAn4B,KAAAoD,EAAA6iC,QAAA/hC,KAAAd,IACAA,EAAA43C,WAAAjxC,QAAAS,OAAA,QACAzF,KAAA,QAAA3B,EAAA8iC,SAAAhiC,KAAAd,IACAjB,MAAA,iBACAA,MAAA,OAAAiB,EAAAmL,OACAnL,EAAA43C,WACA74C,MAAA,UAAAiB,EAAA0c,eAAA5b,KAAAd,IACAA,EAAA43C,WAAA9wC,OAAA9C,aAAA8R,SAAAe,GACA9X,MAAA,aACAgI,UAEAkC,EAAA4uC,qBAAA,SAAAC,EAAAplC,EAAAoD,IACApD,EAAAtV,KAAAw6C,WAAA5zC,WAAArL,KAAAumC,SAAAn6B,YAAA+Q,YAAA1Y,KAAAw6C,YACAj2C,KAAA,IAAAm2C,GACA/4C,MAAA,cAEAkK,EAAA8uC,sBAAA,SAAAlhC,GACA,GAAA7W,GAAA5C,IACA4C,GAAAg4C,YAAAh4C,EAAAq3C,QAAA5wC,UAAA,IAAAkL,EAAAmtB,OAAAr4B,UAAA,IAAAkL,EAAAotB,MACAniC,KAAAoD,EAAAg/B,SAAAl+B,KAAAd,IACAA,EAAAg4C,YAAArxC,QAAAS,OAAA,QACAzF,KAAA,QAAA3B,EAAAi/B,UAAAn+B,KAAAd,IACAjB,MAAA,SAAAiB,EAAAmL,OACAnL,EAAAg4C,YACAj5C,MAAA,UAAAiB,EAAA0c,eAAA5b,KAAAd,IACAA,EAAAg4C,YAAAlxC,OAAA9C,aAAA8R,SAAAe,GACA9X,MAAA,aACAgI,UAEAkC,EAAAgvC,sBAAA,SAAAC,EAAAxlC,EAAAoD,IACApD,EAAAtV,KAAA46C,YAAAh0C,WAAArL,KAAAumC,SAAAn6B,YAAA+Q,YAAA1Y,KAAA46C,aACAr2C,KAAA,IAAAu2C,GACAn5C,MAAA,cAEAkK,EAAAkvC,sBAAA,SAAAthC,GACA,GAAA7W,GAAA5C,KAAA6D,EAAAjB,EAAAiB,EACAjB,GAAAo4C,YAAAp4C,EAAAq3C,QAAA5wC,UAAA,IAAAkL,EAAAuvB,OAAAz6B,UAAA,IAAAkL,EAAAwvB,MACAvkC,KAAAoD,EAAAg/B,SAAAl+B,KAAAd,IACAA,EAAAo4C,YAAAzxC,QAAAS,OAAA,QACAzF,KAAA,QAAA3B,EAAAohC,UAAAtgC,KAAAd,IACAjB,MAAA,OAAAiB,EAAAmL,OACApM,MAAA,qBAAkG,MAAvDiB,GAAAqhC,gBAAApgC,EAAAqC,OAAAlG,MAAA2B,MAAA,WAAuD,IAClGiB,EAAAo4C,YACAr5C,MAAA,aACAiB,EAAAo4C,YAAAtxC,OAAA9C,aAAA8R,SAAAe,GACA9X,MAAA,aACAgI,UAEAkC,EAAAovC,sBAAA,SAAAC,EAAA5lC,EAAAoD,IACApD,EAAAtV,KAAAg7C,YAAAp0C,WAAArL,KAAAumC,SAAAn6B,YAAA+Q,YAAA1Y,KAAAg7C,aACAz2C,KAAA,IAAA22C,GACAv5C,MAAA,OAAA3B,KAAA+N,OACApM,MAAA,UAAA3B,KAAAikC,iBAEAp4B,EAAAsR,eAAA,SAAArE,EAAAF,EAAAF,EAAAe,EAAAQ,EAAAG,EAAAE,GACA,GACA4gC,GAAAR,EAAAI,EADAl4C,EAAA5C,KAAA6D,EAAAjB,EAAAiB,GAAAlB,EAAAC,EAAAD,MAGAC,GAAAq3C,QAAAt4C,MAAA,aAAAgB,EAAAiU,cAAA,oBAGAjU,EAAAiU,gBAEA/S,EAAA+5B,OAAA,SAAA/5B,EAAA+5B,MAAAz+B,MACAyD,EAAAuQ,MAAAP,OAAAhQ,EAAAlE,EAAA4c,aAAAuG,SAGA/I,IAGAlW,EAAAuQ,MAAAzB,SACA9O,EAAAuQ,MAAAP,OAAAhQ,EAAAlE,EAAA4c,aAAAuG,SAGAq5B,EAAAt4C,EAAAuZ,iBAAAlC,GAAA,GACAygC,EAAA93C,EAAAwZ,gBAAAhC,GAAA,GACA0gC,EAAAl4C,EAAAyZ,iBAAA/B,GAAA,GAEA1X,EAAA23C,qBAAA7hC,GACA9V,EAAA+3C,sBAAAjiC,GACA9V,EAAAm4C,sBAAAriC,GAEA9V,EAAA63C,qBAAAC,EAAAhiC,KACA9V,EAAAi4C,sBAAAC,EAAApiC,KACA9V,EAAAq4C,sBAAAC,EAAAxiC,QAIA7M,EAAAmuC,eAAA,WACA,GAAAp3C,GAAA5C,KAAAtB,EAAAkE,EAAAlE,CACAkE,GAAAyS,QACAC,gBAAA,EACAuD,MAAAjW,EAAAD,OAAA0Y,aACAvC,cAAA,EACAtD,mBAAA,EACA2D,eAAA,IAEAvW,EAAAD,OAAAujB,iBAAAhiB,KAAAtB,EAAAgB,IAAAlF,EAAA4c,cAEAzP,EAAA0U,iBAAA,SAAAjL,EAAAsD,GACA,GAAAwC,GAAAxY,EAAA5C,IACA4Y,MAAAy6B,SACAj4B,EAAAxC,EAAAy6B,UAEAj4B,EAAAxY,EAAAq3C,QAAA/zC,OAAA,IAAAqO,EAAAlQ,OACAiR,IAAiC8F,IAAAxU,eAEjChE,EAAAq3C,QAAA11C,KAAA,YAAA3B,EAAAsR,aAAA,YACAkH,EAAA7W,KAAA,YAAA3B,EAAAsR,aAAA,UAEArI,EAAAoJ,iBAAA,WACA,GAAArS,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAiQ,EAAA6jB,EAAA9zB,EAAAqS,eAAArS,EAAAqS,cAAApS,EAAAiQ,WAAAjQ,EAAApD,KAAAwS,UAAArP,EAAAqS,aAIA,OAHApS,GAAAic,iBACAjM,GAAAhQ,EAAAmd,UAAAnN,EAAA,IAAAhQ,EAAAmd,UAAAnN,EAAA,MAEAA,GAGA/G,EAAA2F,SAAA,WACA,GAAA2pC,GAAAv4C,EAAA5C,KAAA6D,EAAAjB,EAAAiB,GAAAlB,EAAAC,EAAAD,MAEAC,GAAAyQ,KAAAxP,EAAAs5B,SAAA9pB,OACAE,GAAA,uBACA4nC,EAAAt3C,EAAA+5B,MAAAwd,YACAx4C,EAAAyQ,KAAAslC,UAAA90C,EAAA+5B,MAAAwd,YAAAxL,OAAAhtC,EAAAlE,EAAA4c,YAAA,KACA3Y,EAAA0hB,iBAAAngB,KAAAtB,EAAAgB,IAAAC,EAAA+5B,MAAAwd,eAEA7nC,GAAA,kBACA3Q,EAAAy4C,cAAAn3C,KAAAtB,KAEA2Q,GAAA,qBACA,GAAAqqB,GAAA/5B,EAAA+5B,MAAAwd,WAEAxd,IAAAud,EAAAG,UAAA1d,EAAA0d,SAAAH,EAAAI,UAAA3d,EAAA2d,UAGA34C,EAAA0a,kBACA1a,EAAA2a,aACA5a,EAAA2hB,eAAApgB,KAAAtB,EAAAgB,IAAAhB,EAAAlE,EAAA4c,gBAEA1Y,EAAAyQ,KAAApO,MAAA,SAAAA,GACA,MAAAtC,GAAA0M,aAAArP,KAAA2E,EAAAM,GAAAjF,KAAAtB,EAAAuG,IAEArC,EAAAyQ,KAAAmoC,eAAA,WACA,GAAA5oC,GAAAjQ,EAAAwhB,YAAAxhB,EAAAwhB,aAAA,KACA,QAAAvR,EAAA,GAAArX,KAAA+D,IAAAsD,EAAAwvB,kBAAAxf,EAAA,GAAAA,EAAA,MAEAhQ,EAAAyQ,KAAAof,kBAAA,WACA,GAAA/B,GAAAe,EAAA7uB,EAAAlE,EAAA4c,aAAAmW,EAAA7uB,EAAAgwB,iBACAhgB,EAAA5S,KAAAw7C,gBAEA,OADAx7C,MAAA4E,aAAAgO,EAAA,GAAA8d,EAAA9d,EAAA,GAAA8d,IACA1wB,OAGA6L,EAAA+mB,cAAA,WACA,GAAAhwB,GAAA5C,KAAA2C,EAAAC,EAAAD,OAAAkB,EAAAjB,EAAAiB,GACA2pB,EAAA3pB,EAAA2pB,KAAA5qB,EAAAsQ,WAAA,GAAAvQ,EAAA4hB,aACAjlB,EAAAuE,EAAAvE,KAAAsD,EAAAsQ,WAAA,GAAAvQ,EAAA6hB,YACA,QAAAgJ,EAAAluB,IAEAuM,EAAA0R,WAAA,WACA,GAAA3a,GAAA5C,KAAAy7C,EAAA74C,EAAAD,OAAAyQ,aAAAxQ,EAAAyQ,KAAA,YACAzQ,GAAAwO,KAAAlL,OAAA,IAAAqO,EAAAQ,UAAA7Q,KAAAu3C,GAAAloC,GAAA,sBACA3Q,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAgnB,WAAAr3B,KAAAu3C,GAAAloC,GAAA,uBAEA1H,EAAAwvC,cAAA,WACA,GAAAz4C,GAAA5C,KAAA6D,EAAAjB,EAAAiB,GAAAlB,EAAAC,EAAAD,OAAA0Q,EAAAzQ,EAAAyQ,KAAA3U,EAAAkE,EAAAlE,CACA,IAAAiE,EAAAyQ,cAGA,IAAAxQ,EAAA8X,oBAAA9X,EAAApD,KAAAwS,SAAApV,OAAA,CAGA,iBAAAiH,EAAA+5B,MAAAwd,YAAAj8C,MAAAkU,EAAAslC,UAGA,MAFAj6C,GAAAmG,OAAAwO,EAAAslC,eACAtlC,GAAApO,MAAAvG,GAAA+zB,mBAGA7vB,GAAAmY,iBAAArc,EAAA4c,YAAA,KAAA1Y,EAAAsQ,WAAA,IACAxU,EAAAmG,QAAAjC,EAAAsQ,WAAA,SAAAxU,EAAA4c,YAAA,KAEA1Y,EAAAyS,QACAC,gBAAA,EACAuD,MAAAlW,EAAA0Y,aACAvC,cAAA,EACAI,eAAA,EACAC,eAAA,IAEA,cAAAtV,EAAA+5B,MAAAwd,YAAAj8C,OACAyD,EAAAgL,aAAA,GAEAjL,EAAAyhB,YAAAlgB,KAAAtB,EAAAgB,IAAAlF,EAAA4c,eAGAzP,EAAAmC,cAAA,WACA,GAAApL,GAAA5C,KAAA2C,EAAAC,EAAAD,OAAAkB,EAAAjB,EAAAiB,GACAlF,EAAAgE,EAAA2iB,YACAo2B,EAAAz8B,EAAAtc,EAAAwjB,eAAAxjB,EAAAwjB,cAAAtiB,EAAAoB,MAAA02C,aAAAtzC,QACA4a,EAAAtgB,EAAA0iB,WACAuK,IAEA,iBAAA/zB,GACA,GAAAkS,GAAArM,EAAA7F,EAAA6F,IAAA7F,EAAA2D,MAAA3D,EAAA2D,KAAAkC,IAAA7F,CAgBA,OAbA8C,GAAA+C,YAAAk6C,UACA7tC,EAAApP,EAAA+C,GAAA7F,GAGA8C,EAAA+C,GACAqM,EAAApP,EAAA+C,IAIAkuB,EAAA1T,QAAAxa,GAAA,GAA0CkuB,EAAArxB,KAAAmD,GAC1CqM,EAAA2tC,EAAA9rB,EAAA1T,QAAAxa,GAAAg6C,EAAA9+C,QACA+B,EAAA+C,GAAAqM,GAEAkV,YAAA24B,UAAA34B,EAAAlV,EAAAlS,GAAAkS,IAGAlC,EAAAqC,mBAAA,WACA,GAAAtL,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAhE,EAAAgE,EAAAwjB,cACAswB,EAAA9zC,EAAAyjB,gBACAy1B,EAAA,UAAApF,EAAA3D,KACAhhB,EAAA2kB,EAAA3kB,QAAA2kB,EAAA3kB,OAAAl1B,OAAA65C,EAAA3kB,UACAxyB,EAAAm3C,EAAAn3C,KAAA,GACA,OAAA2f,GAAAtc,EAAAyjB,iBAAA,SAAAzsB,GACA,GAAAuL,GAAAS,EAAAoI,EAAApP,IAAA/B,OAAA,EACA,KAAAsI,EAAA,EAAuBA,EAAA4sB,EAAAl1B,OAAmBsI,IAE1C,GADAS,EAAAk2C,EAAAliD,EAAA,IAAAA,EAAA2F,EACAqG,EAAAmsB,EAAA5sB,GAAA,CACA6I,EAAApP,EAAAuG,EACA,OAGA,MAAA6I,IACS,MAGTlC,EAAAw/B,WAAA,SAAAc,GACA,GAAAvpC,GAAA5C,KACA87C,EAAA3P,IAAAvpC,EAAA4P,QAAA,SAAA5P,EAAAqzC,sBAAArzC,EAAAm5C,QACAC,EAAA7P,IAAAvpC,EAAA4P,QAAA,SAAA5P,EAAAqzC,sBAAArzC,EAAAq5C,QACA,iBAAAt2C,EAAA+qB,EAAAhvB,GACA,GAAAtF,GAAA,OAAAwG,EAAA1D,KAAA8uB,MAAAtsB,GAAAs6C,EAAAF,CACA,OAAA1/C,GAAA8H,KAAAtB,EAAA+C,EAAA+qB,KAGA7kB,EAAAkwC,QAAA,SAAAp2C,GACA,GAAA/C,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAvG,EAAAuG,EAAAulB,mBAAAvlB,EAAAulB,mBAAAtlB,EAAA2pB,kBACA,OAAAnwB,GAAAuJ,IAEAkG,EAAAowC,SAAA,SAAAt2C,GACA,GAAA/C,GAAA5C,KAAA2C,EAAAC,EAAAD,OACAvG,EAAAuG,EAAAomB,oBAAApmB,EAAAomB,oBAAAnmB,EAAA2pB,kBACA,OAAAnwB,GAAAuJ,IAEAkG,EAAA0gB,mBAAA,SAAA5mB,GACA,MAAAga,GAAAha,MAAA,IAEAkG,EAAAoqC,sBAAA,SAAAtwC,EAAA+qB,GACA,WAAAA,GAAAogB,QAAA,QAEAjlC,EAAA+qB,gBAAA,SAAA7B,GACA,GACA34B,GADAwG,EAAA5C,KAAAklB,EAAAtiB,EAAAD,OAAAuiB,YACAg3B,EAAA,SAAAv2C,GAAkD,MAAAga,GAAAha,MAAA,GAalD,OAVAvJ,GADA,kBAAA8oB,GAAA9oB,OACA8oB,EAAA9oB,OACS,gBAAA8oB,GAAA9oB,OACT8oB,EAAA9oB,OAAA24B,GACA7P,EAAA9oB,OAAA24B,MAAA,EAAAmnB,EAAAh3B,EAAA9oB,OAAA24B,GAEA,WAAsC,UAGtCmnB,GAKArwC,EAAAswC,UAAA,SAAAvsB,GACA,OAAA1qB,GAAA,EAAuBA,EAAA0qB,EAAAhzB,OAAgBsI,IACvC,KAAA0qB,EAAA1qB,IAAAlF,MAAA+D,OAA2C,QAE3C,WAEA8H,EAAA6uB,SAAA,SAAAh5B,EAAA2B,GACArD,KAAA+D,MAAArC,GAAA1B,KAAAq0B,YAAAhxB,IAEAwI,EAAAuwC,UAAA,SAAAxsB,GACA,GAAA1qB,GAAA8M,IACA,KAAA9M,EAAA,EAAmBA,EAAA0qB,EAAAhzB,OAAgBsI,IACnC0qB,EAAA1qB,IAAAlF,MAAA+D,OAAuCiO,EAAAzT,KAAAyB,KAAAq0B,YAAAr0B,KAAA+D,MAAA6rB,EAAA1qB,KAEvC,OAAA8M,GAGA,IAAAuC,GAAA1I,EAAA0I,OACAlR,OAAA,YACA3C,MAAA,WACA4gC,UAAA,gBACAR,WAAA,iBACA0E,SAAA,eACAL,UAAA,gBACAiC,UAAA,gBACAN,WAAA,iBACAsP,SAAA,eACA91B,UAAA,gBACA02B,eAAA,sBACAQ,oBAAA,2BACAC,mBAAA,2BACAE,kBAAA,0BACAD,kBAAA,0BACAlW,eAAA,qBACApkB,gBAAA,sBACAme,UAAA,gBACAL,WAAA,iBACAI,iBAAA,wBACAD,mBAAA,0BACAtmB,SAAA,eACA5B,MAAA,WACAkpC,QAAA,aACAC,UAAA,eACA1E,OAAA,YACA9iC,QAAA,aACAmpB,MAAA,WACAmN,iBAAA,uBACAD,QAAA,aACAQ,YAAA,kBACAnU,MAAA,WACAiG,OAAA,YACAkE,KAAA,UACAD,MAAA,WACA/J,IAAA,SACAF,KAAA,UACAiN,OAAA,YACAD,QAAA,aACAuQ,IAAA;AACA+B,KAAA,UACAhT,KAAA,UACAD,MAAA,WACApyB,MAAA,WACAvL,KAAA,UACAohC,MAAA,WACA+P,WAAA,iBACArO,KAAA,UACAK,UAAA,gBACAD,MAAA,WACAH,OAAA,YACAmB,UAAA,gBACAd,WAAA,iBACAH,WAAA,iBACAY,MAAA,WACAb,OAAA,YACAmB,UAAA,gBACAd,WAAA,iBACAtqC,KAAA,UACAmF,MAAA,YACAisC,WAAA,kBACA5rC,MAAA,YACA8rC,WAAA,kBACAnwB,OAAA,aACAqwB,YAAA,mBACAP,iBAAA,uBACAnV,WAAA,iBACAiV,gBAAA,uBACAC,eAAA,sBACAnD,iBAAA,wBACAI,kBAAA,yBACAyL,SAAA,cACA7b,SAAA,aACAmc,SAAA,aACAE,SAAA,aAEAvtC,GAAA01B,cAAA,SAAAgb,EAAAxnB,GACA,UAAAwnB,EAAA,IAAAA,EAAAv8C,KAAA03B,wBAAA3C,IAEAlpB,EAAAy7B,UAAA,SAAAzrC,GACA,MAAAmE,MAAAuhC,cAAAhtB,EAAApO,KAAAtK,EAAAa,QAEAmP,EAAAs7B,WAAA,SAAAtrC,GACA,MAAAmE,MAAAuhC,cAAAhtB,EAAAgzB,MAAA1rC,EAAA6F,KAEAmK,EAAA2wC,WAAA,SAAA3gD,GACA,MAAAmE,MAAAuhC,cAAAhtB,EAAAijB,MAAA37B,EAAAa,QAEAmP,EAAA4wC,YAAA,SAAA5gD,GACA,MAAAmE,MAAAuhC,cAAAhtB,EAAAkpB,OAAA5hC,EAAA6F,KAEAmK,EAAAg2B,UAAA,SAAAhmC,GACA,MAAAmE,MAAAw8C,WAAA3gD,GAAAmE,KAAAuhC,cAAAhtB,EAAAotB,KAAA9lC,EAAA6F,KAEAmK,EAAAq1B,WAAA,SAAArlC,GACA,MAAAmE,MAAAy8C,YAAA5gD,GAAAmE,KAAAuhC,cAAAhtB,EAAAmtB,MAAA7lC,EAAA6F,KAEAmK,EAAA+4B,YAAA,SAAA/oC,GACA,MAAAmE,MAAAw8C,WAAA3gD,GAAAmE,KAAAuhC,cAAAhtB,EAAAmwB,OAAA7oC,EAAAa,QAEAmP,EAAAu1B,aAAA,SAAAvlC,GACA,MAAAmE,MAAAy8C,YAAA5gD,GAAAmE,KAAAuhC,cAAAhtB,EAAAkwB,QAAA5oC,EAAA6F,KAEAmK,EAAA65B,SAAA,SAAA7pC,GACA,MAAAmE,MAAAw8C,WAAA3gD,GAAAmE,KAAAuhC,cAAAhtB,EAAAojB,IAAA97B,EAAAa,QAEAmP,EAAA05B,UAAA,SAAA1pC,GACA,MAAAmE,MAAAy8C,YAAA5gD,GAAAmE,KAAAuhC,cAAAhtB,EAAAkjB,KAAA57B,EAAA6F,KAEAmK,EAAAqrC,SAAA,SAAAr7C,GACA,MAAAmE,MAAAw8C,WAAA3gD,EAAA2D,MAAAQ,KAAAuhC,cAAAhtB,EAAAygC,IAAAn5C,EAAA2D,KAAAkC,KAEAmK,EAAAirC,UAAA,SAAAj7C,GACA,MAAAmE,MAAAy8C,YAAA5gD,EAAA2D,MAAAQ,KAAAuhC,cAAAhtB,EAAAwiC,KAAAl7C,EAAA2D,KAAAkC,KAEAmK,EAAAm4B,UAAA,SAAAnoC,GACA,MAAAmE,MAAAw8C,WAAA3gD,GAAAmE,KAAAuhC,cAAAhtB,EAAAwvB,KAAAloC,EAAA6F,KAEAmK,EAAAs1B,WAAA,SAAAtlC,GACA,MAAAmE,MAAAy8C,YAAA5gD,GAAAmE,KAAAuhC,cAAAhtB,EAAAuvB,MAAAjoC,EAAA6F,KAEAmK,EAAAisC,YAAA,SAAAj8C,EAAAqJ,GACA,MAAAlF,MAAAuhC,cAAAhtB,EAAAqjC,OAAA1yC,GAAA,cAAArJ,KAAA,WAEAgQ,EAAAqwB,WAAA,SAAArgC,GACA,MAAAmE,MAAAuhC,cAAAhtB,EAAAgnB,UAAA1/B,EAAAa,QAEAmP,EAAA6wC,YAAA,SAAAh7C,GACA,GAAAkB,GAAA5C,KACA28C,EAAA/5C,EAAAD,OAAAkiB,aAAAnjB,GAAAk7C,EAAA,EAIA,OAHAD,KACAC,EAAA,IAAAroC,EAAAlR,OAAA,IAAAs5C,GAEA/5C,EAAA2+B,cAAAhtB,EAAAlR,OAAA3B,GAAAk7C,GAEA/wC,EAAAw1B,WAAA,SAAAxlC,GACA,MAAAmE,MAAA68C,aAAAhhD,GAAAmE,KAAA88C,eAAAjhD,IAEAgQ,EAAAgxC,aAAA,SAAAhhD,GACA,WAAAmE,KAAAkP,iBAAAgN,QAAArgB,EAAA6F,KAAA,EAAA6S,EAAA8nC,QAAA,KAEAxwC,EAAAixC,eAAA,SAAAjhD,GACA,WAAAmE,KAAAmP,mBAAA+M,QAAArgB,EAAA6F,KAAA,EAAA6S,EAAA+nC,UAAA,KAEAzwC,EAAAq7B,eAAA,SAAArrC,GACA,MAAA0Y,GAAA6yB,UAAApnC,KAAA08C,YAAA7gD,EAAA6F,KAEAmK,EAAAo1B,eAAA,SAAAplC,GACA,MAAA0Y,GAAA+sB,UAAAthC,KAAA08C,YAAA7gD,EAAA6F,KAEAmK,EAAAy5B,cAAA,SAAAzpC,GACA,MAAA0Y,GAAAixB,SAAAxlC,KAAA08C,YAAA7gD,EAAA6F,KAEAmK,EAAAgrC,cAAA,SAAAh7C,GACA,MAAA0Y,GAAA6hC,SAAAp2C,KAAA08C,YAAA7gD,EAAA2D,KAAAkC,KAEAmK,EAAA6rB,wBAAA,SAAA3C,GACA,MAAAA,IAAA,IAAAA,GAAA,IAAAA,GAAAkF,QAAA,2CAA0G,SAE1GpuB,EAAAkvB,eAAA,SAAAr5B,EAAA66C,GACA,OAAAA,GAAA,QAAAhoC,EAAAlR,OAAArD,KAAA03B,wBAAAh2B,IAEAmK,EAAAsqC,gBAAA,SAAAvmB,EAAA2sB,GACA,GAAA35C,GAAA5C,IAEA,OADA4vB,SACAA,EAAAhzB,OAAAgzB,EAAAnlB,IAAA,SAAA/I,GAAmD,MAAAkB,GAAAm4B,eAAAr5B,EAAA66C,KAAwC,MAE3F1wC,EAAAkxC,eAAA,SAAAr7C,GACA,UAAA6S,EAAAymB,WAAAh7B,KAAA03B,wBAAAh2B,IAEAmK,EAAAyhC,gBAAA,SAAA1d,GACA,GAAAhtB,GAAA5C,IACA,OAAA4vB,MAAAhzB,OAAAgzB,EAAAnlB,IAAA,SAAA/I,GAA0D,MAAAkB,GAAAm6C,eAAAr7C,KAAgC,KAG1F,IAAAie,GAAA9T,EAAA8T,QAAA,SAAAha,GACA,MAAAA,IAAA,IAAAA,GAEA8wB,EAAA5qB,EAAA4qB,WAAA,SAAAoD,GACA,wBAAAA,IAEA8O,EAAA98B,EAAA88B,SAAA,SAAA9O,GACA,sBAAAA,IAEAG,EAAAnuB,EAAAmuB,YAAA,SAAAr0B,GACA,yBAAAA,IAEA2nB,EAAAzhB,EAAAyhB,UAAA,SAAA3nB,GACA,yBAAAA,IAEAy4B,EAAAvyB,EAAAuyB,OAAA,SAAAz4B,GACA,UAAApK,KAAAiJ,KAAAmB,EAAA,KAEA0Z,EAAAxT,EAAAwT,YAAA,SAAA6D,GACA,MAAA3nB,MAAAiJ,KAAA0e,GAAA,IAEAuO,EAAA5lB,EAAA4lB,WAAA,SAAA51B,GACA,MAAAA,GAAA,GAAAA,EAAA,IAEA2xC,EAAA3hC,EAAA2hC,QAAA,SAAA3T,GACA,yBAAAA,IAAA,OAAAA,GAAA8O,EAAA9O,IAAA,IAAAA,EAAAj9B,QAAA,gBAAAi9B,IAAA,IAAApgC,OAAA8J,KAAAs2B,GAAAj9B,QAEAqiB,EAAApT,EAAAoT,SAAA,SAAA4a,GACA,OAAAhuB,EAAA2hC,QAAA3T,IAEAjf,EAAA/O,EAAA+O,UAAA,SAAA3b,EAAAwE,EAAAovC,GACA,MAAAvlB,GAAAruB,EAAAwE,IAAAxE,EAAAwE,GAAAovC,GAEA/f,EAAAjnB,EAAAinB,SAAA,SAAAkqB,EAAArjD,GACA,GAAAmxC,IAAA,CAIA,OAHArxC,QAAA8J,KAAAy5C,GAAAx5C,QAAA,SAAAC,GACAu5C,EAAAv5C,KAAA9J,IAA0CmxC,GAAA,KAE1CA,GAEAY,EAAA7/B,EAAA6/B,SAAA,SAAAuR,GACA,sBAAAA,KAAAhjB,QAAA,aAAoEA,QAAA,aAAsBgjB,GAE1F3D,EAAAztC,EAAAytC,WAAA,SAAAxvC,GACA,GAAAzD,GAAAyD,EAAAxD,wBACA42C,GAAApzC,EAAAy8B,YAAAC,QAAA,GAAA18B,EAAAy8B,YAAAC,QAAA,IACA+R,EAAA2E,EAAA,GAAAx+C,EAAA+5C,EAAAl9C,KAAAiyB,IAAA0vB,EAAA,GAAAv4C,EAAAu4C,EAAA,GAAAv4C,EACA,QAAoBjG,EAAA65C,EAAA5zC,EAAA8zC,EAAAjyC,MAAAH,EAAAG,MAAAD,OAAAF,EAAAE,QAGpB5C,GAAAupC,MAAA,SAAA5X,GACA,GAAA8B,GAAAx0B,EAAA5C,KAAA6C,QAEAyyB,GAAA1yB,EAAAiyB,eAAAS,GACA8B,EAAAx0B,EAAA0Q,IAAAjK,UAAAzG,EAAAuzC,gBAAA7gB,EAAAj4B,OAAAuF,EAAA6V,eAAA7V,KAEA5C,KAAAgwC,SACAhwC,KAAAm9C,UACA/lB,EAAAtlB,QAAAyC,EAAA8nC,SAAA,GAAAvqC,QAAAyC,EAAA+nC,WAAA,GACA15C,EAAA4T,cACA5T,EAAAszC,UAAA5gB,GAEA1yB,EAAAqqC,kBAAA3X,GAAA,GAEA1yB,EAAAsM,iBAAAomB,EACA1yB,EAAAuM,mBAAAvM,EAAAuM,mBAAA9R,OAAA,SAAAqE,GACA,MAAA4zB,GAAApZ,QAAAxa,GAAA,KAIAiC,EAAAw5C,QAAA,SAAA7nB,GACA,GAAA8B,GAAAx0B,EAAA5C,KAAA6C,QAEAyyB,GAAA1yB,EAAAiyB,eAAAS,GACA8B,EAAAx0B,EAAA0Q,IAAAjK,UAAAzG,EAAAuzC,gBAAA7gB,EAAAj4B,OAAAuF,EAAA6V,eAAA7V,KAEAw0B,EAAAtlB,QAAAyC,EAAA8nC,SAAA,GAAAvqC,QAAAyC,EAAA+nC,WAAA,GACA15C,EAAA4T,cACA5T,EAAA2zC,YAAAjhB,GAEA1yB,EAAAqqC,kBAAA3X,GAAA,GAEA1yB,EAAAsM,iBAAAtM,EAAAsM,iBAAA7R,OAAA,SAAAqE,GACA,MAAA4zB,GAAApZ,QAAAxa,GAAA,IAEAkB,EAAAuM,mBAAAmmB,GAGA3xB,EAAAqsC,OAAA,SAAA1a,GACA,GAAA8B,GAAAx0B,EAAA5C,KAAA6C,QAEAyyB,GAAA1yB,EAAAiyB,eAAAS,GACA8B,EAAAx0B,EAAA0Q,IAAAjK,UAAAzG,EAAAuzC,gBAAA7gB,IAEA8B,EAAAtlB,QAAAyC,EAAA8nC,SAAA,GAAAvqC,QAAAyC,EAAA+nC,WAAA,GACA15C,EAAA4T,cACA5T,EAAA2zC,YAAAjhB,GAEA1yB,EAAAD,OAAA8P,cACA7P,EAAAyqC,WAAA/X,EAAAj4B,OAAAuF,EAAAoyB,eAAAtxB,KAAAd,KACAA,EAAAsT,OAAA7M,UAAAzG,EAAA0qC,gBAAAhY,IACAj4B,OAAA,WACA,MAAAuF,GAAAiB,GAAAqC,OAAAlG,MAAA8R,QAAAyC,EAAA44B,qBAEAr7B,QAAAyC,EAAA44B,mBAAA,IAGAvqC,EAAAsM,oBACAtM,EAAAuM,uBAGAxL,EAAAmsC,KAAA,SAAAxa,EAAAr2B,GACA,GAAA+S,GAAApP,EAAA5C,KAAA6C,QAEAyyB,GAAA1yB,EAAAiyB,eAAAS,GACAr2B,QAEA2D,EAAA2yB,sBAAAD,GACAtjB,EAAApP,EAAA0Q,IAAAjK,UAAAzG,EAAAuzC,gBAAA7gB,IAEAtjB,EAAApL,aACAjF,MAAA,yBACAuC,KAAAtB,EAAAogB,OAAA,WACAhR,EAAArQ,MAAA,gBAAAA,MAAA,eAGA1C,EAAAga,YACArW,EAAAyqC,WAAA/X,GAGA1yB,EAAAyS,QAAmBI,sBAAA,EAAAD,mBAAA,EAAAyD,YAAA,KAGnBtV,EAAAksC,KAAA,SAAAva,EAAAr2B,GACA,GAAA+S,GAAApP,EAAA5C,KAAA6C,QAEAyyB,GAAA1yB,EAAAiyB,eAAAS,GACAr2B,QAEA2D,EAAAwP,mBAAAkjB,GACAtjB,EAAApP,EAAA0Q,IAAAjK,UAAAzG,EAAAuzC,gBAAA7gB,IAEAtjB,EAAApL,aACAjF,MAAA,yBACAuC,KAAAtB,EAAAogB,OAAA,WACAhR,EAAArQ,MAAA,gBAAAA,MAAA,eAGA1C,EAAAga,YACArW,EAAA2qC,WAAAjY,GAGA1yB,EAAAyS,QAAmBI,sBAAA,EAAAD,mBAAA,EAAAyD,YAAA,KAGnBtV,EAAAosC,OAAA,SAAAza,EAAAr2B,GACA,GAAAmhC,GAAApgC,KAAA4C,EAAA5C,KAAA6C,QACAD,GAAAiyB,eAAAS,GAAA9xB,QAAA,SAAAuxB,GACAnyB,EAAA6V,eAAAsc,GAAAqL,EAAAyP,KAAA9a,EAAA91B,GAAAmhC,EAAA0P,KAAA/a,EAAA91B,MAIA0E,EAAA0P,KAAA,SAAAxO,GACA,GAAAjC,GAAA5C,KAAA6C,QASA,OARAgC,KACAjC,EAAAic,iBACAha,IAAA4F,IAAA,SAAA/L,GAAkD,MAAAkE,GAAAmd,UAAArhB,MAElDkE,EAAAuQ,MAAAP,OAAA/N,GACAjC,EAAAyS,QAAuBG,mBAAA,EAAAqD,MAAAjW,EAAAD,OAAA0Y,eACvBzY,EAAAD,OAAAyhB,YAAAlgB,KAAAlE,KAAA4C,EAAAlE,EAAA4c,cAEA1Y,EAAAuQ,MAAAP,UAEAjP,EAAA0P,KAAA+pC,OAAA,SAAAC,GACA,GAAAz6C,GAAA5C,KAAA6C,QACAD,GAAAD,OAAAyQ,aAAAiqC,EACAz6C,EAAA6b,mBAEA9a,EAAA25C,OAAA,WACA,GAAA16C,GAAA5C,KAAA6C,QACAD,GAAAuQ,MAAAoqC,QAAA17B,SACAjf,EAAAyS,QAAmBG,mBAAA,KAGnB7R,EAAA0P,KAAA/T,IAAA,SAAAA,GACA,GAAAsD,GAAA5C,KAAA6C,SAAAF,EAAAC,EAAAD,OAAAkB,EAAAjB,EAAAiB,EACA,YAAAvE,UACAqD,EAAA6hB,WAAA3gB,EAAAvE,KAAAsD,EAAAsQ,WAAA,GAAA5T,KAGAqD,EAAA6hB,YAIA7gB,EAAA0P,KAAAma,IAAA,SAAAA,GACA,GAAA5qB,GAAA5C,KAAA6C,SAAAF,EAAAC,EAAAD,OAAAkB,EAAAjB,EAAAiB,EACA,YAAA2pB,UACA7qB,EAAA4hB,WAAA1gB,EAAA2pB,KAAA5qB,EAAAsQ,WAAA,GAAAsa,KAGA7qB,EAAA4hB,YAIA5gB,EAAA0P,KAAAhL,MAAA,SAAAA,GACA,MAAA6C,WAAAtO,QACA0wB,EAAAjlB,EAAA/I,MAAuCU,KAAA6E,OAAAvF,IAAA+I,EAAA/I,UACvCguB,EAAAjlB,EAAAmlB,MAAuCxtB,KAAA6E,OAAA2oB,IAAAnlB,EAAAmlB,QAGvCluB,IAAAU,KAAA6E,OAAAvF,MACAkuB,IAAAxtB,KAAA6E,OAAA2oB,QAKA7pB,EAAAg3B,KAAA,SAAAC,GACA,GAAAh4B,GAAA5C,KAAA6C,SAAAF,EAAAC,EAAAD,MAgCA,OA9BAi4B,GAAA7oB,IACAnP,EAAA6wB,MAAAmH,EAAA7oB,IAGA,SAAA6oB,IACAj3B,EAAAnE,KAAAg+C,MAAA95C,KAAA1D,MAAA46B,EAAA4iB,OAGA,WAAA5iB,IACAnhC,OAAA8J,KAAAq3B,EAAA6iB,SAAAj6C,QAAA,SAAA9B,GACAiB,EAAAkiB,aAAAnjB,GAAAk5B,EAAA6iB,QAAA/7C,KAIA,cAAAk5B,IAAAh4B,EAAAmY,kBACApY,EAAAqd,kBAAA4a,EAAA8iB,YAGA,QAAA9iB,IACAnhC,OAAA8J,KAAAq3B,EAAA52B,MAAAR,QAAA,SAAA9B,GACAiB,EAAAoiB,UAAArjB,GAAAk5B,EAAA52B,KAAAtC,KAIA,UAAAk5B,IACAnhC,OAAA8J,KAAAq3B,EAAAj8B,QAAA6E,QAAA,SAAA9B,GACAiB,EAAA2iB,YAAA5jB,GAAAk5B,EAAAj8B,OAAA+C,KAIA,YAAAk5B,IAAAh4B,EAAAu5C,UAAAvhB,EAAA+iB,cACA/6C,GAAA+3B,KAAA/3B,EAAAw5C,UAAAxhB,EAAA+iB,UAAA/iB,EAAAxX,WAIA,UAAAwX,GAEAh4B,EAAAk4B,OAAAl4B,EAAAiyB,eAAA,iBAAA+F,GAAAE,QAAAF,EAAAE,OAAA,KAAAF,EAAAE,QAAA,WACAl4B,EAAAi4B,aAAAD,KAGAh4B,EAAAi4B,aAAAD,KAIAj3B,EAAAm3B,OAAA,SAAAF,GACA,GAAAh4B,GAAA5C,KAAA6C,QACA+3B,SACAA,YAAAgjB,OACAhjB,GAAoBhL,IAAAgL,GACX,gBAAAA,KACTA,GAAoBhL,KAAAgL,KAEpBh4B,EAAAk4B,OAAAl4B,EAAAiyB,eAAA+F,EAAAhL,KAAA,WACAhtB,EAAAyS,QAAuBI,sBAAA,EAAAD,mBAAA,EAAAyD,YAAA,IACvB2hB,EAAAxX,MAA4BwX,EAAAxX,UAI5Bzf,EAAAiW,KAAA,SAAAghB,GACA,GACA5oB,GAAAxS,EACAq+C,EAAAh5C,EAAAi5C,EAAAC,EAAAttB,EAAAutB,EAFAp7C,EAAA5C,KAAA6C,SACAo7C,KAAAC,EAAAt7C,EAAAwvB,kBACAx1B,EAAA,EAAAuhD,EAAA,CAEA,IAAAvjB,EAAAlB,KACAl6B,EAAAoD,EAAA6J,kBAAAmuB,EAAAlB,KAAAkB,EAAAr3B,UAEA,IAAAq3B,EAAAj+B,KACA6C,EAAAoD,EAAA+J,kBAAAiuB,EAAAj+B,UAEA,KAAAi+B,EAAAT,QAIA,MAHA36B,GAAAoD,EAAAiK,qBAAA+tB,EAAAT,SAKAnoB,EAAApP,EAAAqP,qBAAAzS,GAAA,GAGAoD,EAAApD,KAAAwS,QAAAxO,QAAA,SAAA8a,GACA,GAAApZ,GAAAqqB,EAAAub,GAAA,CACA,KAAA5lC,EAAA,EAAuBA,EAAA8M,EAAApV,OAAoBsI,IAC3C,GAAAoZ,EAAA5c,KAAAsQ,EAAA9M,GAAAxD,GAAA,CAQA,IAPAopC,GAAA,EAEAxsB,EAAAwT,OAAAxT,EAAAwT,OAAAl1B,OAAA,KACAuhD,EAAA7/B,EAAAwT,OAAAxT,EAAAwT,OAAAl1B,OAAA,GAAAF,MAAA,GAEAE,EAAAoV,EAAA9M,GAAA4sB,OAAAl1B,OAEA2yB,EAAA,EAA+BA,EAAA3yB,EAAY2yB,IAC3Cvd,EAAA9M,GAAA4sB,OAAAvC,GAAA7yB,MAAAyhD,EAAA5uB,EACA3sB,EAAAic,iBACA7M,EAAA9M,GAAA4sB,OAAAvC,GAAA7wB,EAAAy/C,EAAA5uB,EAGAjR,GAAAwT,OAAAxT,EAAAwT,OAAAtqB,OAAAwK,EAAA9M,GAAA4sB,QAEA9f,EAAA1T,OAAA4G,EAAA,EACA,OAGA4lC,GAAyBmT,EAAA1/C,KAAA+f,EAAA5c,MAIzBkB,EAAApD,KAAAwS,QAAAxO,QAAA,SAAA8a,GACA,GAAApZ,GAAAqqB,CACA,KAAArqB,EAAA,EAAuBA,EAAA+4C,EAAArhD,OAAwBsI,IAC/C,GAAAoZ,EAAA5c,KAAAu8C,EAAA/4C,GAEA,IADAi5C,EAAA7/B,EAAAwT,OAAAxT,EAAAwT,OAAAl1B,OAAA,GAAAF,MAAA,EACA6yB,EAAA,EAA+BA,EAAA3yB,EAAY2yB,IAC3CjR,EAAAwT,OAAAvzB,MACAmD,GAAA4c,EAAA5c,GACAhF,MAAAyhD,EAAA5uB,EACA7wB,EAAAkE,EAAAic,eAAAjc,EAAA4wB,gBAAA2qB,EAAA5uB,GAAA4uB,EAAA5uB,EACA51B,MAAA,SAQAiJ,EAAApD,KAAAwS,QAAApV,QACAoV,EAAAxO,QAAA,SAAA8a,GACA,GAAApZ,GAAAk5C,IACA,KAAAl5C,EAAAtC,EAAApD,KAAAwS,QAAA,GAAA8f,OAAA,GAAAp1B,MAA4DwI,EAAAi5C,EAAUj5C,IACtEk5C,EAAA7/C,MACAmD,GAAA4c,EAAA5c,GACAhF,MAAAwI,EACAxG,EAAAkE,EAAAic,eAAAjc,EAAA4wB,gBAAAtuB,KACAvL,MAAA,MAGA2kB,GAAAwT,OAAAtuB,QAAA,SAAAmC,GACAA,EAAAjJ,OAAAyhD,EACAv7C,EAAAic,iBACAlZ,EAAAjH,GAAAy/C,KAGA7/B,EAAAwT,OAAAssB,EAAA52C,OAAA8W,EAAAwT,UAGAlvB,EAAApD,KAAAwS,QAAApP,EAAApD,KAAAwS,QAAAxK,OAAAwK,GAGA6rC,EAAAj7C,EAAAwvB,kBACA0rB,EAAAl7C,EAAApD,KAAAwS,QAAA,GACA+rC,EAAAD,EAAAhsB,OAAA,GAGAxE,EAAAsN,EAAAojB,KACAphD,EAAA,EACAohD,EAAAp7C,EAAAic,eAAAjc,EAAAmd,UAAA6a,EAAAojB,IAAApjB,EAAAojB,GACAF,EAAAhsB,OAAAtuB,QAAA,SAAAmC,GACAA,EAAAjH,EAAAs/C,GAA+BphD,OAEtB0wB,EAAAsN,EAAAh+B,UACTA,EAAAg+B,EAAAh+B,QAIAshD,EAYS,IAAAA,GACTt7C,EAAAic,iBACA4R,GAAAqtB,EAAAhsB,OAAAgsB,EAAAhsB,OAAAl1B,OAAA,GAAA8B,EAAAq/C,EAAAr/C,GAAA,EACAmG,GAAA,GAAApJ,OAAAsiD,EAAAr/C,EAAA+xB,GAAA,GAAAh1B,OAAAsiD,EAAAr/C,EAAA+xB,IACA7tB,EAAAoY,cAAA,cAAAnW,KAbA4rB,EAFA7tB,EAAAic,eACAi/B,EAAAhsB,OAAAl1B,OAAA,EACAkhD,EAAAhsB,OAAAgsB,EAAAhsB,OAAAl1B,OAAA,GAAA8B,EAAAq/C,EAAAr/C,EAEAq/C,EAAAr/C,EAAAkE,EAAAiQ,WAAAjQ,EAAApD,KAAAwS,SAAA,GAGA,EAEAnN,GAAAk5C,EAAAr/C,EAAA+xB,EAAAstB,EAAAr/C,GACAkE,EAAAoY,cAAA,cAAAnW,IAUAjC,EAAAsS,cAAAtS,EAAApD,KAAAwS,SAGApP,EAAAyS,QACAuE,MACAld,MAAAqhD,EAAArhD,MACAE,SACA8b,SAAAiH,EAAAib,EAAAliB,UAAAkiB,EAAAliB,SAAA9V,EAAAD,OAAAgW,oBACAyK,KAAAwX,EAAAxX,KACA86B,gBAEAjlC,YAAA,EACA3D,eAAA4oC,EAAA,EACAllC,iBAAA,EACAI,iBAAA,KAIAvN,EAAA8R,aAAA,SAAAid,GACA,GAAAh4B,GAAA5C,KAAA2C,EAAAC,EAAAD,OAAAkB,EAAAjB,EAAAiB,EAEA,mBACA,GAYAw6C,GAAAC,EAKAz5C,EAjBAmN,EAAA4oB,EAAA5oB,QACA4H,EAAAghB,EAAAhhB,KACAN,EAAAshB,EAAAthB,QACAC,EAAAqhB,EAAArhB,SACAF,EAAAuhB,EAAAvhB,SACAU,EAAA6gB,EAAA7gB,GACAC,EAAA4gB,EAAA5gB,GACAW,EAAAigB,EAAAjgB,GACAnB,EAAAohB,EAAAphB,SACA3Q,EAAA+xB,EAAA/xB,SACA6P,EAAAkiB,EAAAliB,SAEA6lC,EAAA,EACAC,EAAA5kC,EAAAld,MACA+hD,EAAA7kC,EAAAhd,OACA8hD,EAAA97C,EAAAmxB,gBAAAnxB,EAAApD,KAAAwS,QAAA,GAAA8f,OAAA0sB,GACAG,EAAA/7C,EAAAmxB,gBAAAnxB,EAAApD,KAAAwS,QAAA,GAAA8f,OAAA0sB,EAAAC,GACAnjC,EAAA1Y,EAAAlE,EAAAmG,SACA+5C,EAAAhlC,EAAAlB,YACA0K,EAAAxJ,EAAAwJ,MAAA,aACAy7B,EAAAj8C,EAAAyb,eAEAgrB,EAAAzmC,EAAAymC,OAAAxlC,EAAAwF,cACAkgC,EAAA3mC,EAAA2mC,YAAA1lC,EAAAwF,cACAwuC,EAAAj1C,EAAAi1C,YAAAh0C,EAAAwF,cACA09B,EAAAnkC,EAAAmkC,UAAAljC,EAAAwF,cACAs8B,EAAA/iC,EAAA+iC,SAAA9hC,EAAAwF,cACAo4B,EAAA7+B,EAAA6+B,UAAA59B,EAAAwF,cACAw6B,EAAAjhC,EAAAihC,UAAAhgC,EAAAwF,cACAm7B,EAAA5hC,EAAA4hC,YAAA3gC,EAAAwF,aAGAzG,GAAA+K,SAAA,EAGA/K,EAAApD,KAAAwS,QAAAxO,QAAA,SAAA3H,GACAA,EAAAi2B,OAAAxzB,OAAA,EAAAmgD,KAIA55C,EAAAjC,EAAAoY,cAAAhJ,GAAA,MAEApP,EAAA6mC,aAAiC7mC,EAAA6mC,aAAA,GAGjC7vB,EAAAskC,aAaAG,EADa,IAAAzkC,EAAAskC,eAAAQ,KAAAhgD,MAAAigD,KAAAjgD,GACbkE,EAAAlE,EAAA4c,EAAA,IAAA1Y,EAAAlE,EAAAmG,EAAA,IAEAjC,EAAAic,eACAjc,EAAAlE,EAAA4c,EAAA,IAAA1Y,EAAAlE,EAAAmG,EAAA,IAEAjC,EAAAlE,EAAAggD,EAAAhgD,GAAAkE,EAAAlE,EAAAigD,EAAAjgD,GAjBA,IAAAkE,EAAApD,KAAAwS,QAAA,GAAA8f,OAAAl1B,OACAyhD,EAAAz7C,EAAAlE,EAAA4c,EAAA,IAAA1Y,EAAAlE,EAAAmG,EAAA,IAEAjC,EAAAic,gBACA6/B,EAAA97C,EAAAmxB,gBAAAnxB,EAAApD,KAAAwS,QAAA,GAAA8f,OAAA,GACA6sB,EAAA/7C,EAAAmxB,gBAAAnxB,EAAApD,KAAAwS,QAAA,GAAA8f,OAAAlvB,EAAApD,KAAAwS,QAAA,GAAA8f,OAAAl1B,OAAA,GACAyhD,EAAAz7C,EAAAlE,EAAAggD,EAAAhgD,GAAAkE,EAAAlE,EAAAigD,EAAAjgD,IAEA2/C,EAAA5sB,EAAA5sB,GAAA,EAYA05C,EAAA9sB,EAAAnW,GAAAmW,EAAA5sB,GACAy5C,EAAA,aAAAD,EAAA,aAAAE,EAAA,MAEA37C,EAAA05B,iBAEAz4B,EAAA+C,aAAAk4C,KAAA,UAAApmC,SAAAkmC,GAAAx4C,KAAA,WACAy4C,EAAAtgC,IAAA3b,EAAAoB,KAAAtF,EAAAkI,aAAA1C,KAAAtB,EAAAuY,QACA0jC,EAAAtgC,IAAAonB,EAAA/+B,aAAArC,KAAA,YAAA+5C,IACAO,EAAAtgC,IAAAkjB,EAAA76B,aAAArC,KAAA,YAAA+5C,IACAO,EAAAtgC,IAAAslB,EAAAj9B,aAAArC,KAAA,YAAA+5C,IACAO,EAAAtgC,IAAAimB,EAAA59B,aAAArC,KAAA,YAAA+5C,IACAO,EAAAtgC,IAAAwoB,EAAAngC,aAAArC,KAAA,YAAA+5C,IACAO,EAAAtgC,IAAAs5B,EAAAx6C,OAAAuF,EAAAw1C,aAAAxxC,aAAArC,KAAA,YAAA+5C,IACAO,EAAAtgC,IAAA8qB,EAAAziC,aAAArC,KAAA,YAAA+5C,IACAO,EAAAtgC,IAAAgrB,EAAA3iC,aAAArC,KAAA,YAAA+5C,MAEAp6C,KAAA26C,EAAA,WACA,GAAA35C,GAAAu4B,KAAA8J,KAAArM,IAGA,IAAAujB,EAAA,CACA,IAAAv5C,EAAA,EAA+BA,EAAAu5C,EAAgBv5C,IAC/Cu4B,EAAAl/B,KAAA,IAAAgW,EAAAijB,MAAA,KAAAgnB,EAAAt5C,IACAqiC,EAAAhpC,KAAA,IAAAgW,EAAApO,KAAA,KAAAq4C,EAAAt5C,IACAg2B,EAAA38B,KAAA,IAAAgW,EAAAgnB,UAAA,KAAAijB,EAAAt5C,GAEAtC,GAAA0Q,IAAAjK,UAAA,IAAAkL,EAAAkpB,QAAAp0B,UAAAo0B,GAAA9zB,SACA/G,EAAA0Q,IAAAjK,UAAA,IAAAkL,EAAAgzB,OAAAl+B,UAAAk+B,GAAA59B,SACA/G,EAAA0Q,IAAAjK,UAAA,IAAAkL,EAAA2mB,YAAA7xB,UAAA6xB,GAAAvxB,SACA/G,EAAA0Q,IAAApN,OAAA,IAAAqO,EAAA80B,OAAA1/B,SAIA0/B,EACA9kC,KAAA,kBACAA,KAAA3B,EAAAinC,WACAN,EACAhlC,KAAA,kBACAglC,EAAArjC,OAAA,QACA3B,KAAA,KAAA5B,EAAA0M,aAAA,EAAAsL,GACApW,KAAA,KAAA5B,EAAA0M,aAAAzM,EAAA4D,MAAAmU,GACA4uB,EAAArjC,OAAA,QACA3B,KAAA,IAAA5B,EAAA0M,aAAAzM,EAAA4D,MAAA,GACAjC,KAAA,IAAAoW,GACAgrB,EACAphC,KAAA,kBACAA,KAAA,IAAA+U,GACAmoB,EACAl9B,KAAA,kBACAA,KAAA,IAAAgV,GACAsqB,EACAt/B,KAAA,kBACAA,KAAA,IAAA8U,GACAmrB,EACAjgC,KAAA,kBACAA,KAAA,KAAAwV,GACAxV,KAAA,KAAAyV,GACA+sB,EACAxiC,KAAA,kBACAA,KAAA,IAAAiV,GACAjV,KAAA,IAAAsE,GACAlH,MAAA,eAAAiB,EAAAid,eAAAnc,KAAAd,IACAi1C,EACAtzC,KAAA,kBACAszC,EAAA3xC,OAAA,QAAA7I,OAAAuF,EAAAw1C,aACA7zC,KAAA,IAAA3B,EAAAo1C,QAAAt0C,KAAAd,IACA2B,KAAA,QAAA3B,EAAAs1C,YAAAx0C,KAAAd,IAEAD,EAAA0a,qBACAza,EAAA0a,kBAIA8F,IAEAxgB,EAAA+K,SAAA,MAKAhK,EAAA+1C,SAAA,SAAA3kB,GACA,GAAAnyB,GAAA5C,KAAA6C,SAAAgB,EAAAjB,EAAAiB,EACA,OAAAA,GAAAqxB,MACAtyB,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAkpB,OAAA76B,EAAA80B,wBAAA3C,IAAA1rB,UAAA,IAAAkL,EAAAijB,OACAn6B,OAAA,WAAqC,MAAAwG,GAAAqC,OAAAlG,MAAA8R,QAAAyC,EAAA2kC,YACrCzuC,IAAA,SAAA5O,GAAmC,MAAAA,GAAA4O,IAAA,SAAA5O,GAA4B,GAAA2D,GAAA3D,EAAAkjD,QAAuB,OAAAv/C,uBAGtFmE,EAAAuC,OAAA,SAAA0pB,EAAAgQ,EAAAof,GACA,GAAAp8C,GAAA5C,KAAA6C,SAAAgB,EAAAjB,EAAAiB,GAAAlB,EAAAC,EAAAD,MACAA,GAAA4iB,wBACA3iB,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAkpB,QAAAp0B,UAAA,IAAAkL,EAAAijB,OAAApxB,KAAA,SAAAvK,EAAAqJ,GACA,GAAAsyB,GAAA3zB,EAAAqC,OAAAlG,MAAA0B,EAAA7F,EAAA2D,KAAA3D,EAAA2D,KAAAkC,GAAA7F,EAAA6F,GACAquC,EAAAntC,EAAAm3C,UAAA/5C,KAAAnE,GAAA6H,KAAAd,GACAq8C,EAAAt8C,EAAA6iB,yBAAAoK,KAAA1T,QAAAxa,IAAA,EACAw9C,GAAAtf,KAAA1jB,QAAAhX,IAAA,EACA+zC,EAAAzhB,EAAA1lB,QAAAyC,EAAA2kC,SAEA1hB,GAAA1lB,QAAAyC,EAAAotB,OAAAnK,EAAA1lB,QAAAyC,EAAAwvB,QAGAkb,GAAAC,EACAv8C,EAAA8iB,4BAAA5pB,KAAAo9C,GACAlJ,GAAA,EAAAvY,EAAA1lB,QAAAyC,EAAA2kC,UAAA,GAAAr9C,EAAAqJ,GAEaooB,EAAA0xB,OACb/F,GACAlJ,GAAA,EAAAvY,EAAA1lB,QAAAyC,EAAA2kC,UAAA,GAAAr9C,EAAAqJ,OAKAvB,EAAAw7C,SAAA,SAAAvvB,EAAAgQ,GACA,GAAAh9B,GAAA5C,KAAA6C,SAAAgB,EAAAjB,EAAAiB,GAAAlB,EAAAC,EAAAD,MACAA,GAAA4iB,wBACA3iB,EAAAwO,KAAA/H,UAAA,IAAAkL,EAAAkpB,QAAAp0B,UAAA,IAAAkL,EAAAijB,OAAApxB,KAAA,SAAAvK,EAAAqJ,GACA,GAAAsyB,GAAA3zB,EAAAqC,OAAAlG,MAAA0B,EAAA7F,EAAA2D,KAAA3D,EAAA2D,KAAAkC,GAAA7F,EAAA6F,GACAquC,EAAAntC,EAAAm3C,UAAA/5C,KAAAnE,GAAA6H,KAAAd,GACAq8C,EAAAt8C,EAAA6iB,yBAAAoK,KAAA1T,QAAAxa,IAAA,EACAw9C,GAAAtf,KAAA1jB,QAAAhX,IAAA,EACA+zC,EAAAzhB,EAAA1lB,QAAAyC,EAAA2kC,SAEA1hB,GAAA1lB,QAAAyC,EAAAotB,OAAAnK,EAAA1lB,QAAAyC,EAAAwvB,OAGAkb,GAAAC,GACAv8C,EAAA8iB,4BAAA5pB,IACAo9C,GACAlJ,GAAA,EAAAvY,EAAA1lB,QAAAyC,EAAA2kC,UAAA,GAAAr9C,EAAAqJ,MAOAvB,EAAA26C,UAAA,SAAAn/C,EAAAm2B,GACA,GAAA1yB,GAAA5C,KAAA6C,SACA5D,GAAA,eAAAid,QAAA/c,IAAA,GAA6DoW,eAAA,GAAoB,IACjF3S,GAAAw8C,YAAA9pB,EAAAn2B,EAAAF,IAGA4M,EAAAuzC,YAAA,SAAA9pB,EAAAn2B,EAAAkgD,GACA,GAAAz8C,GAAA5C,KACA0V,GAAA9S,EAAA4T,aACAvX,EAAAogD,IAA2C3pC,wBAC3CzW,GAAAyf,4BAAA,EACA9b,EAAAkL,YAAA,EACAlL,EAAA63B,cAAAnF,EAAAn2B,GACAyD,EAAAsS,cAAAtS,EAAApD,KAAAwS,SACApP,EAAA6b,gBAAAxf,IAGA0E,EAAA27C,OAAA,SAAAA,GACA,GAAA18C,GAAA5C,KAAA6C,SAAAF,EAAAC,EAAAD,MACA,OAAAq3B,GAAAslB,GAAkC38C,EAAAmiB,aAClCniB,EAAAmiB,YAAAw6B,EACA18C,EAAAyS,SACA1S,EAAAmiB,cAGAnhB,EAAAulC,OAAA,SAAAqW,GACA,GAAA38C,GAAA5C,KAAA6C,SAAAF,EAAAC,EAAAD,MACA,OAAA48C,IACA58C,EAAA0mB,aAAAk2B,EACA38C,EAAAgc,uBACAjc,EAAA0mB,cAHsB1mB,EAAA0mB,cAKtB1lB,EAAAulC,OAAA3qB,IAAA,SAAAghC,GACA,GAAA38C,GAAA5C,KAAA6C,QACA,OAAA7C,MAAAkpC,OAAAtmC,EAAAD,OAAA0mB,aAAA7hB,OAAA+3C,UAEA57C,EAAAulC,OAAAv/B,OAAA,SAAAvF,GACA,GAAAxB,GAAA5C,KAAA6C,QACAD,GAAAooC,gBAAA5mC,GAAA,IAGAT,EAAAwlC,OAAA,SAAAoW,GACA,GAAA38C,GAAA5C,KAAA6C,SAAAF,EAAAC,EAAAD,MACA,OAAA48C,IACA58C,EAAA4mB,aAAAg2B,EACA38C,EAAAgc,uBACAjc,EAAA4mB,cAHsB5mB,EAAA4mB,cAKtB5lB,EAAAwlC,OAAA5qB,IAAA,SAAAghC,GACA,GAAA38C,GAAA5C,KAAA6C,QACA,OAAA7C,MAAAmpC,OAAAvmC,EAAAD,OAAA4mB,aAAA/hB,OAAA+3C,UAEA57C,EAAAwlC,OAAAx/B,OAAA,SAAAvF,GACA,GAAAxB,GAAA5C,KAAA6C,QACAD,GAAAooC,gBAAA5mC,GAAA,IAGAT,EAAAmR,QAAA,SAAAA,GACA,GAAAlS,GAAA5C,KAAA6C,SAAAF,EAAAC,EAAAD,MACA,OAAAmS,IACAnS,EAAAmS,UACAlS,EAAAgc,uBACAjc,EAAAmS,SAHuBnS,EAAAmS,SAKvBnR,EAAAmR,QAAAyJ,IAAA,SAAAzJ,GACA,GAAAlS,GAAA5C,KAAA6C,SAAAF,EAAAC,EAAAD,MACA,OAAAmS,IACAnS,EAAAmS,QAAAnS,EAAAmS,QAAAtN,OAAAsN,GACAlS,EAAAgc,uBACAjc,EAAAmS,SAHuBnS,EAAAmS,SAKvBnR,EAAAmR,QAAAnL,OAAA,SAAA1K,GACA,GACAyZ,GAAA+kC,EAAA3oC,EADAlS,EAAA5C,KAAA6C,SAAAF,EAAAC,EAAAD,MAuBA,OApBA1D,SACAyZ,EAAA9V,EAAAgY,UAAA3b,EAAA,WAAA0D,EAAAgW,qBACA8kC,EAAA76C,EAAAgY,UAAA3b,EAAA,WAAAsV,EAAAqjC,SAEA9iC,EAAAlS,EAAAwO,KAAAlL,OAAA,IAAAqO,EAAAO,SAAAzL,UAAAo0C,EAAAhzC,IAAA,SAAA4rB,GAA0F,UAAAA,MAC1F3d,EAAA5D,EAAAlO,aAAA8R,YAAA5D,GACAnT,MAAA,aACAgI,SAEAhH,EAAAmS,QAAAnS,EAAAmS,QAAAzX,OAAA,SAAAu6C,GACA,GAAA9M,IAAA,CACA,QAAA8M,EAAA,QAGAA,EAAA,MAAA5wC,MAAA,KAAAxD,QAAA,SAAA6yB,GACAonB,EAAAvhC,QAAAma,IAAA,IAA8CyU,GAAA,MAE9CA,KAGAnoC,EAAAmS,SAGAnR,EAAAnE,KAAA,SAAA81B,GACA,GAAAtjB,GAAAhS,KAAA6C,SAAArD,KAAAwS,OACA,0BAAAsjB,GAAAtjB,IAAA3U,OAAA,SAAAihB,GACA,SAAA9W,OAAA8tB,GAAApZ,QAAAoC,EAAA5c,KAAA,KAGAiC,EAAAnE,KAAAggD,MAAA,SAAAlqB,GACA,MAAAt1B,MAAA6C,SAAA6X,oBAAA1a,KAAAR,KAAA81B,KAEA3xB,EAAAnE,KAAAsyB,OAAA,SAAAiD,GACA,GAAA/iB,GAAA8f,EAAA,IAKA,OAJAiD,KACA/iB,EAAAhS,KAAAR,KAAAu1B,GACAjD,EAAA9f,EAAA,GAAAA,EAAA,GAAA8f,OAAArnB,IAAA,SAAA5O,GAAsE,MAAAA,GAAAlC,QAAkB,MAExFm4B,GAEAnuB,EAAAnE,KAAAg+C,MAAA,SAAAA,GAEA,MADAx9C,MAAA6C,SAAA4qC,8BACAztC,KAAA6C,SAAAu1B,qBAAA,QAAAolB,IAEA75C,EAAAnE,KAAAb,OAAA,SAAAA,GACA,MAAAqB,MAAA6C,SAAAu1B,qBAAA,SAAAz5B,IAEAgF,EAAAnE,KAAAwE,KAAA,SAAAA,GACA,MAAAhE,MAAA6C,SAAAu1B,qBAAA,OAAAp0B,IAGAL,EAAA87C,SAAA,SAAAv6C,EAAAu6C,GACA,GAAA78C,GAAA5C,KAAA6C,SAAAF,EAAAC,EAAAD,MAKA,OAJAuI,WAAAtO,OAAA,IACA+F,EAAAqd,kBAAA9a,GAAAu6C,EACA78C,EAAAyS,UAEA1S,EAAAqd,kBAAA9a,IAEAvB,EAAA+5C,WAAA,SAAAA,GACA,GAAA96C,GAAA5C,KAAA6C,SAAAF,EAAAC,EAAAD,MACA,OAAAuI,WAAAtO,QACA+F,EAAAqd,kBAAA09B,EACA96C,EAAAyS,SACA1S,EAAAqd,mBAHgCrd,EAAAqd,mBAOhCrc,EAAAoK,MAAA,SAAArM,GACA,GAAAkB,GAAA5C,KAAA6C,QACA,OAAAD,GAAAmL,MAAArM,IAGAiC,EAAAjF,EAAA,SAAAA,GACA,GAAAkE,GAAA5C,KAAA6C,QAKA,OAJAqI,WAAAtO,SACAgG,EAAAqxB,cAAArxB,EAAApD,KAAAwS,QAAAtT,GACAkE,EAAAyS,QAAuBI,sBAAA,EAAAD,mBAAA,KAEvB5S,EAAApD,KAAAuS,IAEApO,EAAAoO,GAAA,SAAAA,GACA,GAAAnP,GAAA5C,KAAA6C,QAKA,OAJAqI,WAAAtO,SACAgG,EAAAuxB,eAAAvxB,EAAApD,KAAAwS,QAAAD,GACAnP,EAAAyS,QAAuBI,sBAAA,EAAAD,mBAAA,KAEvB5S,EAAApD,KAAAuS,IAGApO,EAAAzE,KAAA,aACAyE,EAAAzE,KAAAwgD,OAAA,SAAAA,GACA,GAAA98C,GAAA5C,KAAA6C,QACAqI,WAAAtO,SACAnD,OAAA8J,KAAAm8C,GAAAl8C,QAAA,SAAA2sB,GACAvtB,EAAA1D,KAAAiyC,aAAAhhB,EAAAuvB,EAAAvvB,MAEAvtB,EAAA1D,KAAA4c,iBAIAnY,EAAAzE,KAAAI,IAAA,SAAAA,GACA,GAAAsD,GAAA5C,KAAA6C,SAAAF,EAAAC,EAAAD,MACA,OAAAuI,WAAAtO,QACA,gBAAA0C,IACAqgB,EAAArgB,EAAAZ,KAAqCiE,EAAA4kB,WAAAjoB,EAAAZ,GACrCihB,EAAArgB,EAAAqF,KAAqChC,EAAAklB,WAAAvoB,EAAAqF,GACrCgb,EAAArgB,EAAA+Q,MAAsC1N,EAAA+lB,YAAAppB,EAAA+Q,KAEtC1N,EAAAklB,WAAAllB,EAAA+lB,YAAAppB,MAEAsD,GAAAyS,QAAuBI,sBAAA,EAAAD,mBAAA,MAGvB9W,EAAAiE,EAAA4kB,WACA5iB,EAAAhC,EAAAklB,WACAxX,GAAA1N,EAAA+lB,cAIA/kB,EAAAzE,KAAAsuB,IAAA,SAAAA,GACA,GAAA5qB,GAAA5C,KAAA6C,SAAAF,EAAAC,EAAAD,MACA,OAAAuI,WAAAtO,QACA,gBAAA4wB,IACA7N,EAAA6N,EAAA9uB,KAAqCiE,EAAA6kB,WAAAgG,EAAA9uB,GACrCihB,EAAA6N,EAAA7oB,KAAqChC,EAAAmlB,WAAA0F,EAAA7oB,GACrCgb,EAAA6N,EAAAnd,MAAsC1N,EAAAgmB,YAAA6E,EAAAnd,KAEtC1N,EAAAmlB,WAAAnlB,EAAAgmB,YAAA6E,MAEA5qB,GAAAyS,QAAuBI,sBAAA,EAAAD,mBAAA,MAGvB9W,EAAAiE,EAAA6kB,WACA7iB,EAAAhC,EAAAmlB,WACAzX,GAAA1N,EAAAgmB,cAIAhlB,EAAAzE,KAAAmJ,MAAA,SAAAA,GACA,MAAA6C,WAAAtO,QACA0wB,EAAAjlB,EAAA/I,MAAuCU,KAAAd,KAAAI,IAAA+I,EAAA/I,UACvCguB,EAAAjlB,EAAAmlB,MAAuCxtB,KAAAd,KAAAsuB,IAAAnlB,EAAAmlB,QAGvCluB,IAAAU,KAAAd,KAAAI,MACAkuB,IAAAxtB,KAAAd,KAAAsuB,QAKA7pB,EAAAuS,OAAA,aACAvS,EAAAuS,OAAA45B,KAAA,SAAAxa,GACA,GAAA1yB,GAAA5C,KAAA6C,QACAD,GAAAyqC,WAAAzqC,EAAAiyB,eAAAS,IACA1yB,EAAA6b,iBAA4BxF,YAAA,KAE5BtV,EAAAuS,OAAA25B,KAAA,SAAAva,GACA,GAAA1yB,GAAA5C,KAAA6C,QACAD,GAAA2qC,WAAA3qC,EAAAiyB,eAAAS,IACA1yB,EAAA6b,iBAA4BxF,YAAA,KAG5BtV,EAAAg8C,OAAA,SAAA5/C,GACA,GAAA6C,GAAA5C,KAAA6C,SAAAF,EAAAC,EAAAD,MACAA,GAAAkhB,WAAA9jB,IAAAyG,MAAA,KACA7D,EAAAmhB,YAAA/jB,IAAAwG,OAAA,KACAvG,KAAAyiB,SAGA9e,EAAA8e,MAAA,WACA,GAAA7f,GAAA5C,KAAA6C,QACAD,GAAA6b,iBAA4BxF,YAAA,EAAA3D,gBAAA,EAAAoJ,4BAAA,KAG5B/a,EAAAlC,QAAA,WACA,GAAAmB,GAAA5C,KAAA6C,QAQA,IANAb,EAAA4f,cAAAhf,EAAA+N,4BAEAlK,SAAA7D,EAAA0f,eACAtgB,EAAAugB,aAAA3f,EAAA0f,eAGAtgB,EAAA49C,YACA59C,EAAA49C,YAAA,WAAAh9C,EAAAsf,oBACS,IAAAlgB,EAAA69C,oBACT79C,EAAA69C,oBAAA,SAAAj9C,EAAAsf,oBACS,CACT,GAAAW,GAAA7gB,EAAAogB,QAEAS,MAAAtE,KAAAsE,EAAAlZ,QACAkZ,EAAAlZ,OAAA/G,EAAAsf,gBAWA,MAPAtf,GAAA6O,YAAAK,QAAA,SAAAD,KAAA,IAGApY,OAAA8J,KAAAX,GAAAY,QAAA,SAAAC,GACAb,EAAAa,GAAA,OAGA,MAGAE,EAAAwnC,QAAA,aACAxnC,EAAAwnC,QAAA2E,KAAA,SAAAlV,GACA,GAAAl+B,GAAAkgC,EAAAh6B,EAAA5C,KAAA6C,QAGA+3B,GAAAgC,QACAA,EAAAhC,EAAAgC,OAIAhC,EAAAp7B,KACAoD,EAAAgxB,eAEAgJ,GAAAh6B,EAAAlE,EAAAk8B,EAAAp7B,KAAAd,GAAAkE,EAAAmrB,UAAA6M,EAAAp7B,KAAAkC,IAAAk5B,EAAAp7B,KAAA7F,QACA+C,EAAA,MAGAA,EAAAijB,EAAAib,EAAAp7B,KAAA9C,OAAAk+B,EAAAp7B,KAAA9C,MAAAkG,EAAAuwB,YAAAyH,EAAAp7B,KAAAd,GAGA,mBAAAk8B,GAAAl8B,EACAhC,EAAAkG,EAAAuwB,YAAAyH,EAAAl8B,GAEA,mBAAAk8B,GAAAl+B,QACAA,EAAAk+B,EAAAl+B,OAIAkG,EAAA86B,cAAA,YAAAhhC,EAAAkgC,GACAh6B,EAAA86B,cAAA,YAAAhhC,EAAAkgC,GAEAh6B,EAAAD,OAAAiqB,eAAA1oB,KAAAtB,EAAAg4B,EAAAp7B,OAEAmE,EAAAwnC,QAAA0E,KAAA,WAEA7vC,KAAA6C,SAAA66B,cAAA,cAEA19B,KAAA6C,SAAAF,OAAAkqB,eAAA3oB,KAAAlE,MAOA,IAAA+F,EAuUA8F,GAAA28B,SAAA,WACA,GAAAsX,GAAA99C,EAAAwxC,UAAAuM,SACA,OAAAD,GAAA5jC,QAAA,cAAA4jC,EAAA5jC,QAAA,aAEArQ,EAAA48B,SAAA,WACA,GAAAqX,GAAA99C,EAAAwxC,UAAAuM,SACA,OAAAD,GAAA5jC,QAAA,cASA0/B,SAAAr5C,UAAAmB,OACAk4C,SAAAr5C,UAAAmB,KAAA,SAAAs8C,GACA,qBAAAhgD,MAGA,SAAAigD,WAAA,uEAGA,IAAAC,GAAAtC,MAAAr7C,UAAAkF,MAAAvD,KAAAgH,UAAA,GACAi1C,EAAAngD,KACAogD,EAAA,aACAC,EAAA,WACA,MAAAF,GAAA/6C,MAAApF,eAAAogD,GAAApgD,KAAAggD,EAAAE,EAAA14C,OAAAo2C,MAAAr7C,UAAAkF,MAAAvD,KAAAgH,aAMA,OAHAk1C,GAAA79C,UAAAvC,KAAAuC,UACA89C,EAAA99C,UAAA,GAAA69C,GAEAC,IAYA,WACA,cAAAr+C,KAEAA,EAAAs+C,WAAA,SAAAnhD,EAAAohD,EAAAC,GACAxgD,KAAAygD,YAAAthD,EACAa,KAAA0gD,oBAAAH,EACAvgD,KAAA2gD,mBAAAH,GAGAF,WAAAM,gBAAA,EACAN,WAAAO,kBAAA,EACAP,WAAAQ,mBAAA,EACAR,WAAAS,mBAAA,EACAT,WAAAU,mBAAA,EACAV,WAAAW,mBAAA,EACAX,WAAAY,0BAAA,EACAZ,WAAAa,0BAAA,EACAb,WAAAc,8BAAA,EACAd,WAAAe,8BAAA,EACAf,WAAAgB,gBAAA,GACAhB,WAAAiB,gBAAA,GACAjB,WAAAkB,8BAAA,GACAlB,WAAAmB,8BAAA,GACAnB,WAAAoB,4BAAA,GACApB,WAAAqB,4BAAA,GACArB,WAAAsB,iCAAA,GACAtB,WAAAuB,iCAAA,GACAvB,WAAAwB,qCAAA,GACAxB,WAAAyB,qCAAA,GAGAzB,WAAA/9C,UAAAy/C,gBAAA,WACAhiD,KAAA2gD,oBACA3gD,KAAA2gD,mBAAAsB,eAAAjiD,OAGAgC,EAAAkgD,oBAAA,SAAA1B,GACAF,WAAAp8C,KAAAlE,KAAAsgD,WAAAO,kBAAA,IAAAL,IAEA0B,oBAAA3/C,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACA2/C,oBAAA3/C,UAAAoF,SAAA,WAA8D,sCAC9Du6C,oBAAA3/C,UAAA4/C,cAAA,WAAmE,MAAAniD,MAAA0gD,qBACnEwB,oBAAA3/C,UAAA6/C,MAAA,WAA2D,UAAAF,qBAAAz7C,SAE3DzE,EAAAqgD,oBAAA,SAAA7B,EAAA9hD,EAAAiG,GACA27C,WAAAp8C,KAAAlE,KAAAsgD,WAAAQ,mBAAA,IAAAN,GACAxgD,KAAA64C,GAAAn6C,EACAsB,KAAA84C,GAAAn0C,GAEA09C,oBAAA9/C,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACA8/C,oBAAA9/C,UAAAoF,SAAA,WAA8D,sCAC9D06C,oBAAA9/C,UAAA4/C,cAAA,WAAmE,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA64C,GAAA,IAAA74C,KAAA84C,IACnEuJ,oBAAA9/C,UAAA6/C,MAAA,WAA2D,UAAAC,qBAAA57C,OAAAzG,KAAA64C,GAAA74C,KAAA84C,KAC3Dr/C,OAAAC,eAAA2oD,oBAAA9/C,UAAA,KAAoEs2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IACnK7oD,OAAAC,eAAA2oD,oBAAA9/C,UAAA,KAAoEs2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IAEnKtgD,EAAAugD,oBAAA,SAAA/B,EAAA9hD,EAAAiG,GACA27C,WAAAp8C,KAAAlE,KAAAsgD,WAAAS,mBAAA,IAAAP,GACAxgD,KAAA64C,GAAAn6C,EACAsB,KAAA84C,GAAAn0C,GAEA49C,oBAAAhgD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACAggD,oBAAAhgD,UAAAoF,SAAA,WAA8D,sCAC9D46C,oBAAAhgD,UAAA4/C,cAAA,WAAmE,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA64C,GAAA,IAAA74C,KAAA84C,IACnEyJ,oBAAAhgD,UAAA6/C,MAAA,WAA2D,UAAAG,qBAAA97C,OAAAzG,KAAA64C,GAAA74C,KAAA84C,KAC3Dr/C,OAAAC,eAAA6oD,oBAAAhgD,UAAA,KAAoEs2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IACnK7oD,OAAAC,eAAA6oD,oBAAAhgD,UAAA,KAAoEs2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IAEnKtgD,EAAAwgD,oBAAA,SAAAhC,EAAA9hD,EAAAiG,GACA27C,WAAAp8C,KAAAlE,KAAAsgD,WAAAU,mBAAA,IAAAR,GACAxgD,KAAA64C,GAAAn6C,EACAsB,KAAA84C,GAAAn0C,GAEA69C,oBAAAjgD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACAigD,oBAAAjgD,UAAAoF,SAAA,WAA8D,sCAC9D66C,oBAAAjgD,UAAA4/C,cAAA,WAAmE,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA64C,GAAA,IAAA74C,KAAA84C,IACnE0J,oBAAAjgD,UAAA6/C,MAAA,WAA2D,UAAAI,qBAAA/7C,OAAAzG,KAAA64C,GAAA74C,KAAA84C,KAC3Dr/C,OAAAC,eAAA8oD,oBAAAjgD,UAAA,KAAoEs2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IACnK7oD,OAAAC,eAAA8oD,oBAAAjgD,UAAA,KAAoEs2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IAEnKtgD,EAAAygD,oBAAA,SAAAjC,EAAA9hD,EAAAiG,GACA27C,WAAAp8C,KAAAlE,KAAAsgD,WAAAW,mBAAA,IAAAT,GACAxgD,KAAA64C,GAAAn6C,EACAsB,KAAA84C,GAAAn0C,GAEA89C,oBAAAlgD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACAkgD,oBAAAlgD,UAAAoF,SAAA,WAA8D,sCAC9D86C,oBAAAlgD,UAAA4/C,cAAA,WAAmE,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA64C,GAAA,IAAA74C,KAAA84C,IACnE2J,oBAAAlgD,UAAA6/C,MAAA,WAA2D,UAAAK,qBAAAh8C,OAAAzG,KAAA64C,GAAA74C,KAAA84C,KAC3Dr/C,OAAAC,eAAA+oD,oBAAAlgD,UAAA,KAAoEs2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IACnK7oD,OAAAC,eAAA+oD,oBAAAlgD,UAAA,KAAoEs2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IAEnKtgD,EAAA0gD,0BAAA,SAAAlC,EAAA9hD,EAAAiG,EAAAmR,EAAAE,EAAAD,EAAA1F,GACAiwC,WAAAp8C,KAAAlE,KAAAsgD,WAAAY,0BAAA,IAAAV,GACAxgD,KAAA64C,GAAAn6C,EACAsB,KAAA84C,GAAAn0C,EACA3E,KAAA2iD,IAAA7sC,EACA9V,KAAA4iD,IAAA5sC,EACAhW,KAAA6iD,IAAA9sC,EACA/V,KAAA8iD,IAAAzyC,GAEAqyC,0BAAAngD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACAmgD,0BAAAngD,UAAAoF,SAAA,WAAoE,4CACpE+6C,0BAAAngD,UAAA4/C,cAAA,WAAyE,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA2iD,IAAA,IAAA3iD,KAAA4iD,IAAA,IAAA5iD,KAAA6iD,IAAA,IAAA7iD,KAAA8iD,IAAA,IAAA9iD,KAAA64C,GAAA,IAAA74C,KAAA84C,IACzE4J,0BAAAngD,UAAA6/C,MAAA,WAAiE,UAAAM,2BAAAj8C,OAAAzG,KAAA64C,GAAA74C,KAAA84C,GAAA94C,KAAA2iD,IAAA3iD,KAAA4iD,IAAA5iD,KAAA6iD,IAAA7iD,KAAA8iD,MACjErpD,OAAAC,eAAAgpD,0BAAAngD,UAAA,KAA0Es2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IACzK7oD,OAAAC,eAAAgpD,0BAAAngD,UAAA,KAA0Es2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IACzK7oD,OAAAC,eAAAgpD,0BAAAngD,UAAA,MAA2Es2B,IAAA,WAAkB,MAAA74B,MAAA2iD,KAAmBhvB,IAAA,SAAA7d,GAAqB9V,KAAA2iD,IAAA7sC,EAAe9V,KAAAgiD,mBAA0BM,YAAA,IAC9K7oD,OAAAC,eAAAgpD,0BAAAngD,UAAA,MAA2Es2B,IAAA,WAAkB,MAAA74B,MAAA4iD,KAAmBjvB,IAAA,SAAA3d,GAAqBhW,KAAA4iD,IAAA5sC,EAAehW,KAAAgiD,mBAA0BM,YAAA,IAC9K7oD,OAAAC,eAAAgpD,0BAAAngD,UAAA,MAA2Es2B,IAAA,WAAkB,MAAA74B,MAAA6iD,KAAmBlvB,IAAA,SAAA5d,GAAqB/V,KAAA6iD,IAAA9sC,EAAe/V,KAAAgiD,mBAA0BM,YAAA,IAC9K7oD,OAAAC,eAAAgpD,0BAAAngD,UAAA,MAA2Es2B,IAAA,WAAkB,MAAA74B,MAAA8iD,KAAmBnvB,IAAA,SAAAtjB,GAAqBrQ,KAAA8iD,IAAAzyC,EAAerQ,KAAAgiD,mBAA0BM,YAAA,IAE9KtgD,EAAA+gD,0BAAA,SAAAvC,EAAA9hD,EAAAiG,EAAAmR,EAAAE,EAAAD,EAAA1F,GACAiwC,WAAAp8C,KAAAlE,KAAAsgD,WAAAa,0BAAA,IAAAX,GACAxgD,KAAA64C,GAAAn6C,EACAsB,KAAA84C,GAAAn0C,EACA3E,KAAA2iD,IAAA7sC,EACA9V,KAAA4iD,IAAA5sC,EACAhW,KAAA6iD,IAAA9sC,EACA/V,KAAA8iD,IAAAzyC,GAEA0yC,0BAAAxgD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACAwgD,0BAAAxgD,UAAAoF,SAAA,WAAoE,4CACpEo7C,0BAAAxgD,UAAA4/C,cAAA,WAAyE,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA2iD,IAAA,IAAA3iD,KAAA4iD,IAAA,IAAA5iD,KAAA6iD,IAAA,IAAA7iD,KAAA8iD,IAAA,IAAA9iD,KAAA64C,GAAA,IAAA74C,KAAA84C,IACzEiK,0BAAAxgD,UAAA6/C,MAAA,WAAiE,UAAAW,2BAAAt8C,OAAAzG,KAAA64C,GAAA74C,KAAA84C,GAAA94C,KAAA2iD,IAAA3iD,KAAA4iD,IAAA5iD,KAAA6iD,IAAA7iD,KAAA8iD,MACjErpD,OAAAC,eAAAqpD,0BAAAxgD,UAAA,KAA0Es2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IACzK7oD,OAAAC,eAAAqpD,0BAAAxgD,UAAA,KAA0Es2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IACzK7oD,OAAAC,eAAAqpD,0BAAAxgD,UAAA,MAA2Es2B,IAAA,WAAkB,MAAA74B,MAAA2iD,KAAmBhvB,IAAA,SAAA7d,GAAqB9V,KAAA2iD,IAAA7sC,EAAe9V,KAAAgiD,mBAA0BM,YAAA,IAC9K7oD,OAAAC,eAAAqpD,0BAAAxgD,UAAA,MAA2Es2B,IAAA,WAAkB,MAAA74B,MAAA4iD,KAAmBjvB,IAAA,SAAA3d,GAAqBhW,KAAA4iD,IAAA5sC,EAAehW,KAAAgiD,mBAA0BM,YAAA,IAC9K7oD,OAAAC,eAAAqpD,0BAAAxgD,UAAA,MAA2Es2B,IAAA,WAAkB,MAAA74B,MAAA6iD,KAAmBlvB,IAAA,SAAA5d,GAAqB/V,KAAA6iD,IAAA9sC,EAAe/V,KAAAgiD,mBAA0BM,YAAA,IAC9K7oD,OAAAC,eAAAqpD,0BAAAxgD,UAAA,MAA2Es2B,IAAA,WAAkB,MAAA74B,MAAA8iD,KAAmBnvB,IAAA,SAAAtjB,GAAqBrQ,KAAA8iD,IAAAzyC,EAAerQ,KAAAgiD,mBAA0BM,YAAA,IAE9KtgD,EAAAghD,8BAAA,SAAAxC,EAAA9hD,EAAAiG,EAAAmR,EAAAE,GACAsqC,WAAAp8C,KAAAlE,KAAAsgD,WAAAc,8BAAA,IAAAZ,GACAxgD,KAAA64C,GAAAn6C,EACAsB,KAAA84C,GAAAn0C,EACA3E,KAAA2iD,IAAA7sC,EACA9V,KAAA4iD,IAAA5sC,GAEAgtC,8BAAAzgD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACAygD,8BAAAzgD,UAAAoF,SAAA,WAAwE,gDACxEq7C,8BAAAzgD,UAAA4/C,cAAA,WAA6E,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA2iD,IAAA,IAAA3iD,KAAA4iD,IAAA,IAAA5iD,KAAA64C,GAAA,IAAA74C,KAAA84C,IAC7EkK,8BAAAzgD,UAAA6/C,MAAA,WAAqE,UAAAY,+BAAAv8C,OAAAzG,KAAA64C,GAAA74C,KAAA84C,GAAA94C,KAAA2iD,IAAA3iD,KAAA4iD,MACrEnpD,OAAAC,eAAAspD,8BAAAzgD,UAAA,KAA8Es2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IAC7K7oD,OAAAC,eAAAspD,8BAAAzgD,UAAA,KAA8Es2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IAC7K7oD,OAAAC,eAAAspD,8BAAAzgD,UAAA,MAA+Es2B,IAAA,WAAkB,MAAA74B,MAAA2iD,KAAmBhvB,IAAA,SAAA7d,GAAqB9V,KAAA2iD,IAAA7sC,EAAe9V,KAAAgiD,mBAA0BM,YAAA,IAClL7oD,OAAAC,eAAAspD,8BAAAzgD,UAAA,MAA+Es2B,IAAA,WAAkB,MAAA74B,MAAA4iD,KAAmBjvB,IAAA,SAAA3d,GAAqBhW,KAAA4iD,IAAA5sC,EAAehW,KAAAgiD,mBAA0BM,YAAA,IAElLtgD,EAAAihD,8BAAA,SAAAzC,EAAA9hD,EAAAiG,EAAAmR,EAAAE,GACAsqC,WAAAp8C,KAAAlE,KAAAsgD,WAAAe,8BAAA,IAAAb,GACAxgD,KAAA64C,GAAAn6C,EACAsB,KAAA84C,GAAAn0C,EACA3E,KAAA2iD,IAAA7sC,EACA9V,KAAA4iD,IAAA5sC,GAEAitC,8BAAA1gD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACA0gD,8BAAA1gD,UAAAoF,SAAA,WAAwE,gDACxEs7C,8BAAA1gD,UAAA4/C,cAAA,WAA6E,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA2iD,IAAA,IAAA3iD,KAAA4iD,IAAA,IAAA5iD,KAAA64C,GAAA,IAAA74C,KAAA84C,IAC7EmK,8BAAA1gD,UAAA6/C,MAAA,WAAqE,UAAAa,+BAAAx8C,OAAAzG,KAAA64C,GAAA74C,KAAA84C,GAAA94C,KAAA2iD,IAAA3iD,KAAA4iD,MACrEnpD,OAAAC,eAAAupD,8BAAA1gD,UAAA,KAA8Es2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IAC7K7oD,OAAAC,eAAAupD,8BAAA1gD,UAAA,KAA8Es2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IAC7K7oD,OAAAC,eAAAupD,8BAAA1gD,UAAA,MAA+Es2B,IAAA,WAAkB,MAAA74B,MAAA2iD,KAAmBhvB,IAAA,SAAA7d,GAAqB9V,KAAA2iD,IAAA7sC,EAAe9V,KAAAgiD,mBAA0BM,YAAA,IAClL7oD,OAAAC,eAAAupD,8BAAA1gD,UAAA,MAA+Es2B,IAAA,WAAkB,MAAA74B,MAAA4iD,KAAmBjvB,IAAA,SAAA3d,GAAqBhW,KAAA4iD,IAAA5sC,EAAehW,KAAAgiD,mBAA0BM,YAAA,IAElLtgD,EAAAkhD,iBAAA,SAAA1C,EAAA9hD,EAAAiG,EAAAw+C,EAAAC,EAAAC,EAAAC,EAAAC,GACAjD,WAAAp8C,KAAAlE,KAAAsgD,WAAAgB,gBAAA,IAAAd,GACAxgD,KAAA64C,GAAAn6C,EACAsB,KAAA84C,GAAAn0C,EACA3E,KAAAwjD,IAAAL,EACAnjD,KAAAyjD,IAAAL,EACApjD,KAAA0jD,OAAAL,EACArjD,KAAA2jD,cAAAL,EACAtjD,KAAA4jD,WAAAL,GAEAL,iBAAA3gD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACA2gD,iBAAA3gD,UAAAoF,SAAA,WAA2D,mCAC3Du7C,iBAAA3gD,UAAA4/C,cAAA,WAAgE,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAAwjD,IAAA,IAAAxjD,KAAAyjD,IAAA,IAAAzjD,KAAA0jD,OAAA,KAAA1jD,KAAA2jD,cAAA,cAAA3jD,KAAA4jD,WAAA,aAAA5jD,KAAA64C,GAAA,IAAA74C,KAAA84C,IAChEoK,iBAAA3gD,UAAA6/C,MAAA,WAAwD,UAAAc,kBAAAz8C,OAAAzG,KAAA64C,GAAA74C,KAAA84C,GAAA94C,KAAAwjD,IAAAxjD,KAAAyjD,IAAAzjD,KAAA0jD,OAAA1jD,KAAA2jD,cAAA3jD,KAAA4jD,aACxDnqD,OAAAC,eAAAwpD,iBAAA3gD,UAAA,KAAiEs2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IAChK7oD,OAAAC,eAAAwpD,iBAAA3gD,UAAA,KAAiEs2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IAChK7oD,OAAAC,eAAAwpD,iBAAA3gD,UAAA,MAAkEs2B,IAAA,WAAkB,MAAA74B,MAAAwjD,KAAmB7vB,IAAA,SAAAwvB,GAAqBnjD,KAAAwjD,IAAAL;AAAenjD,KAAAgiD,mBAA0BM,YAAA,IACrK7oD,OAAAC,eAAAwpD,iBAAA3gD,UAAA,MAAkEs2B,IAAA,WAAkB,MAAA74B,MAAAyjD,KAAmB9vB,IAAA,SAAAyvB,GAAqBpjD,KAAAyjD,IAAAL,EAAepjD,KAAAgiD,mBAA0BM,YAAA,IACrK7oD,OAAAC,eAAAwpD,iBAAA3gD,UAAA,SAAqEs2B,IAAA,WAAkB,MAAA74B,MAAA0jD,QAAsB/vB,IAAA,SAAA0vB,GAAwBrjD,KAAA0jD,OAAAL,EAAqBrjD,KAAAgiD,mBAA0BM,YAAA,IACpL7oD,OAAAC,eAAAwpD,iBAAA3gD,UAAA,gBAA4Es2B,IAAA,WAAkB,MAAA74B,MAAA2jD,eAA6BhwB,IAAA,SAAA2vB,GAA+BtjD,KAAA2jD,cAAAL,EAAmCtjD,KAAAgiD,mBAA0BM,YAAA,IACvN7oD,OAAAC,eAAAwpD,iBAAA3gD,UAAA,aAAyEs2B,IAAA,WAAkB,MAAA74B,MAAA4jD,YAA0BjwB,IAAA,SAAA4vB,GAA4BvjD,KAAA4jD,WAAAL,EAA6BvjD,KAAAgiD,mBAA0BM,YAAA,IAExMtgD,EAAA6hD,iBAAA,SAAArD,EAAA9hD,EAAAiG,EAAAw+C,EAAAC,EAAAC,EAAAC,EAAAC,GACAjD,WAAAp8C,KAAAlE,KAAAsgD,WAAAiB,gBAAA,IAAAf,GACAxgD,KAAA64C,GAAAn6C,EACAsB,KAAA84C,GAAAn0C,EACA3E,KAAAwjD,IAAAL,EACAnjD,KAAAyjD,IAAAL,EACApjD,KAAA0jD,OAAAL,EACArjD,KAAA2jD,cAAAL,EACAtjD,KAAA4jD,WAAAL,GAEAM,iBAAAthD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACAshD,iBAAAthD,UAAAoF,SAAA,WAA2D,mCAC3Dk8C,iBAAAthD,UAAA4/C,cAAA,WAAgE,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAAwjD,IAAA,IAAAxjD,KAAAyjD,IAAA,IAAAzjD,KAAA0jD,OAAA,KAAA1jD,KAAA2jD,cAAA,cAAA3jD,KAAA4jD,WAAA,aAAA5jD,KAAA64C,GAAA,IAAA74C,KAAA84C,IAChE+K,iBAAAthD,UAAA6/C,MAAA,WAAwD,UAAAyB,kBAAAp9C,OAAAzG,KAAA64C,GAAA74C,KAAA84C,GAAA94C,KAAAwjD,IAAAxjD,KAAAyjD,IAAAzjD,KAAA0jD,OAAA1jD,KAAA2jD,cAAA3jD,KAAA4jD,aACxDnqD,OAAAC,eAAAmqD,iBAAAthD,UAAA,KAAiEs2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IAChK7oD,OAAAC,eAAAmqD,iBAAAthD,UAAA,KAAiEs2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IAChK7oD,OAAAC,eAAAmqD,iBAAAthD,UAAA,MAAkEs2B,IAAA,WAAkB,MAAA74B,MAAAwjD,KAAmB7vB,IAAA,SAAAwvB,GAAqBnjD,KAAAwjD,IAAAL,EAAenjD,KAAAgiD,mBAA0BM,YAAA,IACrK7oD,OAAAC,eAAAmqD,iBAAAthD,UAAA,MAAkEs2B,IAAA,WAAkB,MAAA74B,MAAAyjD,KAAmB9vB,IAAA,SAAAyvB,GAAqBpjD,KAAAyjD,IAAAL,EAAepjD,KAAAgiD,mBAA0BM,YAAA,IACrK7oD,OAAAC,eAAAmqD,iBAAAthD,UAAA,SAAqEs2B,IAAA,WAAkB,MAAA74B,MAAA0jD,QAAsB/vB,IAAA,SAAA0vB,GAAwBrjD,KAAA0jD,OAAAL,EAAqBrjD,KAAAgiD,mBAA0BM,YAAA,IACpL7oD,OAAAC,eAAAmqD,iBAAAthD,UAAA,gBAA4Es2B,IAAA,WAAkB,MAAA74B,MAAA2jD,eAA6BhwB,IAAA,SAAA2vB,GAA+BtjD,KAAA2jD,cAAAL,EAAmCtjD,KAAAgiD,mBAA0BM,YAAA,IACvN7oD,OAAAC,eAAAmqD,iBAAAthD,UAAA,aAAyEs2B,IAAA,WAAkB,MAAA74B,MAAA4jD,YAA0BjwB,IAAA,SAAA4vB,GAA4BvjD,KAAA4jD,WAAAL,EAA6BvjD,KAAAgiD,mBAA0BM,YAAA,IAExMtgD,EAAA8hD,8BAAA,SAAAtD,EAAA9hD,GACA4hD,WAAAp8C,KAAAlE,KAAAsgD,WAAAkB,8BAAA,IAAAhB,GACAxgD,KAAA64C,GAAAn6C,GAEAolD,8BAAAvhD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACAuhD,8BAAAvhD,UAAAoF,SAAA,WAAwE,gDACxEm8C,8BAAAvhD,UAAA4/C,cAAA,WAA6E,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA64C,IAC7EiL,8BAAAvhD,UAAA6/C,MAAA,WAAqE,UAAA0B,+BAAAr9C,OAAAzG,KAAA64C,KACrEp/C,OAAAC,eAAAoqD,8BAAAvhD,UAAA,KAA8Es2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IAE7KtgD,EAAA+hD,8BAAA,SAAAvD,EAAA9hD,GACA4hD,WAAAp8C,KAAAlE,KAAAsgD,WAAAmB,8BAAA,IAAAjB,GACAxgD,KAAA64C,GAAAn6C,GAEAqlD,8BAAAxhD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACAwhD,8BAAAxhD,UAAAoF,SAAA,WAAwE,gDACxEo8C,8BAAAxhD,UAAA4/C,cAAA,WAA6E,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA64C,IAC7EkL,8BAAAxhD,UAAA6/C,MAAA,WAAqE,UAAA2B,+BAAAt9C,OAAAzG,KAAA64C,KACrEp/C,OAAAC,eAAAqqD,8BAAAxhD,UAAA,KAA8Es2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IAE7KtgD,EAAAgiD,4BAAA,SAAAxD,EAAA77C,GACA27C,WAAAp8C,KAAAlE,KAAAsgD,WAAAoB,4BAAA,IAAAlB,GACAxgD,KAAA84C,GAAAn0C,GAEAq/C,4BAAAzhD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACAyhD,4BAAAzhD,UAAAoF,SAAA,WAAsE,8CACtEq8C,4BAAAzhD,UAAA4/C,cAAA,WAA2E,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA84C,IAC3EkL,4BAAAzhD,UAAA6/C,MAAA,WAAmE,UAAA4B,6BAAAv9C,OAAAzG,KAAA84C,KACnEr/C,OAAAC,eAAAsqD,4BAAAzhD,UAAA,KAA4Es2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IAE3KtgD,EAAAiiD,4BAAA,SAAAzD,EAAA77C,GACA27C,WAAAp8C,KAAAlE,KAAAsgD,WAAAqB,4BAAA,IAAAnB,GACAxgD,KAAA84C,GAAAn0C,GAEAs/C,4BAAA1hD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACA0hD,4BAAA1hD,UAAAoF,SAAA,WAAsE,8CACtEs8C,4BAAA1hD,UAAA4/C,cAAA,WAA2E,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA84C,IAC3EmL,4BAAA1hD,UAAA6/C,MAAA,WAAmE,UAAA6B,6BAAAx9C,OAAAzG,KAAA84C,KACnEr/C,OAAAC,eAAAuqD,4BAAA1hD,UAAA,KAA4Es2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IAE3KtgD,EAAAkiD,gCAAA,SAAA1D,EAAA9hD,EAAAiG,EAAAoR,EAAA1F,GACAiwC,WAAAp8C,KAAAlE,KAAAsgD,WAAAsB,iCAAA,IAAApB,GACAxgD,KAAA64C,GAAAn6C,EACAsB,KAAA84C,GAAAn0C,EACA3E,KAAA6iD,IAAA9sC,EACA/V,KAAA8iD,IAAAzyC,GAEA6zC,gCAAA3hD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACA2hD,gCAAA3hD,UAAAoF,SAAA,WAA0E,kDAC1Eu8C,gCAAA3hD,UAAA4/C,cAAA,WAA+E,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA6iD,IAAA,IAAA7iD,KAAA8iD,IAAA,IAAA9iD,KAAA64C,GAAA,IAAA74C,KAAA84C,IAC/EoL,gCAAA3hD,UAAA6/C,MAAA,WAAuE,UAAA8B,iCAAAz9C,OAAAzG,KAAA64C,GAAA74C,KAAA84C,GAAA94C,KAAA6iD,IAAA7iD,KAAA8iD,MACvErpD,OAAAC,eAAAwqD,gCAAA3hD,UAAA,KAAgFs2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IAC/K7oD,OAAAC,eAAAwqD,gCAAA3hD,UAAA,KAAgFs2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IAC/K7oD,OAAAC,eAAAwqD,gCAAA3hD,UAAA,MAAiFs2B,IAAA,WAAkB,MAAA74B,MAAA6iD,KAAmBlvB,IAAA,SAAA5d,GAAqB/V,KAAA6iD,IAAA9sC,EAAe/V,KAAAgiD,mBAA0BM,YAAA,IACpL7oD,OAAAC,eAAAwqD,gCAAA3hD,UAAA,MAAiFs2B,IAAA,WAAkB,MAAA74B,MAAA8iD,KAAmBnvB,IAAA,SAAAtjB,GAAqBrQ,KAAA8iD,IAAAzyC,EAAerQ,KAAAgiD,mBAA0BM,YAAA,IAEpLtgD,EAAAmiD,gCAAA,SAAA3D,EAAA9hD,EAAAiG,EAAAoR,EAAA1F,GACAiwC,WAAAp8C,KAAAlE,KAAAsgD,WAAAuB,iCAAA,IAAArB,GACAxgD,KAAA64C,GAAAn6C,EACAsB,KAAA84C,GAAAn0C,EACA3E,KAAA6iD,IAAA9sC,EACA/V,KAAA8iD,IAAAzyC,GAEA8zC,gCAAA5hD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACA4hD,gCAAA5hD,UAAAoF,SAAA,WAA0E,kDAC1Ew8C,gCAAA5hD,UAAA4/C,cAAA,WAA+E,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA6iD,IAAA,IAAA7iD,KAAA8iD,IAAA,IAAA9iD,KAAA64C,GAAA,IAAA74C,KAAA84C,IAC/EqL,gCAAA5hD,UAAA6/C,MAAA,WAAuE,UAAA+B,iCAAA19C,OAAAzG,KAAA64C,GAAA74C,KAAA84C,GAAA94C,KAAA6iD,IAAA7iD,KAAA8iD,MACvErpD,OAAAC,eAAAyqD,gCAAA5hD,UAAA,KAAgFs2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IAC/K7oD,OAAAC,eAAAyqD,gCAAA5hD,UAAA,KAAgFs2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IAC/K7oD,OAAAC,eAAAyqD,gCAAA5hD,UAAA,MAAiFs2B,IAAA,WAAkB,MAAA74B,MAAA6iD,KAAmBlvB,IAAA,SAAA5d,GAAqB/V,KAAA6iD,IAAA9sC,EAAe/V,KAAAgiD,mBAA0BM,YAAA,IACpL7oD,OAAAC,eAAAyqD,gCAAA5hD,UAAA,MAAiFs2B,IAAA,WAAkB,MAAA74B,MAAA8iD,KAAmBnvB,IAAA,SAAAtjB,GAAqBrQ,KAAA8iD,IAAAzyC,EAAerQ,KAAAgiD,mBAA0BM,YAAA,IAEpLtgD,EAAAoiD,oCAAA,SAAA5D,EAAA9hD,EAAAiG,GACA27C,WAAAp8C,KAAAlE,KAAAsgD,WAAAwB,qCAAA,IAAAtB,GACAxgD,KAAA64C,GAAAn6C,EACAsB,KAAA84C,GAAAn0C,GAEAy/C,oCAAA7hD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACA6hD,oCAAA7hD,UAAAoF,SAAA,WAA8E,sDAC9Ey8C,oCAAA7hD,UAAA4/C,cAAA,WAAmF,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA64C,GAAA,IAAA74C,KAAA84C,IACnFsL,oCAAA7hD,UAAA6/C,MAAA,WAA2E,UAAAgC,qCAAA39C,OAAAzG,KAAA64C,GAAA74C,KAAA84C,KAC3Er/C,OAAAC,eAAA0qD,oCAAA7hD,UAAA,KAAoFs2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IACnL7oD,OAAAC,eAAA0qD,oCAAA7hD,UAAA,KAAoFs2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IAEnLtgD,EAAAqiD,oCAAA,SAAA7D,EAAA9hD,EAAAiG,GACA27C,WAAAp8C,KAAAlE,KAAAsgD,WAAAyB,qCAAA,IAAAvB,GACAxgD,KAAA64C,GAAAn6C,EACAsB,KAAA84C,GAAAn0C,GAEA0/C,oCAAA9hD,UAAA9I,OAAA6I,OAAAg+C,WAAA/9C,WACA8hD,oCAAA9hD,UAAAoF,SAAA,WAA8E,sDAC9E08C,oCAAA9hD,UAAA4/C,cAAA,WAAmF,MAAAniD,MAAA0gD,oBAAA,IAAA1gD,KAAA64C,GAAA,IAAA74C,KAAA84C,IACnFuL,oCAAA9hD,UAAA6/C,MAAA,WAA2E,UAAAiC,qCAAA59C,OAAAzG,KAAA64C,GAAA74C,KAAA84C,KAC3Er/C,OAAAC,eAAA2qD,oCAAA9hD,UAAA,KAAoFs2B,IAAA,WAAkB,MAAA74B,MAAA64C,IAAkBllB,IAAA,SAAAj1B,GAAoBsB,KAAA64C,GAAAn6C,EAAasB,KAAAgiD,mBAA0BM,YAAA,IACnL7oD,OAAAC,eAAA2qD,oCAAA9hD,UAAA,KAAoFs2B,IAAA,WAAkB,MAAA74B,MAAA84C,IAAkBnlB,IAAA,SAAAhvB,GAAoB3E,KAAA84C,GAAAn0C,EAAa3E,KAAAgiD,mBAA0BM,YAAA,IAInLgC,eAAA/hD,UAAAgiD,0BAAA,WAA0E,UAAArC,qBAAAz7C,SAC1E69C,eAAA/hD,UAAAiiD,0BAAA,SAAA9lD,EAAAiG,GAA8E,UAAA09C,qBAAA57C,OAAA/H,EAAAiG,IAC9E2/C,eAAA/hD,UAAAkiD,0BAAA,SAAA/lD,EAAAiG,GAA8E,UAAA49C,qBAAA97C,OAAA/H,EAAAiG,IAC9E2/C,eAAA/hD,UAAAmiD,0BAAA,SAAAhmD,EAAAiG,GAA8E,UAAA69C,qBAAA/7C,OAAA/H,EAAAiG,IAC9E2/C,eAAA/hD,UAAAoiD,0BAAA,SAAAjmD,EAAAiG,GAA8E,UAAA89C,qBAAAh8C,OAAA/H,EAAAiG,IAC9E2/C,eAAA/hD,UAAAqiD,gCAAA,SAAAlmD,EAAAiG,EAAAmR,EAAAE,EAAAD,EAAA1F,GAAoG,UAAAqyC,2BAAAj8C,OAAA/H,EAAAiG,EAAAmR,EAAAE,EAAAD,EAAA1F,IACpGi0C,eAAA/hD,UAAAsiD,gCAAA,SAAAnmD,EAAAiG,EAAAmR,EAAAE,EAAAD,EAAA1F,GAAoG,UAAA0yC,2BAAAt8C,OAAA/H,EAAAiG,EAAAmR,EAAAE,EAAAD,EAAA1F,IACpGi0C,eAAA/hD,UAAAuiD,oCAAA,SAAApmD,EAAAiG,EAAAmR,EAAAE,GAAgG,UAAAgtC,+BAAAv8C,OAAA/H,EAAAiG,EAAAmR,EAAAE,IAChGsuC,eAAA/hD,UAAAwiD,oCAAA,SAAArmD,EAAAiG,EAAAmR,EAAAE,GAAgG,UAAAitC,+BAAAx8C,OAAA/H,EAAAiG,EAAAmR,EAAAE,IAChGsuC,eAAA/hD,UAAAyiD,uBAAA,SAAAtmD,EAAAiG,EAAAw+C,EAAAC,EAAAC,EAAAC,EAAAC,GAAmH,UAAAL,kBAAAz8C,OAAA/H,EAAAiG,EAAAw+C,EAAAC,EAAAC,EAAAC,EAAAC,IACnHe,eAAA/hD,UAAA0iD,uBAAA,SAAAvmD,EAAAiG,EAAAw+C,EAAAC,EAAAC,EAAAC,EAAAC,GAAmH,UAAAM,kBAAAp9C,OAAA/H,EAAAiG,EAAAw+C,EAAAC,EAAAC,EAAAC,EAAAC,IACnHe,eAAA/hD,UAAA2iD,oCAAA,SAAAxmD,GAAqF,UAAAolD,+BAAAr9C,OAAA/H,IACrF4lD,eAAA/hD,UAAA4iD,oCAAA,SAAAzmD,GAAqF,UAAAqlD,+BAAAt9C,OAAA/H,IACrF4lD,eAAA/hD,UAAA6iD,kCAAA,SAAAzgD,GAAmF,UAAAq/C,6BAAAv9C,OAAA9B,IACnF2/C,eAAA/hD,UAAA8iD,kCAAA,SAAA1gD,GAAmF,UAAAs/C,6BAAAx9C,OAAA9B,IACnF2/C,eAAA/hD,UAAA+iD,sCAAA,SAAA5mD,EAAAiG,EAAAoR,EAAA1F,GAAkG,UAAA6zC,iCAAAz9C,OAAA/H,EAAAiG,EAAAoR,EAAA1F,IAClGi0C,eAAA/hD,UAAAgjD,sCAAA,SAAA7mD,EAAAiG,EAAAoR,EAAA1F,GAAkG,UAAA8zC,iCAAA19C,OAAA/H,EAAAiG,EAAAoR,EAAA1F,IAClGi0C,eAAA/hD,UAAAijD,0CAAA,SAAA9mD,EAAAiG,GAA8F,UAAAy/C,qCAAA39C,OAAA/H,EAAAiG,IAC9F2/C,eAAA/hD,UAAAkjD,0CAAA,SAAA/mD,EAAAiG,GAA8F,UAAA0/C,qCAAA59C,OAAA/H,EAAAiG,KAG9F,kBAAA3C,KAEAA,EAAA0jD,eAAA,SAAAC,GACA3lD,KAAA4lD,aAAAD,EACA3lD,KAAA6lD,MAAA7lD,KAAA8lD,WAAA9lD,KAAA4lD,aAAAG,aAAA,MAGA/lD,KAAAgmD,yBAA6CjkC,YAAA,EAAAkkC,iBAAA,MAC7CjmD,KAAAkmD,6BAAA,GAAA/kC,kBAAAnhB,KAAAmmD,6BAAAziD,KAAA1D,OACAA,KAAAkmD,6BAAApkC,QAAA9hB,KAAA4lD,aAAA5lD,KAAAgmD,0BAGAvsD,OAAAC,eAAAgsD,eAAAnjD,UAAA,iBACAs2B,IAAA,WAEA,MADA74B,MAAAomD,+BACApmD,KAAA6lD,MAAAjpD,QAEA0lD,YAAA,IAKA7oD,OAAAC,eAAA4qD,eAAA/hD,UAAA,eACAs2B,IAAA,WAGA,MAFA74B,MAAAqmD,eACArmD,KAAAqmD,aAAA,GAAAX,gBAAA1lD,OACAA,KAAAqmD,cAEA/D,YAAA,IAGA7oD,OAAAC,eAAA4qD,eAAA/hD,UAAA,yBAAmFs2B,IAAA,WAAkB,MAAA74B,MAAAumC,aAA2B+b,YAAA,IAChI7oD,OAAAC,eAAA4qD,eAAA/hD,UAAA,uBAAiFs2B,IAAA,WAAkB,MAAA74B,MAAAumC,aAA2B+b,YAAA,IAC9H7oD,OAAAC,eAAA4qD,eAAA/hD,UAAA,iCAA2Fs2B,IAAA,WAAkB,MAAA74B,MAAAumC,aAA2B+b,YAAA,IAKxIoD,eAAAnjD,UAAA6jD,6BAAA,WACApmD,KAAAmmD,6BAAAnmD,KAAAkmD,6BAAAI,gBAGAZ,eAAAnjD,UAAA4jD,6BAAA,SAAAI,GACA,GAAAvmD,KAAA4lD,aAAA,CAEA,GAAAY,IAAA,CACAD,GAAA/iD,QAAA,SAAAijD,GACA,KAAAA,EAAAC,gBACAF,GAAA,KAEAA,IACAxmD,KAAA6lD,MAAA7lD,KAAA8lD,WAAA9lD,KAAA4lD,aAAAG,aAAA,SAIAL,eAAAnjD,UAAAokD,iBAAA,WACA3mD,KAAAkmD,6BAAAzkC,aACAzhB,KAAA4lD,aAAAgB,aAAA,IAAAlB,eAAAmB,sBAAA7mD,KAAA6lD,QACA7lD,KAAAkmD,6BAAApkC,QAAA9hB,KAAA4lD,aAAA5lD,KAAAgmD,0BAIAN,eAAAnjD,UAAA0/C,eAAA,SAAA6E,GACA9mD,KAAA2mD,oBAGAjB,eAAAnjD,UAAAg7C,MAAA,WACAv9C,KAAAomD,+BAEApmD,KAAA6lD,MAAAriD,QAAA,SAAAsjD,GACAA,EAAAnG,mBAAA,OAEA3gD,KAAA6lD,SACA7lD,KAAA2mD,oBAGAjB,eAAAnjD,UAAAwkD,WAAA,SAAAC,GAMA,MALAhnD,MAAAomD,+BAEApmD,KAAA6lD,OAAAmB,GACAA,EAAArG,mBAAA3gD,KACAA,KAAA2mD,mBACAK,GAGAtB,eAAAnjD,UAAA0kD,iBAAA,SAAAvqD,GACA,GAAA8mB,MAAA9mB,MAAA,GAAAA,GAAAsD,KAAAknD,cACA,uBAGAxB,eAAAnjD,UAAAikC,QAAA,SAAA9pC,GAIA,MAHAsD,MAAAomD,+BAEApmD,KAAAinD,iBAAAvqD,GACAsD,KAAA6lD,MAAAnpD,IAGAgpD,eAAAnjD,UAAA4kD,iBAAA,SAAAH,EAAAtqD,GAaA,MAZAsD,MAAAomD,+BAGA1pD,EAAAsD,KAAAknD,gBACAxqD,EAAAsD,KAAAknD,eACAF,EAAArG,qBAEAqG,IAAA5E,SAEApiD,KAAA6lD,MAAAvnD,OAAA5B,EAAA,EAAAsqD,GACAA,EAAArG,mBAAA3gD,KACAA,KAAA2mD,mBACAK,GAGAtB,eAAAnjD,UAAA6kD,YAAA,SAAAJ,EAAAtqD,GAWA,MAVAsD,MAAAomD,+BAEAY,EAAArG,qBAEAqG,IAAA5E,SAEApiD,KAAAinD,iBAAAvqD,GACAsD,KAAA6lD,MAAAnpD,GAAAsqD,EACAA,EAAArG,mBAAA3gD,KACAA,KAAA2mD,mBACAK,GAGAtB,eAAAnjD,UAAA8kD,WAAA,SAAA3qD,GACAsD,KAAAomD,+BAEApmD,KAAAinD,iBAAAvqD,EACA,IAAA4qD,GAAAtnD,KAAA6lD,MAAAnpD,EAGA,OAFAsD,MAAA6lD,MAAAvnD,OAAA5B,EAAA,GACAsD,KAAA2mD,mBACAW,GAGA5B,eAAAnjD,UAAAglD,WAAA,SAAAP,GAWA,MAVAhnD,MAAAomD,+BAEAY,EAAArG,qBAEAqG,IAAA5E,SAEApiD,KAAA6lD,MAAAtnD,KAAAyoD,GACAA,EAAArG,mBAAA3gD,KAEAA,KAAA2mD,mBACAK,GAGAtB,eAAAmB,sBAAA,SAAAW,GACA,GAAAjnD,GAAA,GACAknD,GAAA,CASA,OARAD,GAAAhkD,QAAA,SAAAsjD,GACAW,GACAA,GAAA,EACAlnD,GAAAumD,EAAA3E,iBAEA5hD,GAAA,IAAAumD,EAAA3E,kBAGA5hD,GAIAmlD,eAAAnjD,UAAAujD,WAAA,SAAAvlD,GACA,IAAAA,GAAA,GAAAA,EAAA3D,OACA,QAEA,IAAA4jD,GAAAxgD,KAEA0nD,EAAA,WACA1nD,KAAAumC,eAGAmhB,GAAAnlD,UAAAolD,cAAA,SAAAb,GACA9mD,KAAAumC,YAAAhoC,KAAAuoD,GAGA,IAAAc,GAAA,SAAArnD,GACAP,KAAA6nD,QAAAtnD,EACAP,KAAA8nD,cAAA,EACA9nD,KAAA+nD,UAAA/nD,KAAA6nD,QAAAjrD,OACAoD,KAAAgoD,iBAAA1H,WAAAM,gBAEA5gD,KAAAioD,sBAGAL,GAAArlD,UAAA2lD,gBAAA,WACA,GAAAC,GAAAnoD,KAAA6nD,QAAA7nD,KAAA8nD,cACA,OAAAK,IAAA,WAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,IAGAP,EAAArlD,UAAA0lD,oBAAA,WACA,KAAAjoD,KAAA8nD,cAAA9nD,KAAA+nD,WAAA/nD,KAAAkoD,mBACAloD,KAAA8nD,eACA,OAAA9nD,MAAA8nD,cAAA9nD,KAAA+nD,WAGAH,EAAArlD,UAAA6lD,+BAAA,WACA,QAAApoD,KAAA8nD,cAAA9nD,KAAA+nD,YAAA/nD,KAAAkoD,mBAAA,KAAAloD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,kBAEA9nD,KAAAioD,uBACAjoD,KAAA8nD,cAAA9nD,KAAA+nD,WAAA,KAAA/nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,iBACA9nD,KAAA8nD,gBACA9nD,KAAAioD,uBAGAjoD,KAAA8nD,cAAA9nD,KAAA+nD,YAGAH,EAAArlD,UAAA8lD,YAAA,WACA,MAAAroD,MAAA8nD,cAAA9nD,KAAA+nD,WAGAH,EAAArlD,UAAA+lD,gBAAA,WACA,GAAAC,GAAAvoD,KAAA6nD,QAAA7nD,KAAA8nD,cACA,OAAA9nD,MAAAwoD,qBAAAD,IAGAX,EAAArlD,UAAAimD,qBAAA,SAAAD,GACA,OAAAA,GACA,QACA,QACA,MAAAjI,YAAAO,iBACA,SACA,MAAAP,YAAAQ,kBACA,SACA,MAAAR,YAAAS,kBACA,SACA,MAAAT,YAAAU,kBACA,SACA,MAAAV,YAAAW,kBACA,SACA,MAAAX,YAAAY,yBACA,SACA,MAAAZ,YAAAa,yBACA,SACA,MAAAb,YAAAc,6BACA,SACA,MAAAd,YAAAe,6BACA,SACA,MAAAf,YAAAgB,eACA,SACA,MAAAhB,YAAAiB,eACA,SACA,MAAAjB,YAAAkB,6BACA,SACA,MAAAlB,YAAAmB,6BACA,SACA,MAAAnB,YAAAoB,2BACA,SACA,MAAApB,YAAAqB,2BACA,SACA,MAAArB,YAAAsB,gCACA,SACA,MAAAtB,YAAAuB,gCACA,SACA,MAAAvB,YAAAwB,oCACA,SACA,MAAAxB,YAAAyB,oCACA,SACA,MAAAzB,YAAAM,kBAIAgH,EAAArlD,UAAAkmD,mBAAA,SAAAF,EAAAG,GAEA,YAAAH,GAAA,KAAAA,GAAA,KAAAA,MAAA,KAAAA,GAAA,MAAAG,GAAApI,WAAAO,kBACA6H,GAAApI,WAAAQ,mBACAR,WAAAU,mBACA0H,GAAApI,WAAAS,mBACAT,WAAAW,mBACAyH,EAEApI,WAAAM,iBAGAgH,EAAArlD,UAAAomD,uBAAA,WAEA,IAAA3oD,KAAAqoD,cACA,QACA,IAAAO,GAAA5oD,KAAAsoD,iBAEA,OAAAM,IAAAtI,WAAAQ,oBAAA8H,GAAAtI,WAAAS,oBAKA6G,EAAArlD,UAAAsmD,aAAA,WACA,GAAAC,GAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEAC,EAAAppD,KAAA8nD,aAYA,IAVA9nD,KAAAioD,sBAGAjoD,KAAA8nD,cAAA9nD,KAAA+nD,WAAA,KAAA/nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,eACA9nD,KAAA8nD,gBACA9nD,KAAA8nD,cAAA9nD,KAAA+nD,WAAA,KAAA/nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,iBACA9nD,KAAA8nD,gBACAoB,GAAA,KAGAlpD,KAAA8nD,eAAA9nD,KAAA+nD,YAAA/nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,eAAA,KAAA9nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,eAAA,WAAA9nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,gBAAA,CAMA,IADA,GAAAuB,GAAArpD,KAAA8nD,cACA9nD,KAAA8nD,cAAA9nD,KAAA+nD,WAAA/nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,gBAAA,KAAA9nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,gBAAA,KACA9nD,KAAA8nD,eAEA,IAAA9nD,KAAA8nD,eAAAuB,EAGA,IAFA,GAAAC,GAAAtpD,KAAA8nD,cAAA,EACAyB,EAAA,EACAD,GAAAD,GACAN,GAAAQ,GAAAvpD,KAAA6nD,QAAA1gD,OAAAmiD,KAAA,KACAC,GAAA,EAKA,IAAAvpD,KAAA8nD,cAAA9nD,KAAA+nD,WAAA,KAAA/nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,eAAA,CAIA,GAHA9nD,KAAA8nD,gBAGA9nD,KAAA8nD,eAAA9nD,KAAA+nD,WAAA/nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,eAAA,KAAA9nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,eAAA,IACA,MACA,MAAA9nD,KAAA8nD,cAAA9nD,KAAA+nD,WAAA/nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,gBAAA,KAAA9nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,gBAAA,KACAmB,IAAAjpD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,iBAAA,MAAAkB,GAAA,IAIA,GAAAhpD,KAAA8nD,eAAAsB,GAAAppD,KAAA8nD,cAAA,EAAA9nD,KAAA+nD,YAAA,KAAA/nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,gBAAA,KAAA9nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,iBAAA,KAAA9nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,cAAA,SAAA9nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,cAAA,IAYA,GAXA9nD,KAAA8nD,gBAGA,KAAA9nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,eACA9nD,KAAA8nD,gBACsB,KAAA9nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,iBACtB9nD,KAAA8nD,gBACAqB,GAAA,GAIAnpD,KAAA8nD,eAAA9nD,KAAA+nD,WAAA/nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,eAAA,KAAA9nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,eAAA,IACA,MAEA,MAAA9nD,KAAA8nD,cAAA9nD,KAAA+nD,WAAA/nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,gBAAA,KAAA9nD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,gBAAA,KACAgB,GAAA,GACAA,GAAA9oD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,eAAA,IACA9nD,KAAA8nD,gBAIA,GAAA0B,GAAAT,EAAAE,CAMA,IALAO,GAAAN,EAEAJ,IACAU,GAAAjuD,KAAA08B,IAAA,GAAAkxB,EAAAL,IAEAM,GAAAppD,KAAA8nD,cAKA,MAFA9nD,MAAAooD,iCAEAoB,IAGA5B,EAAArlD,UAAAknD,cAAA,WACA,KAAAzpD,KAAA8nD,eAAA9nD,KAAA+nD,WAAA,CAEA,GAAA2B,IAAA,EACAC,EAAA3pD,KAAA6nD,QAAA1gD,OAAAnH,KAAA8nD,gBACA,SAAA6B,EACAD,GAAA,MACA,SAAAC,EAGA,MAFAD,IAAA,EAKA,MADA1pD,MAAAooD,iCACAsB,IAGA9B,EAAArlD,UAAAqnD,aAAA,WACA,GAAArB,GAAAvoD,KAAA6nD,QAAA7nD,KAAA8nD,eACAc,EAAA5oD,KAAAwoD,qBAAAD,EACA,IAAAK,GAAAtI,WAAAM,gBAAA,CAEA,GAAA5gD,KAAAgoD,kBAAA1H,WAAAM,gBACA,WAEA,IADAgI,EAAA5oD,KAAAyoD,mBAAAF,EAAAvoD,KAAAgoD,kBACAY,GAAAtI,WAAAM,gBACA,gBAEA5gD,MAAA8nD,eAKA,QAFA9nD,KAAAgoD,iBAAAY,EAEAA,GACA,IAAAtI,YAAAS,mBACA,UAAAwB,qBAAA/B,EAAAxgD,KAAA6oD,eAAA7oD,KAAA6oD,eACA,KAAAvI,YAAAQ,mBACA,UAAAuB,qBAAA7B,EAAAxgD,KAAA6oD,eAAA7oD,KAAA6oD,eACA,KAAAvI,YAAAW,mBACA,UAAAwB,qBAAAjC,EAAAxgD,KAAA6oD,eAAA7oD,KAAA6oD,eACA,KAAAvI,YAAAU,mBACA,UAAAwB,qBAAAhC,EAAAxgD,KAAA6oD,eAAA7oD,KAAA6oD,eACA,KAAAvI,YAAAmB,8BACA,UAAAsC,+BAAAvD,EAAAxgD,KAAA6oD,eACA,KAAAvI,YAAAkB,8BACA,UAAAsC,+BAAAtD,EAAAxgD,KAAA6oD,eACA,KAAAvI,YAAAqB,4BACA,UAAAsC,6BAAAzD,EAAAxgD,KAAA6oD,eACA,KAAAvI,YAAAoB,4BACA,UAAAsC,6BAAAxD,EAAAxgD,KAAA6oD,eACA,KAAAvI,YAAAO,kBAEA,MADA7gD,MAAAioD,sBACA,GAAA/F,qBAAA1B,EACA,KAAAF,YAAAa,0BACA,GAAAne,IAAmCltB,GAAA9V,KAAA6oD,eAAA7yC,GAAAhW,KAAA6oD,eAAA9yC,GAAA/V,KAAA6oD,eAAAx4C,GAAArQ,KAAA6oD,eAAAnqD,EAAAsB,KAAA6oD,eAAAlkD,EAAA3E,KAAA6oD,eACnC,WAAA9F,2BAAAvC,EAAAxd,EAAAtkC,EAAAskC,EAAAr+B,EAAAq+B,EAAAltB,GAAAktB,EAAAhtB,GAAAgtB,EAAAjtB,GAAAitB,EAAA3yB,GACA,KAAAiwC,YAAAY,0BACA,GAAAle,IAAmCltB,GAAA9V,KAAA6oD,eAAA7yC,GAAAhW,KAAA6oD,eAAA9yC,GAAA/V,KAAA6oD,eAAAx4C,GAAArQ,KAAA6oD,eAAAnqD,EAAAsB,KAAA6oD,eAAAlkD,EAAA3E,KAAA6oD,eACnC,WAAAnG,2BAAAlC,EAAAxd,EAAAtkC,EAAAskC,EAAAr+B,EAAAq+B,EAAAltB,GAAAktB,EAAAhtB,GAAAgtB,EAAAjtB,GAAAitB,EAAA3yB,GACA,KAAAiwC,YAAAuB,iCACA,GAAA7e,IAAmCjtB,GAAA/V,KAAA6oD,eAAAx4C,GAAArQ,KAAA6oD,eAAAnqD,EAAAsB,KAAA6oD,eAAAlkD,EAAA3E,KAAA6oD,eACnC,WAAA1E,iCAAA3D,EAAAxd,EAAAtkC,EAAAskC,EAAAr+B,EAAAq+B,EAAAjtB,GAAAitB,EAAA3yB,GACA,KAAAiwC,YAAAsB,iCACA,GAAA5e,IAAmCjtB,GAAA/V,KAAA6oD,eAAAx4C,GAAArQ,KAAA6oD,eAAAnqD,EAAAsB,KAAA6oD,eAAAlkD,EAAA3E,KAAA6oD,eACnC,WAAA3E,iCAAA1D,EAAAxd,EAAAtkC,EAAAskC,EAAAr+B,EAAAq+B,EAAAjtB,GAAAitB,EAAA3yB,GACA,KAAAiwC,YAAAe,8BACA,GAAAre,IAAmCltB,GAAA9V,KAAA6oD,eAAA7yC,GAAAhW,KAAA6oD,eAAAnqD,EAAAsB,KAAA6oD,eAAAlkD,EAAA3E,KAAA6oD,eACnC,WAAA5F,+BAAAzC,EAAAxd,EAAAtkC,EAAAskC,EAAAr+B,EAAAq+B,EAAAltB,GAAAktB,EAAAhtB,GACA,KAAAsqC,YAAAc,8BACA,GAAApe,IAAmCltB,GAAA9V,KAAA6oD,eAAA7yC,GAAAhW,KAAA6oD,eAAAnqD,EAAAsB,KAAA6oD,eAAAlkD,EAAA3E,KAAA6oD,eACnC,WAAA7F,+BAAAxC,EAAAxd,EAAAtkC,EAAAskC,EAAAr+B,EAAAq+B,EAAAltB,GAAAktB,EAAAhtB,GACA,KAAAsqC,YAAAyB,qCACA,UAAAsC,qCAAA7D,EAAAxgD,KAAA6oD,eAAA7oD,KAAA6oD,eACA,KAAAvI,YAAAwB,qCACA,UAAAsC,qCAAA5D,EAAAxgD,KAAA6oD,eAAA7oD,KAAA6oD,eACA,KAAAvI,YAAAiB,gBACA,GAAAve,IAAmCltB,GAAA9V,KAAA6oD,eAAA7yC,GAAAhW,KAAA6oD,eAAAgB,SAAA7pD,KAAA6oD,eAAAiB,SAAA9pD,KAAAypD,gBAAAM,SAAA/pD,KAAAypD,gBAAA/qD,EAAAsB,KAAA6oD,eAAAlkD,EAAA3E,KAAA6oD,eACnC,WAAAhF,kBAAArD,EAAAxd,EAAAtkC,EAAAskC,EAAAr+B,EAAAq+B,EAAAltB,GAAAktB,EAAAhtB,GAAAgtB,EAAA6mB,SAAA7mB,EAAA8mB,SAAA9mB,EAAA+mB,SACA,KAAAzJ,YAAAgB,gBACA,GAAAte,IAAmCltB,GAAA9V,KAAA6oD,eAAA7yC,GAAAhW,KAAA6oD,eAAAgB,SAAA7pD,KAAA6oD,eAAAiB,SAAA9pD,KAAAypD,gBAAAM,SAAA/pD,KAAAypD,gBAAA/qD,EAAAsB,KAAA6oD,eAAAlkD,EAAA3E,KAAA6oD,eACnC,WAAA3F,kBAAA1C,EAAAxd,EAAAtkC,EAAAskC,EAAAr+B,EAAAq+B,EAAAltB,GAAAktB,EAAAhtB,GAAAgtB,EAAA6mB,SAAA7mB,EAAA8mB,SAAA9mB,EAAA+mB,SACA,SACA,+BAIA,IAAAC,GAAA,GAAAtC,GACAuC,EAAA,GAAArC,GAAArnD,EAEA,KAAA0pD,EAAAtB,yBACA,QACA,MAAAsB,EAAA5B,eAAA,CACA,GAAAvB,GAAAmD,EAAAL,cACA,KAAA9C,EACA,QACAkD,GAAArC,cAAAb,GAGA,MAAAkD,GAAAzjB,iBAQAzkC,GAAA1I,EAAA,OAAA2I,EAAA,WAA0C,MAAAgK,IAAa3G,MAAAjM,EAAA2I,KAAA2E,SAAA1E,IAAA7I,EAAAC,QAAA4I,KAOtDC,SHiZKkoD,KACA,SAAShxD,EAAQC,EAASC,GI35QhC,GAAA+wD,GAAApoD,GAAA,WAQA,QAAAqoD,GAAA1+C,GACA,MAAAA,OAAA2+C,eAAA3+C,EAAAiG,UAAAjG,GAAA4+C,gBAEA,QAAAC,GAAA7+C,GACA,MAAAA,OAAA2+C,eAAA3+C,EAAA2+C,cAAAG,aAAA9+C,EAAAiG,UAAAjG,KAAA8+C,aAiCA,QAAAC,GAAAr1B,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAA7d,IA8DA,QAAAkzC,GAAAhsD,GACA,cAAAA,EAAA8Y,KAAA9Y,EAEA,QAAAisD,GAAAjsD,GACA,OAAA8kB,MAAA9kB,GA0DA,QAAAksD,GAAAC,GACA,OACAv/C,KAAA,SAAA8pB,EAAA12B,EAAAosD,EAAAC,GAGA,IAFA7/C,UAAAtO,OAAA,IAAAkuD,EAAA,GACA5/C,UAAAtO,OAAA,IAAAmuD,EAAA31B,EAAAx4B,QACAkuD,EAAAC,GAAA,CACA,GAAAC,GAAAF,EAAAC,IAAA,CACAF,GAAAz1B,EAAA41B,GAAAtsD,GAAA,EAAAosD,EAAAE,EAAA,EAAmDD,EAAAC,EAEnD,MAAAF,IAEA1/C,MAAA,SAAAgqB,EAAA12B,EAAAosD,EAAAC,GAGA,IAFA7/C,UAAAtO,OAAA,IAAAkuD,EAAA,GACA5/C,UAAAtO,OAAA,IAAAmuD,EAAA31B,EAAAx4B,QACAkuD,EAAAC,GAAA,CACA,GAAAC,GAAAF,EAAAC,IAAA,CACAF,GAAAz1B,EAAA41B,GAAAtsD,GAAA,EAAAqsD,EAAAC,EAA+CF,EAAAE,EAAA,EAE/C,MAAAF,KA2CA,QAAAG,GAAApvD,GACA,MAAAA,GAAAe,OAmDA,QAAAsuD,GAAAxsD,GAEA,IADA,GAAA8wB,GAAA,EACA9wB,EAAA8wB,EAAA,GAAAA,GAAA,EACA,OAAAA,GAEA,QAAA27B,GAAAC,EAAAC,GACA,OAAA5nD,KAAA4nD,GACA5xD,OAAAC,eAAA0xD,EAAA7oD,UAAAkB,GACA9J,MAAA0xD,EAAA5nD,GACA6+C,YAAA,IAkBA,QAAAgJ,KACAtrD,KAAAurD,EAAA9xD,OAAA6I,OAAA,MAgCA,QAAAkpD,GAAA/nD,GACA,OAAAA,GAAA,MAAAgoD,IAAAhoD,EAAA,KAAAioD,MAAAjoD,IAEA,QAAAkoD,GAAAloD,GACA,OAAAA,GAAA,SAAAioD,GAAAjoD,EAAAgE,MAAA,GAAAhE,EAEA,QAAAmoD,GAAAnoD,GACA,MAAA+nD,GAAA/nD,IAAAzD,MAAAurD,EAEA,QAAAM,GAAApoD,GACA,OAAAA,EAAA+nD,EAAA/nD,KAAAzD,MAAAurD,SAAAvrD,MAAAurD,EAAA9nD,GAEA,QAAAqoD,KACA,GAAAvoD,KACA,QAAAE,KAAAzD,MAAAurD,EAAAhoD,EAAAhF,KAAAotD,EAAAloD,GACA,OAAAF,GAEA,QAAAwoD,KACA,GAAAhsD,GAAA,CACA,QAAA0D,KAAAzD,MAAAurD,IAAAxrD,CACA,OAAAA,GAEA,QAAAisD,KACA,OAAAvoD,KAAAzD,MAAAurD,EAAA,QACA,UAsEA,QAAAU,KACAjsD,KAAAurD,EAAA9xD,OAAA6I,OAAA,MAiBA,QAAA4pD,GAAArwD,GACA,MAAAA,GAOA,QAAAswD,GAAA9oD,EAAA4mD,EAAAmC,GACA,kBACA,GAAAzyD,GAAAyyD,EAAAhnD,MAAA6kD,EAAA/+C,UACA,OAAAvR,KAAAswD,EAAA5mD,EAAA1J,GAGA,QAAA0yD,GAAA7rD,EAAAszB,GACA,GAAAA,IAAAtzB,GAAA,MAAAszB,EACAA,KAAA3sB,OAAA,GAAAmlD,cAAAx4B,EAAArsB,MAAA,EACA,QAAAvC,GAAA,EAAAge,EAAAqpC,GAAA3vD,OAAiDsI,EAAAge,IAAOhe,EAAA,CACxD,GAAAsnD,GAAAD,GAAArnD,GAAA4uB,CACA,IAAA04B,IAAAhsD,GAAA,MAAAgsD,IAIA,QAAAC,MAMA,QAAAC,MAeA,QAAAC,GAAAC,GAEA,QAAAhvB,KAEA,IADA,GAAA4R,GAAAiM,EAAAoR,EAAA3nD,GAAA,EAAAge,EAAAu4B,EAAA7+C,SACAsI,EAAAge,IAAAssB,EAAAiM,EAAAv2C,GAAAqO,KAAAi8B,EAAApqC,MAAApF,KAAAkL,UACA,OAAA0hD,GAJA,GAAAC,MAAAC,EAAA,GAAAxB,EAmBA,OAbA1tB,GAAArqB,GAAA,SAAAugB,EAAAi5B,GACA,GAAA7nD,GAAAsqC,EAAAsd,EAAAj0B,IAAA/E,EACA,OAAA5oB,WAAAtO,OAAA,EAAA4yC,KAAAj8B,IACAi8B,IACAA,EAAAj8B,GAAA,KACAs5C,IAAAplD,MAAA,EAAAvC,EAAA2nD,EAAA3wC,QAAAszB,IAAAhoC,OAAAqlD,EAAAplD,MAAAvC,EAAA,IACA4nD,EAAAnjD,OAAAmqB,IAEAi5B,GAAAF,EAAAtuD,KAAAuuD,EAAAn5B,IAAAG,GACAvgB,GAAAw5C,KAEAH,IAEAhvB,EAGA,QAAAovB,KACAnpD,GAAA+5B,MAAAqvB,iBAEA,QAAAC,KAEA,IADA,GAAAxiD,GAAAuR,EAAApY,GAAA+5B,MACAlzB,EAAAuR,EAAAm/B,aAAAn/B,EAAAvR,CACA,OAAAuR,GAEA,QAAAkxC,GAAA9pD,GAEA,IADA,GAAAupD,GAAA,GAAAF,GAAAxnD,EAAA,EAAAge,EAAAhY,UAAAtO,SACAsI,EAAAge,GAAA0pC,EAAA1hD,UAAAhG,IAAAynD,EAAAC,EAaA,OAZAA,GAAAQ,GAAA,SAAAC,EAAAC,GACA,gBAAAC,GACA,IACA,GAAAC,GAAAD,EAAAnS,YAAAv3C,GAAA+5B,KACA2vB,GAAAlqD,SACAQ,GAAA+5B,MAAA2vB,EACAX,EAAAW,EAAApuD,MAAAiG,MAAAioD,EAAAC,GACS,QACTzpD,GAAA+5B,MAAA4vB,KAIAZ,EAWA,QAAAa,GAAAnO,GAEA,MADAoO,IAAApO,EAAAqO,IACArO,EAyCA,QAAAsO,GAAAjwB,GACA,wBAAAA,KAAA,WACA,MAAAkwB,IAAAlwB,EAAA39B,OAgBA,QAAA8tD,GAAAnwB,GACA,wBAAAA,KAAA,WACA,MAAAowB,IAAApwB,EAAA39B,OAkCA,QAAAguD,GAAAl6B,EAAAn6B,GAEA,QAAAs0D,KACAjuD,KAAAkuD,gBAAAp6B,GAEA,QAAAq6B,KACAnuD,KAAAouD,kBAAAt6B,EAAAu6B,MAAAv6B,EAAAw6B,OAEA,QAAAC,KACAvuD,KAAA4mD,aAAA9yB,EAAAn6B,GAEA,QAAA60D,KACAxuD,KAAAyuD,eAAA36B,EAAAu6B,MAAAv6B,EAAAw6B,MAAA30D,GAEA,QAAA+0D,KACA,GAAAhwD,GAAA/E,EAAAyL,MAAApF,KAAAkL,UACA,OAAAxM,EAAAsB,KAAAkuD,gBAAAp6B,GAAgD9zB,KAAA4mD,aAAA9yB,EAAAp1B,GAEhD,QAAAiwD,KACA,GAAAjwD,GAAA/E,EAAAyL,MAAApF,KAAAkL,UACA,OAAAxM,EAAAsB,KAAAouD,kBAAAt6B,EAAAu6B,MAAAv6B,EAAAw6B,OAAoEtuD,KAAAyuD,eAAA36B,EAAAu6B,MAAAv6B,EAAAw6B,MAAA5vD,GAEpE,MArBAo1B,GAAAjwB,GAAA+qD,GAAAC,QAAA/6B,GAqBA,MAAAn6B,EAAAm6B,EAAAw6B,MAAAH,EAAAF,EAAA,kBAAAt0D,GAAAm6B,EAAAw6B,MAAAK,EAAAD,EAAA56B,EAAAw6B,MAAAE,EAAAD,EAEA,QAAAO,GAAApkD,GACA,MAAAA,GAAAqkD,OAAA90B,QAAA,YAmBA,QAAA+0B,GAAAl7B,GACA,UAAAm7B,QAAA,aAAAprD,GAAAqrD,QAAAp7B,GAAA,kBAEA,QAAAq7B,GAAAr7B,GACA,OAAAA,EAAA,IAAAi7B,OAAA/nD,MAAA,SAEA,QAAAooD,GAAAt7B,EAAAn6B,GAGA,QAAA01D,KAEA,IADA,GAAAnqD,IAAA,IACAA,EAAAge,GAAA4Q,EAAA5uB,GAAAlF,KAAArG,GAEA,QAAA21D,KAEA,IADA,GAAApqD,IAAA,EAAAxG,EAAA/E,EAAAyL,MAAApF,KAAAkL,aACAhG,EAAAge,GAAA4Q,EAAA5uB,GAAAlF,KAAAtB,GARAo1B,EAAAq7B,EAAAr7B,GAAArpB,IAAA8kD,EACA,IAAArsC,GAAA4Q,EAAAl3B,MASA,yBAAAjD,GAAA21D,EAAAD,EAEA,QAAAE,GAAAz7B,GACA,GAAA07B,GAAAR,EAAAl7B,EACA,iBAAApoB,EAAA/R,GACA,GAAA08B,EAAA3qB,EAAA+jD,UAAA,MAAA91D,GAAA08B,EAAA9X,IAAAuV,GAAAuC,EAAA1sB,OAAAmqB,EACA,IAAAuC,GAAA3qB,EAAAq6C,aAAA,YACApsD,IACA61D,EAAAE,UAAA,EACAF,EAAAG,KAAAt5B,IAAA3qB,EAAAk7C,aAAA,QAAAkI,EAAAz4B,EAAA,IAAAvC,KAEApoB,EAAAk7C,aAAA,QAAAkI,EAAAz4B,EAAA4D,QAAAu1B,EAAA,QAoBA,QAAAI,GAAA97B,EAAAn6B,EAAAk2D,GACA,QAAAC,KACA9vD,KAAA2B,MAAAouD,eAAAj8B,GAEA,QAAAk8B,KACAhwD,KAAA2B,MAAAsuD,YAAAn8B,EAAAn6B,EAAAk2D,GAEA,QAAAK,KACA,GAAAxxD,GAAA/E,EAAAyL,MAAApF,KAAAkL,UACA,OAAAxM,EAAAsB,KAAA2B,MAAAouD,eAAAj8B,GAAqD9zB,KAAA2B,MAAAsuD,YAAAn8B,EAAAp1B,EAAAmxD,GAErD,aAAAl2D,EAAAm2D,EAAA,kBAAAn2D,GAAAu2D,EAAAF,EAUA,QAAAG,GAAAr8B,EAAAn6B,GACA,QAAAy2D,WACApwD,MAAA8zB,GAEA,QAAAu8B,KACArwD,KAAA8zB,GAAAn6B,EAEA,QAAA22D,KACA,GAAA5xD,GAAA/E,EAAAyL,MAAApF,KAAAkL,UACA,OAAAxM,QAAAsB,MAAA8zB,GAAuC9zB,KAAA8zB,GAAAp1B,EAEvC,aAAA/E,EAAAy2D,EAAA,kBAAAz2D,GAAA22D,EAAAD,EA4BA,QAAAE,GAAAz8B,GACA,QAAAxxB,KACA,GAAAqP,GAAA3R,KAAAqqD,cAAAmG,EAAAxwD,KAAAywD,YACA,OAAAD,KAAAE,IAAA/+C,EAAA24C,gBAAAmG,eAAAC,GAAA/+C,EAAA9U,cAAAi3B,GAAAniB,EAAAg/C,gBAAAH,EAAA18B,GAEA,QAAA88B,KACA,MAAA5wD,MAAAqqD,cAAAsG,gBAAA78B,EAAAu6B,MAAAv6B,EAAAw6B,OAEA,wBAAAx6B,QAAAjwB,GAAA+qD,GAAAC,QAAA/6B,IAAAw6B,MAAAsC,EAAAtuD,EAYA,QAAAuuD,KACA,GAAAjyB,GAAA5+B,KAAA2hB,UACAid,MAAAkyB,YAAA9wD,MAmFA,QAAA+wD,GAAAvxD,GACA,OACAu/C,SAAAv/C,GAoBA,QAAAwxD,GAAArzB,GACA,kBACA,MAAAszB,IAAAjxD,KAAA29B,IAmBA,QAAAuzB,GAAAC,GAEA,MADAjmD,WAAAtO,SAAAu0D,EAAA1G,GACA,SAAAr1B,EAAAC,GACA,MAAAD,IAAAC,EAAA87B,EAAA/7B,EAAA2pB,SAAA1pB,EAAA0pB,WAAA3pB,GAAAC,GAQA,QAAA+7B,GAAA9R,EAAAr8B,GACA,OAAAsM,GAAA,EAAApzB,EAAAmjD,EAAA1iD,OAAsC2yB,EAAApzB,EAAOozB,IAC7C,OAAA7jB,GAAA2lD,EAAA/R,EAAA/vB,GAAArqB,EAAA,EAAAge,EAAAmuC,EAAAz0D,OAAgEsI,EAAAge,EAAOhe,KACvEwG,EAAA2lD,EAAAnsD,KAAA+d,EAAAvX,EAAAxG,EAAAqqB,EAGA,OAAA+vB,GA0BA,QAAAgS,GAAAhtD,GAEA,MADAopD,IAAAppD,EAAAitD,IACAjtD,EA+BA,QAAAktD,GAAAjoD,GACA,GAAAkoD,GAAAC,CACA,iBAAA71D,EAAAqJ,EAAAqqB,GACA,GAAA7jB,GAAA2lD,EAAA9nD,EAAAgmB,GAAA1N,OAAAqB,EAAAmuC,EAAAz0D,MAGA,KAFA2yB,GAAAmiC,MAAAniC,EAAAkiC,EAAA,GACAvsD,GAAAusD,MAAAvsD,EAAA,KACAwG,EAAA2lD,EAAAI,SAAAvuC,IACA,MAAAxX,IAsCA,QAAAimD,GAAAxyD,EAAA4tD,EAAA6E,GAKA,QAAAC,KACA,GAAAriB,GAAAxvC,KAAA8zB,EACA0b,KACAxvC,KAAA6/C,oBAAA1gD,EAAAqwC,IAAAsiB,SACA9xD,MAAA8zB,IAGA,QAAAi+B,KACA,GAAAviB,GAAAwiB,EAAAjF,EAAAkF,GAAA/mD,WACA2mD,GAAA3tD,KAAAlE,MACAA,KAAA4iB,iBAAAzjB,EAAAa,KAAA8zB,GAAA0b,IAAAsiB,EAAAF,GACApiB,EAAA+b,EAAAwB,EAEA,QAAAmF,KACA,GAAAC,GAAA3C,EAAA,GAAAP,QAAA,eAAAprD,GAAAqrD,QAAA/vD,GAAA,IACA,QAAA20B,KAAA9zB,MACA,GAAAmyD,EAAAr+B,EAAAq+B,MAAA3C,GAAA,CACA,GAAAhgB,GAAAxvC,KAAA8zB,EACA9zB,MAAA6/C,oBAAAsS,EAAA,GAAA3iB,IAAAsiB,SACA9xD,MAAA8zB,IAvBA,GAAAA,GAAA,OAAA30B,EAAA+F,EAAA/F,EAAA+c,QAAA,KAAA81C,EAAAI,CACAltD,GAAA,IAAA/F,IAAAsI,MAAA,EAAAvC,GACA,IAAA7H,GAAAg1D,GAAAx5B,IAAA15B,EAyBA,OAxBA9B,KAAA8B,EAAA9B,EAAA20D,EAAAM,GAwBAptD,EAAA6nD,EAAAgF,EAAAF,EAAA9E,EAAAN,EAAAyF,EAWA,QAAAE,GAAArF,EAAAO,GACA,gBAAArxC,GACA,GAAA4d,GAAAh2B,GAAA+5B,KACA/5B,IAAA+5B,MAAA3hB,EACAqxC,EAAA,GAAAttD,KAAA++C,QACA,KACAgO,EAAA3nD,MAAApF,KAAAstD,GACO,QACPzpD,GAAA+5B,MAAA/D,IAIA,QAAAy4B,GAAAvF,EAAAO,GACA,GAAA9d,GAAA4iB,EAAArF,EAAAO,EACA,iBAAArxC,GACA,GAAA5Y,GAAArD,KAAAuyD,EAAAt2C,EAAAu2C,aACAD,SAAAlvD,GAAA,EAAAkvD,EAAAE,wBAAApvD,KACAmsC,EAAAtrC,KAAAb,EAAA4Y,IAKA,QAAAy2C,IAAAhnD,GACA,GAAAooB,GAAA,oBAAA6+B,GAAAC,EAAA,QAAA9+B,EAAA7tB,EAAApC,GAAAqC,OAAAqkD,EAAA7+C,IAAA6H,GAAA,YAAAugB,EAAAk5B,GAAAz5C,GAAA,YAAAugB,EAAAk5B,GAAAz5C,GAAA,cAAAugB,EAAAk5B,EAIA,IAHA,MAAA6F,KACAA,KAAA,iBAAAnnD,KAAA2gD,EAAA3gD,EAAA/J,MAAA,eAEAkxD,GAAA,CACA,GAAAlxD,GAAAyoD,EAAA1+C,GAAA/J,MAAAuE,EAAAvE,EAAAkxD,GACAlxD,GAAAkxD,IAAA,OAEA,gBAAAC,GAGA,GAFA7sD,EAAAsN,GAAAugB,EAAA,MACA++B,KAAAlxD,EAAAkxD,IAAA3sD,GACA4sD,EAAA,CACA,GAAAC,GAAA,WACA9sD,EAAAsN,GAAAq/C,EAAA,MAEA3sD,GAAAsN,GAAAq/C,EAAA,WACA5F,IACA+F,MACS,GACTvwC,WAAAuwC,EAAA,KAQA,QAAAC,IAAAC,EAAAh3C,GACAA,EAAAi3C,iBAAAj3C,IAAAi3C,eAAA,GACA,IAAA5/C,GAAA2/C,EAAAE,iBAAAF,CACA,IAAA3/C,EAAA8/C,eAAA,CACA,GAAAC,GAAA//C,EAAA8/C,gBACA,IAAAE,GAAA,GACA,GAAAtxD,GAAAuoD,EAAA0I,EACA,IAAAjxD,EAAAuxD,SAAAvxD,EAAAwxD,QAAA,CACAlgD,EAAAzP,GAAAqC,OAAA,QAAA8D,OAAA,OAAArI,OACA29B,SAAA,WACAn0B,IAAA,EACAG,KAAA,EACA4L,OAAA,EACAoZ,QAAA,EACAmjC,OAAA,QACW,YACX,IAAAC,GAAApgD,EAAA,MAAAqgD,cACAL,MAAAI,EAAAlxD,GAAAkxD,EAAAz3C,GACA3I,EAAA3J,UAMA,MAHA2pD,KAAAD,EAAA30D,EAAAud,EAAA23C,MAAAP,EAAA1uD,EAAAsX,EAAA43C,QAAkER,EAAA30D,EAAAud,EAAAq/B,QAClE+X,EAAA1uD,EAAAsX,EAAAs/B,SACA8X,IAAAS,gBAAAb,EAAAU,eAAAI,YACAV,EAAA30D,EAAA20D,EAAA1uD,GAEA,GAAAgjC,GAAAsrB,EAAA3sD,uBACA,QAAA2V,EAAAq/B,QAAA3T,EAAAr8B,KAAA2nD,EAAAe,WAAA/3C,EAAAs/B,QAAA5T,EAAAx8B,IAAA8nD,EAAAgB,WA2DA,QAAAC,MACA,MAAArwD,IAAA+5B,MAAAs1B,eAAA,GAAAiB,WAWA,QAAAC,IAAA11D,GACA,MAAAA,GAAA,IAAAA,EAAA,OAEA,QAAA21D,IAAAj/B,EAAAC,EAAAgB,GACA,OAAAhB,EAAA,GAAAD,EAAA,KAAAiB,EAAA,GAAAjB,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAAiB,EAAA,GAAAjB,EAAA,IAEA,QAAAk/B,IAAA51D,GACA,MAAAA,GAAA,IAAAA,GAAA,EAAA61D,GAAAh5D,KAAAi5D,KAAA91D,GAEA,QAAA+1D,IAAA/1D,GACA,MAAAA,GAAA,EAAAg2D,GAAAh2D,GAAA,GAAAg2D,GAAAn5D,KAAAo5D,KAAAj2D,GAEA,QAAAk2D,IAAAl2D,GACA,QAAAA,EAAAnD,KAAAs5D,IAAAn2D,IAAA,EAAAA,GAAA,EAEA,QAAAo2D,IAAAp2D,GACA,QAAAA,EAAAnD,KAAAs5D,IAAAn2D,IAAA,EAAAA,GAAA,EAEA,QAAAq2D,IAAAr2D,GACA,QAAAA,EAAAnD,KAAAs5D,IAAA,EAAAn2D,IAAA,IAAAA,EAAA,GAEA,QAAAs2D,IAAAt2D,GACA,OAAAA,EAAAnD,KAAAoN,IAAAjK,EAAA,IAAAA,EAuSA,QAAAu2D,OAKA,QAAAC,IAAAlvD,EAAA0E,EAAA8kC,GACA,MAAAxvC,gBAAAk1D,KAAAl1D,KAAAgG,KAAAhG,KAAA0K,UAAA1K,KAAAwvC,OAAAtkC,UAAAtO,OAAA,EAAAoJ,YAAAkvD,IAAA,GAAAA,IAAAlvD,MAAA0E,EAAA1E,EAAAwpC,GAAA2lB,GAAA,GAAAnvD,EAAAovD,GAAAF,IAAA,GAAAA,IAAAlvD,EAAA0E,EAAA8kC,GAcA,QAAA6lB,IAAArvD,EAAA0E,EAAA8kC,GAOA,QAAA7pC,GAAAK,GAEA,MADAA,GAAA,IAAAA,GAAA,IAA4BA,EAAA,IAAAA,GAAA,KAC5BA,EAAA,GAAAsvD,GAAAC,EAAAD,GAAAtvD,EAAA,GACAA,EAAA,IAAAuvD,EACAvvD,EAAA,IAAAsvD,GAAAC,EAAAD,IAAA,IAAAtvD,GAAA,GACAsvD,EAEA,QAAAE,GAAAxvD,GACA,MAAAzK,MAAAg8C,MAAA,IAAA5xC,EAAAK,IAdA,GAAAsvD,GAAAC,CAgBA,OAfAvvD,GAAAwd,MAAAxd,GAAA,GAAAA,GAAA,OAAAA,EAAA,IAAAA,EACA0E,EAAA8Y,MAAA9Y,GAAA,EAAAA,EAAA,IAAAA,EAAA,IAAAA,EACA8kC,IAAA,IAAAA,EAAA,IAAAA,EACA+lB,EAAA/lB,GAAA,GAAAA,GAAA,EAAA9kC,GAAA8kC,EAAA9kC,EAAA8kC,EAAA9kC,EACA4qD,EAAA,EAAA9lB,EAAA+lB,EAWA,GAAAE,IAAAD,EAAAxvD,EAAA,KAAAwvD,EAAAxvD,GAAAwvD,EAAAxvD,EAAA;CAGA,QAAA0vD,IAAA1vD,EAAAqwB,EAAAmZ,GACA,MAAAxvC,gBAAA01D,KAAA11D,KAAAgG,KAAAhG,KAAAq2B,UAAAr2B,KAAAwvC,OAAAtkC,UAAAtO,OAAA,EAAAoJ,YAAA0vD,IAAA,GAAAA,IAAA1vD,MAAAqwB,EAAArwB,EAAAwpC,GAAAxpC,YAAA2vD,IAAAC,GAAA5vD,EAAAwpC,EAAAxpC,EAAAovB,EAAApvB,EAAAqvB,GAAAugC,IAAA5vD,EAAA6vD,IAAA7vD,EAAAnC,GAAA+1C,IAAA5zC,IAAAg/B,EAAAh/B,EAAAa,EAAAb,EAAAqvB,IAAAma,EAAAxpC,EAAAovB,EAAApvB,EAAAqvB,GAAA,GAAAqgC,IAAA1vD,EAAAqwB,EAAAmZ,GAYA,QAAAsmB,IAAA9vD,EAAAqwB,EAAAmZ,GAGA,MAFAhsB,OAAAxd,OAAA,GACAwd,MAAA6S,OAAA,GACA,GAAAs/B,IAAAnmB,EAAAj0C,KAAAmkC,IAAA15B,GAAA+vD,IAAA1/B,EAAA96B,KAAAoN,IAAA3C,GAAAqwB,GAGA,QAAAs/B,IAAAnmB,EAAApa,EAAAC,GACA,MAAAr1B,gBAAA21D,KAAA31D,KAAAwvC,KAAAxvC,KAAAo1B,UAAAp1B,KAAAq1B,OAAAnqB,UAAAtO,OAAA,EAAA4yC,YAAAmmB,IAAA,GAAAA,IAAAnmB,MAAApa,EAAAoa,EAAAna,GAAAma,YAAAkmB,IAAAI,GAAAtmB,EAAAxpC,EAAAwpC,EAAAnZ,EAAAmZ,KAAAqmB,IAAArmB,EAAAimB,GAAAjmB,IAAAxK,EAAAwK,EAAA3oC,EAAA2oC,EAAAna,GAAA,GAAAsgC,IAAAnmB,EAAApa,EAAAC,GAcA,QAAA2gC,IAAAxmB,EAAApa,EAAAC,GACA,GAAA1wB,IAAA6qC,EAAA,QAAA9wC,EAAAiG,EAAAywB,EAAA,IAAAqmB,EAAA92C,EAAA0wB,EAAA,GAIA,OAHA32B,GAAAu3D,GAAAv3D,GAAAw3D,GACAvxD,EAAAsxD,GAAAtxD,GAAAwxD,GACA1a,EAAAwa,GAAAxa,GAAA2a,GACA,GAAAX,IAAAY,GAAA,UAAA33D,EAAA,UAAAiG,EAAA,SAAA82C,GAAA4a,IAAA,QAAA33D,EAAA,UAAAiG,EAAA,QAAA82C,GAAA4a,GAAA,SAAA33D,EAAA,SAAAiG,EAAA,UAAA82C,IAEA,QAAAma,IAAApmB,EAAApa,EAAAC,GACA,MAAAma,GAAA,KAAAkmB,IAAAn6D,KAAA+6D,MAAAjhC,EAAAD,GAAAmhC,GAAAh7D,KAAAy8B,KAAA5C,IAAAC,KAAAma,GAAA,GAAAkmB,IAAAl+C,QAAAg4B,GAEA,QAAAymB,IAAAv3D,GACA,MAAAA,GAAA,WAAAA,SAAA,eAEA,QAAA83D,IAAA93D,GACA,MAAAA,GAAA,QAAAnD,KAAA08B,IAAAv5B,EAAA,cAAAA,EAAA,KAEA,QAAA23D,IAAArxB,GACA,MAAAzpC,MAAAg8C,MAAA,KAAAvS,GAAA,aAAAA,EAAA,MAAAzpC,KAAA08B,IAAA+M,EAAA,cAGA,QAAAywB,IAAAzwB,EAAAn+B,EAAAwuB,GACA,MAAAr1B,gBAAAy1D,KAAAz1D,KAAAglC,MAAAhlC,KAAA6G,WAAA7G,KAAAq1B,QAAAnqB,UAAAtO,OAAA,EAAAooC,YAAAywB,IAAA,GAAAA,IAAAzwB,MAAAn+B,EAAAm+B,EAAA3P,GAAA8/B,GAAA,GAAAnwB,EAAAywB,GAAAJ,IAAA,GAAAI,IAAAzwB,EAAAn+B,EAAAwuB,GAEA,QAAAohC,IAAA98D,GACA,UAAA87D,IAAA97D,GAAA,GAAAA,GAAA,UAAAA,GAEA,QAAA+8D,IAAA/8D,GACA,MAAA88D,IAAA98D,GAAA,GAsBA,QAAAg9D,IAAAhxD,GACA,MAAAA,GAAA,OAAApK,KAAA+D,IAAA,EAAAqG,GAAAgC,SAAA,IAAApM,KAAAiyB,IAAA,IAAA7nB,GAAAgC,SAAA,IAEA,QAAAwtD,IAAA/4D,EAAAw9C,EAAAgd,GACA,GAAAtB,GAAAC,EAAAxnD,EAAAi3B,EAAA,EAAAn+B,EAAA,EAAAwuB,EAAA,CAEA,IADAigC,EAAA,mBAAAuB,KAAAz6D,IAAAw5B,eAGA,OADA2/B,EAAAD,EAAA,GAAAtuD,MAAA,KACAsuD,EAAA,IACA,UAEA,MAAAsB,GAAAE,WAAAvB,EAAA,IAAAuB,WAAAvB,EAAA,QAAAuB,WAAAvB,EAAA,QAGA,WAEA,MAAA3b,GAAAmd,GAAAxB,EAAA,IAAAwB,GAAAxB,EAAA,IAAAwB,GAAAxB,EAAA,KAIA,OAAAxnD,EAAAipD,GAAAn+B,IAAAz8B,IACAw9C,EAAA7rC,EAAAi3B,EAAAj3B,EAAAlH,EAAAkH,EAAAsnB,IAEA,MAAAj5B,GAAA,MAAAA,EAAA+K,OAAA,IAAAqc,MAAAzV,EAAAkpD,SAAA76D,EAAAqL,MAAA,UACA,IAAArL,EAAAQ,QACAooC,GAAA,KAAAj3B,IAAA,EACAi3B,MAAA,EACAn+B,EAAA,IAAAkH,EACAlH,MAAA,EACAwuB,EAAA,GAAAtnB,EACAsnB,MAAA,GACO,IAAAj5B,EAAAQ,SACPooC,GAAA,SAAAj3B,IAAA,GACAlH,GAAA,MAAAkH,IAAA,EACAsnB,EAAA,IAAAtnB,IAGA6rC,EAAA5U,EAAAn+B,EAAAwuB,IAEA,QAAA+/B,IAAApwB,EAAAn+B,EAAAwuB,GACA,GAAArvB,GAAA0E,EAAA8iB,EAAAjyB,KAAAiyB,IAAAwX,GAAA,IAAAn+B,GAAA,IAAAwuB,GAAA,KAAA/1B,EAAA/D,KAAA+D,IAAA0lC,EAAAn+B,EAAAwuB,GAAAx5B,EAAAyD,EAAAkuB,EAAAgiB,GAAAlwC,EAAAkuB,GAAA,CASA,OARA3xB,IACA6O,EAAA8kC,EAAA,GAAA3zC,GAAAyD,EAAAkuB,GAAA3xB,GAAA,EAAAyD,EAAAkuB,GACAxnB,EAAAg/B,GAAA1lC,GAAAuH,EAAAwuB,GAAAx5B,GAAAgL,EAAAwuB,EAAA,KAAsDxuB,GAAAvH,GAAA+1B,EAAA2P,GAAAnpC,EAAA,GAAwCmpC,EAAAn+B,GAAAhL,EAAA,EAC9FmK,GAAA,KAEAA,EAAAwR,IACA9M,EAAA8kC,EAAA,GAAAA,EAAA,IAAAxpC,GAEA,GAAAkvD,IAAAlvD,EAAA0E,EAAA8kC,GAEA,QAAAqmB,IAAA7wB,EAAAn+B,EAAAwuB,GACA2P,EAAAkyB,GAAAlyB,GACAn+B,EAAAqwD,GAAArwD,GACAwuB,EAAA6hC,GAAA7hC,EACA,IAAA32B,GAAA83D,IAAA,SAAAxxB,EAAA,SAAAn+B,EAAA,SAAAwuB,GAAA6gC,IAAAvxD,EAAA6xD,IAAA,SAAAxxB,EAAA,SAAAn+B,EAAA,QAAAwuB,GAAA8gC,IAAA1a,EAAA+a,IAAA,SAAAxxB,EAAA,QAAAn+B,EAAA,SAAAwuB,GAAA+gC,GACA,OAAAT,IAAA,IAAAhxD,EAAA,QAAAjG,EAAAiG,GAAA,KAAAA,EAAA82C,IAEA,QAAAyb,IAAAlyB,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAAzpC,KAAA08B,KAAA+M,EAAA,iBAEA,QAAA+xB,IAAA1gC,GACA,GAAA7zB,GAAAs0D,WAAAzgC,EACA,aAAAA,EAAAlvB,OAAAkvB,EAAAz5B,OAAA,GAAArB,KAAAg8C,MAAA,KAAA/0C,KA2JA,QAAA20D,IAAAxxD,GACA,wBAAAA,KAAA,WACA,MAAAA,IAKA,QAAAyxD,IAAAn+B,GACA,gBAAAV,EAAAC,EAAAvV,GAGA,MAFA,KAAA/X,UAAAtO,QAAA,kBAAA47B,KAAAvV,EAAAuV,EACAA,EAAA,MACA6+B,GAAA9+B,EAAAC,EAAAS,EAAAhW,IAGA,QAAAo0C,IAAA9+B,EAAAC,EAAAS,EAAAhW,GAMA,QAAAq0C,KACA,GAAAC,GAAAx+B,EAAAy+B,EAAAz+B,MACA,KAAAA,GAAA0+B,GAAAD,IAAAz+B,GAAA,KAAAA,EAAA,WAAAA,EAAA,CACA,IACAw+B,EAAAt+B,EAAA/0B,KAAAy0B,EAAA6+B,GACS,MAAAv7C,GAET,WADA2wC,GAAAvrC,MAAAnd,KAAAy0B,EAAA1c,GAGA2wC,EAAAjyB,KAAAz2B,KAAAy0B,EAAA4+B,OAEA3K,GAAAvrC,MAAAnd,KAAAy0B,EAAA6+B,GAhBA,GAAA7+B,MAAgBi0B,EAAA/oD,GAAA+oD,SAAA,wCAAAn0B,KAAiF++B,EAAA,GAAAE,gBAAAC,EAAA,IAwEjG,QAvEA33D,KAAA43D,gBAAA,mBAAAJ,KAAA,oBAAA7H,KAAAp3B,KAAAi/B,EAAA,GAAAI,iBACA,UAAAJ,KAAAK,OAAAL,EAAAM,QAAAR,EAAAE,EAAAO,mBAAA,WACAP,EAAAQ,WAAA,GAAAV,KAgBAE,EAAAS,WAAA,SAAAr6B,GACA,GAAA/D,GAAAh2B,GAAA+5B,KACA/5B,IAAA+5B,OACA,KACAgvB,EAAAsL,SAAAh0D,KAAAy0B,EAAA6+B,GACO,QACP3zD,GAAA+5B,MAAA/D,IAGAlB,EAAAC,OAAA,SAAA9E,EAAAn6B,GAEA,MADAm6B,MAAA,IAAA8B,cACA1qB,UAAAtO,OAAA,EAAA67B,EAAA3E,IACA,MAAAn6B,QAAA8+B,GAAA3E,GAA8C2E,EAAA3E,GAAAn6B,EAAA,GAC9Cg/B,IAEAA,EAAAH,SAAA,SAAA7+B,GACA,MAAAuR,WAAAtO,QACA47B,EAAA,MAAA7+B,EAAA,KAAAA,EAAA,GACAg/B,GAFAH,GAIAG,EAAAg/B,aAAA,SAAAh+D,GACA,MAAAuR,WAAAtO,QACA+6D,EAAAh+D,EACAg/B,GAFAg/B,GAIAh/B,EAAAM,SAAA,SAAAt/B,GAEA,MADAs/B,GAAAt/B,EACAg/B,IAEA,cAAAn1B,QAAA,SAAA4oD,GACAzzB,EAAAyzB,GAAA,WACA,MAAAzzB,GAAAw/B,KAAA/yD,MAAAuzB,GAAAyzB,GAAA5kD,OAAAyqD,GAAA/mD,gBAGAytB,EAAAw/B,KAAA,SAAA/L,EAAA5sD,EAAAyjB,GAIA,GAHA,IAAA/X,UAAAtO,QAAA,kBAAA4C,KAAAyjB,EAAAzjB,IAAA,MACAg4D,EAAAY,KAAAhM,EAAA7zB,GAAA,GACA,MAAAC,GAAA,UAAAC,OAAA,OAAAD,EAAA,QACAg/B,EAAAa,iBAAA,OAAAvkC,KAAA2E,GAAA++B,EAAAa,iBAAAvkC,EAAA2E,EAAA3E,GAQA,OAPA,OAAA0E,GAAAg/B,EAAAc,kBAAAd,EAAAc,iBAAA9/B,GACA,MAAAm/B,IAAAH,EAAAG,gBACA,MAAA10C,GAAA0V,EAAAplB,GAAA,QAAA0P,GAAA1P,GAAA,gBAAAikD,GACAv0C,EAAA,KAAAu0C,KAEA5K,EAAA2L,WAAAr0D,KAAAy0B,EAAA6+B,GACAA,EAAAW,KAAA,MAAA34D,EAAA,KAAAA,GACAm5B,GAEAA,EAAA6/B,MAAA,WAEA,MADAhB,GAAAgB,QACA7/B,GAEA90B,GAAA40D,OAAA9/B,EAAAi0B,EAAA,MACA,MAAA3pC,EAAA0V,IAAAE,IAAA6/B,GAAAz1C,IAEA,QAAAy1C,IAAAz1C,GACA,WAAAA,EAAArmB,OAAA,SAAAykB,EAAAm2C,GACAv0C,EAAA,MAAA5B,EAAAm2C,EAAA,OACKv0C,EAEL,QAAAw0C,IAAAD,GACA,GAAAr4D,GAAAq4D,EAAAG,YACA,OAAAx4D,IAAA,SAAAA,EAAAq4D,EAAAv+B,SAAAu+B,EAAAmB,aAgHA,QAAAC,IAAA31C,EAAA41C,EAAAC,GACA,GAAA51C,GAAAhY,UAAAtO,MACAsmB,GAAA,IAAA21C,EAAA,GACA31C,EAAA,IAAA41C,EAAAr9D,KAAAs9D,MACA,IAAA1qD,GAAAyqD,EAAAD,EAAA11C,GACAkT,EAAApT,EACA3E,EAAAjQ,EACA6U,EAAA,KASA,OAPA81C,OAAA91C,EAAAC,EAAyD81C,GAAA91C,EACzD61C,GAAA71C,EACA+1C,KACAC,GAAA52C,aAAA42C,IACAD,GAAA,EACAE,GAAAC,KAEAl2C,EAEA,QAAAk2C,MACA,GAAAN,GAAAO,KAAAT,EAAAU,KAAAR,CACAF,GAAA,IACAW,SAAAX,KACAt2C,aAAA42C,IACAA,GAAA32C,WAAA62C,GAAAR,IAEAK,GAAA,IAEAA,GAAA,EACAE,GAAAC,KAOA,QAAAC,MAEA,IADA,GAAAP,GAAAt9D,KAAAs9D,MAAA51C,EAAA81C,GACA91C,GACA41C,GAAA51C,EAAA7E,GAAA6E,EAAAkT,EAAA0iC,EAAA51C,EAAA7E,KAAA6E,EAAAkT,EAAA,MACAlT,IAAAD,CAEA,OAAA61C,GAEA,QAAAQ,MAEA,IADA,GAAAE,GAAAxjC,EAAAgjC,GAAA5qD,EAAAzC,IACAqqB,GACAA,EAAAI,GACAJ,EAAA3X,EAAAjQ,MAAA4nB,EAAA3X,GACA2X,GAAAwjC,EAAAxjC,GAAA/S,GAEA+S,EAAAwjC,IAAAv2C,EAAA+S,EAAA/S,EAAA+1C,GAAAhjC,EAAA/S,CAIA,OADA81C,IAAAS,EACAprD,EAEA,QAAAqrD,IAAAh7D,EAAA03B,GACA,MAAAA,IAAA13B,EAAAnD,KAAAiJ,KAAAjJ,KAAAo+D,IAAAj7D,GAAAnD,KAAAq+D,MAAA,GAgBA,QAAAC,IAAAh+D,EAAAqJ,GACA,GAAAsqB,GAAAj0B,KAAA08B,IAAA,KAAA1G,GAAA,EAAArsB,GACA,QACAD,MAAAC,EAAA,WAAArJ,GACA,MAAAA,GAAA2zB,GACO,SAAA3zB,GACP,MAAAA,GAAA2zB,GAEAsqC,OAAAj+D,GAGA,QAAAk+D,IAAAC,GACA,GAAAC,GAAAD,EAAA/Q,QAAAiR,EAAAF,EAAAG,UAAAC,EAAAJ,EAAAK,SAAAC,EAAAN,EAAAO,SAAAC,EAAAJ,GAAAF,EAAA,SAAAvgE,EAAA6M,GAEA,IADA,GAAAtB,GAAAvL,EAAAiD,OAAA0hB,KAAAiR,EAAA,EAAA1oB,EAAAuzD,EAAA,GAAAx9D,EAAA,EACAsI,EAAA,GAAA2B,EAAA,IACAjK,EAAAiK,EAAA,EAAAL,IAAAK,EAAAtL,KAAA+D,IAAA,EAAAkH,EAAA5J,IACA0hB,EAAA/f,KAAA5E,EAAA8gE,UAAAv1D,GAAA2B,EAAA3B,EAAA2B,OACAjK,GAAAiK,EAAA,GAAAL,KACAK,EAAAuzD,EAAA7qC,KAAA,GAAA6qC,EAAAx9D,OAEA,OAAA0hB,GAAAsT,UAAA8oC,KAAAR,IACKhO,CACL,iBAAAyO,GACA,GAAAxI,GAAAyI,GAAA/D,KAAA8D,GAAAE,EAAA1I,EAAA,QAAA2I,EAAA3I,EAAA,QAAAjJ,EAAAiJ,EAAA,QAAA2H,EAAA3H,EAAA,OAAA4I,EAAA5I,EAAA,GAAA3rD,GAAA2rD,EAAA,GAAA6I,EAAA7I,EAAA,GAAA8I,EAAA9I,EAAA,GAAAhzD,EAAAgzD,EAAA,GAAAltD,EAAA,EAAAs3C,EAAA,GAAA2e,EAAA,GAAAnS,GAAA,EAAAD,GAAA,CAMA,QALAmS,SAAAR,UAAA,KACAM,GAAA,MAAAF,GAAA,MAAAC,KACAC,EAAAF,EAAA,IACAC,EAAA,KAEA37D,GACA,QACA67D,GAAA,EACA77D,EAAA,GACA,MAEA,SACA8F,EAAA,IACAi2D,EAAA,IACA/7D,EAAA,GACA,MAEA,SACA8F,EAAA,IACAi2D,EAAA,IACA/7D,EAAA,GACA,MAEA,SACA,QACA,QACA,QACA,MAAA26D,IAAAvd,EAAA,IAAAp9C,EAAAy2B,cAEA,SACAkzB,GAAA,CAEA,SACAC,GAAA,EACAkS,EAAA,CACA,MAEA,SACAh2D,GAAA,EACA9F,EAAA,IAGA,MAAA26D,IAAAvd,EAAA+d,EAAA,GAAAY,EAAAZ,EAAA,IACA,KAAAn7D,GAAA87D,IAAA97D,EAAA,KACA,MAAA87D,IACA,KAAA97D,EAAA87D,EAAA1/D,KAAA+D,IAAA,EAAA/D,KAAAiyB,IAAA,GAAAytC,IAA0E,KAAA97D,GAAA,KAAAA,IAAA87D,EAAA1/D,KAAA+D,IAAA,EAAA/D,KAAAiyB,IAAA,GAAAytC,MAE1E97D,EAAAg8D,GAAAtiC,IAAA15B,IAAAi8D,EACA,IAAAC,GAAAN,GAAAC,CACA,iBAAArhE,GACA,GAAA2hE,GAAAJ,CACA,IAAAnS,GAAApvD,EAAA,UACA,IAAA4hE,GAAA5hE,EAAA,OAAAA,GAAA,EAAAA,EAAA,GAAAA,KAAA,WAAAuvD,EAAA,GAAAA,CACA,IAAAjkD,EAAA,GACA,GAAA6tC,GAAAjvC,GAAA23D,aAAA7hE,EAAAshE,EACAthE,GAAAm5C,EAAA7tC,MAAAtL,GACA2hE,EAAAxoB,EAAAgnB,OAAAoB,MAEAvhE,IAAAsL,CAEAtL,GAAAwF,EAAAxF,EAAAshE,EACA,IAAAQ,GAAAC,EAAAx2D,EAAAvL,EAAAgiE,YAAA,IACA,IAAAz2D,EAAA,GACA,GAAAqqB,GAAAu5B,EAAAnvD,EAAAgiE,YAAA,OACApsC,GAAA,GAAAksC,EAAA9hE,EAAA+hE,EAAA,KAAgDD,EAAA9hE,EAAA8gE,UAAA,EAAAlrC,GAAAmsC,EAAA/hE,EAAA8gE,UAAAlrC,QAEhDksC,GAAA9hE,EAAA8gE,UAAA,EAAAv1D,GACAw2D,EAAAzB,EAAAtgE,EAAA8gE,UAAAv1D,EAAA,IAEA61D,GAAAC,IAAAS,EAAAjB,EAAAiB,EAAA7vD,KACA,IAAAhP,GAAA2/C,EAAA3/C,OAAA6+D,EAAA7+D,OAAA8+D,EAAA9+D,QAAAy+D,EAAA,EAAAE,EAAA3+D,QAAA0zB,EAAA1zB,EAAA4J,EAAA,GAAAo3C,OAAAhhD,EAAA4J,EAAA5J,EAAA,GAAA89D,KAAAG,GAAA,EAIA,OAHAQ,KAAAI,EAAAjB,EAAAlqC,EAAAmrC,EAAAnrC,EAAA1zB,OAAA4J,EAAAk1D,EAAA9+D,OAAAgP,MACA2vD,GAAAhf,EACA5iD,EAAA8hE,EAAAC,GACA,MAAAZ,EAAAS,EAAA5hE,EAAA22B,EAAA,MAAAwqC,EAAAxqC,EAAAirC,EAAA5hE,EAAA,MAAAmhE,EAAAxqC,EAAAmqC,UAAA,EAAA79D,IAAA,GAAA2+D,EAAA5hE,EAAA22B,EAAAmqC,UAAA79D,GAAA2+D,GAAAF,EAAA1hE,EAAA22B,EAAA32B,IAAA2hE,IAkCA,QAAAF,IAAA18D,GACA,MAAAA,GAAA,GAGA,QAAAk9D,MACA57D,KAAAurD,EAAA,GAAA9vD,MAAAyP,UAAAtO,OAAA,EAAAnB,KAAAogE,IAAAz2D,MAAApF,KAAAkL,qBAAA,IAiEA,QAAA4wD,IAAAxN,EAAA3hB,EAAA6c,GACA,QAAAjS,GAAAl0B,GACA,GAAAmgB,GAAA8qB,EAAAjrC,GAAAogB,EAAA9V,EAAA6V,EAAA,EACA,OAAAngB,GAAAmgB,EAAAC,EAAApgB,EAAAmgB,EAAAC,EAEA,QAAAj/B,GAAA6e,GAEA,MADAspB,GAAAtpB,EAAAirC,EAAA,GAAAyN,IAAA14C,EAAA,OACAA,EAEA,QAAAsK,GAAAtK,EAAAmM,GAEA,MADAmd,GAAAtpB,EAAA,GAAA04C,KAAA14C,GAAAmM,GACAnM,EAEA,QAAAhb,GAAAoxD,EAAAxjC,EAAA+lC,GACA,GAAA3tD,GAAA7J,EAAAi1D,GAAAwC,IACA,IAAAD,EAAA,EACA,KAAA3tD,EAAA4nB,GACAuzB,EAAAn7C,GAAA2tD,GAAAC,EAAA19D,KAAA,GAAA9C,OAAA4S,IACAs+B,EAAAt+B,EAAA,OAGA,MAAAA,EAAA4nB,GAAAgmC,EAAA19D,KAAA,GAAA9C,OAAA4S,IAAAs+B,EAAAt+B,EAAA,EAEA,OAAA4tD,GAEA,QAAAC,GAAAzC,EAAAxjC,EAAA+lC,GACA,IACAD,GAAAH,EACA,IAAAttD,GAAA,GAAAstD,GAEA,OADAttD,GAAAi9C,EAAAkO,EACApxD,EAAAiG,EAAA2nB,EAAA+lC,GACO,QACPD,GAAAtgE,MAGA6yD,EAAA9yD,MAAA8yD,EACAA,EAAA/W,QACA+W,EAAA9pD,OACA8pD,EAAA3gC,SACA2gC,EAAAjmD,OACA,IAAAiG,GAAAggD,EAAAhgD,IAAA6tD,GAAA7N,EAMA,OALAhgD,GAAA9S,MAAA8S,EACAA,EAAAipC,MAAA4kB,GAAA5kB,GACAjpC,EAAA9J,KAAA23D,GAAA33D,GACA8J,EAAAqf,OAAAwuC,GAAAxuC,GACArf,EAAAjG,MAAA6zD,EACA5N,EAEA,QAAA6N,IAAA/P,GACA,gBAAA/oC,EAAAmM,GACA,IACAusC,GAAAH,EACA,IAAAttD,GAAA,GAAAstD,GAEA,OADAttD,GAAAi9C,EAAAloC,EACA+oC,EAAA99C,EAAAkhB,GAAA+7B,EACO,QACPwQ,GAAAtgE,OAoDA,QAAA2gE,IAAApC,GAEA,QAAAqC,GAAAC,GAEA,QAAAlgE,GAAAinB,GAEA,IADA,GAAAgT,GAAAD,EAAA5zB,EAAAjC,KAAA2E,GAAA,EAAAqqB,EAAA,IACArqB,EAAAge,GACA,KAAAo5C,EAAAC,WAAAr3D,KACA3E,EAAAhC,KAAA+9D,EAAA70D,MAAA8nB,EAAArqB,IACA,OAAAkxB,EAAAomC,GAAAnmC,EAAAimC,EAAAn1D,SAAAjC,OAAAmxB,EAAAimC,EAAAn1D,SAAAjC,KACA1C,EAAAi6D,EAAApmC,QAAA7zB,EAAA6gB,EAAA,MAAA+S,EAAA,MAAAC,EAAA,QAAAD,IACA71B,EAAAhC,KAAA83B,GACA9G,EAAArqB,EAAA,EAIA,OADA3E,GAAAhC,KAAA+9D,EAAA70D,MAAA8nB,EAAArqB,IACA3E,EAAAm6D,KAAA,IAbA,GAAAx3C,GAAAo5C,EAAA1/D,MAwCA,OAzBAR,GAAAV,MAAA,SAAA6E,GACA,GAAA1E,IACA8I,EAAA,KACAxI,EAAA,EACAN,EAAA,EACA6gE,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,MACS53D,EAAA63D,EAAAlhE,EAAAygE,EAAA/7D,EAAA,EACT,IAAA2E,GAAA3E,EAAA3D,OAAA,WACA,MAAAf,OAAA6gE,EAAA7gE,EAAA6gE,EAAA,MAAA7gE,EAAAu6B,EACA,IAAA4mC,GAAA,MAAAnhE,EAAAihE,GAAAf,KAAAH,GAAAv4C,EAAA,IAAA25C,EAAApB,GAAAG,GAOA,OANA,KAAAlgE,GAAAwnB,EAAA45C,YAAAphE,EAAA8I,EAAA,EAAA9I,EAAA0zB,GAAoD,KAAA1zB,IAAA,KAAAA,IACpD,KAAAA,OAAAoK,EAAA,KAAApK,GAAA,KACAwnB,EAAA45C,YAAAphE,EAAA8I,EAAA,KACA0e,EAAA45C,YAAAphE,EAAA8I,EAAA,OAAA9I,MAAAoK,EAAA,OAAApK,EAAAqhE,GAAA75C,EAAAhoB,SAAA,KAAAQ,EAAAoK,EAAA,EAAApK,EAAAshE,GAAA95C,EAAAhoB,SAAA,OACSgoB,EAAA45C,YAAAphE,EAAA8I,EAAA9I,EAAAM,EAAAN,KACTwnB,EAAA+5C,SAAAvhE,EAAA6gE,GAAA7gE,EAAAihE,EAAA,OAAAjhE,EAAA8gE,EAAA9gE,EAAAihE,EAAA,IAAAjhE,EAAA+gE,EAAA/gE,EAAAghE,GACAG,EAAA35C,EAAAkoC,EAAAloC,GAEAjnB,EAAAuL,SAAA,WACA,MAAA20D,IAEAlgE,EAEA,QAAA2gE,GAAA15C,EAAAi5C,EAAA/7D,EAAAgvB,GAEA,IADA,GAAA8G,GAAAD,EAAA9X,EAAApZ,EAAA,EAAAge,EAAAo5C,EAAA1/D,OAAAT,EAAAoE,EAAA3D,OACAsI,EAAAge,GAAA,CACA,GAAAqM,GAAApzB,EAAA,QAEA,IADAk6B,EAAAimC,EAAAC,WAAAr3D,KACA,KAAAmxB,GAGA,GAFA/X,EAAAg+C,EAAAn1D,OAAAjC,KACAkxB,EAAAinC,EAAA/+C,IAAAk+C,IAAAF,EAAAn1D,OAAAjC,KAAAoZ,IACA8X,IAAA7G,EAAA6G,EAAA/S,EAAA9iB,EAAAgvB,IAAA,eACS,IAAA8G,GAAA91B,EAAAg8D,WAAAhtC,KACT,SAGA,MAAAA,GA2HA,QAAA+tC,GAAAj6C,EAAA9iB,EAAA2E,GACAq4D,EAAA7N,UAAA,CACA,IAAAxsC,GAAAq6C,EAAA1G,KAAAt2D,EAAAkH,MAAAvC,GACA,OAAAge,IAAAG,EAAApd,EAAAu3D,EAAA3kC,IAAA3V,EAAA,GAAA0S,eAAA1wB,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAA6gE,GAAAp6C,EAAA9iB,EAAA2E,GACAw4D,EAAAhO,UAAA,CACA,IAAAxsC,GAAAw6C,EAAA7G,KAAAt2D,EAAAkH,MAAAvC,GACA,OAAAge,IAAAG,EAAApd,EAAA03D,EAAA9kC,IAAA3V,EAAA,GAAA0S,eAAA1wB,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAAghE,GAAAv6C,EAAA9iB,EAAA2E,GACA24D,EAAAnO,UAAA,CACA,IAAAxsC,GAAA26C,EAAAhH,KAAAt2D,EAAAkH,MAAAvC,GACA,OAAAge,IAAAG,EAAAlnB,EAAA2hE,EAAAjlC,IAAA3V,EAAA,GAAA0S,eAAA1wB,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAAmhE,GAAA16C,EAAA9iB,EAAA2E,GACA84D,EAAAtO,UAAA,CACA,IAAAxsC,GAAA86C,EAAAnH,KAAAt2D,EAAAkH,MAAAvC,GACA,OAAAge,IAAAG,EAAAlnB,EAAA8hE,EAAAplC,IAAA3V,EAAA,GAAA0S,eAAA1wB,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAAshE,GAAA76C,EAAA9iB,EAAA2E,GACA,MAAA63D,GAAA15C,EAAAo5C,EAAApmC,EAAA1uB,WAAApH,EAAA2E,GAEA,QAAAi5D,GAAA96C,EAAA9iB,EAAA2E,GACA,MAAA63D,GAAA15C,EAAAo5C,EAAA/9D,EAAAiJ,WAAApH,EAAA2E,GAEA,QAAAk5D,GAAA/6C,EAAA9iB,EAAA2E,GACA,MAAA63D,GAAA15C,EAAAo5C,EAAA4B,EAAA12D,WAAApH,EAAA2E,GAEA,QAAAo5D,GAAAj7C,EAAA9iB,EAAA2E,GACA,GAAAge,GAAAq7C,EAAA1lC,IAAAt4B,EAAAkH,MAAAvC,KAAA,GAAA0wB,cACA,cAAA1S,GAAA,GAAAG,EAAA+S,EAAAlT,EAAAhe,GAnNA,GAAAs5D,GAAAxE,EAAAyE,SAAAC,EAAA1E,EAAA32C,KAAAs7C,EAAA3E,EAAA3rD,KAAAuwD,EAAA5E,EAAA6E,QAAAC,EAAA9E,EAAA+E,KAAAC,EAAAhF,EAAAiF,UAAAC,EAAAlF,EAAAmF,OAAAC,EAAApF,EAAAqF,WA2DAhD,GAAA/tD,IAAA,SAAAguD,GAEA,QAAAlgE,GAAAinB,GACA,IACA04C,GAAAH,EACA,IAAAttD,GAAA,GAAAytD,GAEA,OADAztD,GAAAi9C,EAAAloC,EACAirC,EAAAhgD,GACS,QACTytD,GAAAtgE,MARA,GAAA6yD,GAAA+N,EAAAC,EAqBA,OAVAlgE,GAAAV,MAAA,SAAA6E,GACA,IACAw7D,GAAAH,EACA,IAAAv4C,GAAAirC,EAAA5yD,MAAA6E,EACA,OAAA8iB,MAAAkoC,EACS,QACTwQ,GAAAtgE,OAGAW,EAAAuL,SAAA2mD,EAAA3mD,SACAvL,GAEAigE,EAAA3tD,MAAA2tD,EAAA/tD,IAAAI,MAAA4wD,EACA,IAAAf,GAAA16D,GAAA4G,MAAAizD,EAAA6B,GAAAT,GAAAnB,EAAA6B,GAAAV,GAAAvB,EAAAgC,GAAAP,GAAAxB,EAAAgC,GAAAR,GAAAhB,EAAAuB,GAAAL,GAAAjB,EAAAuB,GAAAN,GAAArB,EAAA0B,GAAAH,GAAAtB,EAAA0B,GAAAJ,EACAR,GAAAp7D,QAAA,SAAA4yB,EAAAlxB,GACAq5D,EAAA5qC,IAAAyC,EAAAR,cAAA1wB,IAEA,IAAAu3D,IACArnC,EAAA,SAAAv5B,GACA,MAAAmjE,GAAAnjE,EAAAR,WAEAokE,EAAA,SAAA5jE,GACA,MAAAijE,GAAAjjE,EAAAR,WAEAg6B,EAAA,SAAAx5B,GACA,MAAAujE,GAAAvjE,EAAAE,aAEA2jE,EAAA,SAAA7jE,GACA,MAAAqjE,GAAArjE,EAAAE,aAEAs6B,EAAAgmC,EAAAmC,GACA3iE,EAAA,SAAAA,EAAAu6B,GACA,MAAAupC,IAAA9jE,EAAAkT,UAAAqnB,EAAA,IAEAna,EAAA,SAAApgB,EAAAu6B,GACA,MAAAupC,IAAA9jE,EAAAkT,UAAAqnB,EAAA,IAEAsmC,EAAA,SAAA7gE,EAAAu6B,GACA,MAAAupC,IAAA9jE,EAAAiT,WAAAsnB,EAAA,IAEAwpC,EAAA,SAAA/jE,EAAAu6B,GACA,MAAAupC,IAAA9jE,EAAAiT,WAAA,OAAAsnB,EAAA,IAEA7G,EAAA,SAAA1zB,EAAAu6B,GACA,MAAAupC,IAAA,EAAAE,GAAAC,UAAAjkE,GAAAu6B,EAAA,IAEAymC,EAAA,SAAAhhE,EAAAu6B,GACA,MAAAupC,IAAA9jE,EAAA8S,kBAAAynB,EAAA,IAEAj6B,EAAA,SAAAN,EAAAu6B,GACA,MAAAupC,IAAA9jE,EAAAE,WAAA,EAAAq6B,EAAA,IAEAumC,EAAA,SAAA9gE,EAAAu6B,GACA,MAAAupC,IAAA9jE,EAAAgT,aAAAunB,EAAA,IAEAA,EAAA,SAAAv6B,GACA,MAAA+iE,KAAA/iE,EAAAiT,YAAA,MAEA8tD,EAAA,SAAA/gE,EAAAu6B,GACA,MAAAupC,IAAA9jE,EAAA+S,aAAAwnB,EAAA,IAEA+mC,EAAA,SAAAthE,EAAAu6B,GACA,MAAAupC,IAAAE,GAAAE,aAAAlkE,GAAAu6B,EAAA,IAEAnwB,EAAA,SAAApK,GACA,MAAAA,GAAAR,UAEA6hE,EAAA,SAAArhE,EAAAu6B,GACA,MAAAupC,IAAAE,GAAAG,aAAAnkE,GAAAu6B,EAAA,IAEA13B,EAAA29D,EAAAqC,GACAL,EAAAhC,EAAAsC,GACAh6D,EAAA,SAAA9I,EAAAu6B,GACA,MAAAupC,IAAA9jE,EAAAC,cAAA,IAAAs6B,EAAA,IAEA6pC,EAAA,SAAApkE,EAAAu6B,GACA,MAAAupC,IAAA9jE,EAAAC,cAAA,IAAAs6B,EAAA,IAEA0mC,EAAAoD,GACAC,IAAA,WACA,YAGA9C,GACAjoC,EAAAkoC,EACAmC,EAAAhC,EACApoC,EAAAuoC,EACA8B,EAAA3B,EACA1nC,EAAA6nC,EACAriE,EAAAukE,GACAnkD,EAAAmkD,GACA1D,EAAA2D,GACAT,EAAAS,GACA9wC,EAAA+wC,GACAzD,EAAA0D,GACApkE,EAAAqkE,GACA7D,EAAA8D,GACArqC,EAAAkoC,EACA1B,EAAA8D,GACAvD,EAAAwD,GACA16D,EAAA26D,GACA1D,EAAA2D,GACAniE,EAAAy/D,EACAE,EAAAD,EACAz5D,EAAAm8D,GACAb,EAAAc,GACAjE,EAAAkE,GACAb,IAAAc,GAmCA,OAAA5E,GAOA,QAAAsD,IAAAhmE,EAAAkhE,EAAAr0D,GACA,GAAA0iD,GAAAvvD,EAAA,SAAA4G,GAAA2oD,GAAAvvD,KAAA,GAAAiD,EAAA2D,EAAA3D,MACA,OAAAssD,IAAAtsD,EAAA4J,EAAA,GAAAo3C,OAAAp3C,EAAA5J,EAAA,GAAA89D,KAAAG,GAAAt6D,KAEA,QAAAg/D,IAAA/hB,GACA,UAAAyR,QAAA,OAAAzR,EAAA/yC,IAAA5G,GAAAqrD,SAAAwL,KAAA,cAEA,QAAA8E,IAAAhiB,GAEA,IADA,GAAA/yC,GAAA,GAAA6gD,GAAApmD,GAAA,EAAAge,EAAAs6B,EAAA5gD,SACAsI,EAAAge,GAAAzY,EAAAkpB,IAAA6pB,EAAAt4C,GAAA0wB,cAAA1wB,EACA,OAAAuF,GAEA,QAAAm2D,IAAAv9C,EAAA9iB,EAAA2E,GACAg8D,GAAAxR,UAAA,CACA,IAAAxsC,GAAAg+C,GAAArK,KAAAt2D,EAAAkH,MAAAvC,IAAA,GACA,OAAAge,IAAAG,EAAApd,GAAAid,EAAA,GAAAhe,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAA+jE,IAAAt9C,EAAA9iB,EAAA2E,GACAg8D,GAAAxR,UAAA,CACA,IAAAxsC,GAAAg+C,GAAArK,KAAAt2D,EAAAkH,MAAAvC,GACA,OAAAge,IAAAG,EAAA85C,GAAAj6C,EAAA,GAAAhe,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAAikE,IAAAx9C,EAAA9iB,EAAA2E,GACAg8D,GAAAxR,UAAA,CACA,IAAAxsC,GAAAg+C,GAAArK,KAAAt2D,EAAAkH,MAAAvC,GACA,OAAAge,IAAAG,EAAA65C,GAAAh6C,EAAA,GAAAhe,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAAmkE,IAAA19C,EAAA9iB,EAAA2E,GACAg8D,GAAAxR,UAAA,CACA,IAAAxsC,GAAAg+C,GAAArK,KAAAt2D,EAAAkH,MAAAvC,IAAA,GACA,OAAAge,IAAAG,EAAA1e,GAAAue,EAAA,GAAAhe,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAAkkE,IAAAz9C,EAAA9iB,EAAA2E,GACAg8D,GAAAxR,UAAA,CACA,IAAAxsC,GAAAg+C,GAAArK,KAAAt2D,EAAAkH,MAAAvC,IAAA,GACA,OAAAge,IAAAG,EAAA1e,EAAAw8D,IAAAj+C,EAAA,IAAAhe,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAAokE,IAAA39C,EAAA9iB,EAAA2E,GACA,oBAAsByqD,KAAApvD,IAAAkH,MAAAvC,IAAA,KAAAme,EAAAy5C,GAAAv8D,EACtB2E,EAAA,MAEA,QAAAi8D,IAAAtlE,GACA,MAAAA,MAAA,aAEA,QAAA2kE,IAAAn9C,EAAA9iB,EAAA2E,GACAg8D,GAAAxR,UAAA,CACA,IAAAxsC,GAAAg+C,GAAArK,KAAAt2D,EAAAkH,MAAAvC,IAAA,GACA,OAAAge,IAAAG,EAAAlnB,EAAA+mB,EAAA,KAAAhe,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAAwjE,IAAA/8C,EAAA9iB,EAAA2E,GACAg8D,GAAAxR,UAAA,CACA,IAAAxsC,GAAAg+C,GAAArK,KAAAt2D,EAAAkH,MAAAvC,IAAA,GACA,OAAAge,IAAAG,EAAAxnB,GAAAqnB,EAAA,GAAAhe,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAA0jE,IAAAj9C,EAAA9iB,EAAA2E,GACAg8D,GAAAxR,UAAA,CACA,IAAAxsC,GAAAg+C,GAAArK,KAAAt2D,EAAAkH,MAAAvC,IAAA,GACA,OAAAge,IAAAG,EAAAkM,GAAArM,EAAA,GAAAhe,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAAyjE,IAAAh9C,EAAA9iB,EAAA2E,GACAg8D,GAAAxR,UAAA,CACA,IAAAxsC,GAAAg+C,GAAArK,KAAAt2D,EAAAkH,MAAAvC,IAAA,GACA,OAAAge,IAAAG,EAAAq5C,GAAAx5C,EAAA,GAAAhe,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAA6jE,IAAAp9C,EAAA9iB,EAAA2E,GACAg8D,GAAAxR,UAAA,CACA,IAAAxsC,GAAAg+C,GAAArK,KAAAt2D,EAAAkH,MAAAvC,IAAA,GACA,OAAAge,IAAAG,EAAAs5C,GAAAz5C,EAAA,GAAAhe,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAA8jE,IAAAr9C,EAAA9iB,EAAA2E,GACAg8D,GAAAxR,UAAA,CACA,IAAAxsC,GAAAg+C,GAAArK,KAAAt2D,EAAAkH,MAAAvC,IAAA,GACA,OAAAge,IAAAG,EAAAu5C,GAAA15C,EAAA,GAAAhe,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAA2jE,IAAAl9C,EAAA9iB,EAAA2E,GACAg8D,GAAAxR,UAAA,CACA,IAAAxsC,GAAAg+C,GAAArK,KAAAt2D,EAAAkH,MAAAvC,IAAA,GACA,OAAAge,IAAAG,EAAAw5C,GAAA35C,EAAA,GAAAhe,EAAAge,EAAA,GAAAtmB,SAAA,EAEA,QAAAsjE,IAAArkE,GACA,GAAA4/C,GAAA5/C,EAAAulE,oBAAAC,EAAA5lB,EAAA,UAAA6lB,EAAA/vC,GAAAkqB,GAAA,KAAA8lB,EAAAhwC,GAAAkqB,GAAA,EACA,OAAA4lB,GAAA1B,GAAA2B,EAAA,OAAA3B,GAAA4B,EAAA,OAEA,QAAAN,IAAA59C,EAAA9iB,EAAA2E,GACAs8D,GAAA9R,UAAA,CACA,IAAAxsC,GAAAs+C,GAAA3K,KAAAt2D,EAAAkH,MAAAvC,IAAA,GACA,OAAAge,GAAAhe,EAAAge,EAAA,GAAAtmB,QAAA,EAEA,QAAA0iE,IAAAmC,GAEA,IADA,GAAAv+C,GAAAu+C,EAAA7kE,OAAAsI,GAAA,IACAA,EAAAge,GAAAu+C,EAAAv8D,GAAA,GAAAlF,KAAAyhE,EAAAv8D,GAAA,GACA,iBAAAme,GAEA,IADA,GAAAne,GAAA,EAAA1C,EAAAi/D,EAAAv8D,IACA1C,EAAA,GAAA6gB,IAAA7gB,EAAAi/D,IAAAv8D,EACA,OAAA1C,GAAA,GAAA6gB,IAyBA,QAAAq+C,OAiBA,QAAAC,IAAAvsC,EAAAC,EAAAwE,GACA,GAAAn7B,GAAAm7B,EAAAnvB,EAAA0qB,EAAAC,EAAAusC,EAAAljE,EAAA02B,EAAAysC,EAAAnjE,EAAAkjE,CACA/nC,GAAAvb,EAAA8W,EAAAysC,GAAAxsC,EAAAusC,GASA,QAAAE,IAAAC,EAAAhV,GACAgV,GAAAC,GAAAC,eAAAF,EAAA5iE,OACA6iE,GAAAD,EAAA5iE,MAAA4iE,EAAAhV,GA2CA,QAAAmV,IAAAC,EAAApV,EAAAnuD,GACA,GAAAwjE,GAAAl9D,GAAA,EAAAge,EAAAi/C,EAAAvlE,OAAAgC,CAEA,KADAmuD,EAAAsV,cACAn9D,EAAAge,GAAAk/C,EAAAD,EAAAj9D,GAAA6nD,EAAAsG,MAAA+O,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACArV,GAAAuV,UAEA,QAAAC,IAAAJ,EAAApV,GACA,GAAA7nD,IAAA,EAAAge,EAAAi/C,EAAAvlE,MAEA,KADAmwD,EAAAyV,iBACAt9D,EAAAge,GAAAg/C,GAAAC,EAAAj9D,GAAA6nD,EAAA,EACAA,GAAA0V,aAyBA,QAAAC,MAOA,QAAAC,GAAAC,EAAAC,GACAD,GAAA7M,GACA8M,IAAA9M,GAAA,EAAAxB,GAAA,CACA,IAAAuO,GAAAF,EAAAG,EAAAC,EAAAF,GAAA,OAAAG,EAAAD,EAAAF,EAAAI,EAAA3nE,KAAAmkC,IAAAmjC,GAAAM,EAAA5nE,KAAAoN,IAAAk6D,GAAArzC,EAAA4zC,EAAAD,EAAAE,EAAAC,EAAAJ,EAAA1zC,EAAAj0B,KAAAmkC,IAAAujC,GAAAt9D,EAAA6pB,EAAAwzC,EAAAznE,KAAAoN,IAAAs6D,EACAM,IAAAhlD,IAAAhjB,KAAA+6D,MAAA3wD,EAAA09D,IACAN,EAAAH,EAAAU,EAAAJ,EAAAE,EAAAD,EAXA,GAAAK,GAAAC,EAAAV,EAAAO,EAAAF,CACAM,IAAArQ,MAAA,SAAAuP,EAAAC,GACAa,GAAArQ,MAAAsP,EACAI,GAAAS,EAAAZ,GAAA7M,GAAAuN,EAAA/nE,KAAAmkC,IAAAmjC,GAAAY,EAAAZ,GAAA9M,GAAA,EAAAxB,GAAA,GACA6O,EAAA7nE,KAAAoN,IAAAk6D,IASAa,GAAApB,QAAA,WACAK,EAAAa,EAAAC,IAGA,QAAAE,IAAAC,GACA,GAAAhB,GAAAgB,EAAA,GAAAf,EAAAe,EAAA,GAAAV,EAAA3nE,KAAAmkC,IAAAmjC,EACA,QAAAK,EAAA3nE,KAAAmkC,IAAAkjC,GAAAM,EAAA3nE,KAAAoN,IAAAi6D,GAAArnE,KAAAoN,IAAAk6D,IAEA,QAAAgB,IAAAzuC,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAEA,QAAAyuC,IAAA1uC,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAEA,QAAA0uC,IAAA3uC,EAAAC,GACAD,EAAA,IAAAC,EAAA,GACAD,EAAA,IAAAC,EAAA,GACAD,EAAA,IAAAC,EAAA,GAEA,QAAA2uC,IAAAC,EAAAz0C,GACA,OAAAy0C,EAAA,GAAAz0C,EAAAy0C,EAAA,GAAAz0C,EAAAy0C,EAAA,GAAAz0C,GAEA,QAAA00C,IAAAroE,GACA,GAAA2zC,GAAAj0C,KAAAy8B,KAAAn8B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,GAAA,IAAA2zC,EACA3zC,EAAA,IAAA2zC,EACA3zC,EAAA,IAAA2zC,EAEA,QAAA20B,IAAAC,GACA,OAAA7oE,KAAA+6D,MAAA8N,EAAA,GAAAA,EAAA,IAAA3P,GAAA2P,EAAA,KAEA,QAAAC,IAAAjvC,EAAAC,GACA,MAAA9D,IAAA6D,EAAA,GAAAC,EAAA,IAAAivC,IAAA/yC,GAAA6D,EAAA,GAAAC,EAAA,IAAAivC,GA2JA,QAAAC,IAAA3B,EAAAC,GACAD,GAAA7M,EACA,IAAAmN,GAAA3nE,KAAAmkC,IAAAmjC,GAAA9M,GACAyO,IAAAtB,EAAA3nE,KAAAmkC,IAAAkjC,GAAAM,EAAA3nE,KAAAoN,IAAAi6D,GAAArnE,KAAAoN,IAAAk6D,IAEA,QAAA2B,IAAA9lE,EAAAiG,EAAA82C,KACAgpB,GACAC,KAAAhmE,EAAAgmE,IAAAD,GACAE,KAAAhgE,EAAAggE,IAAAF,GACAG,KAAAnpB,EAAAmpB,IAAAH,GAEA,QAAAI,MAWA,QAAAlC,GAAAC,EAAAC,GACAD,GAAA7M,EACA,IAAAmN,GAAA3nE,KAAAmkC,IAAAmjC,GAAA9M,IAAAr3D,EAAAwkE,EAAA3nE,KAAAmkC,IAAAkjC,GAAAj+D,EAAAu+D,EAAA3nE,KAAAoN,IAAAi6D,GAAAnnB,EAAAlgD,KAAAoN,IAAAk6D,GAAA58D,EAAA1K,KAAA+6D,MAAA/6D,KAAAy8B,MAAA/xB,EAAAk6B,EAAAsb,EAAAqpB,EAAAngE,GAAAsB,KAAA6+D,EAAApmE,EAAA2jC,EAAAoZ,GAAAx1C,KAAAo8B,EAAA19B,EAAAw7B,EAAAzhC,GAAAuH,GAAAo8B,EAAA3jC,EAAAyhC,EAAAx7B,EAAAmgE,EAAArpB,EACAspB,KAAA9+D,EACA++D,IAAA/+D,GAAAo8B,KAAA3jC,IACAumE,IAAAh/D,GAAAk6B,KAAAx7B,IACAugE,IAAAj/D,GAAA6+D,KAAArpB,IACA+oB,GAAAniC,EAAAlC,EAAA2kC,GAjBA,GAAAziC,GAAAlC,EAAA2kC,CACAK,IAAA9R,MAAA,SAAAuP,EAAAC,GACAD,GAAA7M,EACA,IAAAmN,GAAA3nE,KAAAmkC,IAAAmjC,GAAA9M,GACA1zB,GAAA6gC,EAAA3nE,KAAAmkC,IAAAkjC,GACAziC,EAAA+iC,EAAA3nE,KAAAoN,IAAAi6D,GACAkC,EAAAvpE,KAAAoN,IAAAk6D,GACAsC,GAAA9R,MAAAsP,EACA6B,GAAAniC,EAAAlC,EAAA2kC,IAYA,QAAAM,MACAD,GAAA9R,MAAAkR,GAEA,QAAAc,MAiBA,QAAA1C,GAAAC,EAAAC,GACAD,GAAA7M,EACA,IAAAmN,GAAA3nE,KAAAmkC,IAAAmjC,GAAA9M,IAAAr3D,EAAAwkE,EAAA3nE,KAAAmkC,IAAAkjC,GAAAj+D,EAAAu+D,EAAA3nE,KAAAoN,IAAAi6D,GAAAnnB,EAAAlgD,KAAAoN,IAAAk6D,GAAA9oD,EAAAomB,EAAAsb,EAAAqpB,EAAAngE,EAAAqV,EAAA8qD,EAAApmE,EAAA2jC,EAAAoZ,EAAA6pB,EAAAjjC,EAAA19B,EAAAw7B,EAAAzhC,EAAAvC,EAAAZ,KAAAy8B,KAAAje,IAAAC,IAAAsrD,KAAAjC,EAAAhhC,EAAA3jC,EAAAyhC,EAAAx7B,EAAAmgE,EAAArpB,EAAA91C,EAAAxJ,IAAAm4D,GAAA+O,GAAAlnE,EAAA8J,EAAA1K,KAAA+6D,MAAAn6D,EAAAknE,EACAkC,KAAA5/D,EAAAoU,EACAyrD,IAAA7/D,EAAAqU,EACAyrD,IAAA9/D,EAAA2/D,EACAP,IAAA9+D,EACA++D,IAAA/+D,GAAAo8B,KAAA3jC,IACAumE,IAAAh/D,GAAAk6B,KAAAx7B,IACAugE,IAAAj/D,GAAA6+D,KAAArpB,IACA+oB,GAAAniC,EAAAlC,EAAA2kC,GA1BA,GAAAtB,GAAAC,EAAAphC,EAAAlC,EAAA2kC,CACAK,IAAA9R,MAAA,SAAAuP,EAAAC,GACAW,EAAAZ,EAAAa,EAAAZ,EACAsC,GAAA9R,MAAAsP,EACAC,GAAA7M,EACA,IAAAmN,GAAA3nE,KAAAmkC,IAAAmjC,GAAA9M,GACA1zB,GAAA6gC,EAAA3nE,KAAAmkC,IAAAkjC,GACAziC,EAAA+iC,EAAA3nE,KAAAoN,IAAAi6D,GACAkC,EAAAvpE,KAAAoN,IAAAk6D,GACA2B,GAAAniC,EAAAlC,EAAA2kC,IAEAK,GAAA7C,QAAA,WACAK,EAAAa,EAAAC,GACA0B,GAAA7C,QAAA8C,GACAD,GAAA9R,MAAAkR,IAeA,QAAAmB,IAAAtwC,EAAAC,GACA,QAAAswC,GAAAjnE,EAAAiG,GACA,MAAAjG,GAAA02B,EAAA12B,EAAAiG,GAAA0wB,EAAA32B,EAAA,GAAAA,EAAA,IAKA,MAHA02B,GAAAwwC,QAAAvwC,EAAAuwC,SAAAD,EAAAC,OAAA,SAAAlnE,EAAAiG,GACA,MAAAjG,GAAA22B,EAAAuwC,OAAAlnE,EAAAiG,GAAAjG,GAAA02B,EAAAwwC,OAAAlnE,EAAA,GAAAA,EAAA,MAEAinE,EAEA,QAAAE,MACA,SAEA,QAAAC,IAAAC,EAAAlb,EAAAmb,EAAAzjC,EAAAwqB,GACA,GAAAkZ,MAAAC,IAuBA,IAtBAH,EAAAviE,QAAA,SAAA2iE,GACA,MAAAjjD,EAAAijD,EAAAvpE,OAAA,QACA,GAAAsmB,GAAAkjD,EAAAD,EAAA,GAAAE,EAAAF,EAAAjjD,EACA,IAAAmhD,GAAA+B,EAAAC,GAAA,CACAtZ,EAAAsV,WACA,QAAAn9D,GAAA,EAAuBA,EAAAge,IAAOhe,EAAA6nD,EAAAsG,OAAA+S,EAAAD,EAAAjhE,IAAA,GAAAkhE,EAAA,GAE9B,YADArZ,GAAAuV,UAGA,GAAAltC,GAAA,GAAAkxC,IAAAF,EAAAD,EAAA,SAAA9wC,EAAA,GAAAixC,IAAAF,EAAA,KAAAhxC,GAAA,EACAA,GAAAyE,EAAAxE,EACA4wC,EAAA1nE,KAAA62B,GACA8wC,EAAA3nE,KAAA82B,GACAD,EAAA,GAAAkxC,IAAAD,EAAAF,EAAA,SACA9wC,EAAA,GAAAixC,IAAAD,EAAA,KAAAjxC,GAAA,GACAA,EAAAyE,EAAAxE,EACA4wC,EAAA1nE,KAAA62B,GACA8wC,EAAA3nE,KAAA82B,MAEA6wC,EAAA/wC,KAAA01B,GACA0b,GAAAN,GACAM,GAAAL,GACAD,EAAArpE,OAAA,CACA,OAAAsI,GAAA,EAAAshE,EAAAR,EAAA9iD,EAAAgjD,EAAAtpE,OAA6DsI,EAAAge,IAAOhe,EACpEghE,EAAAhhE,GAAA+W,EAAAuqD,IAGA,KADA,GAAAxjC,GAAAqwB,EAAAvuD,EAAAmhE,EAAA,KACA,CAEA,IADA,GAAA3tC,GAAAxzB,EAAA2hE,GAAA,EACAnuC,EAAA3yB,GAAA,IAAA2yB,IAAApV,KAAApe,EAAA,MACAk+B,GAAA1K,EAAAmjB,EACAsR,EAAAsV,WACA,IAEA,GADA/pC,EAAA3yB,EAAA2yB,EAAAuB,EAAAl0B,GAAA,EACA2yB,EAAArc,EAAA,CACA,GAAAwqD,EACA,OAAAvhE,GAAA,EAAAge,EAAA8f,EAAApmC,OAA8CsI,EAAAge,IAAOhe,EAAA6nD,EAAAsG,SAAArwB,EAAA99B,IAAA,GAAAmuD,EAAA,QAErD9wB,GAAAjK,EAAA55B,EAAA45B,EAAApV,EAAAxkB,EAAA,EAAAquD,EAEAz0B,KAAApV,MACS,CACT,GAAAujD,EAAA,CACAzjC,EAAA1K,EAAAlC,EAAAqlB,CACA,QAAAv2C,GAAA89B,EAAApmC,OAAA,EAA2CsI,GAAA,IAAQA,EAAA6nD,EAAAsG,SAAArwB,EAAA99B,IAAA,GAAAmuD,EAAA,QAEnD9wB,GAAAjK,EAAA55B,EAAA45B,EAAAlC,EAAA13B,GAAA,EAAAquD,EAEAz0B,KAAAlC,EAEAkC,IAAAuB,EACAmJ,EAAA1K,EAAAmjB,EACAgrB,YACOnuC,EAAA3yB,EACPonD,GAAAuV,YAGA,QAAAiE,IAAAG,GACA,GAAAxjD,EAAAwjD,EAAA9pE,OAAA,CAEA,IADA,GAAAsmB,GAAAmS,EAAAnwB,EAAA,EAAAkwB,EAAAsxC,EAAA,KACAxhE,EAAAge,GACAkS,EAAAlS,EAAAmS,EAAAqxC,EAAAxhE,GACAmwB,EAAAe,EAAAhB,EACAA,EAAAC,CAEAD,GAAAlS,EAAAmS,EAAAqxC,EAAA,GACArxC,EAAAe,EAAAhB,GAEA,QAAAkxC,IAAAjT,EAAArwB,EAAA2jC,EAAAH,GACAxmE,KAAAtB,EAAA20D,EACArzD,KAAAy7C,EAAAzY,EACAhjC,KAAA65B,EAAA8sC,EACA3mE,KAAAic,EAAAuqD,EACAxmE,KAAA2F,GAAA,EACA3F,KAAAkjB,EAAAljB,KAAAo2B,EAAA,KAEA,QAAAwwC,IAAAC,EAAAC,EAAAvkC,EAAAwkC,GACA,gBAAAv+D,EAAAukD,GAuCA,QAAAsG,GAAAuP,EAAAC,GACA,GAAAxP,GAAA7qD,EAAAo6D,EAAAC,EACAgE,GAAAjE,EAAAvP,EAAA,GAAAwP,EAAAxP,EAAA,KAAAtG,EAAAsG,MAAAuP,EAAAC,GAEA,QAAAmE,GAAApE,EAAAC,GACA,GAAAxP,GAAA7qD,EAAAo6D,EAAAC,EACAlhC,GAAA0xB,QAAA,GAAAA,EAAA,IAEA,QAAAgP,KACA6D,EAAA7S,MAAA2T,EACArlC,EAAA0gC,YAEA,QAAAC,KACA4D,EAAA7S,QACA1xB,EAAA2gC,UAIA,QAAA2E,GAAArE,EAAAC,GACAqE,EAAA3oE,MAAAqkE,EAAAC,GACA,IAAAxP,GAAA7qD,EAAAo6D,EAAAC,EACAsE,GAAA9T,QAAA,GAAAA,EAAA,IAEA,QAAA+T,KACAD,EAAA9E,YACA6E,KAEA,QAAAG,KACAJ,EAAAC,EAAA,MAAAA,EAAA,OACAC,EAAA7E,SACA,IAAA6D,GAAAmB,EAAAH,EAAAG,QAAAC,EAAAC,WAAAtkD,EAAAqkD,EAAA3qE,MAIA,IAHAsqE,EAAAO,MACAC,EAAAnpE,KAAA2oE,GACAA,EAAA,KACAhkD,EACA,KAAAokD,EAAA,CACAnB,EAAAoB,EAAA,EACA,IAAAlU,GAAAnwC,EAAAijD,EAAAvpE,OAAA,EAAAsI,GAAA,CACA,IAAAge,EAAA,GAGA,IAFAykD,IAAA5a,EAAAyV,eAAAmF,GAAA,GACA5a,EAAAsV,cACAn9D,EAAAge,GAAA6pC,EAAAsG,SAAA8S,EAAAjhE,IAAA,GAAAmuD,EAAA,GACAtG,GAAAuV,eAIAp/C,GAAA,KAAAokD,GAAAC,EAAAhpE,KAAAgpE,EAAAE,MAAAjgE,OAAA+/D,EAAAp6C,UACA44C,EAAAxnE,KAAAgpE,EAAAlqE,OAAAuqE,KArFA,GAsDA7B,GACA2B,EAAAR,EAvDAvlC,EAAAmlC,EAAA/Z,GAAA8a,EAAAr/D,EAAAo9D,OAAAmB,EAAA,GAAAA,EAAA,IACAb,GACA7S,QACAgP,YACAC,UACAE,aAAA,WACA0D,EAAA7S,MAAA4T,EACAf,EAAA7D,UAAA+E,EACAlB,EAAA5D,QAAA+E,EACAtB,KACA2B,MAEAjF,WAAA,WACAyD,EAAA7S,QACA6S,EAAA7D,YACA6D,EAAA5D,UACAyD,EAAAliE,GAAAqxB,MAAA6wC,EACA,IAAAC,GAAA8B,GAAAD,EAAAH,EACA3B,GAAAnpE,QACA+qE,IAAA5a,EAAAyV,eAAAmF,GAAA,GACA7B,GAAAC,EAAAgC,GAAA/B,EAAAzjC,EAAAwqB,IACWiZ,IACX2B,IAAA5a,EAAAyV,eAAAmF,GAAA,GACA5a,EAAAsV,YACA9/B,EAAA,YAAAwqB,GACAA,EAAAuV,WAEAqF,IAAA5a,EAAA0V,aAAAkF,GAAA,GACA5B,EAAA2B,EAAA,MAEAM,OAAA,WACAjb,EAAAyV,eACAzV,EAAAsV,YACA9/B,EAAA,YAAAwqB,GACAA,EAAAuV,UACAvV,EAAA0V,eAoBA+E,EAAAS,KAAAd,EAAAL,EAAAU,GAAAG,GAAA,CAgCA,OAAAzB,IAGA,QAAA0B,IAAAzB,GACA,MAAAA,GAAAvpE,OAAA,EAEA,QAAAqrE,MACA,GAAAtmC,GAAAD,IACA,QACA2gC,UAAA,WACA3gC,EAAAnjC,KAAAojC,OAEA0xB,MAAA,SAAAuP,EAAAC,GACAlhC,EAAApjC,MAAAqkE,EAAAC,KAEAP,QAAA7V,EACA+a,OAAA,WACA,GAAAA,GAAA9lC,CAGA,OAFAA,MACAC,EAAA,KACA6lC,GAEAU,OAAA,WACAxmC,EAAA9kC,OAAA,GAAA8kC,EAAAnjC,KAAAmjC,EAAA+lC,MAAAjgE,OAAAk6B,EAAAvU,YAIA,QAAA46C,IAAA3yC,EAAAC,GACA,QAAAD,IAAA12B,GAAA,KAAA02B,EAAA,GAAAs/B,GAAA4P,GAAA5P,GAAAt/B,EAAA,MAAAC,IAAA32B,GAAA,KAAA22B,EAAA,GAAAq/B,GAAA4P,GAAA5P,GAAAr/B,EAAA,IAGA,QAAA8yC,IAAApb,GACA,GAAAua,GAAAvE,EAAAvrD,IAAA4wD,EAAA5wD,IAAA6wD,EAAA7wD,GACA,QACA6qD,UAAA,WACAtV,EAAAsV,YACAiF,EAAA,GAEAjU,MAAA,SAAAiV,EAAAC,GACA,GAAAC,GAAAF,EAAA,EAAA/T,OAAAuO,EAAAvxC,GAAA+2C,EAAAvF,EACAxxC,IAAAuxC,EAAAvO,IAAA+P,IACAvX,EAAAsG,MAAA0P,EAAAqF,KAAAG,GAAA,IAAA7T,QACA3H,EAAAsG,MAAAgV,EAAAD,GACArb,EAAAuV,UACAvV,EAAAsV,YACAtV,EAAAsG,MAAAmV,EAAAJ,GACArb,EAAAsG,MAAAiV,EAAAF,GACAd,EAAA,GACSe,IAAAG,GAAA1F,GAAAvO,KACThjC,GAAAwxC,EAAAsF,GAAA/D,KAAAvB,GAAAsF,EAAA/D,IACA/yC,GAAA+2C,EAAAE,GAAAlE,KAAAgE,GAAAE,EAAAlE,IACA8D,EAAAK,GAAA1F,EAAAqF,EAAAE,EAAAC,GACAxb,EAAAsG,MAAAgV,EAAAD,GACArb,EAAAuV,UACAvV,EAAAsV,YACAtV,EAAAsG,MAAAmV,EAAAJ,GACAd,EAAA,GAEAva,EAAAsG,MAAA0P,EAAAuF,EAAAF,EAAAG,GACAF,EAAAG,GAEAlG,QAAA,WACAvV,EAAAuV,UACAS,EAAAqF,EAAA5wD,KAEA8vD,MAAA,WACA,SAAAA,IAIA,QAAAmB,IAAA1F,EAAAqF,EAAAE,EAAAC,GACA,GAAAjF,GAAAoF,EAAAC,EAAAptE,KAAAoN,IAAAo6D,EAAAuF,EACA,OAAA/2C,IAAAo3C,GAAArE,GAAA/oE,KAAAqtE,MAAArtE,KAAAoN,IAAAy/D,IAAAM,EAAAntE,KAAAmkC,IAAA6oC,IAAAhtE,KAAAoN,IAAA2/D,GAAA/sE,KAAAoN,IAAA4/D,IAAAjF,EAAA/nE,KAAAmkC,IAAA0oC,IAAA7sE,KAAAoN,IAAAo6D,KAAAO,EAAAoF,EAAAC,KAAAP,EAAAG,GAAA,EAEA,QAAAM,IAAAC,EAAA9qB,EAAA+qB,EAAAhc,GACA,GAAA8V,EACA,UAAAiG,EACAjG,EAAAkG,EAAArU,GACA3H,EAAAsG,OAAAkB,GAAAsO,GACA9V,EAAAsG,MAAA,EAAAwP,GACA9V,EAAAsG,MAAAkB,GAAAsO,GACA9V,EAAAsG,MAAAkB,GAAA,GACAxH,EAAAsG,MAAAkB,IAAAsO,GACA9V,EAAAsG,MAAA,GAAAwP,GACA9V,EAAAsG,OAAAkB,IAAAsO,GACA9V,EAAAsG,OAAAkB,GAAA,GACAxH,EAAAsG,OAAAkB,GAAAsO,OACK,IAAAtxC,GAAAu3C,EAAA,GAAA9qB,EAAA,IAAAsmB,GAAA,CACL,GAAA55D,GAAAo+D,EAAA,GAAA9qB,EAAA,GAAAuW,MACAsO,GAAAkG,EAAAr+D,EAAA,EACAqiD,EAAAsG,OAAA3oD,EAAAm4D,GACA9V,EAAAsG,MAAA,EAAAwP,GACA9V,EAAAsG,MAAA3oD,EAAAm4D,OAEA9V,GAAAsG,MAAArV,EAAA,GAAAA,EAAA,IAGA,QAAA8pB,IAAAzU,EAAAqU,GACA,GAAAsB,GAAA3V,EAAA,GAAA4V,EAAA5V,EAAA,GAAA6V,GAAA3tE,KAAAoN,IAAAqgE,IAAAztE,KAAAmkC,IAAAspC,GAAA,GAAAG,EAAA,EAAAC,EAAA,CACA7F,IAAAx+B,OACA,QAAA7/B,GAAA,EAAAge,EAAAwkD,EAAA9qE,OAAuCsI,EAAAge,IAAOhe,EAAA,CAC9C,GAAAgiE,GAAAQ,EAAAxiE,GAAA/I,EAAA+qE,EAAAtqE,MACA,IAAAT,EAEA,IADA,GAAAktE,GAAAnC,EAAA,GAAAnE,EAAAsG,EAAA,GAAAjB,EAAAiB,EAAA,KAAA9U,GAAA,EAAA6O,EAAA7nE,KAAAoN,IAAAy/D,GAAA9E,EAAA/nE,KAAAmkC,IAAA0oC,GAAA74C,EAAA,IACA,CACAA,IAAApzB,IAAAozB,EAAA,GACA8jC,EAAA6T,EAAA33C,EACA,IAAAqzC,GAAAvP,EAAA,GAAAwP,EAAAxP,EAAA,KAAAkB,GAAA,EAAA4O,EAAA5nE,KAAAoN,IAAAk6D,GAAAK,EAAA3nE,KAAAmkC,IAAAmjC,GAAAC,EAAAF,EAAAG,EAAAC,EAAAF,GAAA,OAAAG,EAAAD,EAAAF,EAAAwG,EAAArG,EAAA1O,GAAA/kC,EAAA4zC,EAAAD,CAGA,IAFAI,GAAAhlD,IAAAhjB,KAAA+6D,MAAA9mC,EAAAwzC,EAAAznE,KAAAoN,IAAAs6D,GAAAK,EAAAJ,EAAA1zC,EAAAj0B,KAAAmkC,IAAAujC,KACAkG,GAAAG,EAAAxG,EAAAE,EAAAuG,GAAAzG,EACAwG,EAAAvG,GAAAiG,EAAApG,GAAAoG,EAAA,CACA,GAAAh0B,GAAA8uB,GAAAH,GAAA0F,GAAA1F,GAAAtQ,GACA6Q,IAAAlvB,EACA,IAAAw0B,GAAA1F,GAAAoF,EAAAl0B,EACAkvB,IAAAsF,EACA,IAAAC,IAAAH,EAAAxG,GAAA,QAAArO,GAAA+U,EAAA,KACAP,EAAAQ,GAAAR,IAAAQ,IAAAz0B,EAAA,IAAAA,EAAA,OACAo0B,GAAAE,EAAAxG,GAAA,QAGA,IAAAvzC,IAAA,KACAwzC,GAAAH,EAAAQ,EAAAD,EAAAG,EAAAJ,EAAAmG,EAAAhW,GAGA,OAAA8V,GAAA7E,IAAA6E,EAAA7E,IAAAf,IAAAe,IAAA,EAAA8E,EAEA,QAAAM,IAAAz1B,GAGA,QAAA01B,GAAA/G,EAAAC,GACA,MAAAtnE,MAAAmkC,IAAAkjC,GAAArnE,KAAAmkC,IAAAmjC,GAAA+G,EAEA,QAAA9C,GAAA/Z,GACA,GAAAsc,GAAAQ,EAAAC,EAAAC,EAAAzC,CACA,QACAjF,UAAA,WACA0H,EAAAD,GAAA,EACAxC,EAAA,GAEAjU,MAAA,SAAAuP,EAAAC,GACA,GAAAmH,GAAAC,GAAArH,EAAAC,GAAAl9D,EAAAgkE,EAAA/G,EAAAC,GAAAxsC,EAAA6zC,EAAAvkE,EAAA,EAAAwkE,EAAAvH,EAAAC,GAAAl9D,EAAAwkE,EAAAvH,KAAA,EAAArO,QAAAsO,GAAA,CAUA,KATAwG,IAAAU,EAAAD,EAAAnkE,IAAAonD,EAAAsV,YACA18D,IAAAmkE,IACAE,EAAAI,EAAAf,EAAAY,IACA5F,GAAAgF,EAAAW,IAAA3F,GAAA4F,EAAAD,MACAC,EAAA,IAAA3F,GACA2F,EAAA,IAAA3F,GACA3+D,EAAAgkE,EAAAM,EAAA,GAAAA,EAAA,MAGAtkE,IAAAmkE,EACAxC,EAAA,EACA3hE,GACAonD,EAAAsV,YACA2H,EAAAI,EAAAH,EAAAZ,GACAtc,EAAAsG,MAAA2W,EAAA,GAAAA,EAAA,MAEAA,EAAAI,EAAAf,EAAAY,GACAld,EAAAsG,MAAA2W,EAAA,GAAAA,EAAA,IACAjd,EAAAuV,WAEA+G,EAAAW,MACW,IAAAK,GAAAhB,GAAAa,EAAAvkE,EAAA,CACX,GAAA2Y,EACA+X,GAAAwzC,KAAAvrD,EAAA8rD,EAAAH,EAAAZ,GAAA,MACA/B,EAAA,EACA4C,GACAnd,EAAAsV,YACAtV,EAAAsG,MAAA/0C,EAAA,MAAAA,EAAA,OACAyuC,EAAAsG,MAAA/0C,EAAA,MAAAA,EAAA,OACAyuC,EAAAuV,YAEAvV,EAAAsG,MAAA/0C,EAAA,MAAAA,EAAA,OACAyuC,EAAAuV,UACAvV,EAAAsV,YACAtV,EAAAsG,MAAA/0C,EAAA,MAAAA,EAAA,UAIA3Y,GAAA0jE,GAAAhF,GAAAgF,EAAAY,IACAld,EAAAsG,MAAA4W,EAAA,GAAAA,EAAA,IAEAZ,EAAAY,EAAAH,EAAAnkE,EAAAkkE,EAAAxzC,GAEAisC,QAAA,WACAwH,GAAA/c,EAAAuV,UACA+G,EAAA,MAEA/B,MAAA,WACA,MAAAA,IAAAyC,GAAAD,IAAA,IAIA,QAAAM,GAAAh1C,EAAAC,EAAAi1C,GACA,GAAAC,GAAA5G,GAAAvuC,GAAAo1C,EAAA7G,GAAAtuC,GACAo1C,GAAA,OAAAC,EAAA5G,GAAAyG,EAAAC,GAAAG,EAAA9G,GAAA6G,KAAAE,EAAAF,EAAA,GAAAG,EAAAF,EAAAC,GACA,KAAAC,EAAA,OAAAP,GAAAl1C,CACA,IAAA01C,GAAAlB,EAAAe,EAAAE,EAAAE,GAAAnB,EAAAgB,EAAAC,EAAAG,EAAAlH,GAAA2G,EAAAC,GAAAjL,EAAAuE,GAAAyG,EAAAK,GAAApL,EAAAsE,GAAA0G,EAAAK,EACAhH,IAAAtE,EAAAC,EACA,IAAA2D,GAAA2H,EAAA/kE,EAAA49D,GAAApE,EAAA4D,GAAA4H,EAAApH,GAAAR,KAAAntC,EAAAjwB,IAAAglE,GAAApH,GAAApE,KAAA,EACA,MAAAvpC,EAAA,IACA,GAAA5X,GAAA/iB,KAAAy8B,KAAA9B,GAAAg1C,EAAAlH,GAAAX,IAAAp9D,EAAAqY,GAAA2sD,EAGA,IAFAlH,GAAAmH,EAAAzL,GACAyL,EAAA/G,GAAA+G,IACAZ,EAAA,MAAAY,EACA,IAAAzvB,GAAAsnB,EAAA3tC,EAAA,GAAAkzC,EAAAjzC,EAAA,GAAA+yC,EAAAhzC,EAAA,GAAAmzC,EAAAlzC,EAAA,EACAizC,GAAAvF,IAAAtnB,EAAAsnB,IAAAuF,IAAA7sB,EACA,IAAA0vB,GAAA7C,EAAAvF,EAAAqI,EAAA75C,GAAA45C,EAAA5W,IAAA+P,GAAA0E,EAAAoC,GAAAD,EAAA7G,EAEA,KADA8G,GAAA7C,EAAAH,IAAA3sB,EAAA2sB,IAAAG,IAAA9sB,GACAutB,EAAAoC,EAAAhD,EAAAG,EAAA,EAAA2C,EAAA,IAAA35C,GAAA25C,EAAA,GAAAnI,GAAAuB,GAAA8D,EAAAG,GAAAH,GAAA8C,EAAA,IAAAA,EAAA,IAAA3C,EAAA4C,EAAA5W,IAAAwO,GAAAmI,EAAA,IAAAA,EAAA,IAAA5C,GAAA,CACA,GAAA+C,GAAArH,GAAAX,IAAAp9D,EAAAqY,GAAA2sD,EAEA,OADAlH,IAAAsH,EAAA5L,IACAyL,EAAA/G,GAAAkH,MAGA,QAAAlB,GAAAvH,EAAAC,GACA,GAAA79B,GAAAklC,EAAAj2B,EAAAsgB,GAAAtgB,EAAAk2B,EAAA,CAGA,OAFAvH,IAAA59B,EAAAmlC,GAAA,EAA4BvH,EAAA59B,IAAAmlC,GAAA,GAC5BtH,GAAA79B,EAAAmlC,GAAA,EAA4BtH,EAAA79B,IAAAmlC,GAAA,GAC5BA,EA5FA,GAAAP,GAAAruE,KAAAmkC,IAAAuU,GAAAi2B,EAAAN,EAAA,EAAAS,EAAA94C,GAAAq4C,GAAAtF,GAAA/hC,EAAA+oC,GAAAr3B,EAAA,EAAA8hB,GACA,OAAA6Q,IAAA+C,EAAA7C,EAAAvkC,EAAA2nC,GAAA,GAAAj2B,KAAAsgB,GAAAtgB,EAAAsgB,KA8FA,QAAAgX,IAAAlpC,EAAAlC,EAAArqB,EAAAE,GACA,gBAAA2rB,GACA,GAAAqD,GAAA5P,EAAAuM,EAAAvM,EAAAC,EAAAsM,EAAAtM,EAAAm2C,EAAAp2C,EAAA12B,EAAA+sE,EAAAr2C,EAAAzwB,EAAA+mE,EAAAr2C,EAAA32B,EAAAitE,EAAAt2C,EAAA1wB,EAAA80D,EAAA,EAAAxjC,EAAA,EAAAnrB,EAAA4gE,EAAAF,EAAAzjE,EAAA4jE,EAAAF,CAEA,IADAzmC,EAAA3C,EAAAmpC,EACA1gE,KAAAk6B,EAAA,IAEA,GADAA,GAAAl6B,EACAA,EAAA,GACA,GAAAk6B,EAAAy0B,EAAA,MACAz0B,GAAA/O,MAAA+O,OACO,IAAAl6B,EAAA,GACP,GAAAk6B,EAAA/O,EAAA,MACA+O,GAAAy0B,MAAAz0B,GAGA,GADAA,EAAAlvB,EAAA01D,EACA1gE,KAAAk6B,EAAA,IAEA,GADAA,GAAAl6B,EACAA,EAAA,GACA,GAAAk6B,EAAA/O,EAAA,MACA+O,GAAAy0B,MAAAz0B,OACO,IAAAl6B,EAAA,GACP,GAAAk6B,EAAAy0B,EAAA,MACAz0B,GAAA/O,MAAA+O,GAGA,GADAA,EAAA7E,EAAAsrC,EACA1jE,KAAAi9B,EAAA,IAEA,GADAA,GAAAj9B,EACAA,EAAA,GACA,GAAAi9B,EAAAy0B,EAAA,MACAz0B,GAAA/O,MAAA+O,OACO,IAAAj9B,EAAA,GACP,GAAAi9B,EAAA/O,EAAA,MACA+O,GAAAy0B,MAAAz0B,GAGA,GADAA,EAAAhvB,EAAAy1D,EACA1jE,KAAAi9B,EAAA,IAEA,GADAA,GAAAj9B,EACAA,EAAA,GACA,GAAAi9B,EAAA/O,EAAA,MACA+O,GAAAy0B,MAAAz0B,OACO,IAAAj9B,EAAA,GACP,GAAAi9B,EAAAy0B,EAAA,MACAz0B,GAAA/O,MAAA+O,GAUA,MARAy0B,GAAA,IAAA93B,EAAAvM,GACA12B,EAAA8sE,EAAA/R,EAAA3uD,EACAnG,EAAA8mE,EAAAhS,EAAA1xD,IAEAkuB,EAAA,IAAA0L,EAAAtM,GACA32B,EAAA8sE,EAAAv1C,EAAAnrB,EACAnG,EAAA8mE,EAAAx1C,EAAAluB,IAEA45B,OAqBA,QAAAiqC,IAAAvpC,EAAAlC,EAAArqB,EAAAE,GA2HA,QAAA61D,GAAAz1C,EAAA2yC,GACA,MAAAx3C,IAAA6E,EAAA,GAAAiM,GAAAiiC,GAAAyE,EAAA,MAAAx3C,GAAA6E,EAAA,GAAAtgB,GAAAwuD,GAAAyE,EAAA,MAAAx3C,GAAA6E,EAAA,GAAA+J,GAAAmkC,GAAAyE,EAAA,MAAAA,EAAA,MAEA,QAAAle,GAAAz1B,EAAAC,GACA,MAAAy2C,GAAA12C,EAAA12B,EAAA22B,EAAA32B,GAEA,QAAAotE,GAAA12C,EAAAC,GACA,GAAA02C,GAAAF,EAAAz2C,EAAA,GAAA42C,EAAAH,EAAAx2C,EAAA,EACA,OAAA02C,KAAAC,EAAAD,EAAAC,EAAA,IAAAD,EAAA12C,EAAA,GAAAD,EAAA,OAAA22C,EAAA32C,EAAA,GAAAC,EAAA,OAAA02C,EAAA32C,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GAlIA,gBAAA23B,GA+BA,QAAAkf,GAAA71C,GAEA,OADA81C,GAAA,EAAAhpD,EAAAwkD,EAAA9qE,OAAA+H,EAAAyxB,EAAA,GACAlxB,EAAA,EAAuBA,EAAAge,IAAOhe,EAC9B,OAAAmwB,GAAA9F,EAAA,EAAA5pB,EAAA+hE,EAAAxiE,GAAA/I,EAAAwJ,EAAA/I,OAAAw4B,EAAAzvB,EAAA,GAAoE4pB,EAAApzB,IAAOozB,EAC3E8F,EAAA1vB,EAAA4pB,GACA6F,EAAA,IAAAzwB,EACA0wB,EAAA,GAAA1wB,GAAA0vD,GAAAj/B,EAAAC,EAAAe,GAAA,KAAA81C,EAEA72C,EAAA,IAAA1wB,GAAA0vD,GAAAj/B,EAAAC,EAAAe,GAAA,KAAA81C,EAEA92C,EAAAC,CAGA,YAAA62C,EAEA,QAAA3pC,GAAAumC,EAAA9qB,EAAA+qB,EAAAhc,GACA,GAAA33B,GAAA,EAAA+2C,EAAA,CACA,UAAArD,IAAA1zC,EAAAy2C,EAAA/C,EAAAC,OAAAoD,EAAAN,EAAA7tB,EAAA+qB,KAAA+C,EAAAhD,EAAA9qB,GAAA,EAAA+qB,EAAA,GACA,EACAhc,GAAAsG,MAAA,IAAAj+B,GAAA,IAAAA,EAAAiN,EAAAvsB,EAAAsf,EAAA,EAAApf,EAAAmqB,UACW/K,KAAA2zC,EAAA,QAAAoD,OAEXpf,GAAAsG,MAAArV,EAAA,GAAAA,EAAA,IAGA,QAAA6oB,GAAAnoE,EAAAiG,GACA,MAAA09B,IAAA3jC,MAAAoX,GAAAqqB,GAAAx7B,MAAAqR,EAEA,QAAAq9C,GAAA30D,EAAAiG,GACAkiE,EAAAnoE,EAAAiG,IAAAooD,EAAAsG,MAAA30D,EAAAiG,GAGA,QAAA09D,KACA6D,EAAA7S,MAAA+Y,EACA1E,KAAAnpE,KAAA2oE,MACAzf,GAAA,EACA4kB,GAAA,EACAC,EAAAC,EAAA/0D,IAEA,QAAA8qD,KACAyD,IACAqG,EAAAI,EAAAC,GACAC,GAAAL,GAAAM,EAAAzE,SACAnC,EAAAxnE,KAAAouE,EAAAnF,WAEAtB,EAAA7S,QACAgZ,GAAAtf,EAAAuV,UAEA,QAAA8J,GAAA1tE,EAAAiG,GACAjG,EAAAnD,KAAA+D,KAAAstE,GAAArxE,KAAAiyB,IAAAo/C,GAAAluE,IACAiG,EAAApJ,KAAA+D,KAAAstE,GAAArxE,KAAAiyB,IAAAo/C,GAAAjoE,GACA,IAAAgB,GAAAkhE,EAAAnoE,EAAAiG,EAEA,IADA+iE,GAAAR,EAAA3oE,MAAAG,EAAAiG,IACA8iD,EACA+kB,EAAA9tE,EAAA+tE,EAAA9nE,EAAA+nE,EAAA/mE,EACA8hD,GAAA,EACA9hD,IACAonD,EAAAsV,YACAtV,EAAAsG,MAAA30D,EAAAiG,QAGA,IAAAgB,GAAA0mE,EAAAtf,EAAAsG,MAAA30D,EAAAiG,OAA4C,CAC5C,GAAA6qC,IACApa,GACA12B,EAAA4tE,EACA3nE,EAAA4nE,GAEAl3C,GACA32B,IACAiG,KAGAmiE,GAAAt3B,IACA68B,IACAtf,EAAAsV,YACAtV,EAAAsG,MAAA7jB,EAAApa,EAAA12B,EAAA8wC,EAAApa,EAAAzwB,IAEAooD,EAAAsG,MAAA7jB,EAAAna,EAAA32B,EAAA8wC,EAAAna,EAAA1wB,GACAgB,GAAAonD,EAAAuV,UACAgF,GAAA,GACa3hE,IACbonD,EAAAsV,YACAtV,EAAAsG,MAAA30D,EAAAiG,GACA2iE,GAAA,GAIAgF,EAAA5tE,EAAA6tE,EAAA5nE,EAAA0nE,EAAA1mE,EArHA,GAAAogE,GAAA2B,EAAAR,EA6DAsF,EAAAC,EAAAC,EAAAJ,EAAAC,EAAAF,EAAA5kB,EAAA6f,EA7DAuF,EAAA9f,EAAA4f,EAAA1E,KAAAnB,EAAAyE,GAAAlpC,EAAAlC,EAAArqB,EAAAE,GACAkwD,GACA7S,QACAgP,YACAC,UACAE,aAAA,WACAzV,EAAA4f,EACA5G,KACA2B,KACAJ,GAAA,GAEA7E,WAAA,WACA1V,EAAA8f,EACA9G,EAAAliE,GAAAqxB,MAAA6wC,EACA,IAAAC,GAAAiG,GAAA5pC,EAAArsB,IAAA82D,EAAAxF,GAAAtB,EAAA2D,EAAA5D,EAAAnpE,QACAkwE,GAAAnD,KACA5c,EAAAyV,eACAsK,IACA/f,EAAAsV,YACA9/B,EAAA,YAAAwqB,GACAA,EAAAuV,WAEAqH,GACA7D,GAAAC,EAAAlb,EAAAmb,EAAAzjC,EAAAwqB,GAEAA,EAAA0V,cAEAsD,EAAA2B,EAAAR,EAAA,MA4FA,OAAAhB,IAaA,QAAA6G,IAAAC,GACA,GAAA5E,GAAA,EAAAG,EAAAhU,GAAA,EAAAp4D,EAAA8wE,GAAAD,GAAA52C,EAAAj6B,EAAAisE,EAAAG,EAKA,OAJAnyC,GAAA82C,UAAA,SAAA3hB,GACA,MAAArgD,WAAAtO,OACAT,EAAAisE,EAAA7c,EAAA,GAAAgJ,GAAA,IAAAgU,EAAAhd,EAAA,GAAAgJ,GAAA,MADA6T,EAAA7T,GAAA,IAAAgU,EAAAhU,GAAA,MAGAn+B,EAEA,QAAA+2C,IAAA/E,EAAAG,GAEA,QAAA6E,GAAAxK,EAAAC,GACA,GAAAwK,GAAA9xE,KAAAy8B,KAAAs1C,EAAA,EAAApqD,EAAA3nB,KAAAoN,IAAAk6D,IAAA3/C,CACA,QAAAmqD,EAAA9xE,KAAAoN,IAAAi6D,GAAA1/C,GAAAqqD,EAAAF,EAAA9xE,KAAAmkC,IAAAkjC,IAHA,GAAAQ,GAAA7nE,KAAAoN,IAAAy/D,GAAAllD,GAAAkgD,EAAA7nE,KAAAoN,IAAA4/D,IAAA,EAAA+E,EAAA,EAAAlK,GAAA,EAAAlgD,EAAAkgD,GAAAmK,EAAAhyE,KAAAy8B,KAAAs1C,GAAApqD,CASA,OAJAkqD,GAAAxH,OAAA,SAAAlnE,EAAAiG,GACA,GAAA6oE,GAAAD,EAAA5oE,CACA,QAAApJ,KAAA+6D,MAAA53D,EAAA8uE,GAAAtqD,EAAAuxC,IAAA6Y,GAAA5uE,IAAA8uE,KAAAtqD,MAAA,EAAAA,MAEAkqD,EAmGA,QAAAK,MAMA,QAAA9K,GAAAjkE,EAAAiG,GACA+oE,IAAAvtC,EAAAzhC,EAAA2jC,EAAA19B,EACA09B,EAAA3jC,EAAAyhC,EAAAx7B,EAPA,GAAAgpE,GAAAC,EAAAvrC,EAAAlC,CACA0tC,IAAAxa,MAAA,SAAA30D,EAAAiG,GACAkpE,GAAAxa,MAAAsP,EACAgL,EAAAtrC,EAAA3jC,EAAAkvE,EAAAztC,EAAAx7B,GAMAkpE,GAAAvL,QAAA,WACAK,EAAAgL,EAAAC,IAWA,QAAAE,IAAApvE,EAAAiG,GACAjG,EAAAqvE,QAAArvE,GACAA,EAAAsvE,QAAAtvE,GACAiG,EAAAspE,QAAAtpE,GACAA,EAAAupE,QAAAvpE,GAEA,QAAAwpE,MA2BA,QAAA9a,GAAA30D,EAAAiG,GACA6iE,EAAAjpE,KAAA,IAAAG,EAAA,IAAAiG,EAAAypE,GAEA,QAAAC,GAAA3vE,EAAAiG,GACA6iE,EAAAjpE,KAAA,IAAAG,EAAA,IAAAiG,GACA2pE,EAAAjb,MAAA2T,EAEA,QAAAA,GAAAtoE,EAAAiG,GACA6iE,EAAAjpE,KAAA,IAAAG,EAAA,IAAAiG,GAEA,QAAA29D,KACAgM,EAAAjb,QAEA,QAAAkb,KACA/G,EAAAjpE,KAAA,KAxCA,GAAA6vE,GAAAI,GAAA,KAAAhH,KACA8G,GACAjb,QACAgP,UAAA,WACAiM,EAAAjb,MAAAgb,GAEA/L,UACAE,aAAA,WACA8L,EAAAhM,QAAAiM,GAEA9L,WAAA,WACA6L,EAAAhM,UACAgM,EAAAjb,SAEAob,YAAA,SAAAljB,GAEA,MADA6iB,GAAAI,GAAAjjB,GACA+iB,GAEA/W,OAAA,WACA,GAAAiQ,EAAA5qE,OAAA,CACA,GAAA26D,GAAAiQ,EAAA9M,KAAA,GAEA,OADA8M,MACAjQ,IAoBA,OAAA+W,GAEA,QAAAE,IAAAv6B,GACA,YAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EAAA,IAeA,QAAAy6B,IAAAhwE,EAAAiG,GACA+/D,IAAAhmE,EACAimE,IAAAhgE,IACAigE,GAEA,QAAA+J,MAMA,QAAAhM,GAAAjkE,EAAAiG,GACA,GAAAmG,GAAApM,EAAA2jC,EAAAt6B,EAAApD,EAAAw7B,EAAAsb,EAAAlgD,KAAAy8B,KAAAltB,IAAA/C,IACAi9D,KAAAvpB,GAAApZ,EAAA3jC,GAAA,EACAumE,IAAAxpB,GAAAtb,EAAAx7B,GAAA,EACAugE,IAAAzpB,EACAizB,GAAArsC,EAAA3jC,EAAAyhC,EAAAx7B,GAVA,GAAA09B,GAAAlC,CACAyuC,IAAAvb,MAAA,SAAA30D,EAAAiG,GACAiqE,GAAAvb,MAAAsP,EACA+L,GAAArsC,EAAA3jC,EAAAyhC,EAAAx7B,IAUA,QAAAkqE,MACAD,GAAAvb,MAAAqb,GAEA,QAAAI,MAMA,QAAAnM,GAAAjkE,EAAAiG,GACA,GAAAmG,GAAApM,EAAA2jC,EAAAt6B,EAAApD,EAAAw7B,EAAAsb,EAAAlgD,KAAAy8B,KAAAltB,IAAA/C,IACAi9D,KAAAvpB,GAAApZ,EAAA3jC,GAAA,EACAumE,IAAAxpB,GAAAtb,EAAAx7B,GAAA,EACAugE,IAAAzpB,EACAA,EAAAtb,EAAAzhC,EAAA2jC,EAAA19B,EACA4gE,IAAA9pB,GAAApZ,EAAA3jC,GACA8mE,IAAA/pB,GAAAtb,EAAAx7B,GACA8gE,IAAA,EAAAhqB,EACAizB,GAAArsC,EAAA3jC,EAAAyhC,EAAAx7B,GAdA,GAAAgpE,GAAAC,EAAAvrC,EAAAlC,CACAyuC,IAAAvb,MAAA,SAAA30D,EAAAiG,GACAiqE,GAAAvb,MAAAsP,EACA+L,GAAAf,EAAAtrC,EAAA3jC,EAAAkvE,EAAAztC,EAAAx7B,IAaAiqE,GAAAtM,QAAA,WACAK,EAAAgL,EAAAC,IAGA,QAAAmB,IAAA90B,GAqBA,QAAAoZ,GAAA30D,EAAAiG,GACAs1C,EAAA+0B,OAAAtwE,EAAA+vE,EAAA9pE,GACAs1C,EAAAjF,IAAAt2C,EAAAiG,EAAA8pE,EAAA,EAAAlF,IAEA,QAAA8E,GAAA3vE,EAAAiG,GACAs1C,EAAA+0B,OAAAtwE,EAAAiG,GACA2pE,EAAAjb,MAAA2T,EAEA,QAAAA,GAAAtoE,EAAAiG,GACAs1C,EAAAg1B,OAAAvwE,EAAAiG,GAEA,QAAA29D,KACAgM,EAAAjb,QAEA,QAAAkb,KACAt0B,EAAAi1B,YAnCA,GAAAT,GAAA,IACAH,GACAjb,QACAgP,UAAA,WACAiM,EAAAjb,MAAAgb,GAEA/L,UACAE,aAAA,WACA8L,EAAAhM,QAAAiM,GAEA9L,WAAA,WACA6L,EAAAhM,UACAgM,EAAAjb,SAEAob,YAAA,SAAAljB,GAEA,MADAkjB,GAAAljB,EACA+iB,GAEA/W,OAAA9K,EAmBA,OAAA6hB,GAEA,QAAAa,IAAAC,GAEA,QAAAC,GAAAf,GACA,OAAAgB,EAAAC,EAAAC,GAAAlB,GAEA,QAAAkB,GAAAlB,GACA,MAAAmB,IAAAnB,EAAA,SAAA5vE,EAAAiG,GACAjG,EAAA0wE,EAAA1wE,EAAAiG,GACA2pE,EAAAjb,MAAA30D,EAAA,GAAAA,EAAA,MAGA,QAAA6wE,GAAAjB,GAeA,QAAAjb,GAAA30D,EAAAiG,GACAjG,EAAA0wE,EAAA1wE,EAAAiG,GACA2pE,EAAAjb,MAAA30D,EAAA,GAAAA,EAAA,IAEA,QAAA2jE,KACAhgC,EAAA7qB,IACA63D,EAAAhc,MAAA+Y,EACAkC,EAAAjM,YAEA,QAAA+J,GAAAxJ,EAAAC,GACA,GAAAxsC,GAAAstC,IAAAf,EAAAC,IAAAzsC,EAAAg5C,EAAAxM,EAAAC,EACA6M,GAAArtC,EAAAlC,EAAA4iC,EAAA4M,EAAAC,EAAA/F,EAAAxnC,EAAAjM,EAAA,GAAA+J,EAAA/J,EAAA,GAAA2sC,EAAAH,EAAA+M,EAAAt5C,EAAA,GAAAu5C,EAAAv5C,EAAA,GAAAwzC,EAAAxzC,EAAA,GAAAi5C,EAAAhB,GACAA,EAAAjb,MAAAhxB,EAAAlC,GAEA,QAAAmiC,KACA+M,EAAAhc,QACAib,EAAAhM,UAEA,QAAA8E,KACA/E,IACAgN,EAAAhc,MAAAwc,EACAR,EAAA/M,QAAA+E,EAEA,QAAAwI,GAAAjN,EAAAC,GACAuJ,EAAA5I,EAAAZ,EAAAa,EAAAZ,GAAA8K,EAAAtrC,EAAAurC,EAAAztC,EAAA2vC,EAAAH,EAAAI,EAAAH,EAAAI,EAAAnG,EACAwF,EAAAhc,MAAA+Y,EAEA,QAAA/E,KACAqI,EAAArtC,EAAAlC,EAAA4iC,EAAA4M,EAAAC,EAAA/F,EAAA8D,EAAAC,EAAApK,EAAAsM,EAAAC,EAAAC,EAAAV,EAAAhB,GACAe,EAAA/M,UACAA,IA5CA,GAAAkB,GAAAC,EAAAkK,EAAAC,EAAAkC,EAAAC,EAAAC,EAAAjN,EAAA1gC,EAAAlC,EAAAwvC,EAAAC,EAAA/F,EACAwF,GACAhc,QACAgP,YACAC,UACAE,aAAA,WACA8L,EAAA9L,eACA6M,EAAAhN,UAAA+E,GAEA3E,WAAA,WACA6L,EAAA7L,aACA4M,EAAAhN,aAmCA,OAAAgN,GAEA,QAAAK,GAAArtC,EAAAlC,EAAA4iC,EAAA4M,EAAAC,EAAA/F,EAAA/zD,EAAAE,EAAAsyD,EAAA6D,EAAA8D,EAAAnF,EAAAoF,EAAA5B,GACA,GAAAxjE,GAAAgL,EAAAusB,EAAAt6B,EAAAiO,EAAAmqB,EAAAgwC,EAAArlE,IAAA/C,GACA,IAAAooE,EAAA,EAAAC,GAAAF,IAAA,CACA,GAAA96C,GAAAu6C,EAAAxD,EAAA92C,EAAAu6C,EAAAK,EAAA55C,EAAAwzC,EAAAiB,EAAA3uE,EAAAZ,KAAAy8B,KAAA5C,IAAAC,IAAAgB,KAAAg6C,EAAA90E,KAAAo5D,KAAAt+B,GAAAl6B,GAAAm0E,EAAA/+C,MAAA8E,GAAA,GAAAiuC,IAAA/yC,GAAAwxC,EAAAuF,GAAAhE,IAAAvB,EAAAuF,GAAA,EAAA/sE,KAAA+6D,MAAAjhC,EAAAD,GAAAgB,EAAAg5C,EAAAkB,EAAAD,GAAAt6D,EAAAqgB,EAAA,GAAA/lB,EAAA+lB,EAAA,GAAAm6C,EAAAx6D,EAAAssB,EAAAmuC,EAAAngE,EAAA8vB,EAAAswC,EAAA1oE,EAAAwoE,EAAAzlE,EAAA0lE,GACAC,IAAAN,EAAAC,GAAA7+C,IAAAzmB,EAAAylE,EAAAxoE,EAAAyoE,GAAAL,EAAA,QAAAR,EAAAxD,EAAAyD,EAAAK,EAAApG,EAAAiB,EAAA4F,KACAhB,EAAArtC,EAAAlC,EAAA4iC,EAAA4M,EAAAC,EAAA/F,EAAA9zD,EAAA1F,EAAAigE,EAAAl7C,GAAAj5B,EAAAk5B,GAAAl5B,EAAAk6B,EAAA65C,EAAA5B,GACAA,EAAAjb,MAAAt9C,EAAA1F,GACAq/D,EAAA35D,EAAA1F,EAAAigE,EAAAl7C,EAAAC,EAAAgB,EAAAvgB,EAAAE,EAAAsyD,EAAA6D,EAAA8D,EAAAnF,EAAAoF,EAAA5B,KAlEA,GAAA8B,GAAA,GAAAM,EAAAn1E,KAAAmkC,IAAA,GAAAq2B,IAAAuZ,EAAA,EA2EA,OALAD,GAAApU,UAAA,SAAA1P,GACA,MAAArgD,WAAAtO,QACA0yE,GAAAc,EAAA7kB,KAAA,MACA8jB,GAFA9zE,KAAAy8B,KAAAo4C,IAIAf,EAiDA,QAAAsB,IAAAvB,GACA,GAAAC,GAAAF,GAAA,SAAAzwE,EAAAiG,GACA,MAAAyqE,IAAA1wE,EAAA63D,GAAA5xD,EAAA4xD,MAEA,iBAAA+X,GACA,MAAAsC,IAAAvB,EAAAf,KAYA,QAAAuC,IAAAvC,GACAtuE,KAAAsuE,SAsBA,QAAAmB,IAAAnB,EAAAjb,GACA,OACAA,QACA2U,OAAA,WACAsG,EAAAtG,UAEA3F,UAAA,WACAiM,EAAAjM,aAEAC,QAAA,WACAgM,EAAAhM,WAEAE,aAAA,WACA8L,EAAA9L,gBAEAC,WAAA,WACA6L,EAAA7L,eAMA,QAAAqO,IAAA1B,GACA,MAAAnC,IAAA,WACA,MAAAmC,OAGA,QAAAnC,IAAAD,GAKA,QAAA+D,GAAA1d,GAEA,MADAA,GAAA2d,EAAA3d,EAAA,GAAA0C,GAAA1C,EAAA,GAAA0C,KACA1C,EAAA,GAAA7jC,EAAAyhD,EAAAC,EAAA7d,EAAA,GAAA7jC,GAEA,QAAAo2C,GAAAvS,GAEA,MADAA,GAAA2d,EAAApL,QAAAvS,EAAA,GAAA4d,GAAAzhD,GAAA0hD,EAAA7d,EAAA,IAAA7jC,GACA6jC,MAAA,GAAAkD,GAAAlD,EAAA,GAAAkD,IA4CA,QAAAxxB,KACAisC,EAAAtL,GAAAl9D,EAAA2oE,GAAAhG,EAAAiG,EAAAC,GAAAjC,EACA,IAAAl+C,GAAAk+C,EAAAxM,EAAAC,EAGA,OAFAoO,GAAAvyE,EAAAwyB,EAAA,GAAA1B,EACA0hD,EAAAvsE,EAAAusB,EAAA,GAAA1B,EACA8hD,IAEA,QAAAA,KAEA,MADAhD,OAAAiD,OAAA,EAAAjD,EAAA,MACAyC,EA/DA,GAAA3B,GAAA5mE,EAAAwoE,EAGKC,EAAAC,EAAA5C,EAHLkD,EAAArC,GAAA,SAAAzwE,EAAAiG,GAEA,MADAjG,GAAA0wE,EAAA1wE,EAAAiG,IACAjG,EAAA,GAAA8wB,EAAAyhD,EAAAC,EAAAxyE,EAAA,GAAA8wB,KACKA,EAAA,IAAA9wB,EAAA,IAAAiG,EAAA,IAAAi+D,EAAA,EAAAC,EAAA,EAAAsI,EAAA,EAAAiG,EAAA,EAAAC,EAAA,EAAAI,EAAAC,GAAAC,EAAAzlB,EAAA0lB,EAAA,KAAAC,EAAA,IA8DL,OArDAd,GAAAzC,OAAA,SAAAwD,GAIA,MAHAxD,OAAAiD,OAAA,GACAjD,EAAAsC,GAAAa,EAAAjpE,EAAAgpE,EAAAG,EAAAG,MACAxD,EAAAiD,OAAA,EACAjD,GAEAyC,EAAAa,UAAA,SAAArmB,GACA,MAAArgD,WAAAtO,QACA60E,EAAA,MAAAlmB,GAAAqmB,EAAArmB,EAAAmmB,IAAAhI,IAAAkI,GAAArmB,GAAAwK,IACAub,KAFAM,GAIAb,EAAAc,WAAA,SAAAtmB,GACA,MAAArgD,WAAAtO,QACAi1E,EAAAtmB,EACAomB,EAAApmB,EAAAqgB,GAAArgB,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OAAAW,EACAolB,KAHAO,GAKAd,EAAA9rE,MAAA,SAAAsmD,GACA,MAAArgD,WAAAtO,QACA4yB,GAAA+7B,EACAxmB,KAFAvV,GAIAuhD,EAAAt7B,UAAA,SAAA8V,GACA,MAAArgD,WAAAtO,QACA8B,GAAA6sD,EAAA,GACA5mD,GAAA4mD,EAAA,GACAxmB,MAHArmC,EAAAiG,IAKAosE,EAAA7/C,OAAA,SAAAq6B,GACA,MAAArgD,WAAAtO,QACAgmE,EAAArX,EAAA,OAAAwK,GACA8M,EAAAtX,EAAA,OAAAwK,GACAhxB,MAHA69B,EAAArM,GAAAsM,EAAAtM,KAKAwa,EAAAvoE,OAAA,SAAA+iD,GACA,MAAArgD,WAAAtO,QACAuuE,EAAA5f,EAAA,OAAAwK,GACAqb,EAAA7lB,EAAA,OAAAwK,GACAsb,EAAA9lB,EAAA3uD,OAAA,EAAA2uD,EAAA,OAAAwK,GAAA,EACAhxB,MAJAomC,EAAA5U,GAAA6a,EAAA7a,GAAA8a,EAAA9a,KAMA1yD,GAAA40D,OAAAsY,EAAAS,EAAA,aAYA,WAGA,MAFApC,GAAApC,EAAA5nE,MAAApF,KAAAkL,WACA6lE,EAAAnL,OAAAwJ,EAAAxJ,UACA7gC,KAGA,QAAA6rC,IAAAtC,GACA,MAAAmB,IAAAnB,EAAA,SAAA5vE,EAAAiG,GACA2pE,EAAAjb,MAAA30D,EAAAq3D,GAAApxD,EAAAoxD,MAGA,QAAAgc,IAAAnP,EAAAC,GACA,OAAAD,EAAAC,GAiBA,QAAAmP,IAAApP,EAAAC,GACA,OAAAD,EAAArO,GAAAqO,EAAA2G,GAAA3G,GAAArO,GAAAqO,EAAA2G,GAAA3G,EAAAC,GAGA,QAAAsO,IAAAhG,EAAAiG,EAAAC,GACA,MAAAlG,GAAAiG,GAAAC,EAAA3L,GAAAuM,GAAA9G,GAAA+G,GAAAd,EAAAC,IAAAY,GAAA9G,GAAAiG,GAAAC,EAAAa,GAAAd,EAAAC,GAAAW,GAEA,QAAAG,IAAAhH,GACA,gBAAAvI,EAAAC,GACA,MAAAD,IAAAuI,GAAAvI,EAAArO,GAAAqO,EAAA2G,GAAA3G,GAAArO,GAAAqO,EAAA2G,GAAA3G,EAAAC,IAGA,QAAAoP,IAAA9G,GACA,GAAAiH,GAAAD,GAAAhH,EAEA,OADAiH,GAAAxM,OAAAuM,IAAAhH,GACAiH,EAEA,QAAAF,IAAAd,EAAAC,GAEA,QAAAe,GAAAxP,EAAAC,GACA,GAAAK,GAAA3nE,KAAAmkC,IAAAmjC,GAAAnkE,EAAAnD,KAAAmkC,IAAAkjC,GAAAM,EAAAv+D,EAAApJ,KAAAoN,IAAAi6D,GAAAM,EAAAznB,EAAAlgD,KAAAoN,IAAAk6D,GAAArzC,EAAAisB,EAAA42B,EAAA3zE,EAAA4zE,CACA,QAAA/2E,KAAA+6D,MAAA3xD,EAAA4tE,EAAA/iD,EAAAgjD,EAAA9zE,EAAA2zE,EAAA52B,EAAA62B,GAAA7d,GAAAjlC,EAAA+iD,EAAA5tE,EAAA6tE,IAHA,GAAAH,GAAA92E,KAAAmkC,IAAA0xC,GAAAkB,EAAA/2E,KAAAoN,IAAAyoE,GAAAmB,EAAAh3E,KAAAmkC,IAAA2xC,GAAAmB,EAAAj3E,KAAAoN,IAAA0oE,EASA,OAJAe,GAAAxM,OAAA,SAAAhD,EAAAC,GACA,GAAAK,GAAA3nE,KAAAmkC,IAAAmjC,GAAAnkE,EAAAnD,KAAAmkC,IAAAkjC,GAAAM,EAAAv+D,EAAApJ,KAAAoN,IAAAi6D,GAAAM,EAAAznB,EAAAlgD,KAAAoN,IAAAk6D,GAAArzC,EAAAisB,EAAA82B,EAAA5tE,EAAA6tE,CACA,QAAAj3E,KAAA+6D,MAAA3xD,EAAA4tE,EAAA92B,EAAA+2B,EAAA9zE,EAAA2zE,EAAA7iD,EAAA8iD,GAAA7d,GAAAjlC,EAAA6iD,EAAA3zE,EAAA4zE,KAEAF,EAkCA,QAAA9G,IAAAr3B,EAAAgnB,GACA,GAAA2O,GAAAruE,KAAAmkC,IAAAuU,GAAAw+B,EAAAl3E,KAAAoN,IAAAsrC,EACA,iBAAA60B,EAAA9qB,EAAA+qB,EAAAhc,GACA,GAAApgB,GAAAo8B,EAAA9N,CACA,OAAA6N,GACAA,EAAA4J,GAAA9I,EAAAd,GACA9qB,EAAA00B,GAAA9I,EAAA5rB,IACA+qB,EAAA,EAAAD,EAAA9qB,EAAA8qB,EAAA9qB,KAAA8qB,GAAAC,EAAAQ,MAEAT,EAAA70B,EAAA80B,EAAAQ,GACAvrB,EAAA/J,EAAA,GAAAtH,EAEA,QAAA0mB,GAAA/0C,EAAAwqD,EAA+BC,EAAA,EAAAzqD,EAAA0/B,EAAA1/B,EAAA0/B,EAAiC1/B,GAAAquB,EAChEogB,EAAAsG,SAAA8Q,IAAAyF,GAAA6I,EAAAl3E,KAAAmkC,IAAAphB,IAAAm0D,EAAAl3E,KAAAoN,IAAA2V,MAAA,GAAA+0C,EAAA,KAIA,QAAAqf,IAAA9I,EAAAvW,GACA,GAAAj+B,GAAAuuC,GAAAtQ,EACAj+B,GAAA,IAAAw0C,EACA1F,GAAA9uC,EACA,IAAAiuB,GAAAiR,IAAAl/B,EAAA,GACA,UAAAA,EAAA,MAAAiuB,KAAA,EAAA9nD,KAAAqN,GAAA07D,KAAA,EAAA/oE,KAAAqN,IAgFA,QAAA+pE,IAAAxyC,EAAAnqB,EAAAjO,GACA,GAAApD,GAAAd,GAAAwE,MAAA83B,EAAAnqB,EAAAsuD,GAAAv8D,GAAAP,OAAAwO,EACA,iBAAAtX,GACA,MAAAiG,GAAA8F,IAAA,SAAA9F,GACA,OAAAjG,EAAAiG,MAIA,QAAAiuE,IAAAvwC,EAAAvsB,EAAAhL,GACA,GAAApM,GAAAmF,GAAAwE,MAAAg6B,EAAAvsB,EAAAwuD,GAAAx5D,GAAAtD,OAAAsO,EACA,iBAAAnR,GACA,MAAAjG,GAAA+L,IAAA,SAAA/L,GACA,OAAAA,EAAAiG,MAIA,QAAAkuE,IAAAh3E,GACA,MAAAA,GAAAouD,OAEA,QAAA6oB,IAAAj3E,GACA,MAAAA,GAAAwH,OA+BA,QAAA0vE,IAAA1wC,EAAAlC,EAAArqB,EAAAE,GACA,GAAAg9D,GAAAz3E,KAAAmkC,IAAAS,GAAA8yC,EAAA13E,KAAAoN,IAAAw3B,GAAA+yC,EAAA33E,KAAAmkC,IAAA1pB,GAAAm9D,EAAA53E,KAAAoN,IAAAqN,GAAAo9D,EAAAJ,EAAAz3E,KAAAmkC,IAAA2C,GAAAgxC,EAAAL,EAAAz3E,KAAAoN,IAAA05B,GAAAixC,EAAAJ,EAAA33E,KAAAmkC,IAAA5pB,GAAAy9D,EAAAL,EAAA33E,KAAAoN,IAAAmN,GAAAja,EAAA,EAAAN,KAAAo5D,KAAAp5D,KAAAy8B,KAAAg9B,GAAAh/C,EAAAmqB,GAAA6yC,EAAAE,EAAAle,GAAAl/C,EAAAusB,KAAA7S,EAAA,EAAAj0B,KAAAoN,IAAA9M,GACA0mC,EAAA1mC,EAAA,SAAAyiB,GACA,GAAAohD,GAAAnkE,KAAAoN,IAAA2V,GAAAziB,GAAA2zB,EAAAiwC,EAAAlkE,KAAAoN,IAAA9M,EAAAyiB,GAAAkR,EAAA9wB,EAAA+gE,EAAA2T,EAAA1T,EAAA4T,EAAA3uE,EAAA86D,EAAA4T,EAAA3T,EAAA6T,EAAA93B,EAAAgkB,EAAAwT,EAAAvT,EAAAyT,CACA,QAAA53E,KAAA+6D,MAAA3xD,EAAAjG,GAAA63D,GAAAh7D,KAAA+6D,MAAA7a,EAAAlgD,KAAAy8B,KAAAt5B,IAAAiG,MAAA4xD,KACK,WACL,OAAAl0B,EAAAk0B,GAAAp2B,EAAAo2B,IAGA,OADAh0B,GAAAixC,SAAA33E,EACA0mC,EAgBA,QAAAkxC,MASA,QAAA9Q,GAAAC,EAAAC,GACA,GAAAM,GAAA5nE,KAAAoN,IAAAk6D,GAAA9M,IAAAmN,EAAA3nE,KAAAmkC,IAAAmjC,GAAAvkD,EAAAiT,IAAAqxC,GAAA7M,IAAAgN,GAAA2Q,EAAAn4E,KAAAmkC,IAAAphB,EACAq1D,KAAAp4E,KAAA+6D,MAAA/6D,KAAAy8B,MAAA1Z,EAAA4kD,EAAA3nE,KAAAoN,IAAA2V,SAAAglD,EAAAH,EAAAC,EAAAF,EAAAwQ,GAAAp1D,GAAA8kD,EAAAD,EAAAG,EAAAJ,EAAAwQ,GACA3Q,EAAAH,EAAAQ,EAAAD,EAAAG,EAAAJ,EAXA,GAAAH,GAAAK,EAAAE,CACAsQ,IAAAvgB,MAAA,SAAAuP,EAAAC,GACAE,EAAAH,EAAA7M,GAAAqN,EAAA7nE,KAAAoN,IAAAk6D,GAAA9M,IAAAuN,EAAA/nE,KAAAmkC,IAAAmjC,GACA+Q,GAAAvgB,MAAAsP,GAEAiR,GAAAtR,QAAA,WACAsR,GAAAvgB,MAAAugB,GAAAtR,QAAA7V,GAQA,QAAAonB,IAAA5uE,EAAAo+C,GACA,QAAAywB,GAAAlR,EAAAC,GACA,GAAAkR,GAAAx4E,KAAAmkC,IAAAkjC,GAAAM,EAAA3nE,KAAAmkC,IAAAmjC,GAAArzC,EAAAvqB,EAAA8uE,EAAA7Q,EACA,QAAA1zC,EAAA0zC,EAAA3nE,KAAAoN,IAAAi6D,GAAApzC,EAAAj0B,KAAAoN,IAAAk6D,IAMA,MAJAiR,GAAAlO,OAAA,SAAAlnE,EAAAiG,GACA,GAAA0oE,GAAA9xE,KAAAy8B,KAAAt5B,IAAAiG,KAAA0xB,EAAAgtB,EAAAgqB,GAAA2G,EAAAz4E,KAAAoN,IAAA0tB,GAAA49C,EAAA14E,KAAAmkC,IAAArJ,EACA,QAAA96B,KAAA+6D,MAAA53D,EAAAs1E,EAAA3G,EAAA4G,GAAA14E,KAAAo5D,KAAA0Y,GAAA1oE,EAAAqvE,EAAA3G,KAEAyG,EAiBA,QAAAI,IAAA9L,EAAAG,GAKA,QAAA6E,GAAAxK,EAAAC,GACAsR,EAAA,EACAtR,GAAAnO,GAAA4P,KAAAzB,GAAAnO,GAAA4P,IAEAzB,EAAAnO,GAAA4P,KAAAzB,EAAAnO,GAAA4P,GAEA,IAAA+I,GAAA8G,EAAA54E,KAAA08B,IAAA3Z,EAAAukD,GAAA3/C,EACA,QAAAmqD,EAAA9xE,KAAAoN,IAAAua,EAAA0/C,GAAAuR,EAAA9G,EAAA9xE,KAAAmkC,IAAAxc,EAAA0/C,IAXA,GAAAU,GAAA/nE,KAAAmkC,IAAA0oC,GAAA9pD,EAAA,SAAAukD,GACA,MAAAtnE,MAAA64E,IAAA7f,GAAA,EAAAsO,EAAA,IACK3/C,EAAAklD,IAAAG,EAAAhtE,KAAAoN,IAAAy/D,GAAA7sE,KAAAo+D,IAAA2J,EAAA/nE,KAAAmkC,IAAA6oC,IAAAhtE,KAAAo+D,IAAAr7C,EAAAiqD,GAAAjqD,EAAA8pD,IAAA+L,EAAA7Q,EAAA/nE,KAAA08B,IAAA3Z,EAAA8pD,GAAAllD,IACL,OAAAA,IAUAkqD,EAAAxH,OAAA,SAAAlnE,EAAAiG,GACA,GAAA6oE,GAAA2G,EAAAxvE,EAAA0oE,EAAAjZ,GAAAlxC,GAAA3nB,KAAAy8B,KAAAt5B,IAAA8uE,IACA,QAAAjyE,KAAA+6D,MAAA53D,EAAA8uE,GAAAtqD,EAAA,EAAA3nB,KAAAqtE,KAAArtE,KAAA08B,IAAAk8C,EAAA9G,EAAA,EAAAnqD,IAAAwxC,KAEA0Y,GAdAiH,GAmBA,QAAAC,IAAAlM,EAAAG,GAGA,QAAA6E,GAAAxK,EAAAC,GACA,GAAAwK,GAAAkH,EAAA1R,CACA,QAAAwK,EAAA9xE,KAAAoN,IAAAua,EAAA0/C,GAAA2R,EAAAlH,EAAA9xE,KAAAmkC,IAAAxc,EAAA0/C,IAJA,GAAAU,GAAA/nE,KAAAmkC,IAAA0oC,GAAAllD,EAAAklD,IAAAG,EAAAhtE,KAAAoN,IAAAy/D,IAAA9E,EAAA/nE,KAAAmkC,IAAA6oC,OAAAH,GAAAmM,EAAAjR,EAAApgD,EAAAklD,CACA,OAAA72C,IAAArO,GAAAohD,GAAAyN,IAKA3E,EAAAxH,OAAA,SAAAlnE,EAAAiG,GACA,GAAA6oE,GAAA+G,EAAA5vE,CACA,QAAApJ,KAAA+6D,MAAA53D,EAAA8uE,GAAAtqD,EAAAqxD,EAAAngB,GAAAlxC,GAAA3nB,KAAAy8B,KAAAt5B,IAAA8uE,OAEAJ,GAWA,QAAAiH,IAAAzR,EAAAC,GACA,OAAAD,EAAArnE,KAAAo+D,IAAAp+D,KAAA64E,IAAA7f,GAAA,EAAAsO,EAAA,KAKA,QAAA2R,IAAApF,GACA,GAAAqF,GAAAt4E,EAAA20E,GAAA1B,GAAAnqE,EAAA9I,EAAA8I,MAAAwwC,EAAAt5C,EAAAs5C,UAAAo8B,EAAA11E,EAAA01E,UAqBA,OApBA11E,GAAA8I,MAAA,WACA,GAAAU,GAAAV,EAAAG,MAAAjJ,EAAA+O,UACA,OAAAvF,KAAAxJ,EAAAs4E,EAAAt4E,EAAA01E,WAAA,MAAA11E,EAAAwJ,GAEAxJ,EAAAs5C,UAAA,WACA,GAAA9vC,GAAA8vC,EAAArwC,MAAAjJ,EAAA+O,UACA,OAAAvF,KAAAxJ,EAAAs4E,EAAAt4E,EAAA01E,WAAA,MAAA11E,EAAAwJ,GAEAxJ,EAAA01E,WAAA,SAAAtmB,GACA,GAAA5lD,GAAAksE,EAAAzsE,MAAAjJ,EAAA+O,UACA,IAAAvF,IAAAxJ,GACA,GAAAs4E,EAAA,MAAAlpB,EAAA,CACA,GAAA/7B,GAAA+kC,GAAAtvD,IAAAqZ,EAAAm3B,GACAo8B,KAAAvzD,EAAA,GAAAkR,EAAAlR,EAAA,GAAAkR,IAAAlR,EAAA,GAAAkR,EAAAlR,EAAA,GAAAkR,UAEOilD,KACP9uE,EAAA,KAEA,OAAAA,IAEAxJ,EAAA01E,WAAA,MAmBA,QAAA6C,IAAA9R,EAAAC,GACA,OAAAtnE,KAAAo+D,IAAAp+D,KAAA64E,IAAA7f,GAAA,EAAAsO,EAAA,KAAAD,GAiBA,QAAA+R,IAAA94E,GACA,MAAAA,GAAA,GAEA,QAAA+4E,IAAA/4E,GACA,MAAAA,GAAA,GA2BA,QAAAg5E,IAAA7xC,GAEA,OADA9f,GAAA8f,EAAApmC,OAAAk4E,GAAA,KAAAC,EAAA,EACA7vE,EAAA,EAAmBA,EAAAge,EAAOhe,IAAA,CAC1B,KAAA6vE,EAAA,GAAA1gB,GAAArxB,EAAA8xC,EAAAC,EAAA,IAAA/xC,EAAA8xC,EAAAC,EAAA,IAAA/xC,EAAA99B,KAAA,KAAA6vE,CACAD,GAAAC,KAAA7vE,EAEA,MAAA4vE,GAAArtE,MAAA,EAAAstE,GAEA,QAAAC,IAAA5/C,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,GAqDA,QAAA4/C,IAAA7+C,EAAAhB,EAAAC,GACA,OAAAA,EAAA,GAAAD,EAAA,KAAAgB,EAAA,GAAAhB,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAAgB,EAAA,GAAAhB,EAAA,IAEA,QAAA8/C,IAAA7+C,EAAAx6B,EAAAu5B,EAAAC,GACA,GAAAvf,GAAAugB,EAAA,GAAA8+C,EAAA//C,EAAA,GAAAggD,EAAAv5E,EAAA,GAAAia,EAAAu/D,EAAAhgD,EAAA,GAAA8/C,EAAAn/D,EAAAqgB,EAAA,GAAAi/C,EAAAlgD,EAAA,GAAAmgD,EAAA15E,EAAA,GAAAma,EAAAw/D,EAAAngD,EAAA,GAAAigD,EAAAx1B,GAAAu1B,GAAAr/D,EAAAs/D,GAAAE,GAAA1/D,EAAAq/D,KAAAK,EAAAJ,EAAAC,EAAAE,EACA,QAAAz/D,EAAAgqC,EAAAs1B,EAAAp/D,EAAA8pC,EAAAy1B,GAEA,QAAAE,IAAAtT,GACA,GAAA/sC,GAAA+sC,EAAA,GAAA9sC,EAAA8sC,IAAAvlE,OAAA,EACA,SAAAw4B,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAGA,QAAAqgD,MACAC,GAAA31E,MACAA,KAAA41E,KAAA51E,KAAA61E,KAAA71E,KAAA0kC,OAAA,KAEA,QAAAoxC,IAAAD,GACA,GAAAE,GAAAC,GAAAvO,OAAA,GAAAiO,GAEA,OADAK,GAAAF,OACAE,EAEA,QAAAE,IAAAF,GACAG,GAAAH,GACAI,GAAAxsE,OAAAosE,GACAC,GAAAz3E,KAAAw3E,GACAJ,GAAAI,GAEA,QAAAK,IAAAL,GACA,GAAArxC,GAAAqxC,EAAArxC,OAAAhmC,EAAAgmC,EAAAhmC,EAAAiG,EAAA+/B,EAAA1qB,GAAAq8D,GACA33E,IACAiG,KACK2xE,EAAAP,EAAAQ,EAAAC,EAAAT,EAAAU,EAAAC,GAAAX,EACLE,IAAAF,EAEA,KADA,GAAAY,GAAAL,EACAK,EAAAjyC,QAAAnT,GAAA7yB,EAAAi4E,EAAAjyC,OAAAhmC,GAAA4lE,IAAA/yC,GAAA5sB,EAAAgyE,EAAAjyC,OAAA1qB,IAAAsqD,IACAgS,EAAAK,EAAAJ,EACAG,EAAAl4E,QAAAm4E,GACAV,GAAAU,GACAA,EAAAL,CAEAI,GAAAl4E,QAAAm4E,GACAT,GAAAS,EAEA,KADA,GAAAC,GAAAJ,EACAI,EAAAlyC,QAAAnT,GAAA7yB,EAAAk4E,EAAAlyC,OAAAhmC,GAAA4lE,IAAA/yC,GAAA5sB,EAAAiyE,EAAAlyC,OAAA1qB,IAAAsqD,IACAkS,EAAAI,EAAAH,EACAC,EAAAn4E,KAAAq4E,GACAX,GAAAW,GACAA,EAAAJ,CAEAE,GAAAn4E,KAAAq4E,GACAV,GAAAU,EACA,IAAAC,GAAAC,EAAAJ,EAAA95E,MACA,KAAAi6E,EAAA,EAAkBA,EAAAC,IAAcD,EAChCD,EAAAF,EAAAG,GACAF,EAAAD,EAAAG,EAAA,GACAE,GAAAH,EAAAhB,KAAAe,EAAAd,KAAAe,EAAAf,KAAAQ,EAEAM,GAAAD,EAAA,GACAE,EAAAF,EAAAI,EAAA,GACAF,EAAAhB,KAAAoB,GAAAL,EAAAd,KAAAe,EAAAf,KAAA,KAAAQ,GACAY,GAAAN,GACAM,GAAAL,GAEA,QAAAM,IAAArB,GAEA,IADA,GAAAc,GAAAC,EAAAO,EAAAC,EAAA14E,EAAAm3E,EAAAn3E,EAAA24E,EAAAxB,EAAAlxE,EAAA+G,EAAAyqE,GAAA5qB,EACA7/C,GAEA,GADAyrE,EAAAG,GAAA5rE,EAAA2rE,GAAA34E,EACAy4E,EAAA7S,GAAA54D,IAAAmxD,MAAiC,CAEjC,GADAua,EAAA14E,EAAA64E,GAAA7rE,EAAA2rE,KACAD,EAAA9S,IAMS,CACT6S,GAAA7S,IACAqS,EAAAjrE,EAAA6qE,EACAK,EAAAlrE,GACW0rE,GAAA9S,IACXqS,EAAAjrE,EACAkrE,EAAAlrE,EAAA+qE,GAEAE,EAAAC,EAAAlrE,CAEA,OAfA,IAAAA,EAAA8rE,EAAA,CACAb,EAAAjrE,CACA,OAEAA,IAAA8rE,EAeA,GAAAtiC,GAAA4gC,GAAAD,EAEA,IADAM,GAAA3sE,OAAAmtE,EAAAzhC,GACAyhC,GAAAC,EAAA,CACA,GAAAD,IAAAC,EAOA,MANAV,IAAAS,GACAC,EAAAd,GAAAa,EAAAd,MACAM,GAAA3sE,OAAA0rC,EAAA0hC,GACA1hC,EAAA0gC,KAAAgB,EAAAhB,KAAAoB,GAAAL,EAAAd,KAAA3gC,EAAA2gC;AACAoB,GAAAN,OACAM,IAAAL,EAGA,KAAAA,EAEA,YADA1hC,EAAA0gC,KAAAoB,GAAAL,EAAAd,KAAA3gC,EAAA2gC,MAGAK,IAAAS,GACAT,GAAAU,EACA,IAAAa,GAAAd,EAAAd,KAAArK,EAAAiM,EAAA/4E,EAAA+sE,EAAAgM,EAAA9yE,EAAA+mE,EAAAmK,EAAAn3E,EAAA8sE,EAAAG,EAAAkK,EAAAlxE,EAAA8mE,EAAAiM,EAAAd,EAAAf,KAAA97D,EAAA29D,EAAAh5E,EAAA8sE,EAAAxxD,EAAA09D,EAAA/yE,EAAA8mE,EAAA5vE,EAAA,GAAA6vE,EAAA1xD,EAAA2xD,EAAA5xD,GAAA49D,EAAAjM,IAAAC,IAAAiM,EAAA79D,IAAAC,IAAAq8D,GACA33E,GAAAsb,EAAA29D,EAAAhM,EAAAiM,GAAA/7E,EAAA2vE,EACA7mE,GAAA+mE,EAAAkM,EAAA79D,EAAA49D,GAAA97E,EAAA4vE,EAEAsL,IAAAH,EAAAhB,KAAA6B,EAAAC,EAAArB,GACAnhC,EAAA0gC,KAAAoB,GAAAS,EAAA5B,EAAA,KAAAQ,GACAO,EAAAhB,KAAAoB,GAAAnB,EAAA6B,EAAA,KAAArB,GACAY,GAAAN,GACAM,GAAAL,IAEA,QAAAU,IAAAtiC,EAAAqiC,GACA,GAAAxB,GAAA7gC,EAAA6gC,KAAAgC,EAAAhC,EAAAn3E,EAAAo5E,EAAAjC,EAAAlxE,EAAAozE,EAAAD,EAAAT,CACA,KAAAU,EAAA,MAAAF,EACA,IAAAlB,GAAA3hC,EAAAuhC,CACA,KAAAI,EAAA,QAAA/qE,IACAiqE,GAAAc,EAAAd,IACA,IAAAmC,GAAAnC,EAAAn3E,EAAAu5E,EAAApC,EAAAlxE,EAAAuzE,EAAAD,EAAAZ,CACA,KAAAa,EAAA,MAAAF,EACA,IAAAG,GAAAH,EAAAH,EAAAO,EAAA,EAAAL,EAAA,EAAAG,EAAA7iD,EAAA8iD,EAAAD,CACA,OAAAE,KAAA/iD,EAAA95B,KAAAy8B,KAAA3C,IAAA,EAAA+iD,GAAAD,MAAA,EAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GACAA,EAAAG,GAAA,EAEA,QAAAT,IAAAviC,EAAAqiC,GACA,GAAAT,GAAA5hC,EAAAyhC,CACA,IAAAG,EAAA,MAAAU,IAAAV,EAAAS,EACA,IAAAxB,GAAA7gC,EAAA6gC,IACA,OAAAA,GAAAlxE,IAAA0yE,EAAAxB,EAAAn3E,EAAAkN,IAEA,QAAAysE,IAAAxC,GACA71E,KAAA61E,OACA71E,KAAAs4E,SAWA,QAAAC,IAAA3lE,GAEA,IADA,GAAAmD,GAAA1F,EAAA8kE,EAAAG,EAAAkD,EAAAC,EAAAC,EAAAC,EAAA7zE,EAAAg+B,EAAAT,EAAAzvB,EAAA,MAAAkD,EAAAlD,EAAA,MAAAutB,EAAAvtB,EAAA,MAAAoD,EAAApD,EAAA,MAAAgmE,EAAAC,GAAAC,EAAAF,EAAAh8E,OACAk8E,KAEA,GADAN,EAAAI,EAAAE,GACAN,KAAAO,UAIA,IAHAL,EAAAF,EAAAF,MACAK,EAAAD,EAAA97E,OACA67E,EAAA,EACAA,EAAAE,GACA71C,EAAA41C,EAAAD,GAAA31C,MAAAqyC,EAAAryC,EAAApkC,EAAA42E,EAAAxyC,EAAAn+B,EACAG,EAAA4zE,IAAAD,EAAAE,GAAA7zE,QAAAiR,EAAAjR,EAAApG,EAAA2R,EAAAvL,EAAAH,GACA4sB,GAAA4jD,EAAAp/D,GAAAuuD,IAAA/yC,GAAA+jD,EAAAjlE,GAAAi0D,MACAoU,EAAAp6E,OAAAm6E,EAAA,KAAAO,IAAAC,GAAAT,EAAA3C,KAAA/yC,EAAAvR,GAAA4jD,EAAA9yC,GAAAiiC,IAAAtuD,EAAAs/D,EAAAhR,IACA5lE,EAAA2jC,EACA19B,EAAA4sB,GAAAxb,EAAAssB,GAAAiiC,GAAAj0D,EAAA2F,GACWub,GAAA+jD,EAAAt/D,GAAAsuD,IAAAxuD,EAAAq/D,EAAA7Q,IACX5lE,EAAA6yB,GAAAlhB,EAAA2F,GAAAsuD,GAAAvuD,EAAAD,EACAnR,EAAAqR,GACWub,GAAA4jD,EAAAr/D,GAAAwuD,IAAAgR,EAAAn1C,EAAAmkC,IACX5lE,EAAAoX,EACAnR,EAAA4sB,GAAAxb,EAAAD,GAAAwuD,GAAAj0D,EAAA8vB,GACW5O,GAAA+jD,EAAAn1C,GAAAmkC,IAAA6Q,EAAA9yC,EAAAiiC,IACX5lE,EAAA6yB,GAAAlhB,EAAA8vB,GAAAmkC,GAAAvuD,EAAAssB,EACA19B,EAAAw7B,GACW,MAAAq4C,EAAA3C,KAAA,SACX8C,GAKA,QAAAO,IAAA9jD,EAAAC,GACA,MAAAA,GAAAguB,MAAAjuB,EAAAiuB,MAEA,QAAA81B,MACAxD,GAAA31E,MACAA,KAAAtB,EAAAsB,KAAA2E,EAAA3E,KAAAg1C,IAAAh1C,KAAA61E,KAAA71E,KAAAga,GAAA,KAEA,QAAAi9D,IAAAjiC,GACA,GAAA2hC,GAAA3hC,EAAAuhC,EAAAK,EAAA5hC,EAAAyhC,CACA,IAAAE,GAAAC,EAAA,CACA,GAAAa,GAAAd,EAAAd,KAAAuD,EAAApkC,EAAA6gC,KAAA6B,EAAAd,EAAAf,IACA,IAAA4B,IAAAC,EAAA,CACA,GAAAhM,GAAA0N,EAAA16E,EAAAitE,EAAAyN,EAAAz0E,EAAA6mE,EAAAiM,EAAA/4E,EAAAgtE,EAAAD,EAAAgM,EAAA9yE,EAAAgnE,EAAA5xD,EAAA29D,EAAAh5E,EAAAgtE,EAAA1xD,EAAA09D,EAAA/yE,EAAAgnE,EACA9vE,EAAA,GAAA2vE,EAAAxxD,EAAAyxD,EAAA1xD,EACA,MAAAle,IAAAw9E,IAAA,CACA,GAAAC,GAAA9N,IAAAC,IAAAmM,EAAA79D,IAAAC,IAAAtb,GAAAsb,EAAAs/D,EAAA7N,EAAAmM,GAAA/7E,EAAA8I,GAAA6mE,EAAAoM,EAAA79D,EAAAu/D,GAAAz9E,EAAAme,EAAArV,EAAAgnE,EACAjnC,EAAA60C,GAAA9R,OAAA,GAAA0R,GACAz0C,GAAAsQ,MACAtQ,EAAAmxC,KAAAuD,EACA10C,EAAAhmC,IAAAgtE,EACAhnC,EAAA//B,EAAAqV,EAAAze,KAAAy8B,KAAAt5B,IAAAiG,KACA+/B,EAAA1qB,KACAg7B,EAAAtQ,QAEA,KADA,GAAA+2B,GAAA,KAAA/vD,EAAA8tE,GAAAjuB,EACA7/C,GACA,GAAAg5B,EAAA//B,EAAA+G,EAAA/G,GAAA+/B,EAAA//B,IAAA+G,EAAA/G,GAAA+/B,EAAAhmC,GAAAgN,EAAAhN,EAAA,CACA,IAAAgN,EAAAmxD,EAAkC,CAClCpB,EAAA/vD,EAAA6qE,CACA,OAFA7qE,IAAAmxD,MAIO,CACP,IAAAnxD,EAAA8rE,EAAkC,CAClC/b,EAAA/vD,CACA,OAFAA,IAAA8rE,EAMAgC,GAAAhwE,OAAAiyD,EAAA/2B,GACA+2B,IAAAge,GAAA/0C,MAEA,QAAAwxC,IAAAlhC,GACA,GAAAtQ,GAAAsQ,EAAAtQ,MACAA,KACAA,EAAA6xC,IAAAkD,GAAA/0C,EAAA+xC,GACA+C,GAAA7vE,OAAA+6B,GACA60C,GAAAh7E,KAAAmmC,GACAixC,GAAAjxC,GACAsQ,EAAAtQ,OAAA,MAGA,QAAAg1C,IAAA9mE,GAEA,IADA,GAAAqJ,GAAAq8D,EAAAqB,GAAAzT,EAAAqF,GAAA34D,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OAAA1N,EAAAozE,EAAA17E,OACAsI,KACA+W,EAAAq8D,EAAApzE,KACA00E,GAAA39D,EAAArJ,KAAAszD,EAAAjqD,IAAAsV,GAAAtV,EAAAmZ,EAAA12B,EAAAud,EAAAoZ,EAAA32B,GAAA4lE,IAAA/yC,GAAAtV,EAAAmZ,EAAAzwB,EAAAsX,EAAAoZ,EAAA1wB,GAAA2/D,MACAroD,EAAAmZ,EAAAnZ,EAAAoZ,EAAA,KACAijD,EAAAh6E,OAAA4G,EAAA,IAIA,QAAA00E,IAAAhE,EAAAhjE,GACA,GAAAinE,GAAAjE,EAAAvgD,CACA,IAAAwkD,EAAA,QACA,IAAAC,GAAAC,EAAAC,EAAApE,EAAAxgD,EAAAiN,EAAAzvB,EAAA,MAAAkD,EAAAlD,EAAA,MAAAutB,EAAAvtB,EAAA,MAAAoD,EAAApD,EAAA,MAAA6kE,EAAA7B,EAAApmC,EAAAkoC,EAAA9B,EAAA5wC,EAAAi1C,EAAAxC,EAAA/4E,EAAAw7E,EAAAzC,EAAA9yE,EAAAw1E,EAAAzC,EAAAh5E,EAAA07E,EAAA1C,EAAA/yE,EAAA01E,GAAAJ,EAAAE,GAAA,EAAAG,GAAAJ,EAAAE,GAAA,CACA,IAAAA,IAAAF,EAAA,CACA,GAAAG,EAAAh4C,GAAAg4C,GAAAvkE,EAAA,MACA,IAAAmkE,EAAAE,EAAA,CACA,GAAAH,GAGU,GAAAA,EAAAr1E,GAAAqR,EAAA,WAHVgkE,IACAt7E,EAAA27E,EACA11E,EAAAw7B,EAEA05C,IACAn7E,EAAA27E,EACA11E,EAAAqR,OAEO,CACP,GAAAgkE,GAGU,GAAAA,EAAAr1E,EAAAw7B,EAAA,WAHV65C,IACAt7E,EAAA27E,EACA11E,EAAAqR,EAEA6jE,IACAn7E,EAAA27E,EACA11E,EAAAw7B,QAMA,IAFA25C,GAAAG,EAAAE,IAAAC,EAAAF,GACAH,EAAAO,EAAAR,EAAAO,EACAP,GAAA,GAAAA,EAAA,EACA,GAAAG,EAAAE,EAAA,CACA,GAAAH,GAGY,GAAAA,EAAAr1E,GAAAqR,EAAA,WAHZgkE,IACAt7E,GAAAyhC,EAAA45C,GAAAD,EACAn1E,EAAAw7B,EAEA05C,IACAn7E,GAAAsX,EAAA+jE,GAAAD,EACAn1E,EAAAqR,OAES,CACT,GAAAgkE,GAGY,GAAAA,EAAAr1E,EAAAw7B,EAAA,WAHZ65C,IACAt7E,GAAAsX,EAAA+jE,GAAAD,EACAn1E,EAAAqR,EAEA6jE,IACAn7E,GAAAyhC,EAAA45C,GAAAD,EACAn1E,EAAAw7B,OAIA,IAAA+5C,EAAAE,EAAA,CACA,GAAAJ,GAGY,GAAAA,EAAAt7E,GAAAoX,EAAA,WAHZkkE,IACAt7E,EAAA2jC,EACA19B,EAAAm1E,EAAAz3C,EAAA03C,EAEAF,IACAn7E,EAAAoX,EACAnR,EAAAm1E,EAAAhkE,EAAAikE,OAES,CACT,GAAAC,GAGY,GAAAA,EAAAt7E,EAAA2jC,EAAA,WAHZ23C,IACAt7E,EAAAoX,EACAnR,EAAAm1E,EAAAhkE,EAAAikE,EAEAF,IACAn7E,EAAA2jC,EACA19B,EAAAm1E,EAAAz3C,EAAA03C,GAOA,MAFAnE,GAAAxgD,EAAA4kD,EACApE,EAAAvgD,EAAAwkD,GACA,EAEA,QAAAU,IAAA9C,EAAAC,GACA13E,KAAAwvC,EAAAioC,EACAz3E,KAAAglC,EAAA0yC,EACA13E,KAAAo1B,EAAAp1B,KAAAq1B,EAAA,KAEA,QAAA2hD,IAAAS,EAAAC,EAAAsC,EAAAH,GACA,GAAAjE,GAAA,GAAA2E,IAAA9C,EAAAC,EAMA,OALAiC,IAAAp7E,KAAAq3E,GACAoE,GAAAjD,GAAAnB,EAAA6B,EAAAC,EAAAsC,GACAH,GAAA9C,GAAAnB,EAAA8B,EAAAD,EAAAoC,GACAhB,GAAApB,EAAAvyE,GAAAozE,MAAA/5E,KAAA,GAAAy6E,IAAApD,EAAA6B,EAAAC,IACAmB,GAAAnB,EAAAxyE,GAAAozE,MAAA/5E,KAAA,GAAAy6E,IAAApD,EAAA8B,EAAAD,IACA7B,EAEA,QAAAqD,IAAAxB,EAAAuC,EAAAH,GACA,GAAAjE,GAAA,GAAA2E,IAAA9C,EAAA,KAIA,OAHA7B,GAAAxgD,EAAA4kD,EACApE,EAAAvgD,EAAAwkD,EACAF,GAAAp7E,KAAAq3E,GACAA,EAEA,QAAAmB,IAAAnB,EAAA6B,EAAAC,EAAArB,GACAT,EAAAxgD,GAAAwgD,EAAAvgD,EAIKugD,EAAApmC,IAAAkoC,EACL9B,EAAAvgD,EAAAghD,EAEAT,EAAAxgD,EAAAihD,GANAT,EAAAxgD,EAAAihD,EACAT,EAAApmC,EAAAioC,EACA7B,EAAA5wC,EAAA0yC,GAOA,QAAAsB,IAAApD,EAAA6B,EAAAC,GACA,GAAAsC,GAAApE,EAAAxgD,EAAAykD,EAAAjE,EAAAvgD,CACAr1B,MAAA41E,OACA51E,KAAA61E,KAAA4B,EACAz3E,KAAAqjD,MAAAq0B,EAAAn8E,KAAA+6D,MAAAohB,EAAA/yE,EAAA8yE,EAAA9yE,EAAA+yE,EAAAh5E,EAAA+4E,EAAA/4E,GAAAk3E,EAAApmC,IAAAioC,EAAAl8E,KAAA+6D,MAAAujB,EAAAn7E,EAAAs7E,EAAAt7E,EAAAs7E,EAAAr1E,EAAAk1E,EAAAl1E,GAAApJ,KAAA+6D,MAAA0jB,EAAAt7E,EAAAm7E,EAAAn7E,EAAAm7E,EAAAl1E,EAAAq1E,EAAAr1E,GAUA,QAAA61E,MACAx6E,KAAAurD,EAAA,KAEA,QAAAoqB,IAAAjqE,GACAA,EAAAyxD,EAAAzxD,EAAA4hE,EAAA5hE,EAAAmxD,EAAAnxD,EAAA8rE,EAAA9rE,EAAA6qE,EAAA7qE,EAAA+qE,EAAA,KAkKA,QAAAgE,IAAAC,EAAAhvE,GACA,GAAA0qB,GAAA1qB,EAAAw/D,EAAAx/D,EAAA8rE,EAAA54C,EAAAxI,EAAA+mC,CACAv+B,GACAA,EAAAi+B,IAAAzmC,EAAAwI,EAAAi+B,EAAAqO,EAAuCtsC,EAAA44C,EAAAtM,EAEvCwP,EAAAnvB,EAAA2f,EAEAA,EAAA/N,EAAAv+B,EACAxI,EAAA+mC,EAAA+N,EACA90C,EAAAohD,EAAAtM,EAAArO,EACAzmC,EAAAohD,IAAAphD,EAAAohD,EAAAra,EAAA/mC,GACA80C,EAAArO,EAAAzmC,EAEA,QAAAukD,IAAAD,EAAAhvE,GACA,GAAA0qB,GAAA1qB,EAAAw/D,EAAAx/D,EAAAmxD,EAAAj+B,EAAAxI,EAAA+mC,CACAv+B,GACAA,EAAAi+B,IAAAzmC,EAAAwI,EAAAi+B,EAAAqO,EAAuCtsC,EAAA44C,EAAAtM,EAEvCwP,EAAAnvB,EAAA2f,EAEAA,EAAA/N,EAAAv+B,EACAxI,EAAA+mC,EAAA+N,EACA90C,EAAAymC,EAAAqO,EAAAsM,EACAphD,EAAAymC,IAAAzmC,EAAAymC,EAAAM,EAAA/mC,GACA80C,EAAAsM,EAAAphD,EAEA,QAAAwkD,IAAAlvE,GACA,KAAAA,EAAAmxD,GAAAnxD,IAAAmxD,CACA,OAAAnxD,GAEA,QAAAmvE,IAAAC,EAAAC,GACA,GAAA14C,GAAAlC,EAAAuE,EAAAmxC,EAAAiF,EAAA3lD,KAAA6lD,IAAAvT,KAKA,KAJAkS,MACAd,GAAA,GAAAj7B,OAAAk9B,EAAAl+E,QACAu5E,GAAA,GAAAqE,IACAhB,GAAA,GAAAgB,MAGA,GADA91C,EAAA+0C,GACA5D,KAAAnxC,GAAAmxC,EAAAlxE,EAAA+/B,EAAA//B,GAAAkxE,EAAAlxE,IAAA+/B,EAAA//B,GAAAkxE,EAAAn3E,EAAAgmC,EAAAhmC,GACAm3E,EAAAn3E,IAAA2jC,GAAAwzC,EAAAlxE,IAAAw7B,IACA04C,GAAAhD,EAAA3wE,GAAA,GAAAmzE,IAAAxC,GACAqB,GAAArB,GACAxzC,EAAAwzC,EAAAn3E,EAAAyhC,EAAA01C,EAAAlxE,GAEAkxE,EAAAiF,EAAArT,UACO,KAAA/iC,EAGP,KAFA0xC,IAAA1xC,EAAAsQ,KAKA+lC,IAAArB,GAAAqB,GAAAxC,GAAAwC,GACA,IAAAE,IACArC,MAAAC,GACAP,MAAAqB,GAGA,OADAxD,IAAAqD,GAAAG,GAAAd,GAAA,KACAoC,EAEA,QAAAD,IAAA5lD,EAAAC,GACA,MAAAA,GAAA1wB,EAAAywB,EAAAzwB,GAAA0wB,EAAA32B,EAAA02B,EAAA12B,EAqEA,QAAAw8E,IAAA9lD,EAAAC,EAAAgB,GACA,OAAAjB,EAAA12B,EAAA23B,EAAA33B,IAAA22B,EAAA1wB,EAAAywB,EAAAzwB,IAAAywB,EAAA12B,EAAA22B,EAAA32B,IAAA23B,EAAA1xB,EAAAywB,EAAAzwB,GAgHA,QAAAw2E,IAAAt/E,GACA,MAAAA,GAAA6C,EAEA,QAAA08E,IAAAv/E,GACA,MAAAA,GAAA8I,EAEA,QAAA02E,MACA,OACAC,MAAA,EACAC,SACAloB,MAAA,KACA30D,EAAA,KACAiG,EAAA,MAGA,QAAA62E,IAAAh5E,EAAAkJ,EAAAoK,EAAAE,EAAAD,EAAA1F,GACA,IAAA7N,EAAAkJ,EAAAoK,EAAAE,EAAAD,EAAA1F,GAAA,CACA,GAAAq2B,GAAA,IAAA5wB,EAAAC,GAAA6wB,EAAA,IAAA5wB,EAAA3F,GAAAorE,EAAA/vE,EAAA6vE,KACAE,GAAA,IAAAD,GAAAh5E,EAAAi5E,EAAA,GAAA3lE,EAAAE,EAAA0wB,EAAAE,GACA60C,EAAA,IAAAD,GAAAh5E,EAAAi5E,EAAA,GAAA/0C,EAAA1wB,EAAAD,EAAA6wB,GACA60C,EAAA,IAAAD,GAAAh5E,EAAAi5E,EAAA,GAAA3lE,EAAA8wB,EAAAF,EAAAr2B,GACAorE,EAAA,IAAAD,GAAAh5E,EAAAi5E,EAAA,GAAA/0C,EAAAE,EAAA7wB,EAAA1F,IAGA,QAAAqrE,IAAAC,EAAAj9E,EAAAiG,EAAA09B,EAAAlC,EAAAg1C,EAAAG,GACA,GAAAsG,GAAAC,EAAAjwE,GAiCA,OAhCA,SAAAshB,GAAAxhB,EAAAoK,EAAAE,EAAAD,EAAA1F,GACA,KAAAyF,EAAAq/D,GAAAn/D,EAAAs/D,GAAAv/D,EAAAssB,GAAAhyB,EAAA8vB,GAAA,CACA,GAAAkzB,EAAA3nD,EAAA2nD,MAAA,CACA,GAAAA,GAAAvoD,EAAApM,EAAAgN,EAAAhN,EAAAqJ,EAAApD,EAAA+G,EAAA/G,EAAAm3E,EAAAhxE,IAAA/C,GACA,IAAA+zE,EAAAD,EAAA,CACA,GAAArI,GAAAj4E,KAAAy8B,KAAA6jD,EAAAC,EACAz5C,GAAA3jC,EAAA80E,EAAArzC,EAAAx7B,EAAA6uE,EACA2B,EAAAz2E,EAAA80E,EAAA8B,EAAA3wE,EAAA6uE,EACAoI,EAAAvoB,GAIA,OADAooB,GAAA/vE,EAAA6vE,MAAAQ,EAAA,IAAAjmE,EAAAC,GAAAimE,EAAA,IAAAhmE,EAAA3F,GAAAjF,EAAA1M,GAAAq9E,EAAAE,EAAAt3E,GAAAq3E,EACA92E,EAAA+2E,GAAA,EAAA7wE,EAAAmkB,EAAArqB,EAAA,EAAiDA,EAAAqqB,IAAOrqB,EACxD,GAAAwG,EAAA+vE,EAAA,EAAAv2E,GAAA,SAAAA,GACA,OACAgoB,EAAAxhB,EAAAoK,EAAAE,EAAA+lE,EAAAC,EACA,MAEA,QACA9uD,EAAAxhB,EAAAqwE,EAAA/lE,EAAAD,EAAAimE,EACA,MAEA,QACA9uD,EAAAxhB,EAAAoK,EAAAkmE,EAAAD,EAAA1rE,EACA,MAEA,QACA6c,EAAAxhB,EAAAqwE,EAAAC,EAAAjmE,EAAA1F,MAIKsrE,EAAAt5C,EAAAlC,EAAAg1C,EAAAG,GACLsG,EAGA,QAAAM,IAAA9mD,EAAAC,GACAD,EAAAvxB,GAAA+1C,IAAAxkB,GACAC,EAAAxxB,GAAA+1C,IAAAvkB,EACA,IAAA8mD,GAAA/mD,EAAA4P,EAAAo3C,EAAAhnD,EAAAvuB,EAAAw1E,EAAAjnD,EAAAC,EAAAinD,EAAAjnD,EAAA2P,EAAAm3C,EAAAI,EAAAlnD,EAAAxuB,EAAAu1E,EAAAI,EAAAnnD,IAAAgnD,CACA,iBAAA/9D,GACA,UAAAq4C,GAAAp7D,KAAAg8C,MAAA4kC,EAAAG,EAAAh+D,IAAAq4C,GAAAp7D,KAAAg8C,MAAA6kC,EAAAG,EAAAj+D,IAAAq4C,GAAAp7D,KAAAg8C,MAAA8kC,EAAAG,EAAAl+D,KAIA,QAAAm+D,IAAArnD,EAAAC,GACA,GAAsB7F,GAAtBtqB,KAAcmxB,IACd,KAAA7G,IAAA4F,GACA5F,IAAA6F,GACAnwB,EAAAsqB,GAAAktD,GAAAtnD,EAAA5F,GAAA6F,EAAA7F,IAEA6G,EAAA7G,GAAA4F,EAAA5F,EAGA,KAAAA,IAAA6F,GACA7F,IAAA4F,KACAiB,EAAA7G,GAAA6F,EAAA7F,GAGA,iBAAAlR,GACA,IAAAkR,IAAAtqB,GAAAmxB,EAAA7G,GAAAtqB,EAAAsqB,GAAAlR,EACA,OAAA+X,IAIA,QAAAsmD,IAAAvnD,EAAAC,GAEA,MADAD,MAAAC,KACA,SAAA/W,GACA,MAAA8W,IAAA,EAAA9W,GAAA+W,EAAA/W,GAIA,QAAAs+D,IAAAxnD,EAAAC,GACA,GAAAwnD,GAAAC,EAAAC,EAAAC,EAAAC,GAAAvtB,UAAAwtB,GAAAxtB,UAAA,EAAAxqD,GAAA,EAAAwF,KAAAwgE,IAEA,KADA91C,GAAA,GAAAC,GAAA,IACAwnD,EAAAI,GAAApmB,KAAAzhC,MAAA0nD,EAAAI,GAAArmB,KAAAxhC,MACA0nD,EAAAD,EAAApgF,OAAAsgF,IACAD,EAAA1nD,EAAA5tB,MAAAu1E,EAAAD,GACAryE,EAAAxF,GAAAwF,EAAAxF,IAAA63E,EAA6BryE,IAAAxF,GAAA63E,IAE7BF,IAAA,OAAAC,IAAA,IACApyE,EAAAxF,GAAAwF,EAAAxF,IAAA43E,EAA6BpyE,IAAAxF,GAAA43E,GAE7BpyE,IAAAxF,GAAA,KACAgmE,EAAA3sE,MACA2G,IACAxG,EAAAi+E,GAAAE,EAAAC,MAGAE,EAAAE,GAAAxtB,SAMA,OAJAstB,GAAA3nD,EAAAz4B,SACAmgF,EAAA1nD,EAAA5tB,MAAAu1E,GACAtyE,EAAAxF,GAAAwF,EAAAxF,IAAA63E,EAA2BryE,IAAAxF,GAAA63E,GAE3BryE,EAAA9N,OAAA,EAAAsuE,EAAA,IAAA71C,EAAA61C,EAAA,GAAAxsE,EAAA,SAAA4f,GACA,MAAA+W,GAAA/W,GAAA,KACK,WACL,MAAA+W,KACKA,EAAA61C,EAAAtuE,OAAA,SAAA0hB,GACL,OAAAub,GAAA30B,EAAA,EAAwBA,EAAAmwB,IAAOnwB,EAAAwF,GAAAmvB,EAAAqxC,EAAAhmE,OAAA20B,EAAAn7B,EAAA4f,EAC/B,OAAA5T,GAAAgwD,KAAA,MAKA,QAAAgiB,IAAAtnD,EAAAC,GAEA,IADA,GAAA7yB,GAAA0C,EAAArB,GAAAs5E,cAAAvgF,SACAsI,GAAA,KAAA1C,EAAAqB,GAAAs5E,cAAAj4E,GAAAkwB,EAAAC,MACA,MAAA7yB,GAOA,QAAA46E,IAAAhoD,EAAAC,GACA,GAAAnwB,GAAAxG,KAAA23B,KAAAgnD,EAAAjoD,EAAAx4B,OAAA0gF,EAAAjoD,EAAAz4B,OAAA2gF,EAAAhiF,KAAAiyB,IAAA4H,EAAAx4B,OAAAy4B,EAAAz4B,OACA,KAAAsI,EAAA,EAAeA,EAAAq4E,IAAQr4E,EAAAxG,EAAAH,KAAAm+E,GAAAtnD,EAAAlwB,GAAAmwB,EAAAnwB,IACvB,MAAUA,EAAAm4E,IAAOn4E,EAAAmxB,EAAAnxB,GAAAkwB,EAAAlwB,EACjB,MAAUA,EAAAo4E,IAAOp4E,EAAAmxB,EAAAnxB,GAAAmwB,EAAAnwB,EACjB,iBAAAoZ,GACA,IAAApZ,EAAA,EAAiBA,EAAAq4E,IAAQr4E,EAAAmxB,EAAAnxB,GAAAxG,EAAAwG,GAAAoZ,EACzB,OAAA+X,IA4CA,QAAAmnD,IAAAh7E,GACA,gBAAA8b,GACA,MAAAA,IAAA,IAAAA,GAAA,IAAA9b,EAAA8b,IAGA,QAAAm/D,IAAAj7E,GACA,gBAAA8b,GACA,SAAA9b,EAAA,EAAA8b,IAGA,QAAAo/D,IAAAl7E,GACA,gBAAA8b,GACA,UAAAA,EAAA,GAAA9b,EAAA,EAAA8b,GAAA,EAAA9b,EAAA,IAAA8b,KAGA,QAAAq/D,IAAAr/D,GACA,MAAAA,KAEA,QAAAs/D,IAAAt/D,GACA,MAAAA,OAEA,QAAAu/D,IAAAv/D,GACA,GAAAA,GAAA,UACA,IAAAA,GAAA,UACA,IAAA4X,GAAA5X,IAAAw/D,EAAA5nD,EAAA5X,CACA,WAAAA,EAAA,GAAAw/D,EAAA,GAAAx/D,EAAA4X,GAAA4nD,EAAA,KAEA,QAAAC,IAAA9hE,GACA,gBAAAqC,GACA,MAAA/iB,MAAA08B,IAAA3Z,EAAArC,IAGA,QAAA+hE,IAAA1/D,GACA,SAAA/iB,KAAAmkC,IAAAphB,EAAAo2C,IAEA,QAAAupB,IAAA3/D,GACA,MAAA/iB,MAAA08B,IAAA,MAAA3Z,EAAA,IAEA,QAAA4/D,IAAA5/D,GACA,SAAA/iB,KAAAy8B,KAAA,EAAA1Z,KAEA,QAAA6/D,IAAA/oD,EAAAgB,GACA,GAAA1rB,EAGA,OAFAQ,WAAAtO,OAAA,IAAAw5B,EAAA,KACAlrB,UAAAtO,OAAA8N,EAAA0rB,EAAAmzC,GAAAhuE,KAAAo5D,KAAA,EAAAv/B,IAAuDA,EAAA,EAAA1qB,EAAA0rB,EAAA,GACvD,SAAA9X,GACA,SAAA8W,EAAA75B,KAAA08B,IAAA,MAAA3Z,GAAA/iB,KAAAoN,KAAA2V,EAAA5T,GAAA6+D,GAAAnzC,IAGA,QAAAgoD,IAAA1zE,GAEA,MADAA,OAAA,SACA,SAAA4T,GACA,MAAAA,OAAA5T,EAAA,GAAA4T,EAAA5T,IAGA,QAAA2zE,IAAA//D,GACA,MAAAA,GAAA,cAAAA,MAAA,eAAAA,GAAA,UAAAA,EAAA,IAAAA,EAAA,iBAAAA,GAAA,WAAAA,EAAA,cAAAA,GAAA,YAAAA,EAAA,QAGA,QAAAggE,IAAAlpD,EAAAC,GACAD,EAAAvxB,GAAA06E,IAAAnpD,GACAC,EAAAxxB,GAAA06E,IAAAlpD,EACA,IAAAmpD,GAAAppD,EAAApvB,EAAAy4E,EAAArpD,EAAAiB,EAAAqoD,EAAAtpD,EAAAoa,EAAAmvC,EAAAtpD,EAAArvB,EAAAw4E,EAAAI,EAAAvpD,EAAAgB,EAAAooD,EAAAI,EAAAxpD,EAAAma,EAAAkvC,CAGA,OAFAl7D,OAAAo7D,OAAA,EAAAH,EAAAj7D,MAAAi7D,GAAAppD,EAAAgB,EAAAooD,GACAj7D,MAAAm7D,MAAA,EAAAH,EAAAh7D,MAAAg7D,GAAAnpD,EAAArvB,EAAAw4E,GAAqDG,EAAA,IAAAA,GAAA,IAA8BA,GAAA,MAAAA,GAAA,KACnF,SAAArgE,GACA,MAAAw3C,IAAA0oB,EAAAG,EAAArgE,EAAAmgE,EAAAG,EAAAtgE,EAAAogE,EAAAG,EAAAvgE,GAAA,IAIA,QAAAwgE,IAAA1pD,EAAAC,GACAD,EAAAvxB,GAAA+yD,IAAAxhC,GACAC,EAAAxxB,GAAA+yD,IAAAvhC,EACA,IAAAmpD,GAAAppD,EAAApvB,EAAA+4E,EAAA3pD,EAAA1qB,EAAAg0E,EAAAtpD,EAAAoa,EAAAmvC,EAAAtpD,EAAArvB,EAAAw4E,EAAAzB,EAAA1nD,EAAA3qB,EAAAq0E,EAAAF,EAAAxpD,EAAAma,EAAAkvC,CAGA,OAFAl7D,OAAAu5D,OAAA,EAAAgC,EAAAv7D,MAAAu7D,GAAA1pD,EAAA3qB,EAAAq0E,GACAv7D,MAAAm7D,MAAA,EAAAH,EAAAh7D,MAAAg7D,GAAAnpD,EAAArvB,EAAAw4E,GAAqDG,EAAA,IAAAA,GAAA,IAA8BA,GAAA,MAAAA,GAAA,KACnF,SAAArgE,GACA,MAAA+2C,IAAAmpB,EAAAG,EAAArgE,EAAAygE,EAAAhC,EAAAz+D,EAAAogE,EAAAG,EAAAvgE,GAAA,IAIA,QAAA0gE,IAAA5pD,EAAAC,GACAD,EAAAvxB,GAAAo7E,IAAA7pD,GACAC,EAAAxxB,GAAAo7E,IAAA5pD,EACA,IAAAqpD,GAAAtpD,EAAAoa,EAAA0vC,EAAA9pD,IAAAinD,EAAAjnD,EAAAC,EAAAwpD,EAAAxpD,EAAAma,EAAAkvC,EAAAS,EAAA9pD,EAAAD,EAAA8pD,EAAA1C,EAAAnnD,IAAAgnD,CACA,iBAAA/9D,GACA,MAAA03C,IAAA0oB,EAAAG,EAAAvgE,EAAA4gE,EAAAC,EAAA7gE,EAAA+9D,EAAAG,EAAAl+D,GAAA,IAIA,QAAA8gE,IAAAhqD,EAAAC,GAEA,MADAA,IAAAD,EACA,SAAA9W,GACA,MAAA/iB,MAAAg8C,MAAAniB,EAAAC,EAAA/W,IAaA,QAAA+gE,IAAAljF,GACA,GAAAmjF,IAAAnjF,EAAAi5B,EAAAj5B,EAAAk5B,GAAA8tB,GAAAhnD,EAAAk6B,EAAAl6B,EAAAN,GAAA0jF,EAAAC,GAAAF,GAAAG,EAAAC,GAAAJ,EAAAn8B,GAAAw8B,EAAAH,GAAAI,GAAAz8B,EAAAm8B,GAAAG,KAAA,CACAH,GAAA,GAAAn8B,EAAA,GAAAA,EAAA,GAAAm8B,EAAA,KACAA,EAAA,OACAA,EAAA,OACAC,IAAA,EACAE,IAAA,GAEAz/E,KAAAwI,QAAA+2E,EAAAhkF,KAAA+6D,MAAAgpB,EAAA,GAAAA,EAAA,IAAA/jF,KAAA+6D,OAAAnT,EAAA,GAAAA,EAAA,KAAAoT,GACAv2D,KAAAy1C,WAAAt5C,EAAA8f,EAAA9f,EAAAqG,GACAxC,KAAAiF,OAAAs6E,EAAAI,GACA3/E,KAAA6/E,KAAAF,EAAApkF,KAAA+6D,MAAAmpB,EAAAE,GAAAppB,GAAA,EAKA,QAAAmpB,IAAAtqD,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAEA,QAAAmqD,IAAApqD,GACA,GAAA5F,GAAAj0B,KAAAy8B,KAAA0nD,GAAAtqD,KAKA,OAJA5F,KACA4F,EAAA,IAAA5F,EACA4F,EAAA,IAAA5F,GAEAA,EAEA,QAAAowD,IAAAxqD,EAAAC,EAAA7F,GAGA,MAFA4F,GAAA,IAAA5F,EAAA6F,EAAA,GACAD,EAAA,IAAA5F,EAAA6F,EAAA,GACAD,EAWA,QAAA0qD,IAAAp1E,GACA,MAAAA,GAAA9N,OAAA8N,EAAA+8D,MAAA,OAEA,QAAAsY,IAAAC,EAAAC,EAAAv1E,EAAAwgE,GACA,GAAA8U,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IACA,GAAA/6E,GAAAwF,EAAAnM,KAAA,+BACA2sE,GAAA3sE,MACA2G,IAAA,EACAxG,EAAAi+E,GAAAqD,EAAA,GAAAC,EAAA,MAEA/6E,IAAA,EACAxG,EAAAi+E,GAAAqD,EAAA,GAAAC,EAAA,WAEKA,EAAA,IAAAA,EAAA,KACLv1E,EAAAnM,KAAA,aAAA0hF,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAA11E,EAAAwgE,GACAiV,IAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAmCA,EAAAD,EAAA,MAAAA,GAAA,KACnCjV,EAAA3sE,MACA2G,EAAAwF,EAAAnM,KAAAuhF,GAAAp1E,GAAA,sBACAhM,EAAAi+E,GAAAwD,EAAAC,MAEKA,GACL11E,EAAAnM,KAAAuhF,GAAAp1E,GAAA,UAAA01E,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAA71E,EAAAwgE,GACAoV,IAAAC,EACArV,EAAA3sE,MACA2G,EAAAwF,EAAAnM,KAAAuhF,GAAAp1E,GAAA,qBACAhM,EAAAi+E,GAAA2D,EAAAC,KAEKA,GACL71E,EAAAnM,KAAAuhF,GAAAp1E,GAAA,SAAA61E,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAAh2E,EAAAwgE,GACA,GAAAuV,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IACA,GAAAx7E,GAAAwF,EAAAnM,KAAAuhF,GAAAp1E,GAAA,2BACAwgE,GAAA3sE,MACA2G,IAAA,EACAxG,EAAAi+E,GAAA8D,EAAA,GAAAC,EAAA,MAEAx7E,IAAA,EACAxG,EAAAi+E,GAAA8D,EAAA,GAAAC,EAAA,UAEK,KAAAA,EAAA,QAAAA,EAAA,IACLh2E,EAAAnM,KAAAuhF,GAAAp1E,GAAA,SAAAg2E,EAAA,KAGA,QAAAC,IAAAvrD,EAAAC,GACA,GAAA3qB,MAAAwgE,IAOA,OANA91C,GAAAvxB,GAAAy6C,UAAAlpB,GAAAC,EAAAxxB,GAAAy6C,UAAAjpB,GACA0qD,GAAA3qD,EAAAqgB,UAAApgB,EAAAogB,UAAA/qC,EAAAwgE,GACAgV,GAAA9qD,EAAA5sB,OAAA6sB,EAAA7sB,OAAAkC,EAAAwgE,GACAmV,GAAAjrD,EAAAyqD,KAAAxqD,EAAAwqD,KAAAn1E,EAAAwgE,GACAsV,GAAAprD,EAAAnwB,MAAAowB,EAAApwB,MAAAyF,EAAAwgE,GACA91C,EAAAC,EAAA,KACA,SAAA/W,GAEA,IADA,GAAAub,GAAA30B,GAAA,EAAAge,EAAAgoD,EAAAtuE,SACAsI,EAAAge,GAAAxY,GAAAmvB,EAAAqxC,EAAAhmE,OAAA20B,EAAAn7B,EAAA4f,EACA,OAAA5T,GAAAgwD,KAAA,KAGA,QAAAkmB,IAAAxrD,EAAAC,GAEA,MADAA,OAAAD,OAAA,EAAAC,EACA,SAAA32B,GACA,OAAAA,EAAA02B,GAAAC,GAGA,QAAAwrD,IAAAzrD,EAAAC,GAEA,MADAA,OAAAD,OAAA,EAAAC,EACA,SAAA32B,GACA,MAAAnD,MAAA+D,IAAA,EAAA/D,KAAAiyB,IAAA,GAAA9uB,EAAA02B,GAAAC,KAWA,QAAAyrD,IAAAC,GAEA,IADA,GAAAj8E,GAAAi8E,EAAA92B,OAAAnnB,EAAAi+C,EAAA19E,OAAA29E,EAAAC,GAAAn8E,EAAAg+B,GAAAE,GAAAl+B,GACAA,IAAAk8E,GACAl8E,IAAA85B,OACAoE,EAAAzkC,KAAAuG,EAGA,KADA,GAAA0qB,GAAAwT,EAAApmC,OACAkmC,IAAAk+C,GACAh+C,EAAA1kC,OAAAkxB,EAAA,EAAAsT,GACAA,IAAAlE,MAEA,OAAAoE,GAEA,QAAAk+C,IAAAx1E,GAEA,IADA,GAAAy1E,MAAAviD,EAAAlzB,EAAAkzB,OACA,MAAAA,GACAuiD,EAAA5iF,KAAAmN,GACAA,EAAAkzB,EACAA,UAGA,OADAuiD,GAAA5iF,KAAAmN,GACAy1E,EAEA,QAAAF,IAAA7rD,EAAAC,GACA,GAAAD,IAAAC,EAAA,MAAAD,EAEA,KADA,GAAAgsD,GAAAF,GAAA9rD,GAAAisD,EAAAH,GAAA7rD,GAAAisD,EAAAF,EAAA3Z,MAAA8Z,EAAAF,EAAA5Z,MAAA+Z,EAAA,KACAF,IAAAC,GACAC,EAAAF,EACAA,EAAAF,EAAA3Z,MACA8Z,EAAAF,EAAA5Z,KAEA,OAAA+Z,GA6UA,QAAAC,IAAA5lF,GACAA,EAAA6lF,OAAA,EAEA,QAAAC,IAAA9lF,GACAA,EAAA6lF,QAAA,EAEA,QAAAE,IAAA/lF,GACAA,EAAA6lF,OAAA,EACA7lF,EAAAgmF,GAAAhmF,EAAA6C,EAAA7C,EAAAimF,GAAAjmF,EAAA8I,EAEA,QAAAo9E,IAAAlmF,GACAA,EAAA6lF,QAAA,EAEA,QAAAM,IAAAC,EAAAC,EAAAC,GACA,GAAApoE,GAAA,EAAAC,EAAA,CAEA,IADAioE,EAAAG,OAAA,GACAH,EAAA3G,KAEA,IADA,GAAAjlD,GAAAklD,EAAA0G,EAAA1G,MAAAr4D,EAAAq4D,EAAA3+E,OAAAsI,GAAA,IACAA,EAAAge,GACAmT,EAAAklD,EAAAr2E,GACA,MAAAmxB,IACA2rD,GAAA3rD,EAAA6rD,EAAAC,GACAF,EAAAG,QAAA/rD,EAAA+rD,OACAroE,GAAAsc,EAAA+rD,OAAA/rD,EAAAtc,GACAC,GAAAqc,EAAA+rD,OAAA/rD,EAAArc,GAGA,IAAAioE,EAAA5uB,MAAA,CACA4uB,EAAA3G,OACA2G,EAAA5uB,MAAA30D,GAAAnD,KAAAumC,SAAA,GACAmgD,EAAA5uB,MAAA1uD,GAAApJ,KAAAumC,SAAA,GAEA,IAAAtS,GAAA0yD,EAAAC,EAAAF,EAAA5uB,MAAA32D,MACAulF,GAAAG,QAAAH,EAAAI,YAAA7yD,EACAzV,GAAAyV,EAAAyyD,EAAA5uB,MAAA30D,EACAsb,GAAAwV,EAAAyyD,EAAA5uB,MAAA1uD,EAEAs9E,EAAAloE,KAAAkoE,EAAAG,OACAH,EAAAjoE,KAAAioE,EAAAG,OA6DA,QAAAE,IAAA9hF,EAAA+hF,GAIA,MAHA1+E,IAAA40D,OAAAj4D,EAAA+hF,EAAA,2BACA/hF,EAAA+6E,MAAA/6E,EACAA,EAAAgiF,MAAAC,GACAjiF,EAEA,QAAAkiF,IAAAh3E,EAAAuX,GAEA,IADA,GAAAs4D,IAAA7vE,GACA,OAAAA,EAAA6vE,EAAA9T,QAEA,GADAxkD,EAAAvX,IACA+vE,EAAA/vE,EAAA+vE,YAAAv4D,EAAAu4D,EAAA7+E,QAEA,IADA,GAAAsmB,GAAAu4D,IACAv4D,GAAA,GAAAq4D,EAAAh9E,KAAAk9E,EAAAv4D,IAIA,QAAAy/D,IAAAj3E,EAAAuX,GAEA,IADA,GAAAs4D,IAAA7vE,GAAAk3E,KACA,OAAAl3E,EAAA6vE,EAAA9T,QAEA,GADAmb,EAAArkF,KAAAmN,IACA+vE,EAAA/vE,EAAA+vE,YAAAv4D,EAAAu4D,EAAA7+E,QAEA,IADA,GAAAsmB,GAAAu4D,EAAAv2E,GAAA,IACAA,EAAAge,GAAAq4D,EAAAh9E,KAAAk9E,EAAAv2E,GAGA,aAAAwG,EAAAk3E,EAAAnb,QACAxkD,EAAAvX,GAGA,QAAAm3E,IAAAhnF,GACA,MAAAA,GAAA4/E,SAEA,QAAAqH,IAAAjnF,GACA,MAAAA,GAAAlC,MAEA,QAAAopF,IAAA3tD,EAAAC,GACA,MAAAA,GAAA17B,MAAAy7B,EAAAz7B,MAEA,QAAA8oF,IAAAlH,GACA,MAAA13E,IAAAqxB,MAAAqmD,EAAA9wE,IAAA,SAAAm0B,GACA,OAAAA,EAAA68C,cAAAhxE,IAAA,SAAAu4E,GACA,OACA/4B,OAAArrB,EACAv7B,OAAA2/E,QAqJA,QAAAC,IAAApnF,GACA,MAAAA,GAAA6C,EAEA,QAAAwkF,IAAArnF,GACA,MAAAA,GAAA8I,EAEA,QAAAw+E,IAAAtnF,EAAAskC,EAAAx7B,GACA9I,EAAAskC,KACAtkC,EAAA8I,IAiEA,QAAAy+E,IAAA5jF,GACA,MAAAqE,IAAAwE,MAAA7I,EAAA5C,QAEA,QAAAymF,IAAA7jF,GAEA,IADA,GAAA+vB,IAAA,EAAApzB,EAAAqD,EAAA,GAAA5C,OAAAujC,OACA5Q,EAAApzB,GAAAgkC,EAAA5Q,GAAA,CACA,OAAA4Q,GAEA,QAAAmjD,IAAA5c,GAEA,IADA,GAAAl3C,GAAAtqB,EAAA,EAAAqqB,EAAA,EAAA5pB,EAAA+gE,EAAA,MAAAxjD,EAAAwjD,EAAA9pE,OACUsI,EAAAge,IAAMhe,GAChBsqB,EAAAk3C,EAAAxhE,GAAA,IAAAS,IACA4pB,EAAArqB,EACAS,EAAA6pB,EAGA,OAAAD,GAEA,QAAAg0D,IAAA1nF,GACA,MAAAA,GAAA06B,OAAAitD,GAAA,GAEA,QAAAA,IAAAptD,EAAAv6B,GACA,MAAAu6B,GAAAv6B,EAAA,GAgDA,QAAA4nF,IAAAp7E,EAAAypB,GACA,MAAA4xD,IAAAr7E,EAAA9M,KAAAiJ,KAAAjJ,KAAAo+D,IAAA7nC,EAAAl1B,QAAArB,KAAAooF,IAAA,IAEA,QAAAD,IAAAr7E,EAAA6a,GAEA,IADA,GAAAxkB,IAAA,EAAA22B,GAAAhtB,EAAA,GAAAlM,GAAAkM,EAAA,GAAAgtB,GAAAnS,EAAA1gB,OACA9D,GAAAwkB,GAAA1gB,EAAA9D,GAAAvC,EAAAuC,EAAA22B,CACA,OAAA7yB,GAEA,QAAAohF,IAAA9xD,GACA,OAAAjuB,GAAA2pB,IAAAsE,GAAAjuB,GAAAvE,IAAAwyB,IA2CA,QAAA+xD,IAAAzuD,EAAAC,GACA,MAAAD,GAAAz7B,MAAA07B,EAAA17B,MAEA,QAAAmqF,IAAA1uD,EAAAC,GACA,GAAAgB,GAAAjB,EAAA2uD,UACA3uD,GAAA2uD,WAAA1uD,EACAA,EAAA2uD,WAAA5uD,EACAC,EAAA0uD,WAAA1tD,EACAA,EAAA2tD,WAAA3uD,EAEA,QAAA4uD,IAAA7uD,EAAAC,GACAD,EAAA2uD,WAAA1uD,EACAA,EAAA2uD,WAAA5uD,EAEA,QAAA8uD,IAAA9uD,EAAAC,GACA,GAAAvqB,GAAAuqB,EAAA32B,EAAA02B,EAAA12B,EAAAqJ,EAAAstB,EAAA1wB,EAAAywB,EAAAzwB,EAAAw/E,EAAA/uD,EAAA4P,EAAA3P,EAAA2P,CACA,YAAAm/C,IAAAr5E,IAAA/C,IAEA,QAAAq8E,IAAA14E,GAGA,QAAA24E,GAAA34E,GACAyiB,EAAA5yB,KAAAiyB,IAAA9hB,EAAAhN,EAAAgN,EAAAs5B,EAAA7W,GACAC,EAAA7yB,KAAA+D,IAAAoM,EAAAhN,EAAAgN,EAAAs5B,EAAA5W,GACAC,EAAA9yB,KAAAiyB,IAAA9hB,EAAA/G,EAAA+G,EAAAs5B,EAAA3W,GACAC,EAAA/yB,KAAA+D,IAAAoM,EAAA/G,EAAA+G,EAAAs5B,EAAA1W,GANA,IAAAitD,EAAA7vE,EAAA+vE,YAAAv4D,EAAAq4D,EAAA3+E,QAAA,CACA,GAAA2+E,GAAAnmD,EAAAC,EAAAgB,EAAAnxB,EAAAqqB,EAAAC,EAAAtM,EAAAiL,EAAAviB,IAAAwiB,IAAAxiB,KAAAyiB,EAAAziB,IAAA0iB,IAAA1iB,IAYA,IALA2vE,EAAA/3E,QAAA8gF,IACAlvD,EAAAmmD,EAAA,GACAnmD,EAAA12B,GAAA02B,EAAA4P,EACA5P,EAAAzwB,EAAA,EACA0/E,EAAAjvD,GACAlS,EAAA,IACAmS,EAAAkmD,EAAA,GACAlmD,EAAA32B,EAAA22B,EAAA2P,EACA3P,EAAA1wB,EAAA,EACA0/E,EAAAhvD,GACAnS,EAAA,GAQA,IAPAmT,EAAAklD,EAAA,GACAgJ,GAAAnvD,EAAAC,EAAAgB,GACAguD,EAAAhuD,GACAytD,GAAA1uD,EAAAiB,GACAjB,EAAA4uD,WAAA3tD,EACAytD,GAAAztD,EAAAhB,GACAA,EAAAD,EAAA2uD,WACA7+E,EAAA,EAAmBA,EAAAge,EAAOhe,IAAA,CAC1Bq/E,GAAAnvD,EAAAC,EAAAgB,EAAAklD,EAAAr2E,GACA,IAAAs/E,GAAA,EAAAC,EAAA,EAAAC,EAAA,CACA,KAAAn1D,EAAA8F,EAAA0uD,WAAgCx0D,IAAA8F,EAAS9F,IAAAw0D,WAAAU,IACzC,GAAAP,GAAA30D,EAAA8G,GAAA,CACAmuD,EAAA,CACA,OAGA,MAAAA,EACA,IAAAh1D,EAAA4F,EAAA4uD,WAAkCx0D,IAAAD,EAAAy0D,aAClCE,GAAA10D,EAAA6G,GADsD7G,IAAAw0D,WAAAU,KAMtDF,GACAC,EAAAC,GAAAD,GAAAC,GAAArvD,EAAA2P,EAAA5P,EAAA4P,EAAAi/C,GAAA7uD,EAAAC,EAAA9F,GAAiF00D,GAAA7uD,EAAA5F,EAAA6F,GACjFnwB,MAEA4+E,GAAA1uD,EAAAiB,GACAhB,EAAAgB,EACAguD,EAAAhuD,IAKA,GAAAtc,IAAAoU,EAAAC,GAAA,EAAApU,GAAAqU,EAAAC,GAAA,EAAAs7C,EAAA,CACA,KAAA1kE,EAAA,EAAeA,EAAAge,EAAOhe,IACtBmxB,EAAAklD,EAAAr2E,GACAmxB,EAAA33B,GAAAqb,EACAsc,EAAA1xB,GAAAqV,EACA4vD,EAAAruE,KAAA+D,IAAAsqE,EAAAvzC,EAAA2O,EAAAzpC,KAAAy8B,KAAA3B,EAAA33B,EAAA23B,EAAA33B,EAAA23B,EAAA1xB,EAAA0xB,EAAA1xB,GAEA+G,GAAAs5B,EAAA4kC,EACA2R,EAAA/3E,QAAAmhF,KAEA,QAAAL,IAAA54E,GACAA,EAAAq4E,WAAAr4E,EAAAs4E,WAAAt4E,EAEA,QAAAi5E,IAAAj5E,SACAA,GAAAq4E,iBACAr4E,GAAAs4E,WAEA,QAAAY,IAAAl5E,EAAAhN,EAAAiG,EAAA6qB,GACA,GAAAisD,GAAA/vE,EAAA+vE,QAIA,IAHA/vE,EAAAhN,KAAA8wB,EAAA9jB,EAAAhN,EACAgN,EAAA/G,KAAA6qB,EAAA9jB,EAAA/G,EACA+G,EAAAs5B,GAAAxV,EACAisD,EAEA,IADA,GAAAv2E,IAAA,EAAAge,EAAAu4D,EAAA7+E,SACAsI,EAAAge,GAAA0hE,GAAAnJ,EAAAv2E,GAAAxG,EAAAiG,EAAA6qB,GAGA,QAAA+0D,IAAAnvD,EAAAC,EAAAgB,GACA,GAAAwuD,GAAAzvD,EAAA4P,EAAA3O,EAAA2O,EAAAl6B,EAAAuqB,EAAA32B,EAAA02B,EAAA12B,EAAAqJ,EAAAstB,EAAA1wB,EAAAywB,EAAAzwB,CACA,IAAAkgF,IAAA/5E,GAAA/C,GAAA,CACA,GAAA+8E,GAAAzvD,EAAA2P,EAAA3O,EAAA2O,EAAA+/C,EAAAj6E,IAAA/C,GACA+8E,MACAD,IACA,IAAAnmF,GAAA,IAAAmmF,EAAAC,IAAA,EAAAC,GAAApgF,EAAApJ,KAAAy8B,KAAAz8B,KAAA+D,IAAA,IAAAwlF,GAAAD,EAAAE,IAAAF,GAAAE,GAAAF,EAAAC,OAAA,EAAAC,EACA1uD,GAAA33B,EAAA02B,EAAA12B,IAAAoM,EAAAnG,EAAAoD,EACAsuB,EAAA1xB,EAAAywB,EAAAzwB,EAAAjG,EAAAqJ,EAAApD,EAAAmG,MAEAurB,GAAA33B,EAAA02B,EAAA12B,EAAAmmF,EACAxuD,EAAA1xB,EAAAywB,EAAAzwB,EAuHA,QAAAqgF,IAAA5vD,EAAAC,GACA,MAAAD,GAAAwJ,QAAAvJ,EAAAuJ,OAAA,IAEA,QAAAqmD,IAAAt/E,GACA,GAAA81E,GAAA91E,EAAA81E,QACA,OAAAA,GAAA7+E,OAAA6+E,EAAA,GAAA91E,EAAA2Y,EAEA,QAAA4mE,IAAAv/E,GACA,GAAAud,GAAAu4D,EAAA91E,EAAA81E,QACA,QAAAv4D,EAAAu4D,EAAA7+E,QAAA6+E,EAAAv4D,EAAA,GAAAvd,EAAA2Y,EAEA,QAAA6mE,IAAAC,EAAAC,EAAAl4D,GACA,GAAAm4D,GAAAn4D,GAAAk4D,EAAAngF,EAAAkgF,EAAAlgF,EACAmgF,GAAAhvD,GAAAivD,EACAD,EAAA36E,GAAAyiB,EACAi4D,EAAA/uD,GAAAivD,EACAD,EAAA5pC,GAAAtuB,EACAk4D,EAAAlpF,GAAAgxB,EAEA,QAAAo4D,IAAA5/E,GAEA,IADA,GAAAM,GAAAknB,EAAA,EAAAm4D,EAAA,EAAA7J,EAAA91E,EAAA81E,SAAAv2E,EAAAu2E,EAAA7+E,SACAsI,GAAA,GACAe,EAAAw1E,EAAAv2E,GACAe,EAAAw1C,GAAAtuB,EACAlnB,EAAA9J,GAAAgxB,EACAA,GAAAlnB,EAAAyE,GAAA46E,GAAAr/E,EAAAowB,GAGA,QAAAmvD,IAAAC,EAAA9/E,EAAA+/E,GACA,MAAAD,GAAArwD,EAAAwJ,SAAAj5B,EAAAi5B,OAAA6mD,EAAArwD,EAAAswD,EA4CA,QAAAC,IAAAlK,GACA,SAAA53E,GAAAvE,IAAAm8E,EAAA,SAAAuH,GACA,MAAAA,GAAAr+E,IAGA,QAAAihF,IAAAnK,GACA,MAAAA,GAAAllD,OAAA,SAAA73B,EAAAskF,GACA,MAAAtkF,GAAAskF,EAAAtkF,GACK,GAAA+8E,EAAA7+E,OAEL,QAAAipF,IAAAn6E,GACA,GAAA+vE,GAAA/vE,EAAA+vE,QACA,OAAAA,MAAA7+E,OAAAipF,GAAApK,EAAA,IAAA/vE,EAEA,QAAAo6E,IAAAp6E,GACA,GAAAwX,GAAAu4D,EAAA/vE,EAAA+vE,QACA,OAAAA,KAAAv4D,EAAAu4D,EAAA7+E,QAAAkpF,GAAArK,EAAAv4D,EAAA,IAAAxX,EAoJA,QAAAq6E,IAAAr6E,GACA,OACAhN,EAAAgN,EAAAhN,EACAiG,EAAA+G,EAAA/G,EACAmG,GAAAY,EAAAZ,GACA/C,GAAA2D,EAAA3D,IAGA,QAAAi+E,IAAAt6E,EAAA4kB,GACA,GAAA5xB,GAAAgN,EAAAhN,EAAA4xB,EAAA,GAAA3rB,EAAA+G,EAAA/G,EAAA2rB,EAAA,GAAAxlB,EAAAY,EAAAZ,GAAAwlB,EAAA,GAAAA,EAAA,GAAAvoB,EAAA2D,EAAA3D,GAAAuoB,EAAA,GAAAA,EAAA,EASA,OARAxlB,GAAA,IACApM,GAAAoM,EAAA,EACAA,EAAA,GAEA/C,EAAA,IACApD,GAAAoD,EAAA,EACAA,EAAA,IAGArJ,IACAiG,IACAmG,KACA/C,MAsCA,QAAAk+E,IAAAphF,GACA,GAAAC,GAAAD,EAAA,GAAAE,EAAAF,IAAAjI,OAAA,EACA,OAAAkI,GAAAC,GAAAD,EAAAC,MAAAD,GAEA,QAAAohF,IAAAjhF,GACA,MAAAA,GAAA4E,YAAA5E,EAAA4E,cAAAo8E,GAAAhhF,EAAAoD,SAEA,QAAA89E,IAAAthF,EAAAwD,EAAA+9E,EAAA7jD,GACA,GAAA8gC,GAAA+iB,EAAAvhF,EAAA,GAAAA,EAAA,IAAAK,EAAAq9B,EAAAl6B,EAAA,GAAAA,EAAA,GACA,iBAAA3J,GACA,MAAAwG,GAAAm+D,EAAA3kE,KAGA,QAAA2nF,IAAAxhF,EAAAyhF,GACA,GAAAx7E,GAAA2mD,EAAA,EAAA80B,EAAA1hF,EAAAjI,OAAA,EAAAylC,EAAAx9B,EAAA4sD,GAAA37C,EAAAjR,EAAA0hF,EAOA,OANAzwE,GAAAusB,IACAv3B,EAAA2mD,IAAA80B,IAAAz7E,EACAA,EAAAu3B,IAAAvsB,IAAAhL,GAEAjG,EAAA4sD,GAAA60B,EAAA9qF,MAAA6mC,GACAx9B,EAAA0hF,GAAAD,EAAA9hF,KAAAsR,GACAjR,EAEA,QAAA2hF,IAAA75C,GACA,MAAAA,IACAnxC,MAAA,SAAAkD,GACA,MAAAnD,MAAAC,MAAAkD,EAAAiuC,MAEAnoC,KAAA,SAAA9F,GACA,MAAAnD,MAAAiJ,KAAA9F,EAAAiuC,OAEK85C,GAML,QAAAC,IAAA7hF,EAAAwD,EAAA+9E,EAAA7jD,GACA,GAAA8gC,MAAAn+D,KAAAqqB,EAAA,EAAAC,EAAAj0B,KAAAiyB,IAAA3oB,EAAAjI,OAAAyL,EAAAzL,QAAA,CAKA,KAJAiI,EAAA2qB,GAAA3qB,EAAA,KACAA,IAAA4C,QAAAmqB,UACAvpB,IAAAZ,QAAAmqB,aAEArC,GAAAC,GACA6zC,EAAA9kE,KAAA6nF,EAAAvhF,EAAA0qB,EAAA,GAAA1qB,EAAA0qB,KACArqB,EAAA3G,KAAAgkC,EAAAl6B,EAAAknB,EAAA,GAAAlnB,EAAAknB,IAEA,iBAAA7wB,GACA,GAAA6wB,GAAA1rB,GAAA8iF,OAAA9hF,EAAAnG,EAAA,EAAA8wB,GAAA,CACA,OAAAtqB,GAAAqqB,GAAA8zC,EAAA9zC,GAAA7wB,KAMA,QAAAkoF,IAAA/hF,EAAAwD,EAAAk6B,EAAAskD,GAEA,QAAAC,KACA,GAAA/7E,GAAAxP,KAAAiyB,IAAA3oB,EAAAjI,OAAAyL,EAAAzL,QAAA,EAAA8pF,GAAAP,GAAAC,EAAAS,EAAAhG,GAAAD,EAGA,OAFA9O,GAAA/mE,EAAAlG,EAAAwD,EAAA+9E,EAAA7jD,GACAwkD,EAAAh8E,EAAA1C,EAAAxD,EAAAuhF,EAAA1J,IACAz3E,EAEA,QAAAA,GAAAvG,GACA,MAAAozE,GAAApzE,GARA,GAAAozE,GAAAiV,CAiDA,OAvCA9hF,GAAA2gE,OAAA,SAAAjhE,GACA,MAAAoiF,GAAApiF,IAEAM,EAAAJ,OAAA,SAAAnG,GACA,MAAAwM,WAAAtO,QACAiI,EAAAnG,EAAA+L,IAAAu8E,QACAF,KAFAjiF,GAIAI,EAAAoD,MAAA,SAAA3J,GACA,MAAAwM,WAAAtO,QACAyL,EAAA3J,EACAooF,KAFAz+E,GAIApD,EAAAgiF,WAAA,SAAAvoF,GACA,MAAAuG,GAAAoD,MAAA3J,GAAA6jC,YAAA68C,KAEAn6E,EAAA4hF,MAAA,SAAAnoF,GACA,MAAAwM,WAAAtO,QACAiqF,EAAAnoF,EACAooF,KAFAD,GAIA5hF,EAAAs9B,YAAA,SAAA7jC,GACA,MAAAwM,WAAAtO,QACA2lC,EAAA7jC,EACAooF,KAFAvkD,GAIAt9B,EAAAE,MAAA,SAAAhJ,GACA,MAAA+qF,IAAAriF,EAAA1I,IAEA8I,EAAAY,WAAA,SAAA1J,EAAAC,GACA,MAAA+qF,IAAAtiF,EAAA1I,EAAAC,IAEA6I,EAAAqhF,KAAA,SAAAnqF,GAEA,MADAirF,IAAAviF,EAAA1I,GACA2qF,KAEA7hF,EAAAO,KAAA,WACA,MAAAohF,IAAA/hF,EAAAwD,EAAAk6B,EAAAskD,IAEAC,IAEA,QAAAO,IAAApiF,EAAA8F,GACA,MAAAlH,IAAA40D,OAAAxzD,EAAA8F,EAAA,4CAEA,QAAAq8E,IAAAviF,EAAA1I,GAGA,MAFAkqF,IAAAxhF,EAAA2hF,GAAAc,GAAAziF,EAAA1I,GAAA,KACAkqF,GAAAxhF,EAAA2hF,GAAAc,GAAAziF,EAAA1I,GAAA,KACA0I,EAEA,QAAAyiF,IAAAziF,EAAA1I,GACA,MAAAA,MAAA,GACA,IAAAyW,GAAAqzE,GAAAphF,GAAA0iF,EAAA30E,EAAA,GAAAA,EAAA,GAAA+5B,EAAApxC,KAAA08B,IAAA,GAAA18B,KAAAC,MAAAD,KAAAo+D,IAAA4tB,EAAAprF,GAAAZ,KAAAq+D,OAAA4tB,EAAArrF,EAAAorF,EAAA56C,CAKA,OAJA66C,IAAA,IAAA76C,GAAA,GAA+B66C,GAAA,IAAA76C,GAAA,EAAgC66C,GAAA,MAAA76C,GAAA,GAC/D/5B,EAAA,GAAArX,KAAAiJ,KAAAoO,EAAA,GAAA+5B,KACA/5B,EAAA,GAAArX,KAAAC,MAAAoX,EAAA,GAAA+5B,KAAA,GAAAA,EACA/5B,EAAA,GAAA+5B,EACA/5B,EAEA,QAAAs0E,IAAAriF,EAAA1I,GACA,MAAA0H,IAAAwE,MAAAjD,MAAAvB,GAAAyjF,GAAAziF,EAAA1I,IAEA,QAAAgrF,IAAAtiF,EAAA1I,EAAAC,GACA,GAAAiM,GAAAi/E,GAAAziF,EAAA1I,EACA,IAAAC,EAAA,CACA,GAAA+1D,GAAAyI,GAAA/D,KAAAz6D,EAEA,IADA+1D,EAAAhlC,QACA,MAAAglC,EAAA,IACA,GAAA5V,GAAA14C,GAAA23D,aAAAjgE,KAAA+D,IAAAiyB,GAAAlpB,EAAA,IAAAkpB,GAAAlpB,EAAA,KAIA,OAHA8pD,GAAA,KAAAA,EAAA,OAAAs1B,GAAAlrC,EAAAt3C,MAAAoD,EAAA,MACA8pD,EAAA,OACA/1D,EAAAyH,GAAAzH,OAAA+1D,EAAAuI,KAAA,KACA,SAAA7+D,GACA,MAAAO,GAAAmgD,EAAAt3C,MAAApJ,IAAA0gD,EAAAud,QAGA3H,EAAA,KAAAA,EAAA,OAAAu1B,GAAAv1B,EAAA,GAAA9pD,IACAjM,EAAA+1D,EAAAuI,KAAA,QAEAt+D,GAAA,KAAAqrF,GAAAp/E,EAAA,OAEA,OAAAxE,IAAAzH,UASA,QAAAqrF,IAAA9tF,GACA,OAAA4B,KAAAC,MAAAD,KAAAo+D,IAAAhgE,GAAA4B,KAAAq+D,KAAA,KAEA,QAAA8tB,IAAAvoF,EAAAkJ,GACA,GAAA+tB,GAAAqxD,GAAAp/E,EAAA,GACA,OAAAlJ,KAAAwoF,IAAApsF,KAAAg2B,IAAA6E,EAAAqxD,GAAAlsF,KAAA+D,IAAAiyB,GAAAlpB,EAAA,IAAAkpB,GAAAlpB,EAAA,gBAAAlJ,GAAAi3B,EAAA,SAAAj3B,GAKA,QAAAyoF,IAAA78E,EAAA3I,EAAAylF,EAAAhjF,GACA,QAAA80D,GAAAj7D,GACA,OAAAmpF,EAAAtsF,KAAAo+D,IAAAj7D,EAAA,IAAAA,IAAAnD,KAAAo+D,IAAAj7D,EAAA,KAAAA,IAAAnD,KAAAo+D,IAAAv3D,GAEA,QAAA61B,GAAAv5B,GACA,MAAAmpF,GAAAtsF,KAAA08B,IAAA71B,EAAA1D,IAAAnD,KAAA08B,IAAA71B,GAAA1D,GAEA,QAAAuG,GAAAvG,GACA,MAAAqM,GAAA4uD,EAAAj7D,IAoDA,MAlDAuG,GAAA2gE,OAAA,SAAAlnE,GACA,MAAAu5B,GAAAltB,EAAA66D,OAAAlnE,KAEAuG,EAAAJ,OAAA,SAAAnG,GACA,MAAAwM,WAAAtO,QACAirF,EAAAnpF,EAAA,MACAqM,EAAAlG,UAAAnG,EAAA+L,IAAAu8E,SAAAv8E,IAAAkvD,IACA10D,GAHAJ,GAKAI,EAAA7C,KAAA,SAAAmpD,GACA,MAAArgD,WAAAtO,QACAwF,GAAAmpD,EACAxgD,EAAAlG,SAAA4F,IAAAkvD,IACA10D,GAHA7C,GAKA6C,EAAAqhF,KAAA,WACA,GAAAwB,GAAAzB,GAAAxhF,EAAA4F,IAAAkvD,GAAAkuB,EAAAtsF,KAAAwsF,GAGA,OAFAh9E,GAAAlG,OAAAijF,GACAjjF,EAAAijF,EAAAr9E,IAAAwtB,GACAhzB,GAEAA,EAAAE,MAAA,WACA,GAAAyN,GAAAqzE,GAAAphF,GAAAM,KAAAk+D,EAAAzwD,EAAA,GAAAjN,EAAAiN,EAAA,GAAA1N,EAAA3J,KAAAC,MAAAm+D,EAAA0J,IAAA9zC,EAAAh0B,KAAAiJ,KAAAm1D,EAAAh0D,IAAAud,EAAA9gB,EAAA,IAAAA,CACA,IAAAo3D,SAAAjqC,EAAArqB,GAAA,CACA,GAAA2iF,EAAA,CACA,KAAgB3iF,EAAAqqB,EAAMrqB,IAAA,OAAAsqB,GAAA,EAAqBA,EAAAtM,EAAOsM,IAAArqB,EAAA5G,KAAA05B,EAAA/yB,GAAAsqB,EAClDrqB,GAAA5G,KAAA05B,EAAA/yB,QAGA,KADAC,EAAA5G,KAAA05B,EAAA/yB,IACgBA,IAAAqqB,GAAQ,OAAAC,GAAAtM,EAAA,EAAsBsM,EAAA,EAAOA,IAAArqB,EAAA5G,KAAA05B,EAAA/yB,GAAAsqB,EAErD,KAAAtqB,EAAA,EAAmBC,EAAAD,GAAAm+D,EAAcn+D,KACjC,IAAAqqB,EAAApqB,EAAAvI,OAA8BuI,EAAAoqB,EAAA,GAAA5pB,EAAkB4pB,KAChDpqB,IAAAsC,MAAAvC,EAAAqqB,GAEA,MAAApqB,IAEAF,EAAAY,WAAA,SAAAqd,EAAA9mB,GACA,IAAA8O,UAAAtO,OAAA,MAAAorF,GACA98E,WAAAtO,OAAA,EAAAR,EAAA4rF,GAA4D,kBAAA5rF,OAAAyH,GAAAzH,UAC5D,IAAAozB,GAAAj0B,KAAA+D,IAAA,EAAA8C,EAAA8gB,EAAAje,EAAAE,QAAAvI,OACA,iBAAAf,GACA,GAAAqJ,GAAArJ,EAAAo8B,EAAA18B,KAAAg8C,MAAAoiB,EAAA99D,IAEA,OADAqJ,GAAA9C,IAAA,KAAA8C,GAAA9C,GACA8C,GAAAsqB,EAAApzB,EAAAP,GAAA,KAGAoJ,EAAAO,KAAA,WACA,MAAAoiF,IAAA78E,EAAAvF,OAAApD,EAAAylF,EAAAhjF,IAEAwiF,GAAApiF,EAAA8F,GAaA,QAAAk9E,IAAAl9E,EAAA+9C,EAAAjkD,GAEA,QAAAI,GAAAvG,GACA,MAAAqM,GAAAm9E,EAAAxpF,IAFA,GAAAwpF,GAAAC,GAAAr/B,GAAAs/B,EAAAD,GAAA,EAAAr/B,EA+BA,OA3BA7jD,GAAA2gE,OAAA,SAAAlnE,GACA,MAAA0pF,GAAAr9E,EAAA66D,OAAAlnE,KAEAuG,EAAAJ,OAAA,SAAAnG,GACA,MAAAwM,WAAAtO,QACAmO,EAAAlG,UAAAnG,EAAA+L,IAAAu8E,SAAAv8E,IAAAy9E,IACAjjF,GAFAJ,GAIAI,EAAAE,MAAA,SAAAhJ,GACA,MAAA+qF,IAAAriF,EAAA1I,IAEA8I,EAAAY,WAAA,SAAA1J,EAAAC,GACA,MAAA+qF,IAAAtiF,EAAA1I,EAAAC,IAEA6I,EAAAqhF,KAAA,SAAAnqF,GACA,MAAA8I,GAAAJ,OAAAuiF,GAAAviF,EAAA1I,KAEA8I,EAAA6jD,SAAA,SAAApqD,GACA,MAAAwM,WAAAtO,QACAsrF,EAAAC,GAAAr/B,EAAApqD,GACA0pF,EAAAD,GAAA,EAAAr/B,GACA/9C,EAAAlG,SAAA4F,IAAAy9E,IACAjjF,GAJA6jD,GAMA7jD,EAAAO,KAAA,WACA,MAAAyiF,IAAAl9E,EAAAvF,OAAAsjD,EAAAjkD,IAEAwiF,GAAApiF,EAAA8F,GAEA,QAAAo9E,IAAAlsE,GACA,gBAAAvd,GACA,MAAAA,GAAA,GAAAnD,KAAA08B,KAAAv5B,EAAAud,GAAA1gB,KAAA08B,IAAAv5B,EAAAud,IAYA,QAAAosE,IAAAxjF,EAAAyjF,GAEA,QAAArjF,GAAAvG,GACA,MAAA2J,KAAA3L,EAAAm8B,IAAAn6B,KAAA,UAAA4pF,EAAAhqE,EAAA5hB,EAAAi3B,IAAAj1B,EAAAmG,EAAAtG,KAAAG,IAAA8Y,MAAA,GAAAnP,EAAAzL,QAEA,QAAAuxC,GAAArpC,EAAA6nC,GACA,MAAA9oC,IAAAwE,MAAAxD,EAAAjI,QAAA6N,IAAA,SAAAvF,GACA,MAAAJ,GAAA6nC,EAAAznC,IANA,GAAAxI,GAAA2L,EAAAwC,CAsFA,OA7EA5F,GAAAJ,OAAA,SAAAnG,GACA,IAAAwM,UAAAtO,OAAA,MAAAiI,EACAA,MACAnI,EAAA,GAAA4uD,EAEA,KADA,GAAAi9B,GAAArjF,GAAA,EAAAge,EAAAxkB,EAAA9B,SACAsI,EAAAge,GAAAxmB,EAAAgsC,IAAA6/C,EAAA7pF,EAAAwG,KAAAxI,EAAAi3B,IAAA40D,EAAA1jF,EAAAtG,KAAAgqF,GACA,OAAAtjF,GAAAqjF,EAAAhqE,GAAAlZ,MAAAH,EAAAqjF,EAAAlzD,IAEAnwB,EAAAoD,MAAA,SAAA3J,GACA,MAAAwM,WAAAtO,QACAyL,EAAA3J,EACAmM,EAAA,EACAy9E,GACAhqE,EAAA,QACA8W,EAAAlqB,WAEAjG,GAPAoD,GASApD,EAAAujF,YAAA,SAAA9pF,EAAA4xB,GACAplB,UAAAtO,OAAA,IAAA0zB,EAAA,EACA,IAAAxrB,GAAApG,EAAA,GAAAqG,EAAArG,EAAA,GAAAiuC,EAAA9nC,EAAAjI,OAAA,GAAAkI,KAAAC,GAAA,EACA,IAAAA,EAAAD,IAAAD,EAAAjI,OAAA,EAAA0zB,EAOA,OANAjoB,GAAA8lC,EAAArpC,EAAA6nC,EAAArc,EAAA,EAAAqc,GACA9hC,EAAA,EACAy9E,GACAhqE,EAAA,cACA8W,EAAAlqB,WAEAjG,GAEAA,EAAAwjF,iBAAA,SAAA/pF,EAAA4xB,GACAplB,UAAAtO,OAAA,IAAA0zB,EAAA,EACA,IAAAxrB,GAAApG,EAAA,GAAAqG,EAAArG,EAAA,GAAAiuC,EAAA9nC,EAAAjI,OAAA,GAAAkI,EAAAC,EAAAxJ,KAAAg8C,OAAAzyC,EAAAC,GAAA,GACA,IAAAA,EAAAD,IAAAD,EAAAjI,OAAA,EAAA0zB,GAAA,CAOA,OANAjoB,GAAA8lC,EAAArpC,EAAAvJ,KAAAg8C,MAAA5K,EAAArc,EAAA,GAAAvrB,EAAAD,GAAAD,EAAAjI,OAAA,EAAA0zB,GAAAqc,GAAA,GAAAA,GACA9hC,EAAA,EACAy9E,GACAhqE,EAAA,mBACA8W,EAAAlqB,WAEAjG,GAEAA,EAAAyjF,WAAA,SAAAhqF,EAAA4xB,EAAAq4D,GACAz9E,UAAAtO,OAAA,IAAA0zB,EAAA,GACAplB,UAAAtO,OAAA,IAAA+rF,EAAAr4D,EACA,IAAAsB,GAAAlzB,EAAA,GAAAA,EAAA,GAAAoG,EAAApG,EAAAkzB,EAAA,GAAA7sB,EAAArG,EAAA,EAAAkzB,GAAA+a,GAAA5nC,EAAAD,IAAAD,EAAAjI,OAAA0zB,EAAA,EAAAq4D,EAQA,OAPAtgF,GAAA8lC,EAAArpC,EAAA6nC,EAAAg8C,EAAAh8C,GACA/a,GAAAvpB,EAAAupB,UACA/mB,EAAA8hC,GAAA,EAAArc,GACAg4D,GACAhqE,EAAA,aACA8W,EAAAlqB,WAEAjG,GAEAA,EAAA2jF,gBAAA,SAAAlqF,EAAA4xB,EAAAq4D,GACAz9E,UAAAtO,OAAA,IAAA0zB,EAAA,GACAplB,UAAAtO,OAAA,IAAA+rF,EAAAr4D,EACA,IAAAsB,GAAAlzB,EAAA,GAAAA,EAAA,GAAAoG,EAAApG,EAAAkzB,EAAA,GAAA7sB,EAAArG,EAAA,EAAAkzB,GAAA+a,EAAApxC,KAAAC,OAAAuJ,EAAAD,IAAAD,EAAAjI,OAAA0zB,EAAA,EAAAq4D,GAQA,OAPAtgF,GAAA8lC,EAAArpC,EAAAvJ,KAAAg8C,OAAAxyC,EAAAD,GAAAD,EAAAjI,OAAA0zB,GAAAqc,GAAA,GAAAA,GACA/a,GAAAvpB,EAAAupB,UACA/mB,EAAAtP,KAAAg8C,MAAA5K,GAAA,EAAArc,IACAg4D,GACAhqE,EAAA,kBACA8W,EAAAlqB,WAEAjG,GAEAA,EAAA4F,UAAA,WACA,MAAAA,IAEA5F,EAAA4E,YAAA,WACA,MAAAo8E,IAAAqC,EAAAlzD,EAAA,KAEAnwB,EAAAO,KAAA,WACA,MAAA6iF,IAAAxjF,EAAAyjF,IAEArjF,EAAAJ,UAqBA,QAAAgkF,IAAAhkF,EAAAwD,GAEA,QAAAy+E,KACA,GAAAt3D,GAAA,EAAA07C,EAAA7iE,EAAAzL,MAEA,KADAksF,OACAt5D,EAAA07C,GAAA4d,EAAAt5D,EAAA,GAAA3rB,GAAAklF,SAAAlkF,EAAA2qB,EAAA07C,EACA,OAAAjmE,GAEA,QAAAA,GAAAvG,GACA,IAAA8kB,MAAA9kB,MAAA,MAAA2J,GAAAxE,GAAA8iF,OAAAmC,EAAApqF,IARA,GAAAoqF,EA8BA,OApBA7jF,GAAAJ,OAAA,SAAAnG,GACA,MAAAwM,WAAAtO,QACAiI,EAAAnG,EAAA+L,IAAAigD,GAAArtD,OAAAstD,GAAAx1B,KAAAs1B,GACAq8B,KAFAjiF,GAIAI,EAAAoD,MAAA,SAAA3J,GACA,MAAAwM,WAAAtO,QACAyL,EAAA3J,EACAooF,KAFAz+E,GAIApD,EAAA+jF,UAAA,WACA,MAAAF,IAEA7jF,EAAAgkF,aAAA,SAAAtkF,GAEA,MADAA,GAAA0D,EAAA6T,QAAAvX,GACAA,EAAA,GAAA6S,UAAA7S,EAAA,EAAAmkF,EAAAnkF,EAAA,GAAAE,EAAA,GAAAF,EAAAmkF,EAAAlsF,OAAAksF,EAAAnkF,GAAAE,IAAAjI,OAAA,KAEAqI,EAAAO,KAAA,WACA,MAAAqjF,IAAAhkF,EAAAwD,IAEAy+E,IAKA,QAAAoC,IAAA7mD,EAAAvsB,EAAAzN,GAEA,QAAApD,GAAAvG,GACA,MAAA2J,GAAA9M,KAAA+D,IAAA,EAAA/D,KAAAiyB,IAAAtoB,EAAA3J,KAAAC,MAAA+jF,GAAA7gF,EAAA2jC,OAEA,QAAAykD,KAGA,MAFAvH,GAAAl3E,EAAAzL,QAAAkZ,EAAAusB,GACAn9B,EAAAmD,EAAAzL,OAAA,EACAqI,EAPA,GAAAs6E,GAAAr6E,CA4BA,OAnBAD,GAAAJ,OAAA,SAAAnG,GACA,MAAAwM,WAAAtO,QACAylC,GAAA3jC,EAAA,GACAoX,GAAApX,IAAA9B,OAAA,GACAkqF,MAHAzkD,EAAAvsB,IAKA7Q,EAAAoD,MAAA,SAAA3J,GACA,MAAAwM,WAAAtO,QACAyL,EAAA3J,EACAooF,KAFAz+E,GAIApD,EAAAgkF,aAAA,SAAAtkF,GAGA,MAFAA,GAAA0D,EAAA6T,QAAAvX,GACAA,IAAA,EAAA6S,IAAA7S,EAAA46E,EAAAl9C,GACA19B,IAAA,EAAA46E,IAEAt6E,EAAAO,KAAA,WACA,MAAA0jF,IAAA7mD,EAAAvsB,EAAAzN,IAEAy+E,IAKA,QAAAqC,IAAAtkF,EAAAwD,GACA,QAAApD,GAAAvG,GACA,GAAAA,KAAA,MAAA2J,GAAAxE,GAAA8iF,OAAA9hF,EAAAnG,IAmBA,MAjBAuG,GAAAJ,OAAA,SAAA0mD,GACA,MAAArgD,WAAAtO,QACAiI,EAAA0mD,EACAtmD,GAFAJ,GAIAI,EAAAoD,MAAA,SAAAkjD,GACA,MAAArgD,WAAAtO,QACAyL,EAAAkjD,EACAtmD,GAFAoD,GAIApD,EAAAgkF,aAAA,SAAAtkF,GAEA,MADAA,GAAA0D,EAAA6T,QAAAvX,IACAE,EAAAF,EAAA,GAAAE,EAAAF,KAEAM,EAAAO,KAAA,WACA,MAAA2jF,IAAAtkF,EAAAwD,IAEApD,EAKA,QAAAmkF,IAAAvkF,GACA,QAAAwkF,GAAA3qF,GACA,OAAAA,EAiBA,MAfA2qF,GAAAzjB,OAAAyjB,EACAA,EAAAxkF,OAAAwkF,EAAAhhF,MAAA,SAAA3J,GACA,MAAAwM,WAAAtO,QACAiI,EAAAnG,EAAA+L,IAAA4+E,GACAA,GAFAxkF,GAIAwkF,EAAAlkF,MAAA,SAAAhJ,GACA,MAAA+qF,IAAAriF,EAAA1I,IAEAktF,EAAAxjF,WAAA,SAAA1J,EAAAC,GACA,MAAA+qF,IAAAtiF,EAAA1I,EAAAC,IAEAitF,EAAA7jF,KAAA,WACA,MAAA4jF,IAAAvkF,IAEAwkF,EAGA,QAAAC,MACA,SA+HA,QAAAC,IAAA1tF,GACA,MAAAA,GAAAs4C,YAEA,QAAAq1C,IAAA3tF,GACA,MAAAA,GAAAo5C,YAEA,QAAAw0C,IAAA5tF,GACA,MAAAA,GAAAi5C,WAEA,QAAA40C,IAAA7tF,GACA,MAAAA,GAAAk5C,SAEA,QAAA40C,IAAA9tF,GACA,MAAAA,MAAA+tF,SAEA,QAAAC,IAAAxnD,EAAAlC,EAAArqB,EAAAE,GACA,OAAAqsB,EAAAvsB,GAAAqqB,KAAAnqB,GAAAqsB,EAAA,MAEA,QAAAynD,IAAA1jB,EAAAC,EAAAljB,EAAA4mC,EAAAC,GACA,GAAAC,GAAA7jB,EAAA,GAAAC,EAAA,GAAA6jB,EAAA9jB,EAAA,GAAAC,EAAA,GAAAvb,GAAAk/B,EAAAD,MAAAxuF,KAAAy8B,KAAAiyD,IAAAC,KAAAC,EAAAr/B,EAAAo/B,EAAAE,GAAAt/B,EAAAm/B,EAAAn0E,EAAAswD,EAAA,GAAA+jB,EAAAn0E,EAAAowD,EAAA,GAAAgkB,EAAAr0E,EAAAswD,EAAA,GAAA8jB,EAAA95E,EAAAg2D,EAAA,GAAA+jB,EAAAjV,GAAAr/D,EAAAC,GAAA,EAAAu/D,GAAAt/D,EAAA3F,GAAA,EAAAvF,EAAAiL,EAAAD,EAAA/N,EAAAsI,EAAA2F,EAAAm6D,EAAArlE,IAAA/C,IAAAi9B,EAAAme,EAAA4mC,EAAAM,EAAAv0E,EAAAzF,EAAA0F,EAAAC,EAAAna,GAAAkM,EAAA,QAAAxM,KAAAy8B,KAAAz8B,KAAA+D,IAAA,EAAA0lC,IAAAmrC,EAAAka,MAAAC,GAAAD,EAAAtiF,EAAA+C,EAAAjP,GAAAs0E,EAAA6C,IAAAqX,EAAAv/E,EAAA/C,EAAAlM,GAAAs0E,EAAAoa,GAAAF,EAAAtiF,EAAA+C,EAAAjP,GAAAs0E,EAAA+C,IAAAmX,EAAAv/E,EAAA/C,EAAAlM,GAAAs0E,EAAAqa,EAAAF,EAAAnV,EAAAsV,EAAAzX,EAAAsC,EAAAoV,EAAAH,EAAApV,EAAAwV,EAAAzX,EAAAoC,CAEA,OADAkV,KAAAC,IAAAC,IAAAC,MAAAL,EAAAC,EAAAvX,EAAAE,KACAoX,EAAAH,EAAAnX,EAAAoX,IAAAE,EAAAnnC,EAAAne,EAAAguC,EAAA7vB,EAAAne,IAEA,QAAA4lD,IAAA7Z,GAEA,QAAApvC,GAAAniC,GAEA,QAAA2mE,KACAJ,EAAAxnE,KAAA,IAAAgkC,EAAAwuC,EAAA/tC,GAAA6nD,IAEA,IAJA,GAAAhvF,GAAAkqE,KAAA/iC,KAAA99B,GAAA,EAAAge,EAAA1jB,EAAA5C,OAAAy9E,EAAAljB,GAAAz4D,GAAA47E,EAAAnjB,GAAAxyD,KAIAO,EAAAge,GACAkf,EAAAl+B,KAAAlE,KAAAnE,EAAA2D,EAAA0F,MACA89B,EAAAzkC,OAAA87E,EAAAn2E,KAAAlE,KAAAnE,EAAAqJ,IAAAo1E,EAAAp2E,KAAAlE,KAAAnE,EAAAqJ,KACS89B,EAAApmC,SACTupE,IACAnjC,KAIA,OADAA,GAAApmC,QAAAupE,IACAJ,EAAAnpE,OAAAmpE,EAAArL,KAAA,SAfA,GAAAh8D,GAAAi2E,GAAAhwE,EAAAiwE,GAAAxyC,EAAAyjC,GAAAtjC,EAAAuoD,GAAAC,EAAAxoD,EAAA9+B,IAAAonF,EAAA,EA0CA,OAzBAlpD,GAAAjjC,EAAA,SAAA6sD,GACA,MAAArgD,WAAAtO,QACA8B,EAAA6sD,EACA5pB,GAFAjjC,GAIAijC,EAAAh9B,EAAA,SAAA4mD,GACA,MAAArgD,WAAAtO,QACA+H,EAAA4mD,EACA5pB,GAFAh9B,GAIAg9B,EAAAS,QAAA,SAAAmpB,GACA,MAAArgD,WAAAtO,QACAwlC,EAAAmpB,EACA5pB,GAFAS,GAIAT,EAAAY,YAAA,SAAAgpB,GACA,MAAArgD,WAAAtO,QACAmuF,EAAA,kBAAAx/B,GAAAhpB,EAAAgpB,GAAoEhpB,EAAAyoD,GAAAnyD,IAAA0yB,IAAAu/B,IAAArnF,IACpEk+B,GAFAopD,GAIAppD,EAAAkpD,QAAA,SAAAt/B,GACA,MAAArgD,WAAAtO,QACAiuF,EAAAt/B,EACA5pB,GAFAkpD,GAIAlpD,EAwBA,QAAAmpD,IAAA9nD,GACA,MAAAA,GAAApmC,OAAA,EAAAomC,EAAA03B,KAAA,KAAA13B,EAAA,IAEA,QAAAioD,IAAAjoD,GACA,MAAAA,GAAA03B,KAAA,SAEA,QAAAwwB,IAAAloD,GAEA,IADA,GAAA99B,GAAA,EAAAge,EAAA8f,EAAApmC,OAAAw5B,EAAA4M,EAAA,GAAAl5B,GAAAssB,EAAA,OAAAA,EAAA,MACAlxB,EAAAge,GAAApZ,EAAAvL,KAAA,KAAA63B,EAAA,IAAAA,EAAA4M,EAAA99B,IAAA,UAAAkxB,EAAA,GAEA,OADAlT,GAAA,GAAApZ,EAAAvL,KAAA,IAAA63B,EAAA,IACAtsB,EAAA4wD,KAAA,IAEA,QAAAywB,IAAAnoD,GAEA,IADA,GAAA99B,GAAA,EAAAge,EAAA8f,EAAApmC,OAAAw5B,EAAA4M,EAAA,GAAAl5B,GAAAssB,EAAA,OAAAA,EAAA,MACAlxB,EAAAge,GAAApZ,EAAAvL,KAAA,KAAA63B,EAAA4M,EAAA99B,IAAA,OAAAkxB,EAAA,GACA,OAAAtsB,GAAA4wD,KAAA,IAEA,QAAA0wB,IAAApoD,GAEA,IADA,GAAA99B,GAAA,EAAAge,EAAA8f,EAAApmC,OAAAw5B,EAAA4M,EAAA,GAAAl5B,GAAAssB,EAAA,OAAAA,EAAA,MACAlxB,EAAAge,GAAApZ,EAAAvL,KAAA,KAAA63B,EAAA4M,EAAA99B,IAAA,OAAAkxB,EAAA,GACA,OAAAtsB,GAAA4wD,KAAA,IAEA,QAAA2wB,IAAAroD,EAAA6nD,GACA,MAAA7nD,GAAApmC,OAAA,EAAAkuF,GAAA9nD,KAAA,GAAAsoD,GAAAtoD,EAAAv7B,MAAA,MAAA8jF,GAAAvoD,EAAA6nD,IAEA,QAAAW,IAAAxoD,EAAA6nD,GACA,MAAA7nD,GAAApmC,OAAA,EAAAquF,GAAAjoD,KAAA,GAAAsoD,IAAAtoD,EAAAzkC,KAAAykC,EAAA,IACAA,GAAAuoD,IAAAvoD,IAAApmC,OAAA,IAAA4K,OAAAw7B,KAAA,KAAA6nD,IAEA,QAAAY,IAAAzoD,EAAA6nD,GACA,MAAA7nD,GAAApmC,OAAA,EAAAkuF,GAAA9nD,KAAA,GAAAsoD,GAAAtoD,EAAAuoD,GAAAvoD,EAAA6nD,IAEA,QAAAS,IAAAtoD,EAAA0oD,GACA,GAAAA,EAAA9uF,OAAA,GAAAomC,EAAApmC,QAAA8uF,EAAA9uF,QAAAomC,EAAApmC,QAAA8uF,EAAA9uF,OAAA,EACA,MAAAkuF,IAAA9nD,EAEA,IAAAi/C,GAAAj/C,EAAApmC,QAAA8uF,EAAA9uF,OAAAkN,EAAA,GAAAs8D,EAAApjC,EAAA,GAAA5M,EAAA4M,EAAA,GAAAy2B,EAAAiyB,EAAA,GAAAptE,EAAAm7C,EAAAkyB,EAAA,CAMA,IALA1J,IACAn4E,GAAA,KAAAssB,EAAA,KAAAqjC,EAAA,WAAArjC,EAAA,KAAAqjC,EAAA,UAAArjC,EAAA,OAAAA,EAAA,GACAgwC,EAAApjC,EAAA,GACA2oD,EAAA,GAEAD,EAAA9uF,OAAA,GACA0hB,EAAAotE,EAAA,GACAt1D,EAAA4M,EAAA2oD,GACAA,IACA7hF,GAAA,KAAAs8D,EAAA,GAAA3M,EAAA,SAAA2M,EAAA,GAAA3M,EAAA,SAAArjC,EAAA,GAAA9X,EAAA,SAAA8X,EAAA,GAAA9X,EAAA,QAAA8X,EAAA,OAAAA,EAAA,EACA,QAAAlxB,GAAA,EAAqBA,EAAAwmF,EAAA9uF,OAAqBsI,IAAAymF,IAC1Cv1D,EAAA4M,EAAA2oD,GACArtE,EAAAotE,EAAAxmF,GACA4E,GAAA,KAAAssB,EAAA,GAAA9X,EAAA,SAAA8X,EAAA,GAAA9X,EAAA,QAAA8X,EAAA,OAAAA,EAAA,GAGA,GAAA6rD,EAAA,CACA,GAAA2J,GAAA5oD,EAAA2oD,EACA7hF,IAAA,KAAAssB,EAAA,KAAA9X,EAAA,WAAA8X,EAAA,KAAA9X,EAAA,UAAAstE,EAAA,OAAAA,EAAA,GAEA,MAAA9hF,GAEA,QAAAyhF,IAAAvoD,EAAA6nD,GAEA,IADA,GAAAzkB,GAAAslB,KAAAt2D,GAAA,EAAAy1D,GAAA,EAAAxkB,EAAArjC,EAAA,GAAA6oD,EAAA7oD,EAAA,GAAA99B,EAAA,EAAAge,EAAA8f,EAAApmC,SACAsI,EAAAge,GACAkjD,EAAAC,EACAA,EAAAwlB,EACAA,EAAA7oD,EAAA99B,GACAwmF,EAAAntF,MAAA62B,GAAAy2D,EAAA,GAAAzlB,EAAA,IAAAhxC,GAAAy2D,EAAA,GAAAzlB,EAAA,KAEA,OAAAslB,GAEA,QAAAI,IAAA9oD,GACA,GAAAA,EAAApmC,OAAA,QAAAkuF,IAAA9nD,EACA,IAAA99B,GAAA,EAAAge,EAAA8f,EAAApmC,OAAA+uF,EAAA3oD,EAAA,GAAAX,EAAAspD,EAAA,GAAAxrD,EAAAwrD,EAAA,GAAA9J,GAAAx/C,OAAAspD,EAAA3oD,EAAA,QAAA8+C,GAAA3hD,MAAAwrD,EAAA,IAAA7hF,GAAAu4B,EAAA,IAAAlC,EAAA,IAAA4rD,GAAAC,GAAAnK,GAAA,IAAAkK,GAAAC,GAAAlK,GAEA,KADA9+C,EAAAzkC,KAAAykC,EAAA9f,EAAA,MACAhe,GAAAge,GACAyoE,EAAA3oD,EAAA99B,GACA28E,EAAA10D,QACA00D,EAAAtjF,KAAAotF,EAAA,IACA7J,EAAA30D,QACA20D,EAAAvjF,KAAAotF,EAAA,IACAM,GAAAniF,EAAA+3E,EAAAC,EAIA,OAFA9+C,GAAAykC,MACA39D,EAAAvL,KAAA,IAAAotF,GACA7hF,EAAA4wD,KAAA,IAEA,QAAAwxB,IAAAlpD,GACA,GAAAA,EAAApmC,OAAA,QAAAkuF,IAAA9nD,EAEA,KADA,GAAA2oD,GAAA7hF,KAAA5E,GAAA,EAAAge,EAAA8f,EAAApmC,OAAAilF,GAAA,GAAAC,GAAA,KACA58E,EAAA,GACAymF,EAAA3oD,EAAA99B,GACA28E,EAAAtjF,KAAAotF,EAAA,IACA7J,EAAAvjF,KAAAotF,EAAA,GAIA,KAFA7hF,EAAAvL,KAAAwtF,GAAAC,GAAAnK,GAAA,IAAAkK,GAAAC,GAAAlK,MACA58E,IACAA,EAAAge,GACAyoE,EAAA3oD,EAAA99B,GACA28E,EAAA10D,QACA00D,EAAAtjF,KAAAotF,EAAA,IACA7J,EAAA30D,QACA20D,EAAAvjF,KAAAotF,EAAA,IACAM,GAAAniF,EAAA+3E,EAAAC,EAEA,OAAAh4E,GAAA4wD,KAAA,IAEA,QAAAyxB,IAAAnpD,GAEA,IADA,GAAAl5B,GAAA6hF,EAAAzmF,GAAA,EAAAge,EAAA8f,EAAApmC,OAAAT,EAAA+mB,EAAA,EAAA2+D,KAAAC,OACA58E,EAAA,GACAymF,EAAA3oD,EAAA99B,EAAAge,GACA2+D,EAAAtjF,KAAAotF,EAAA,IACA7J,EAAAvjF,KAAAotF,EAAA,GAIA,KAFA7hF,GAAAiiF,GAAAC,GAAAnK,GAAA,IAAAkK,GAAAC,GAAAlK,MACA58E,IACAA,EAAA/I,GACAwvF,EAAA3oD,EAAA99B,EAAAge,GACA2+D,EAAA10D,QACA00D,EAAAtjF,KAAAotF,EAAA,IACA7J,EAAA30D,QACA20D,EAAAvjF,KAAAotF,EAAA,IACAM,GAAAniF,EAAA+3E,EAAAC,EAEA,OAAAh4E,GAAA4wD,KAAA,IAEA,QAAA0xB,IAAAppD,EAAA6nD,GACA,GAAA3nE,GAAA8f,EAAApmC,OAAA,CACA,IAAAsmB,EAEA,IADA,GAAAkT,GAAA9X,EAAA+jB,EAAAW,EAAA,MAAA7C,EAAA6C,EAAA,MAAAl4B,EAAAk4B,EAAA9f,GAAA,GAAAmf,EAAAt6B,EAAAi7B,EAAA9f,GAAA,GAAAid,EAAAj7B,GAAA,IACAA,GAAAge,GACAkT,EAAA4M,EAAA99B,GACAoZ,EAAApZ,EAAAge,EACAkT,EAAA,GAAAy0D,EAAAz0D,EAAA,MAAAy0D,IAAAxoD,EAAA/jB,EAAAxT,GACAsrB,EAAA,GAAAy0D,EAAAz0D,EAAA,MAAAy0D,IAAA1qD,EAAA7hB,EAAAvW,EAGA,OAAA+jF,IAAA9oD,GAEA,QAAA+oD,IAAA32D,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,QAAA42D,IAAAniF,EAAApL,EAAAiG,GACAmF,EAAAvL,KAAA,IAAAwtF,GAAAM,GAAA3tF,GAAA,IAAAqtF,GAAAM,GAAA1nF,GAAA,IAAAonF,GAAAO,GAAA5tF,GAAA,IAAAqtF,GAAAO,GAAA3nF,GAAA,IAAAonF,GAAAC,GAAAttF,GAAA,IAAAqtF,GAAAC,GAAArnF,IAEA,QAAA4nF,IAAAnmB,EAAAC,GACA,OAAAA,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IAEA,QAAAomB,IAAAxpD,GAEA,IADA,GAAA99B,GAAA,EAAAqqB,EAAAyT,EAAApmC,OAAA,EAAAT,KAAAiqE,EAAApjC,EAAA,GAAAqjC,EAAArjC,EAAA,GAAAnnC,EAAAM,EAAA,GAAAowF,GAAAnmB,EAAAC,KACAnhE,EAAAqqB,GACApzB,EAAA+I,IAAArJ,KAAA0wF,GAAAnmB,EAAAC,IAAArjC,EAAA99B,EAAA,OAGA,OADA/I,GAAA+I,GAAArJ,EACAM,EAEA,QAAAswF,IAAAzpD,GAEA,IADA,GAAAnnC,GAAAu5B,EAAAC,EAAA3qB,EAAAghF,KAAAvvF,EAAAqwF,GAAAxpD,GAAA99B,GAAA,EAAAqqB,EAAAyT,EAAApmC,OAAA,IACAsI,EAAAqqB,GACA1zB,EAAA0wF,GAAAvpD,EAAA99B,GAAA89B,EAAA99B,EAAA,IACAqsB,GAAA11B,GAAAyoE,GACAnoE,EAAA+I,GAAA/I,EAAA+I,EAAA,MAEAkwB,EAAAj5B,EAAA+I,GAAArJ,EACAw5B,EAAAl5B,EAAA+I,EAAA,GAAArJ,EACA6O,EAAA0qB,IAAAC,IACA3qB,EAAA,IACAA,EAAA,EAAA7O,EAAAN,KAAAy8B,KAAAttB,GACAvO,EAAA+I,GAAAwF,EAAA0qB,EACAj5B,EAAA+I,EAAA,GAAAwF,EAAA2qB,GAKA,KADAnwB,GAAA,IACAA,GAAAqqB,GACA7kB,GAAAs4B,EAAAznC,KAAAiyB,IAAA+B,EAAArqB,EAAA,OAAA89B,EAAAznC,KAAA+D,IAAA,EAAA4F,EAAA,cAAA/I,EAAA+I,GAAA/I,EAAA+I,KACAwmF,EAAAntF,MAAAmM,GAAA,EAAAvO,EAAA+I,GAAAwF,GAAA,GAEA,OAAAghF,GAEA,QAAAgB,IAAA1pD,GACA,MAAAA,GAAApmC,OAAA,EAAAkuF,GAAA9nD,KAAA,GAAAsoD,GAAAtoD,EAAAypD,GAAAzpD,IAQA,QAAA2pD,IAAA3pD,GAEA,IADA,GAAAqwB,GAAAruB,EAAA5P,EAAAlwB,GAAA,EAAAge,EAAA8f,EAAApmC,SACAsI,EAAAge,GACAmwC,EAAArwB,EAAA99B,GACA8/B,EAAAquB,EAAA,GACAj+B,EAAAi+B,EAAA,GAAAqB,GACArB,EAAA,GAAAruB,EAAAzpC,KAAAmkC,IAAAtK,GACAi+B,EAAA,GAAAruB,EAAAzpC,KAAAoN,IAAAysB,EAEA,OAAA4N,GAEA,QAAA4pD,IAAA7b,GAEA,QAAAhtC,GAAAvkC,GAMA,QAAA2mE,KACAJ,EAAAxnE,KAAA,IAAAgkC,EAAAwuC,EAAA8b,GAAAhC,GAAAhuB,EAAAiwB,EAAA/b,EAAAgc,EAAAn7D,WAAAi5D,GAAA,KAEA,IARA,GAAAhvF,GAIO6C,EAAAiG,EAJPohE,KAAAgnB,KAAAF,KAAA3nF,GAAA,EAAAge,EAAA1jB,EAAA5C,OAAAowF,EAAA71B,GAAA90B,GAAA4qD,EAAA91B,GAAAh3B,GAAA+sD,EAAA7qD,IAAAvsB,EAAA,WACA,MAAApX,IACOy4D,GAAArhD,GAAAq3E,EAAAhtD,IAAAnqB,EAAA,WACP,MAAArR,IACOwyD,GAAAnhD,KAIP9Q,EAAAge,GACAkf,EAAAl+B,KAAAlE,KAAAnE,EAAA2D,EAAA0F,OACA6nF,EAAAxuF,MAAAG,GAAAsuF,EAAA9oF,KAAAlE,KAAAnE,EAAAqJ,GAAAP,GAAAsoF,EAAA/oF,KAAAlE,KAAAnE,EAAAqJ,KACA2nF,EAAAtuF,OAAA2uF,EAAAhpF,KAAAlE,KAAAnE,EAAAqJ,IAAAioF,EAAAjpF,KAAAlE,KAAAnE,EAAAqJ,MACS6nF,EAAAnwF,SACTupE,IACA4mB,KACAF,KAIA,OADAE,GAAAnwF,QAAAupE,IACAJ,EAAAnpE,OAAAmpE,EAAArL,KAAA,SArBA,GAAAr4B,GAAAsyC,GAAA7+D,EAAA6+D,GAAAx0C,EAAA,EAAAnqB,EAAA4+D,GAAAxyC,EAAAyjC,GAAAtjC,EAAAuoD,GAAAC,EAAAxoD,EAAA9+B,IAAAqpF,EAAAvqD,EAAAs6B,EAAA,IAAAguB,EAAA,EAsEA,OA/CA9mD,GAAArlC,EAAA,SAAA6sD,GACA,MAAArgD,WAAAtO,QACAylC,EAAAvsB,EAAAy1C,EACAxnB,GAFAjuB,GAIAiuB,EAAA1B,GAAA,SAAAkpB,GACA,MAAArgD,WAAAtO,QACAylC,EAAAkpB,EACAxnB,GAFA1B,GAIA0B,EAAAjuB,GAAA,SAAAy1C,GACA,MAAArgD,WAAAtO,QACAkZ,EAAAy1C,EACAxnB,GAFAjuB,GAIAiuB,EAAAp/B,EAAA,SAAA4mD,GACA,MAAArgD,WAAAtO,QACAujC,EAAAnqB,EAAAu1C,EACAxnB,GAFA/tB,GAIA+tB,EAAA5D,GAAA,SAAAorB,GACA,MAAArgD,WAAAtO,QACAujC,EAAAorB,EACAxnB,GAFA5D,GAIA4D,EAAA/tB,GAAA,SAAAu1C,GACA,MAAArgD,WAAAtO,QACAoZ,EAAAu1C,EACAxnB,GAFA/tB,GAIA+tB,EAAA3B,QAAA,SAAAmpB,GACA,MAAArgD,WAAAtO,QACAwlC,EAAAmpB,EACAxnB,GAFA3B,GAIA2B,EAAAxB,YAAA,SAAAgpB,GACA,MAAArgD,WAAAtO,QACAmuF,EAAA,kBAAAx/B,GAAAhpB,EAAAgpB,GAAoEhpB,EAAAyoD,GAAAnyD,IAAA0yB,IAAAu/B,IAAArnF,IACpEqpF,EAAAvqD,EAAA3Q,SAAA2Q,EACAs6B,EAAAt6B,EAAA3jC,OAAA,QACAmlC,GAJAgnD,GAMAhnD,EAAA8mD,QAAA,SAAAt/B,GACA,MAAArgD,WAAAtO,QACAiuF,EAAAt/B,EACAxnB,GAFA8mD,GAIA9mD,EAqEA,QAAAqpD,IAAAvxF,GACA,MAAAA,GAAAo4C,OAgCA,QAAAo5C,IAAAxxF,GACA,OAAAA,EAAA6C,EAAA7C,EAAA8I,GASA,QAAA2oF,IAAAvc,GACA,kBACA,GAAAl1E,GAAAk1E,EAAA3rE,MAAApF,KAAAkL,WAAA85B,EAAAnpC,EAAA,GAAAu5B,EAAAv5B,EAAA,GAAA64D,EACA,QAAA1vB,EAAAzpC,KAAAmkC,IAAAtK,GAAA4P,EAAAzpC,KAAAoN,IAAAysB,KAoBA,QAAAm4D,MACA,UAEA,QAAAC,MACA,eAEA,QAAAC,IAAA1tF,GACA,GAAAilC,GAAAzpC,KAAAy8B,KAAAj4B,EAAAw0D,GACA,aAAAvvB,EAAA,IAAAA,EAAA,IAAAA,EAAA,aAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,YAAAA,EAAA,IA+CA,QAAA0oD,IAAA9+B,GACA,kBACA,GAAA++B,GAAAC,EAAAC,GACAF,EAAA3tF,KAAA4uD,MAAAi/B,EAAAF,EAAAC,EAAAD,EAAAE,WACAA,EAAA1qE,MAAAkT,EAAA,KACAw3D,EAAA1qE,MAAA7E,EAAA9G,MACAm2E,EAAAx6C,YAAAw6C,GAAAC,SAAgD5tF,MAAA4uD,GAChD++B,EAAAE,QAAA,GACAA,EAAAjwD,OAAAiwD,EAAAjwD,MAAAkwD,UAAA5pF,KAAAlE,UAAA++C,SAAA8uC,EAAAnxF,SAIA,QAAAqxF,IAAAzuC,EAAAsP,EAAAltD,GAIA,MAHAgsD,IAAApO,EAAA0uC,IACA1uC,EAAAkR,UAAA5B,EACAtP,EAAA59C,KACA49C,EAoEA,QAAA2uC,IAAA3uC,EAAAxrB,EAAAn6B,EAAAu0F,GACA,GAAAxsF,GAAA49C,EAAA59C,GAAAktD,EAAAtP,EAAAkR,SACA,OAAAY,GAAA9R,EAAA,kBAAA3lD,GAAA,SAAA+R,EAAAxG,EAAAqqB,GACA7jB,EAAAkjD,GAAAltD,GAAAwsF,MAAAv6D,IAAAG,EAAAo6D,EAAAv0F,EAAAuK,KAAAwH,IAAAqzC,SAAA75C,EAAAqqB,OACK51B,EAAAu0F,EAAAv0F,GAAA,SAAA+R,GACLA,EAAAkjD,GAAAltD,GAAAwsF,MAAAv6D,IAAAG,EAAAn6B,MAqFA,QAAAw0F,IAAA94D,GAEA,MADA,OAAAA,MAAA,IACA,WACAr1B,KAAA2tC,YAAAtY,GA6EA,QAAA+4D,IAAAt6D,GACA,aAAAA,EAAA,iCAAAA,EAAA,KAEA,QAAAu6D,IAAA3iF,EAAAxG,EAAA0pD,EAAAltD,EAAAS,GAKA,QAAAmsF,GAAAC,GACA,GAAA11B,GAAAjyD,EAAAiyD,KAEA,OADA11C,GAAA7E,EAAAu6C,EAAAxqD,EACAwqD,GAAA01B,EAAAzpF,EAAAypF,EAAA11B,QACA11C,EAAAkT,EAAAvxB,GAEA,QAAAA,GAAAypF,GACA,GAAAX,GAAAD,EAAAE,SAAAF,EAAAC,EACAC,KACAA,EAAA1qE,MAAAkT,EAAA,KACAw3D,EAAA1qE,MAAA7E,EAAA9G,MACAm2E,EAAAx6C,YACAw6C,GAAAC,GACAC,EAAAjwD,OAAAiwD,EAAAjwD,MAAAkwD,UAAA5pF,KAAAwH,IAAAqzC,SAAA8uC,EAAAnxF,OAEA,QAAA8xF,KAAAb,GACA,IAAAa,EAAA9sF,EAAA,CACA,GAAA+sF,GAAAd,EAAAa,EACAC,GAAAtrE,MAAAkT,EAAA,KACAo4D,EAAAtrE,MAAA7E,EAAA9G,MACAm2E,EAAAx6C,YACAw6C,GAAAa,GAGArrE,EAAAkT,EAAAj3B,EACAw5D,GAAA,WAKA,MAJAz1C,GAAAkT,GAAAj3B,EAAAmvF,GAAA,KACAprE,EAAAkT,EAAA,KACAlT,EAAA7E,EAAA9G,KAEA,GACO,EAAAnJ,GACPs/E,EAAAE,OAAAnsF,EACAkF,EAAAg3B,OAAAh3B,EAAAg3B,MAAA94B,MAAAZ,KAAAwH,IAAAqzC,SAAA75C,GACAwpF,KACA9nF,EAAAsnF,MAAA1qF,QAAA,SAAAC,EAAA9J,IACAA,IAAAuK,KAAAwH,IAAAqzC,SAAA75C,KACAwpF,EAAAnwF,KAAA5E,KAGAmlD,EAAAl4C,EAAAk4C,KACApmC,EAAA9R,EAAA8R,SAEA,QAAAtZ,GAAAmvF,GAEA,IADA,GAAAjwE,GAAAiwE,EAAA71E,EAAAuD,EAAA6iC,EAAAxgC,GAAA4E,EAAAwrE,EAAA9xF,OACAsmB,EAAA,GACAwrE,IAAAxrE,GAAAhf,KAAAwH,EAAAuQ,EAEA,IAAAqC,GAAA,EAGA,MAFA1X,GAAAg3B,OAAAh3B,EAAAg3B,MAAAkF,IAAA5+B,KAAAwH,IAAAqzC,SAAA75C,KACAyoF,EAAAx6C,YAAAw6C,GAAAjsF,SAA0CgK,GAAAkjD,GAC1C,EAvDA,GAGKvgD,GAAA8U,EAAAzK,EAAAomC,EAAA4vC,EAHLf,EAAAjiF,EAAAkjD,KAAAljD,EAAAkjD,IACAi/B,OAAA,EACA16C,MAAA,IACKvsC,EAAA+mF,EAAAjsF,EAuDLkF,KACAyH,EAAAlM,EAAAkM,KACA8U,EAAAy1C,GAAA01B,EAAA,EAAAjgF,GACAzH,EAAA+mF,EAAAjsF,IACAwsF,MAAA,GAAA5iC,GACAj9C,OACA8U,QACA01C,MAAA12D,EAAA02D,MACAngD,SAAAvW,EAAAuW,SACAomC,KAAA38C,EAAA28C,KACApiD,MAAAwI,GAEA/C,EAAA,OACAwrF,EAAAx6C,OAoGA,QAAAw7C,IAAArqF,EAAA+9B,EAAAvsB,GACAxR,EAAAC,KAAA,qBAAA1I,GACA,GAAAiuE,GAAAznC,EAAAxmC,EACA,qBAAA29D,SAAAsQ,KAAAh0D,EAAAja,IAAA,QAGA,QAAA+yF,IAAAtqF,EAAA67B,EAAAnqB,GACA1R,EAAAC,KAAA,qBAAA1I,GACA,GAAAiuE,GAAA3pC,EAAAtkC,EACA,uBAAA29D,SAAAsQ,KAAA9zD,EAAAna,IAAA,MAySA,QAAAgzF,IAAAxrE,GACA,MAAAA,GAAAyrE,cA8CA,QAAAC,IAAAhkF,EAAAikF,EAAA5yF,GACA,QAAA6I,GAAAvG,GACA,MAAAqM,GAAArM,GAUA,QAAAuwF,GAAAr8E,EAAAugC,GACA,GAAAo0C,GAAA30E,EAAA,GAAAA,EAAA,GAAAvP,EAAAkkF,EAAAp0C,EAAAjuC,EAAArB,GAAA8iF,OAAAuI,GAAA7rF,EACA,OAAA6B,IAAAgqF,GAAAtyF,QAAAoyF,EAAA1yF,KAAAgrF,GAAA10E,EAAAnI,IAAA,SAAA5O,GACA,MAAAA,GAAA,UACOs3C,GAAA,IAAAjuC,EAAA8pF,EAAA3rF,EAAA6rF,GAAAhqF,EAAA,GAAAgqF,GAAAhqF,GAAA7B,EAAA6B,EAAA,EAAAA,IAAAiqF,GAAA7H,GAAA10E,EAAAugC,GAAA,IAgCP,MA5CAluC,GAAA2gE,OAAA,SAAAlnE,GACA,MAAA0wF,IAAArkF,EAAA66D,OAAAlnE,KAEAuG,EAAAJ,OAAA,SAAAnG,GACA,MAAAwM,WAAAtO,QACAmO,EAAAlG,OAAAnG,GACAuG,GAFA8F,EAAAlG,SAAA4F,IAAA2kF,KAUAnqF,EAAAqhF,KAAA,SAAA76E,EAAA4jF,GAGA,QAAAC,GAAAjsE,GACA,OAAAG,MAAAH,KAAA5X,EAAApD,MAAAgb,EAAA+rE,IAAA/rE,EAAA,GAAAgsE,GAAAzyF,OAHA,GAAAiI,GAAAI,EAAAJ,SAAA+N,EAAAqzE,GAAAphF,GAAAunD,EAAA,MAAA3gD,EAAAwjF,EAAAr8E,EAAA,oBAAAnH,IAAAwjF,EAAAr8E,EAAAnH,EAKA,OAJA2gD,KAAA3gD,EAAA2gD,EAAA,GAAAijC,EAAAjjC,EAAA,IAIAnnD,EAAAJ,OAAAwhF,GAAAxhF,EAAAwqF,EAAA,GACA7zF,MAAA,SAAA6nB,GACA,KAAAisE,EAAAjsE,EAAA5X,EAAAjQ,MAAA6nB,OAAA+rE,GAAA/rE,EAAA,EACA,OAAAA,IAEA7e,KAAA,SAAA6e,GACA,KAAAisE,EAAAjsE,EAAA5X,EAAAjH,KAAA6e,OAAA+rE,IAAA/rE,EAAA,EACA,OAAAA,KAEO5X,KAEPxG,EAAAE,MAAA,SAAAsG,EAAA4jF,GACA,GAAAz8E,GAAAqzE,GAAAhhF,EAAAJ,UAAAunD,EAAA,MAAA3gD,EAAAwjF,EAAAr8E,EAAA,oBAAAnH,GAAAwjF,EAAAr8E,EAAAnH,MAAApD,SACAA,MAAAoD,GACO4jF,EAEP,OADAjjC,KAAA3gD,EAAA2gD,EAAA,GAAAijC,EAAAjjC,EAAA,IACA3gD,EAAApD,MAAAuK,EAAA,GAAAw8E,IAAAx8E,EAAA,MAAAy8E,EAAA,IAAAA,IAEApqF,EAAAY,WAAA,WACA,MAAAzJ,IAEA6I,EAAAO,KAAA,WACA,MAAAupF,IAAAhkF,EAAAvF,OAAAwpF,EAAA5yF,IAEAirF,GAAApiF,EAAA8F,GAEA,QAAAqkF,IAAA9wE,GACA,UAAA7iB,MAAA6iB,GA0DA,QAAAixE,IAAA/3B,GACA,MAAA12D,MAAApF,MAAA87D,EAAAmB,cAKA,QAAA62B,IAAAh4B,GACA,GAAAnvD,GAAAonF,GAAAC,aAEA,OADArnF,GAAAsnF,WAAAF,GAAAG,MACAvnF,EAAAwnF,yBAAAr4B,EAAAmB,cA10SA,GAAA90D,KACAmI,QAAA,UAEA8jF,MAAAroF,MAAAwqD,GAAA,SAAA89B,GACA,MAAAD,IAAA5rF,KAAA6rF,IAEAN,GAAAzvF,KAAA2R,QAOA,IAAA89E,GACA,IACAx9B,GAAAw9B,GAAAnlC,gBAAA0lC,YAAA,GAAAC,SACK,MAAAh0E,GACLg2C,GAAA,SAAA89B,GAEA,IADA,GAAA7qF,GAAA6qF,EAAAnzF,OAAA8pE,EAAA,GAAA9oB,OAAA14C,GACAA,KAAAwhE,EAAAxhE,GAAA6qF,EAAA7qF,EACA,OAAAwhE,IAOA,GAHAjrE,KAAAs9D,MAAAt9D,KAAAs9D,IAAA,WACA,UAAAt9D,QAEAg0F,GACA,IACAA,GAAA5yF,cAAA,OAAA8E,MAAAsuD,YAAA,gBACK,MAAA5uC,GACL,GAAA6uE,IAAAlwF,KAAAmwF,QAAA5tF,UAAA6tF,GAAAF,GAAAtpC,aAAAypC,GAAAH,GAAAzhC,eAAA6hC,GAAAtwF,KAAAuwF,oBAAAhuF,UAAAiuF,GAAAF,GAAArgC,WACAigC,IAAAtpC,aAAA,SAAA9yB,EAAAn6B,GACAy2F,GAAAlsF,KAAAlE,KAAA8zB,EAAAn6B,EAAA,KAEAu2F,GAAAzhC,eAAA,SAAAJ,EAAAC,EAAA30D,GACA02F,GAAAnsF,KAAAlE,KAAAquD,EAAAC,EAAA30D,EAAA,KAEA22F,GAAArgC,YAAA,SAAAn8B,EAAAn6B,EAAAk2D,GACA2gC,GAAAtsF,KAAAlE,KAAA8zB,EAAAn6B,EAAA,GAAAk2D,IAIAhsD,GAAA4sF,UAAAhmC,EAIA5mD,GAAA6sF,WAAA,SAAAt7D,EAAAC,GACA,MAAAA,GAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAA5d,KAEA3T,GAAA2pB,IAAA,SAAAk5C,EAAAlkE,GACA,GAAA4yB,GAAAC,EAAAnwB,GAAA,EAAAge,EAAAwjD,EAAA9pE,MACA,QAAAsO,UAAAtO,OAAA,CACA,OAAAsI,EAAAge,GAAA,UAAAmS,EAAAqxC,EAAAxhE,KAAAmwB,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAnwB,EAAAge,GAAA,OAAAmS,EAAAqxC,EAAAxhE,KAAAkwB,EAAAC,IAAAD,EAAAC,OACK,CACL,OAAAnwB,EAAAge,GAAA,UAAAmS,EAAA7yB,EAAA0B,KAAAwiE,IAAAxhE,QAAAmwB,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAnwB,EAAAge,GAAA,OAAAmS,EAAA7yB,EAAA0B,KAAAwiE,IAAAxhE,QAAAkwB,EAAAC,IAAAD,EAAAC,GAEA,MAAAD,IAEAvxB,GAAAvE,IAAA,SAAAonE,EAAAlkE,GACA,GAAA4yB,GAAAC,EAAAnwB,GAAA,EAAAge,EAAAwjD,EAAA9pE,MACA,QAAAsO,UAAAtO,OAAA,CACA,OAAAsI,EAAAge,GAAA,UAAAmS,EAAAqxC,EAAAxhE,KAAAmwB,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAnwB,EAAAge,GAAA,OAAAmS,EAAAqxC,EAAAxhE,KAAAmwB,EAAAD,MAAAC,OACK,CACL,OAAAnwB,EAAAge,GAAA,UAAAmS,EAAA7yB,EAAA0B,KAAAwiE,IAAAxhE,QAAAmwB,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAnwB,EAAAge,GAAA,OAAAmS,EAAA7yB,EAAA0B,KAAAwiE,IAAAxhE,QAAAmwB,EAAAD,MAAAC,GAEA,MAAAD,IAEAvxB,GAAA+O,OAAA,SAAA8zD,EAAAlkE,GACA,GAAA4yB,GAAAC,EAAAgB,EAAAnxB,GAAA,EAAAge,EAAAwjD,EAAA9pE,MACA,QAAAsO,UAAAtO,OAAA,CACA,OAAAsI,EAAAge,GAAA,UAAAmS,EAAAqxC,EAAAxhE,KAAAmwB,KAAA,CACAD,EAAAiB,EAAAhB,CACA,OAEA,OAAAnwB,EAAAge,GAAA,OAAAmS,EAAAqxC,EAAAxhE,MACAkwB,EAAAC,IAAAD,EAAAC,GACAgB,EAAAhB,IAAAgB,EAAAhB,QAEK,CACL,OAAAnwB,EAAAge,GAAA,UAAAmS,EAAA7yB,EAAA0B,KAAAwiE,IAAAxhE,QAAAmwB,KAAA,CACAD,EAAAiB,EAAAhB,CACA,OAEA,OAAAnwB,EAAAge,GAAA,OAAAmS,EAAA7yB,EAAA0B,KAAAwiE,IAAAxhE,SACAkwB,EAAAC,IAAAD,EAAAC,GACAgB,EAAAhB,IAAAgB,EAAAhB,IAGA,OAAAD,EAAAiB,IAQAxyB,GAAA8sF,IAAA,SAAAjqB,EAAAlkE,GACA,GAAA4yB,GAAA1qB,EAAA,EAAAwY,EAAAwjD,EAAA9pE,OAAAsI,GAAA,CACA,QAAAgG,UAAAtO,OACA,OAAAsI,EAAAge,GAAAynC,EAAAv1B,GAAAsxC,EAAAxhE,MAAAwF,GAAA0qB,OAEA,QAAAlwB,EAAAge,GAAAynC,EAAAv1B,GAAA5yB,EAAA0B,KAAAwiE,IAAAxhE,SAAAwF,GAAA0qB,EAEA,OAAA1qB,IAEA7G,GAAA+sF,KAAA,SAAAlqB,EAAAlkE,GACA,GAAA4yB,GAAA1qB,EAAA,EAAAwY,EAAAwjD,EAAA9pE,OAAAsI,GAAA,EAAAqqB,EAAArM,CACA,QAAAhY,UAAAtO,OACA,OAAAsI,EAAAge,GAAAynC,EAAAv1B,EAAAs1B,EAAAgc,EAAAxhE,KAAAwF,GAAA0qB,IAAsE7F,MAEtE,QAAArqB,EAAAge,GAAAynC,EAAAv1B,EAAAs1B,EAAAloD,EAAA0B,KAAAwiE,IAAAxhE,QAAAwF,GAAA0qB,IAAwF7F,CAExF,IAAAA,EAAA,MAAA7kB,GAAA6kB,GAEA1rB,GAAAklF,SAAA,SAAAj3D,EAAAsE,GACA,GAAAsmC,IAAA5qC,EAAAl1B,OAAA,GAAAw5B,EAAA,EAAApwB,EAAAzK,KAAAC,MAAAkhE,GAAA/2D,GAAAmsB,EAAA9rB,EAAA,GAAAiW,EAAAygD,EAAA12D,CACA,OAAAiW,GAAAtW,EAAAsW,GAAA6V,EAAA9rB,GAAAL,MAEA9B,GAAAgtF,OAAA,SAAAnqB,EAAAlkE,GACA,GAAA4yB,GAAA07D,KAAA5tE,EAAAwjD,EAAA9pE,OAAAsI,GAAA,CACA,QAAAgG,UAAAtO,OACA,OAAAsI,EAAAge,GAAAynC,EAAAv1B,EAAAs1B,EAAAgc,EAAAxhE,MAAA4rF,EAAAvyF,KAAA62B,OAEA,QAAAlwB,EAAAge,GAAAynC,EAAAv1B,EAAAs1B,EAAAloD,EAAA0B,KAAAwiE,IAAAxhE,SAAA4rF,EAAAvyF,KAAA62B,EAEA,IAAA07D,EAAAl0F,OAAA,MAAAiH,IAAAklF,SAAA+H,EAAA37D,KAAAs1B,GAAA,KAEA5mD,GAAAktF,SAAA,SAAArqB,EAAAlkE,GACA,GAAA4yB,GAAAv5B,EAAAqnB,EAAAwjD,EAAA9pE,OAAAT,EAAA,EAAAuO,EAAA,EAAAxF,GAAA,EAAAqqB,EAAA,CACA,QAAArkB,UAAAtO,OACA,OAAAsI,EAAAge,GACAynC,EAAAv1B,EAAAs1B,EAAAgc,EAAAxhE,OACArJ,EAAAu5B,EAAAj5B,EACAA,GAAAN,IAAA0zB,EACA7kB,GAAA7O,GAAAu5B,EAAAj5B,QAIA,QAAA+I,EAAAge,GACAynC,EAAAv1B,EAAAs1B,EAAAloD,EAAA0B,KAAAwiE,IAAAxhE,UACArJ,EAAAu5B,EAAAj5B,EACAA,GAAAN,IAAA0zB,EACA7kB,GAAA7O,GAAAu5B,EAAAj5B,GAIA,IAAAozB,EAAA,QAAA7kB,IAAA6kB,EAAA,IAEA1rB,GAAAmtF,UAAA,WACA,GAAArrF,GAAA9B,GAAAktF,SAAA3rF,MAAApF,KAAAkL,UACA,OAAAvF,GAAApK,KAAAy8B,KAAAryB,KAwBA,IAAAsrF,IAAArmC,EAAAH,EACA5mD,IAAAqtF,WAAAD,GAAA3lF,KACAzH,GAAA8iF,OAAA9iF,GAAAstF,YAAAF,GAAA7lF,MACAvH,GAAAutF,SAAA,SAAA5uF,GACA,MAAAooD,GAAA,IAAApoD,EAAA5F,OAAA,SAAAf,EAAA6C,GACA,MAAA+rD,GAAAjoD,EAAA3G,GAAA6C,IACK8D,IAELqB,GAAAwtF,QAAA,SAAA3qB,EAAAjV,EAAA80B,IACApqF,EAAA+O,UAAAtO,QAAA,IACA2pF,EAAA7f,EAAA9pE,OACAT,EAAA,IAAAs1D,EAAA,GAGA,KADA,GAAAnzC,GAAApZ,EAAA/I,EAAAoqF,EAAA90B,EACAt1D,GACA+I,EAAA3J,KAAAumC,SAAA3lC,IAAA,EACAmiB,EAAAooD,EAAAvqE,EAAAs1D,GAAAiV,EAAAvqE,EAAAs1D,GAAAiV,EAAAxhE,EAAAusD,GAAAiV,EAAAxhE,EAAAusD,GAAAnzC,CAEA,OAAAooD,IAEA7iE,GAAAytF,QAAA,SAAA5qB,EAAA6qB,GAEA,IADA,GAAArsF,GAAAqsF,EAAA30F,OAAA40F,EAAA,GAAA5zC,OAAA14C,GACAA,KAAAssF,EAAAtsF,GAAAwhE,EAAA6qB,EAAArsF,GACA,OAAAssF,IAEA3tF,GAAA4tF,MAAA,SAAA/qB,GAEA,IADA,GAAAN,GAAAlhE,EAAA,EAAAge,EAAAwjD,EAAA9pE,OAAA,EAAAypE,EAAAK,EAAA,GAAA+qB,EAAA,GAAA7zC,OAAA16B,EAAA,IAAAA,GACAhe,EAAAge,GAAAuuE,EAAAvsF,IAAAkhE,EAAAC,IAAAK,IAAAxhE,GACA,OAAAusF,IAEA5tF,GAAA6tF,UAAA,SAAAC,GACA,KAAAzuE,EAAAyuE,EAAA/0F,QAAA,QACA,QAAAsI,IAAA,EAAA/I,EAAA0H,GAAA2pB,IAAAmkE,EAAA1mC,GAAAymC,EAAA,GAAA9zC,OAAAzhD,KAAsF+I,EAAA/I,GACtF,OAAA+mB,GAAAqM,GAAA,EAAAqiE,EAAAF,EAAAxsF,GAAA,GAAA04C,OAAA16B,KAA4DqM,EAAArM,GAC5D0uE,EAAAriE,GAAAoiE,EAAApiE,GAAArqB;AAGA,MAAAwsF,IAKA7tF,GAAAguF,IAAA,WACA,MAAAhuF,IAAA6tF,UAAAxmF,YAEArH,GAAAN,KAAA,SAAAkH,GACA,GAAAlH,KACA,QAAAE,KAAAgH,GAAAlH,EAAAhF,KAAAkF,EACA,OAAAF,IAEAM,GAAAiuB,OAAA,SAAArnB,GACA,GAAAqnB,KACA,QAAAruB,KAAAgH,GAAAqnB,EAAAvzB,KAAAkM,EAAAhH,GACA,OAAAquB,IAEAjuB,GAAAiuF,QAAA,SAAArnF,GACA,GAAAqnF,KACA,QAAAruF,KAAAgH,GAAAqnF,EAAAvzF,MACAkF,MACA9J,MAAA8Q,EAAAhH,IAEA,OAAAquF,IAEAjuF,GAAAqxB,MAAA,SAAA68D,GAEA,IADA,GAAA51F,GAAA61F,EAAAtrB,EAAAxjD,EAAA6uE,EAAAn1F,OAAAsI,GAAA,EAAAqqB,EAAA,IACArqB,EAAAge,GAAAqM,GAAAwiE,EAAA7sF,GAAAtI,MAEA,KADAo1F,EAAA,GAAAp0C,OAAAruB,KACArM,GAAA,GAGA,IAFAwjD,EAAAqrB,EAAA7uE,GACA/mB,EAAAuqE,EAAA9pE,SACAT,GAAA,GACA61F,IAAAziE,GAAAm3C,EAAAvqE,EAGA,OAAA61F,GAEA,IAAAzgE,IAAAh2B,KAAAg2B,GACA1tB,IAAAwE,MAAA,SAAAvD,EAAAC,EAAA4nC,GAQA,GAPAzhC,UAAAtO,OAAA,IACA+vC,EAAA,EACAzhC,UAAAtO,OAAA,IACAmI,EAAAD,EACAA,EAAA,KAGAC,EAAAD,GAAA6nC,IAAA/gC,IAAA,SAAA5P,OAAA,iBACA,IAAAuzB,GAAAlnB,KAAAmnB,EAAA07B,EAAA35B,GAAAob,IAAAznC,GAAA,CAEA,IADAJ,GAAA0qB,EAAAzqB,GAAAyqB,EAAAmd,GAAAnd,EACAmd,EAAA,QAAApd,EAAAzqB,EAAA6nC,IAAAznC,GAAAH,GAAAsD,EAAA9J,KAAAgxB,EAAAC,OAA4E,OAAAD,EAAAzqB,EAAA6nC,IAAAznC,GAAAH,GAAAsD,EAAA9J,KAAAgxB,EAAAC,EAC5E,OAAAnnB,IAeAxE,GAAA4G,IAAA,SAAAjK,EAAAgC,GACA,GAAAiI,GAAA,GAAA6gD,EACA,IAAA9qD,YAAA8qD,GACA9qD,EAAAgD,QAAA,SAAAC,EAAA9J,GACA8Q,EAAAkpB,IAAAlwB,EAAA9J,SAEK,IAAAikD,MAAAq0C,QAAAzxF,GAAA,CACL,GAAAq5B,GAAA30B,GAAA,EAAAge,EAAA1iB,EAAA5D,MACA,QAAAsO,UAAAtO,OAAA,OAAAsI,EAAAge,GAAAzY,EAAAkpB,IAAAzuB,EAAA1E,EAAA0E,QAAwE,QAAAA,EAAAge,GAAAzY,EAAAkpB,IAAAnxB,EAAA0B,KAAA1D,EAAAq5B,EAAAr5B,EAAA0E,MAAA20B,OAExE,QAAAp2B,KAAAjD,GAAAiK,EAAAkpB,IAAAlwB,EAAAjD,EAAAiD,GAEA,OAAAgH,GAKA,IAAAghD,IAAA,YAAAC,GAAA,IACAP,GAAAG,GACA5iB,IAAAkjB,EACA/yB,IAAA,SAAAp1B,GACA,MAAAzD,MAAAurD,EAAAC,EAAA/nD,KAEAkwB,IAAA,SAAAlwB,EAAA9J,GACA,MAAAqG,MAAAurD,EAAAC,EAAA/nD,IAAA9J,GAEAgQ,OAAAkiD,EACAtoD,KAAAuoD,EACAh6B,OAAA,WACA,GAAAA,KACA,QAAAruB,KAAAzD,MAAAurD,EAAAz5B,EAAAvzB,KAAAyB,KAAAurD,EAAA9nD,GACA,OAAAquB,IAEAggE,QAAA,WACA,GAAAA,KACA,QAAAruF,KAAAzD,MAAAurD,EAAAumC,EAAAvzF,MACAkF,IAAAkoD,EAAAloD,GACA9J,MAAAqG,KAAAurD,EAAA9nD,IAEA,OAAAquF,IAEA/xF,KAAAgsD,EACAr6C,MAAAs6C,EACAxoD,QAAA,SAAAhB,GACA,OAAAiB,KAAAzD,MAAAurD,EAAA/oD,EAAA0B,KAAAlE,KAAA2rD,EAAAloD,GAAAzD,KAAAurD,EAAA9nD,OA6BAI,GAAAquF,KAAA,WAEA,QAAAznF,GAAA0nF,EAAAzrB,EAAAwJ,GACA,GAAAA,GAAA3sE,EAAA3G,OAAA,MAAAw1F,KAAAluF,KAAAguF,EAAAxrB,GAAA2rB,EAAA3rB,EAAAvxC,KAAAk9D,GAAA3rB,CAEA,KADA,GAAA4rB,GAAA9xF,EAAA+xF,EAAAzgE,EAAA5sB,GAAA,EAAAge,EAAAwjD,EAAA9pE,OAAA6G,EAAAF,EAAA2sE,KAAAsiB,EAAA,GAAAlnC,KACApmD,EAAAge,IACA4O,EAAA0gE,EAAA35D,IAAAy5D,EAAA7uF,EAAAjD,EAAAkmE,EAAAxhE,MACA4sB,EAAAvzB,KAAAiC,GAEAgyF,EAAA7+D,IAAA2+D,GAAA9xF,GAeA,OAZA2xF,IACA3xF,EAAA2xF,IACAI,EAAA,SAAAD,EAAAxgE,GACAtxB,EAAAmzB,IAAA2+D,EAAA7nF,EAAA0nF,EAAArgE,EAAAo+C,OAGA1vE,KACA+xF,EAAA,SAAAD,EAAAxgE,GACAtxB,EAAA8xF,GAAA7nF,EAAA0nF,EAAArgE,EAAAo+C,KAGAsiB,EAAAhvF,QAAA+uF,GACA/xF,EAEA,QAAAsxF,GAAArnF,EAAAylE,GACA,GAAAA,GAAA3sE,EAAA3G,OAAA,MAAA6N,EACA,IAAAi8D,MAAA+rB,EAAAC,EAAAxiB,IAOA,OANAzlE,GAAAjH,QAAA,SAAAC,EAAAkvF,GACAjsB,EAAAnoE,MACAkF,MACAquB,OAAAggE,EAAAa,EAAAziB,OAGAuiB,EAAA/rB,EAAAvxC,KAAA,SAAAC,EAAAC,GACA,MAAAo9D,GAAAr9D,EAAA3xB,IAAA4xB,EAAA5xB,OACOijE,EApCP,GAAiB2rB,GAAAD,EAAjBF,KAAiB3uF,KAAAmvF,IA4DjB,OAtBAR,GAAAznF,IAAA,SAAAi8D,EAAAyrB,GACA,MAAA1nF,GAAA0nF,EAAAzrB,EAAA,IAEAwrB,EAAAJ,QAAA,SAAAprB,GACA,MAAAorB,GAAArnF,EAAA5G,GAAA4G,IAAAi8D,EAAA,OAEAwrB,EAAAzuF,IAAA,SAAA5H,GAEA,MADA0H,GAAAhF,KAAA1C,GACAq2F,GAEAA,EAAAQ,SAAA,SAAAE,GAEA,MADAF,GAAAnvF,EAAA3G,OAAA,GAAAg2F,EACAV,GAEAA,EAAAG,WAAA,SAAAO,GAEA,MADAP,GAAAO,EACAV,GAEAA,EAAAE,OAAA,SAAA5vF,GAEA,MADA4vF,GAAA5vF,EACA0vF,GAEAA,GAEAruF,GAAA8vB,IAAA,SAAA+yC,GACA,GAAA/yC,GAAA,GAAAs4B,EACA,IAAAya,EAAA,OAAAxhE,GAAA,EAAAge,EAAAwjD,EAAA9pE,OAAgDsI,EAAAge,IAAOhe,EAAAyuB,EAAApV,IAAAmoD,EAAAxhE,GACvD,OAAAyuB,IAKAw3B,EAAAc,GACAvjB,IAAAkjB,EACArtC,IAAA,SAAA9a,GAEA,MADAzD,MAAAurD,EAAAC,EAAA/nD,GAAA,QACAA,GAEAkG,OAAAkiD,EACA/5B,OAAAg6B,EACA/rD,KAAAgsD,EACAr6C,MAAAs6C,EACAxoD,QAAA,SAAAhB,GACA,OAAAiB,KAAAzD,MAAAurD,EAAA/oD,EAAA0B,KAAAlE,KAAA2rD,EAAAloD,OAGAI,GAAAs5B,YAIAt5B,GAAA40D,OAAA,SAAAp1D,EAAA4mD,GAEA,IADA,GAAAmC,GAAAlnD,EAAA,EAAAge,EAAAhY,UAAAtO,SACAsI,EAAAge,GAAA7f,EAAA+oD,EAAAlhD,UAAAhG,IAAAinD,EAAA9oD,EAAA4mD,IAAAmC,GACA,OAAA/oD,GAgBA,IAAAkpD,KAAA,kCAEA1oD,IAAA+oD,SAAA,WAEA,IADA,GAAAA,GAAA,GAAAF,GAAAxnD,GAAA,EAAAge,EAAAhY,UAAAtO,SACAsI,EAAAge,GAAA0pC,EAAA1hD,UAAAhG,IAAAynD,EAAAC,EACA,OAAAA,IAGAF,EAAAnqD,UAAAgR,GAAA,SAAApU,EAAA4tD,GACA,GAAA7nD,GAAA/F,EAAA+c,QAAA,KAAA4X,EAAA,EAKA,IAJA5uB,GAAA,IACA4uB,EAAA30B,EAAAsI,MAAAvC,EAAA,GACA/F,IAAAsI,MAAA,EAAAvC,IAEA/F,EAAA,MAAA+L,WAAAtO,OAAA,EAAAoD,KAAAb,GAAAoU,GAAAugB,GAAA9zB,KAAAb,GAAAoU,GAAAugB,EAAAi5B,EACA,QAAA7hD,UAAAtO,OAAA,CACA,SAAAmwD,EAAA,IAAA5tD,IAAAa,MACAA,KAAAiiE,eAAA9iE,IAAAa,KAAAb,GAAAoU,GAAAugB,EAAA,KAEA,OAAA9zB,QAyBA6D,GAAA+5B,MAAA,KA0BA/5B,GAAAqrD,QAAA,SAAAxkD,GACA,MAAAA,GAAAuvB,QAAA44D,GAAA,QAEA,IAAAA,IAAA,kCACAnlC,MAAsBolC,UAAA,SAAAtyF,EAAA+B,GACtB/B,EAAAsyF,UAAAvwF,GACG,SAAA/B,EAAA+B,GACH,OAAA8pC,KAAA9pC,GAAA/B,EAAA6rC,GAAA9pC,EAAA8pC,IAMAwhB,GAAA,SAAAnjD,EAAAwY,GACA,MAAAA,GAAA6vE,cAAAroF,IACGqjD,GAAA,SAAArjD,EAAAwY,GACH,MAAAA,GAAA8vE,iBAAAtoF,IACGumD,GAAA,SAAA/tC,EAAAxY,GACH,GAAAuoF,GAAA/vE,EAAAgwE,SAAAhwE,EAAAmpC,EAAAnpC,EAAA,mBAIA,QAHA+tC,GAAA,SAAA/tC,EAAAxY,GACA,MAAAuoF,GAAA/uF,KAAAgf,EAAAxY,KAEAwY,EAAAxY,GAEA,mBAAAyoF,UACAtlC,GAAA,SAAAnjD,EAAAwY,GACA,MAAAiwE,QAAAzoF,EAAAwY,GAAA,UAEA6qC,GAAAolC,OACAliC,GAAAkiC,OAAAC,iBAEAvvF,GAAAS,UAAA,WACA,MAAAT,IAAAqC,OAAAupF,GAAAnlC,iBAEA,IAAAqD,IAAA9pD,GAAAS,UAAA/B,YACAorD,IAAAznD,OAAA,SAAAy3B,GACA,GAAA01D,GAAAC,EAAAjiC,EAAA3lD,EAAA6nF,IACA51D,GAAAiwB,EAAAjwB,EACA,QAAApO,IAAA,EAAApzB,EAAA6D,KAAApD,SAAqC2yB,EAAApzB,GAAS,CAC9Co3F,EAAAh1F,KAAA80F,MACAA,EAAA1xE,YAAA0vC,EAAArxD,KAAAuvB,IAAA5N,UACA,QAAAzc,IAAA,EAAAge,EAAAmuC,EAAAz0D,SAAwCsI,EAAAge,IACxCxX,EAAA2lD,EAAAnsD,KACAmuF,EAAA90F,KAAA+0F,EAAA31D,EAAAz5B,KAAAwH,IAAAqzC,SAAA75C,EAAAqqB,IACA+jE,GAAA,YAAA5nF,KAAA4nF,EAAAv0C,SAAArzC,EAAAqzC,WAEAs0C,EAAA90F,KAAA,MAIA,MAAAkvD,GAAA8lC,IAOA5lC,GAAAtkD,UAAA,SAAAs0B,GACA,GAAA01D,GAAA3nF,EAAA6nF,IACA51D,GAAAmwB,EAAAnwB,EACA,QAAApO,IAAA,EAAApzB,EAAA6D,KAAApD,SAAqC2yB,EAAApzB,GACrC,OAAAk1D,GAAArxD,KAAAuvB,GAAArqB,GAAA,EAAAge,EAAAmuC,EAAAz0D,SAAyDsI,EAAAge,IACzDxX,EAAA2lD,EAAAnsD,MACAquF,EAAAh1F,KAAA80F,EAAAphC,GAAAt0B,EAAAz5B,KAAAwH,IAAAqzC,SAAA75C,EAAAqqB,KACA8jE,EAAA1xE,WAAAjW,EAIA,OAAA+hD,GAAA8lC,GAOA,IAAA7iC,IAAA,+BACA8iC,IACAlgF,IAAA,6BACAmgF,MAAA/iC,GACAgjC,MAAA,+BACAC,IAAA,uCACAC,MAAA,gCAEA/vF,IAAA+qD,IACArS,OAAAi3C,GACA3kC,QAAA,SAAA/6B,GACA,GAAA5uB,GAAA4uB,EAAA5X,QAAA,KAAAqgC,EAAAzoB,CAEA,OADA5uB,IAAA,cAAAq3C,EAAAzoB,EAAArsB,MAAA,EAAAvC,MAAA4uB,IAAArsB,MAAAvC,EAAA,IACAsuF,GAAAvxB,eAAA1lB,IACA8R,MAAAmlC,GAAAj3C,GACA+R,MAAAx6B,GACOA,IAGP65B,GAAAppD,KAAA,SAAAuvB,EAAAn6B,GACA,GAAAuR,UAAAtO,OAAA,GACA,mBAAAk3B,GAAA,CACA,GAAApoB,GAAA1L,KAAA0L,MAEA,OADAooB,GAAAjwB,GAAA+qD,GAAAC,QAAA/6B,GACAA,EAAAw6B,MAAA5iD,EAAAmoF,eAAA//D,EAAAu6B,MAAAv6B,EAAAw6B,OAAA5iD,EAAAq6C,aAAAjyB,GAEA,IAAAn6B,IAAAm6B,GAAA9zB,KAAAoG,KAAA4nD,EAAAr0D,EAAAm6B,EAAAn6B,IACA,OAAAqG,MAEA,MAAAA,MAAAoG,KAAA4nD,EAAAl6B,EAAAn6B,KA6BAg0D,GAAA77C,QAAA,SAAAgiB,EAAAn6B,GACA,GAAAuR,UAAAtO,OAAA,GACA,mBAAAk3B,GAAA,CACA,GAAApoB,GAAA1L,KAAA0L,OAAAwX,GAAA4Q,EAAAq7B,EAAAr7B,IAAAl3B,OAAAsI,GAAA,CACA,IAAAvL,EAAA+R,EAAA+jD,WACA,OAAAvqD,EAAAge,GAAA,IAAAvpB,EAAAm6F,SAAAhgE,EAAA5uB,IAAA,aAGA,KADAvL,EAAA+R,EAAAq6C,aAAA,WACA7gD,EAAAge,GAAA,IAAA8rC,EAAAl7B,EAAA5uB,IAAAyqD,KAAAh2D,GAAA,QAEA,UAEA,IAAAA,IAAAm6B,GAAA9zB,KAAAoG,KAAAgpD,EAAAz1D,EAAAm6B,EAAAn6B,IACA,OAAAqG,MAEA,MAAAA,MAAAoG,KAAAgpD,EAAAt7B,EAAAn6B,KAkCAg0D,GAAAhsD,MAAA,SAAAmyB,EAAAn6B,EAAAk2D,GACA,GAAA3sC,GAAAhY,UAAAtO,MACA,IAAAsmB,EAAA,GACA,mBAAA4Q,GAAA,CACA5Q,EAAA,IAAAvpB,EAAA,GACA,KAAAk2D,IAAA/7B,GAAA9zB,KAAAoG,KAAAwpD,EAAAC,EAAA/7B,EAAA+7B,GAAAl2D,GACA,OAAAqG,MAEA,GAAAkjB,EAAA,GACA,GAAAxX,GAAA1L,KAAA0L,MACA,OAAA6+C,GAAA7+C,GAAAqoF,iBAAAroF,EAAA,MAAAsoF,iBAAAlgE,GAEA+7B,EAAA,GAEA,MAAA7vD,MAAAoG,KAAAwpD,EAAA97B,EAAAn6B,EAAAk2D,KAeAlC,GAAAthB,SAAA,SAAAvY,EAAAn6B,GACA,GAAAuR,UAAAtO,OAAA,GACA,mBAAAk3B,GAAA,MAAA9zB,MAAA0L,OAAAooB,EACA,KAAAn6B,IAAAm6B,GAAA9zB,KAAAoG,KAAA+pD,EAAAx2D,EAAAm6B,EAAAn6B,IACA,OAAAqG,MAEA,MAAAA,MAAAoG,KAAA+pD,EAAAr8B,EAAAn6B,KAeAg0D,GAAAxnD,KAAA,SAAAxM,GACA,MAAAuR,WAAAtO,OAAAoD,KAAAoG,KAAA,kBAAAzM,GAAA,WACA,GAAAgM,GAAAhM,EAAAyL,MAAApF,KAAAkL,UACAlL,MAAA2tC,YAAA,MAAAhoC,EAAA,GAAAA,GACK,MAAAhM,EAAA,WACLqG,KAAA2tC,YAAA,IACK,WACL3tC,KAAA2tC,YAAAh0C,IACKqG,KAAA0L,OAAAiiC,aAELggB,GAAA97C,KAAA,SAAAlY,GACA,MAAAuR,WAAAtO,OAAAoD,KAAAoG,KAAA,kBAAAzM,GAAA,WACA,GAAAgM,GAAAhM,EAAAyL,MAAApF,KAAAkL,UACAlL,MAAAi0F,UAAA,MAAAtuF,EAAA,GAAAA,GACK,MAAAhM,EAAA,WACLqG,KAAAi0F,UAAA,IACK,WACLj0F,KAAAi0F,UAAAt6F,IACKqG,KAAA0L,OAAAuoF,WAELtmC,GAAA3jD,OAAA,SAAA8pB,GAEA,MADAA,GAAAy8B,EAAAz8B,GACA9zB,KAAAkG,OAAA,WACA,MAAAlG,MAAAk0F,YAAApgE,EAAA1uB,MAAApF,KAAAkL,eAaAyiD,GAAAnkD,OAAA,SAAAsqB,EAAA2nC,GAGA,MAFA3nC,GAAAy8B,EAAAz8B,GACA2nC,EAAA7N,EAAA6N,GACAz7D,KAAAkG,OAAA,WACA,MAAAlG,MAAAm0F,aAAArgE,EAAA1uB,MAAApF,KAAAkL,WAAAuwD,EAAAr2D,MAAApF,KAAAkL,YAAA,SAGAyiD,GAAAhkD,OAAA,WACA,MAAA3J,MAAAoG,KAAAyqD,IAMAlD,GAAAnuD,KAAA,SAAA7F,EAAA8J,GAWA,QAAAC,GAAA2tD,EAAA+iC,GACA,GAAAlvF,GAAAwG,EAAA2oF,EAAAnxE,EAAAmuC,EAAAz0D,OAAAT,EAAAi4F,EAAAx3F,OAAA2gF,EAAAhiF,KAAAiyB,IAAAtK,EAAA/mB,GAAAm4F,EAAA,GAAA12C,OAAAzhD,GAAAo4F,EAAA,GAAA32C,OAAAzhD,GAAAq4F,EAAA,GAAA52C,OAAA16B,EACA,IAAAzf,EAAA,CACA,GAAA6uF,GAAAmC,EAAA,GAAAnpC,GAAAopC,EAAA,GAAA92C,OAAA16B,EACA,KAAAhe,GAAA,IAAoBA,EAAAge,IACpBxX,EAAA2lD,EAAAnsD,MACAuvF,EAAA/rD,IAAA4pD,EAAA7uF,EAAAS,KAAAwH,IAAAqzC,SAAA75C,IACAsvF,EAAAtvF,GAAAwG,EAEA+oF,EAAA9gE,IAAA2+D,EAAA5mF,GAEAgpF,EAAAxvF,GAAAotF,EAGA,KAAAptF,GAAA,IAAoBA,EAAA/I,IACpBuP,EAAA+oF,EAAA57D,IAAAy5D,EAAA7uF,EAAAS,KAAAkwF,EAAAC,EAAAD,EAAAlvF,QAEWwG,KAAA,IACX4oF,EAAApvF,GAAAwG,EACAA,EAAAqzC,SAAAs1C,GAHAE,EAAArvF,GAAA6rD,EAAAsjC,GAKAI,EAAA9gE,IAAA2+D,GAAA,EAEA,KAAAptF,GAAA,IAAoBA,EAAAge,GACpBhe,IAAAwvF,IAAAD,EAAA57D,IAAA67D,EAAAxvF,OAAA,IACAsvF,EAAAtvF,GAAAmsD,EAAAnsD,QAGO,CACP,IAAAA,GAAA,IAAoBA,EAAAq4E,GACpB7xE,EAAA2lD,EAAAnsD,GACAmvF,EAAAD,EAAAlvF,GACAwG,GACAA,EAAAqzC,SAAAs1C,EACAC,EAAApvF,GAAAwG,GAEA6oF,EAAArvF,GAAA6rD,EAAAsjC,EAGA,MAAcnvF,EAAA/I,IAAM+I,EACpBqvF,EAAArvF,GAAA6rD,EAAAqjC,EAAAlvF,GAEA,MAAcA,EAAAge,IAAMhe,EACpBsvF,EAAAtvF,GAAAmsD,EAAAnsD,GAGAqvF,EAAA1yE,OAAAyyE,EACAC,EAAA5yE,WAAA2yE,EAAA3yE,WAAA6yE,EAAA7yE,WAAA0vC,EAAA1vC,WACApY,EAAAhL,KAAAg2F,GACA1yE,EAAAtjB,KAAA+1F,GACA5qF,EAAAnL,KAAAi2F,GA5DA,GAAAnjC,GAAA3lD,EAAAxG,GAAA,EAAAge,EAAAljB,KAAApD,MACA,KAAAsO,UAAAtO,OAAA,CAEA,IADAjD,EAAA,GAAAikD,OAAA16B,GAAAmuC,EAAArxD,KAAA,IAAApD,UACAsI,EAAAge,IACAxX,EAAA2lD,EAAAnsD,MACAvL,EAAAuL,GAAAwG,EAAAqzC,SAGA,OAAAplD,GAsDA,GAAA4P,GAAA+nD,MAAAzvC,EAAA4rC,MAAA/jD,EAAA+jD,KACA,sBAAA9zD,GACA,OAAAuL,EAAAge,GACAxf,EAAA2tD,EAAArxD,KAAAkF,GAAAvL,EAAAuK,KAAAmtD,IAAA1vC,WAAAo9B,SAAA75C,QAGA,QAAAA,EAAAge,GACAxf,EAAA2tD,EAAArxD,KAAAkF,GAAAvL,EASA,OANAkoB,GAAAtY,MAAA,WACA,MAAAA,IAEAsY,EAAAnY,KAAA,WACA,MAAAA,IAEAmY,GAOA8rC,GAAAjyB,MAAA,SAAA/hC,GACA,MAAAuR,WAAAtO,OAAAoD,KAAAqsC,SAAA,WAAA1yC,GAAAqG,KAAAqsC,SAAA,aAEAshB,GAAAtwD,OAAA,SAAAA,GACA,GAAAg2F,GAAAhiC,EAAA3lD,EAAA6nF,IACA,mBAAAl2F,OAAA2zD,EAAA3zD,GACA,QAAAkyB,GAAA,EAAApzB,EAAA6D,KAAApD,OAAoC2yB,EAAApzB,EAAOozB,IAAA,CAC3CgkE,EAAAh1F,KAAA80F,MACAA,EAAA1xE,YAAA0vC,EAAArxD,KAAAuvB,IAAA5N,UACA,QAAAzc,GAAA,EAAAge,EAAAmuC,EAAAz0D,OAAuCsI,EAAAge,EAAOhe,KAC9CwG,EAAA2lD,EAAAnsD,KAAA7H,EAAA6G,KAAAwH,IAAAqzC,SAAA75C,EAAAqqB,IACA8jE,EAAA90F,KAAAmN,GAIA,MAAA+hD,GAAA8lC,IAOA5lC,GAAAilC,MAAA,WACA,OAAArjE,IAAA,EAAApzB,EAAA6D,KAAApD,SAAqC2yB,EAAApzB,GACrC,OAAAuP,GAAA2lD,EAAArxD,KAAAuvB,GAAArqB,EAAAmsD,EAAAz0D,OAAA,EAAA45E,EAAAnlB,EAAAnsD,KAA4EA,GAAA,IAC5EwG,EAAA2lD,EAAAnsD,MACAsxE,OAAA9qE,EAAAipF,aAAAne,EAAA70D,WAAAwyE,aAAAzoF,EAAA8qE,GACAA,EAAA9qE,EAIA,OAAA1L,OAEA2tD,GAAAx4B,KAAA,SAAAg8B,GACAA,EAAAD,EAAA9rD,MAAApF,KAAAkL,UACA,QAAAqkB,IAAA,EAAApzB,EAAA6D,KAAApD,SAAqC2yB,EAAApzB,GAAS6D,KAAAuvB,GAAA4F,KAAAg8B,EAC9C,OAAAnxD,MAAA4yF,SAQAjlC,GAAAvnD,KAAA,SAAA6c,GACA,MAAAmuC,GAAApxD,KAAA,SAAA0L,EAAAxG,EAAAqqB,GACAtM,EAAA/e,KAAAwH,IAAAqzC,SAAA75C,EAAAqqB,MAWAo+B,GAAAzpD,KAAA,SAAA+e,GACA,GAAA2X,GAAAq3B,GAAA/mD,UAEA,OADA+X,GAAA7d,MAAAw1B,EAAA,GAAA56B,KAAA46B,GACA56B,MAEA2tD,GAAAj8C,MAAA,WACA,OAAA1R,KAAA0L,QAEAiiD,GAAAjiD,KAAA,WACA,OAAA6jB,GAAA,EAAApzB,EAAA6D,KAAApD,OAAoC2yB,EAAApzB,EAAOozB,IAC3C,OAAA8hC,GAAArxD,KAAAuvB,GAAArqB,EAAA,EAAAge,EAAAmuC,EAAAz0D,OAAwDsI,EAAAge,EAAOhe,IAAA,CAC/D,GAAAwG,GAAA2lD,EAAAnsD,EACA,IAAAwG,EAAA,MAAAA,GAGA,aAEAiiD,GAAA5tD,KAAA,WACA,GAAAmjB,GAAA,CAIA,OAHAkuC,GAAApxD,KAAA,aACAkjB,IAEAA,EAMA,IAAAquC,MACA1tD,IAAAS,UAAAiF,MAAA+nD,EACAztD,GAAAS,UAAAiF,MAAAhH,UAAAgvD,GACAA,GAAAvnD,OAAA2jD,GAAA3jD,OACAunD,GAAA7/C,MAAAi8C,GAAAj8C,MACA6/C,GAAA7lD,KAAAiiD,GAAAjiD,KACA6lD,GAAArtD,KAAAypD,GAAAzpD,KACAqtD,GAAAxxD,KAAA4tD,GAAA5tD,KACAwxD,GAAArrD,OAAA,SAAAy3B,GAEA,OADA01D,GAAAC,EAAAsB,EAAAvjC,EAAA3lD,EAAA6nF,KACAhkE,GAAA,EAAApzB,EAAA6D,KAAApD,SAAqC2yB,EAAApzB,GAAS,CAC9Cy4F,GAAAvjC,EAAArxD,KAAAuvB,IAAA1N,OACA0xE,EAAAh1F,KAAA80F,MACAA,EAAA1xE,WAAA0vC,EAAA1vC,UACA,QAAAzc,IAAA,EAAAge,EAAAmuC,EAAAz0D,SAAwCsI,EAAAge,IACxCxX,EAAA2lD,EAAAnsD,KACAmuF,EAAA90F,KAAAq2F,EAAA1vF,GAAAouF,EAAA31D,EAAAz5B,KAAAmtD,EAAA1vC,WAAAjW,EAAAqzC,SAAA75C,EAAAqqB,IACA+jE,EAAAv0C,SAAArzC,EAAAqzC,UAEAs0C,EAAA90F,KAAA,MAIA,MAAAkvD,GAAA8lC,IAEAhiC,GAAA/nD,OAAA,SAAAsqB,EAAA2nC,GAEA,MADAvwD,WAAAtO,OAAA,IAAA6+D,EAAAjK,EAAAxxD,OACA2tD,GAAAnkD,OAAAtF,KAAAlE,KAAA8zB,EAAA2nC,IAYA53D,GAAAqC,OAAA,SAAAwF,GACA,GAAA2lD,EAQA,OAPA,gBAAA3lD,IACA2lD,GAAAxD,GAAAniD,EAAA+jF,KACAp+B,EAAA1vC,WAAA8tE,GAAAnlC,kBAEA+G,GAAA3lD,GACA2lD,EAAA1vC,WAAAyoC,EAAA1+C,IAEA+hD,GAAA4D,KAEAxtD,GAAAwF,UAAA,SAAAkyE,GACA,GAAAlqB,EAQA,OAPA,gBAAAkqB,IACAlqB,EAAAY,GAAAlE,GAAAwtB,EAAAkU,KACAp+B,EAAA1vC,WAAA8tE,GAAAnlC,kBAEA+G,EAAAY,GAAAspB,GACAlqB,EAAA1vC,WAAA,MAEA8rC,GAAA4D,KAEA1D,GAAAp6C,GAAA,SAAApU,EAAA4tD,EAAA6E,GACA,GAAA1uC,GAAAhY,UAAAtO,MACA,IAAAsmB,EAAA,GACA,mBAAA/jB,GAAA,CACA+jB,EAAA,IAAA6pC,GAAA,EACA,KAAA6E,IAAAzyD,GAAAa,KAAAoG,KAAAurD,EAAAC,EAAAzyD,EAAAyyD,GAAA7E,GACA,OAAA/sD,MAEA,GAAAkjB,EAAA,SAAAA,EAAAljB,KAAA0L,OAAA,OAAAvM,KAAA+jB,EAAAqoC,CACAqG,IAAA,EAEA,MAAA5xD,MAAAoG,KAAAurD,EAAAxyD,EAAA4tD,EAAA6E,IAgCA,IAAAS,IAAAxuD,GAAA4G,KACAoqF,WAAA,YACAC,WAAA,YAEArF,KACAp9B,GAAA7uD,QAAA,SAAAgsB,GACA,KAAAA,IAAAigE,KAAAp9B,GAAA1oD,OAAA6lB,IAwBA,IAAAqjC,IAAAF,GAAA,CAyBA9uD,IAAA+4B,MAAA,SAAAq2B,GACA,MAAAD,IAAAC,EAAA/F,KAEA,IAAAoG,IAAAtzD,KAAAwzC,WAAA,SAAAmc,KAAA3vD,KAAAwzC,UAAAuM,YAAA,GA8BAl8C,IAAAkxF,MAAA,SAAA9hC,EAAA+hC,EAAA7gC,GAEA,GADAjpD,UAAAtO,OAAA,IAAAu3D,EAAA6gC,IAAA9nC,IAAAgG,gBACA8hC,EAAA,OAAAD,GAAA7vF,EAAA,EAAAge,EAAA8xE,EAAAp4F,OAA2DsI,EAAAge,IAAOhe,EAClE,IAAA6vF,EAAAC,EAAA9vF,IAAAivD,eACA,MAAAnB,IAAAC,EAAA8hC,IAIAlxF,GAAAs5B,SAAAD,KAAA,WAEA,QAAAA,KACAl9B,KAAAuT,GAAA,iBAAA0hF,GAAA1hF,GAAA,kBAAA2hF,GAEA,QAAA73D,GAAA37B,EAAA49B,EAAA2mC,EAAAkvB,EAAAryD,GACA,kBAWA,QAAAsyD,KACA,GAAAtqF,GAAA/C,EAAAstF,EAAA/1D,EAAAV,EAAA02D,EACAD,KACAvqF,EAAAuqF,EAAA,GAAAE,EAAA,GACAxtF,EAAAstF,EAAA,GAAAE,EAAA,GACAC,GAAA1qF,EAAA/C,EACAwtF,EAAAF,EACAzoC,GACAztD,KAAA,OACAT,EAAA22F,EAAA,GAAAI,EAAA,GACA9wF,EAAA0wF,EAAA,GAAAI,EAAA,GACA3qF,KACA/C,QAGA,QAAA2tF,KACAp2D,EAAAV,EAAA02D,KACAK,EAAApiF,GAAA4hF,EAAAS,EAAA,MAAAriF,GAAAuvB,EAAA8yD,EAAA,MACAC,EAAAL,GACA5oC,GACAztD,KAAA,aA9BA,GAAAs2F,GAAAr1D,EAAApgC,KAAAqD,EAAAQ,GAAA+5B,MAAAv6B,OAAAyyF,sBAAAjyF,GAAA+5B,MAAAv6B,OAAAu7B,EAAAwB,EAAAze,WAAAirC,EAAAhvB,EAAAwvB,GAAAhtB,EAAAl1B,WAAAsqF,EAAA,EAAAF,EAAA5zF,IAAAk0F,EAAA,eAAAN,EAAA,OAAAA,GAAAK,EAAA9xF,GAAAqC,OAAA+/D,EAAA5iE,IAAAkQ,GAAA4hF,EAAAS,EAAAR,GAAA7hF,GAAAuvB,EAAA8yD,EAAAF,GAAAG,EAAAnjC,GAAArvD,GAAAkyF,EAAAj2D,EAAAV,EAAA02D,EACAl4D,IACAq4D,EAAAr4D,EAAAh4B,MAAAg7B,EAAAl1B,WACAuqF,KAAA/2F,EAAA62F,EAAA,GAAAE,EAAA9wF,EAAA4wF,EAAA,KAEAE,GAAA,KAEA7oC,GACAztD,KAAA,eAdA,GAAAy+B,GAAAuvB,EAAAjwB,EAAA,8BAAAE,EAAA,KAAA63D,EAAA53D,EAAAovB,EAAA5oD,GAAA+4B,MAAA2tB,EAAA,uBAAA2qC,EAAA73D,EAAA62B,GAAArwD,GAAAkxF,MAAA7oC,EAAA,uBA8CA,OALAhvB,GAAAE,OAAA,SAAA1+B,GACA,MAAAwM,WAAAtO,QACAwgC,EAAA1+B,EACAw+B,GAFAE,GAIAv5B,GAAA40D,OAAAv7B,EAAAU,EAAA,OAKA/5B,GAAAmxF,QAAA,SAAA/hC,EAAA+hC,GAEA,MADA9pF,WAAAtO,OAAA,IAAAo4F,EAAA9nC,IAAA8nC,SACAA,EAAA/iC,GAAA+iC,GAAAvqF,IAAA,SAAAsqF,GACA,GAAA1hC,GAAAL,GAAAC,EAAA8hC,EAEA,OADA1hC,GAAAc,WAAA4gC,EAAA5gC,WACAd,OAGA,IAAAiR,IAAA,KAAA+U,GAAA/U,MAAA/P,GAAAh5D,KAAAqN,GAAA2gE,GAAA,EAAAhV,GAAAwhC,GAAAxsB,GAAAjF,GAAA5P,GAAAH,GAAA,EAAAwB,GAAAxB,GAAA,IAAAgC,GAAA,IAAAhC,GAyBA8Y,GAAA9xE,KAAAy6F,MAAAC,GAAA,EAAAC,GAAA,CACAryF,IAAAsyF,gBAAA,SAAA/vB,EAAAC,GACA,GAAAnhE,GAAA03D,EAAAw5B,EAAAhwB,EAAA,GAAAiwB,EAAAjwB,EAAA,GAAAkwB,EAAAlwB,EAAA,GAAAmwB,EAAAlwB,EAAA,GAAAmwB,EAAAnwB,EAAA,GAAAowB,EAAApwB,EAAA,GAAAv7D,EAAAyrF,EAAAH,EAAAruF,EAAAyuF,EAAAH,EAAAlmB,EAAArlE,IAAA/C,GACA,IAAAooE,EAAAkJ,GACAzc,EAAArhE,KAAAo+D,IAAA88B,EAAAH,GAAAjpB,GACAnoE,EAAA,SAAAoZ,GACA,OAAA83E,EAAA93E,EAAAxT,EAAAurF,EAAA/3E,EAAAvW,EAAAuuF,EAAA/6F,KAAAs5D,IAAAwY,GAAA/uD,EAAAs+C,SAEK,CACL,GAAAn5B,GAAAloC,KAAAy8B,KAAAm4C,GAAAP,GAAA6mB,IAAAH,IAAAJ,GAAA/lB,IAAA,EAAAmmB,EAAAL,GAAAxyD,GAAAwsC,GAAAwmB,IAAAH,IAAAJ,GAAA/lB,IAAA,EAAAsmB,EAAAR,GAAAxyD,GAAA67C,EAAA/jF,KAAAo+D,IAAAp+D,KAAAy8B,KAAA43C,IAAA,GAAAA,GAAAzsB,EAAA5nD,KAAAo+D,IAAAp+D,KAAAy8B,KAAAi4C,IAAA,GAAAA,EACArT,IAAAzZ,EAAAm8B,GAAAjS,GACAnoE,EAAA,SAAAoZ,GACA,GAAA5T,GAAA4T,EAAAs+C,EAAA85B,EAAA5hC,GAAAwqB,GAAAjc,EAAAizB,GAAAL,GAAAxyD,IAAAizD,EAAA3hC,GAAAsY,GAAA3iE,EAAA40E,GAAA1qB,GAAA0qB,GACA,QAAA8W,EAAA/yB,EAAAv4D,EAAAurF,EAAAhzB,EAAAt7D,EAAAuuF,EAAAI,EAAA5hC,GAAAuY,GAAA3iE,EAAA40E,KAIA,MADAp6E,GAAAwT,SAAA,IAAAkkD,EACA13D,GAEArB,GAAAs5B,SAAA9pB,KAAA,WAeA,QAAAA,GAAAxM,GACAA,EAAA0M,GAAA0hF,EAAA0B,GAAApjF,GAAAqjF,GAAA,QAAAC,GAAAtjF,GAAA,gBAAAujF,GAAAvjF,GAAA2hF,EAAA6B,GAoGA,QAAAC,GAAA5gE,GACA,QAAAA,EAAA,GAAA6gE,EAAAv4F,GAAAu4F,EAAAznE,GAAA4G,EAAA,GAAA6gE,EAAAtyF,GAAAsyF,EAAAznE,GAEA,QAAA6jC,GAAA7jB,GACA,OAAAA,EAAA,GAAAynD,EAAAznE,EAAAynE,EAAAv4F,EAAA8wC,EAAA,GAAAynD,EAAAznE,EAAAynE,EAAAtyF,GAEA,QAAAuyF,GAAAxsF,GACAusF,EAAAznE,EAAAj0B,KAAA+D,IAAAsF,EAAA,GAAArJ,KAAAiyB,IAAA5oB,EAAA,GAAA8F,IAEA,QAAAysF,GAAA/gE,EAAAoZ,GACAA,EAAA6jB,EAAA7jB,GACAynD,EAAAv4F,GAAA03B,EAAA,GAAAoZ,EAAA,GACAynD,EAAAtyF,GAAAyxB,EAAA,GAAAoZ,EAAA,GAEA,QAAA4nD,GAAAh3D,EAAAhK,EAAAoZ,EAAAhgB,GACA4Q,EAAAj3B,WACAzK,EAAAu4F,EAAAv4F,EACAiG,EAAAsyF,EAAAtyF,EACA6qB,EAAAynE,EAAAznE,GAEA0nE,EAAA37F,KAAA08B,IAAA,EAAAzI,IACA2nE,EAAAE,EAAAjhE,EAAAoZ,GACApP,EAAAv8B,GAAAqC,OAAAk6B,GACA1nB,EAAA,IAAA0nB,IAAAx5B,aAAA8R,aACA0nB,EAAAl8B,KAAAmP,EAAAuqB,OAEA,QAAAkpD,KACAhxE,KAAAjR,OAAAw9B,EAAAh6B,QAAAoC,IAAA,SAAA/L,GACA,OAAAA,EAAAu4F,EAAAv4F,GAAAu4F,EAAAznE,IACO/kB,IAAA43B,EAAAujC,SACP5vD,KAAAnR,OAAAs7B,EAAA93B,QAAAoC,IAAA,SAAA9F,GACA,OAAAA,EAAAsyF,EAAAtyF,GAAAsyF,EAAAznE,IACO/kB,IAAA01B,EAAAylC,SAEP,QAAA0xB,GAAA1qC,GACA2qC,KAAA3qC,GACAztD,KAAA,cAGA,QAAAq4F,GAAA5qC,GACAk6B,IACAl6B,GACAztD,KAAA,OACA8F,MAAAgyF,EAAAznE,EACAimB,WAAAwhD,EAAAv4F,EAAAu4F,EAAAtyF,KAGA,QAAA8yF,GAAA7qC,KACA2qC,IAAA3qC,GACAztD,KAAA,YACOk4F,EAAA,MAEP,QAAAV,KAIA,QAAAvB,KACAI,EAAA,EACA2B,EAAAtzF,GAAA+4B,MAAAwD,GAAAs3D,GACAF,EAAA5qC,GAEA,QAAA8oC,KACAzvB,EAAA1yD,GAAAokF,EAAA,MAAApkF,GAAAqkF,EAAA,MACA/B,EAAAL,GACAiC,EAAA7qC,GAXA,GAAAxsB,GAAApgC,KAAA4sD,EAAAhvB,EAAAwvB,GAAAhtB,EAAAl1B,WAAAsqF,EAAA,EAAAvvB,EAAApiE,GAAAqC,OAAAqkD,EAAAnqB,IAAA7sB,GAAAokF,EAAAvC,GAAA7hF,GAAAqkF,EAAAlC,GAAAgC,EAAAV,EAAAnzF,GAAA+4B,MAAAwD,IAAAy1D,EAAAnjC,GAAAtyB,EACAy3D,IAAA3zF,KAAAk8B,GACAk3D,EAAA1qC,GAYA,QAAAmqC,KAKA,QAAAe,KACA,GAAA9C,GAAAnxF,GAAAmxF,QAAA50D,EAKA,OAJAl3B,GAAA+tF,EAAAznE,EACAwlE,EAAAxxF,QAAA,SAAA8a,GACAA,EAAA61C,aAAA4jC,OAAAz5E,EAAA61C,YAAA6iC,EAAA14E,MAEA02E,EAEA,QAAAgD,KACA,GAAA30F,GAAAQ,GAAA+5B,MAAAv6B,MACAQ,IAAAqC,OAAA7C,GAAAkQ,GAAA0kF,EAAA7C,GAAA7hF,GAAA2kF,EAAAxC,GACA1jF,EAAAzT,KAAA8E,EAEA,QADA80F,GAAAt0F,GAAA+5B,MAAAs1B,eACAhuD,EAAA,EAAAge,EAAAi1E,EAAAv7F,OAA2CsI,EAAAge,IAAOhe,EAClD6yF,EAAAI,EAAAjzF,GAAAivD,YAAA,IAEA,IAAA6gC,GAAA8C,IAAA/+B,EAAAt9D,KAAAs9D,KACA,QAAAi8B,EAAAp4F,OAAA,CACA,GAAAm8D,EAAAq/B,EAAA,KACA,GAAAhiE,GAAA4+D,EAAA,EACAoC,GAAAh3D,EAAAhK,EAAA2hE,EAAA3hE,EAAA+9B,YAAA54D,KAAAC,MAAAD,KAAAo+D,IAAAs9B,EAAAznE,GAAAj0B,KAAAooF,KAAA,GACA32B,IAEAorC,EAAAr/B,MACS,IAAAi8B,EAAAp4F,OAAA,GACT,GAAAw5B,GAAA4+D,EAAA,GAAA9pB,EAAA8pB,EAAA,GAAAlqF,EAAAsrB,EAAA,GAAA80C,EAAA,GAAAnjE,EAAAquB,EAAA,GAAA80C,EAAA,EACAmtB,GAAAvtF,IAAA/C,KAGA,QAAAqtF,KACA,GAAAhvB,GAAAkyB,EAAAjyB,EAAAkyB,EAAAvD,EAAAnxF,GAAAmxF,QAAA50D,EACAy3D,IAAA3zF,KAAAk8B,EACA,QAAAl7B,GAAA,EAAAge,EAAA8xE,EAAAp4F,OAA2CsI,EAAAge,IAAOhe,EAAAqzF,EAAA,KAElD,GADAlyB,EAAA2uB,EAAA9vF,GACAqzF,EAAAR,EAAA1xB,EAAAlS,YAAA,CACA,GAAAmkC,EAAA,KACAlyB,GAAAC,EAAAiyB,EAAAC,EAGA,GAAAA,EAAA,CACA,GAAAC,MAAAnyB,EAAA,GAAAD,EAAA,IAAAoyB,KAAAnyB,EAAA,GAAAD,EAAA,IAAAoyB,EAAA3wF,EAAAwwF,GAAA98F,KAAAy8B,KAAAwgE,EAAAH,EACAjyB,OAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACAiyB,MAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACArB,EAAArvF,EAAAqB,GAEAkvF,EAAA,KACAjB,EAAA/wB,EAAAkyB,GACAd,EAAA5qC,GAEA,QAAA8oC,KACA,GAAA7xF,GAAA+5B,MAAAo3D,QAAAp4F,OAAA,CAEA,OADAu7F,GAAAt0F,GAAA+5B,MAAAs1B,eACAhuD,EAAA,EAAAge,EAAAi1E,EAAAv7F,OAA6CsI,EAAAge,IAAOhe,QACpD6yF,GAAAI,EAAAjzF,GAAAivD,WAEA,QAAAA,KAAA4jC,GACA,WAAAD,KAGAj0F,GAAAwF,UAAA2I,GAAAuB,GAAAklF,EAAA,MACAxyB,EAAA1yD,GAAA0hF,EAAA0B,GAAApjF,GAAA2hF,EAAA6B,GACAlB,IACA4B,EAAA7qC,GAlEA,GAA4E1jD,GAA5Ek3B,EAAApgC,KAAA4sD,EAAAhvB,EAAAwvB,GAAAhtB,EAAAl1B,WAAA6sF,KAA4EM,EAAA,EAAAI,EAAA,SAAA50F,GAAA+5B,MAAAs1B,eAAA,GAAAiB,WAAA8jC,EAAA,YAAAQ,EAAAP,EAAA,WAAAO,EAAAzmF,KAAAi0D,EAAApiE,GAAAqC,OAAAk6B,GAAAy1D,EAAAnjC,GAAAtyB,EAC5E43D,KACAV,EAAA1qC,GACAqZ,EAAA1yD,GAAA0hF,EAAA,MAAA1hF,GAAA2hF,EAAA8C,GAkEA,QAAAnB,KACA,GAAAjqC,GAAAhvB,EAAAwvB,GAAAptD,KAAAkL,UACAwtF,GAAAn2E,aAAAm2E,IAAyDb,GAAA3zF,KAAAlE,MACzD24F,EAAA3B,EAAAK,EAAAnmE,GAAArtB,GAAA+4B,MAAA58B,OAAAs3F,EAAA1qC,IACA8rC,EAAAl2E,WAAA,WACAk2E,EAAA,KACAjB,EAAA7qC,IACO,IACPI,IACAkqC,EAAA37F,KAAA08B,IAAA,OAAA2gE,MAAA3B,EAAAznE,GACA2nE,EAAAE,EAAAsB,GACAnB,EAAA5qC,GAEA,QAAAkqC,KACA,GAAA1gE,GAAAvyB,GAAA+4B,MAAA58B,MAAAwvB,EAAAj0B,KAAAo+D,IAAAs9B,EAAAznE,GAAAj0B,KAAAooF,GACAyT,GAAAp3F,KAAAo2B,EAAA4gE,EAAA5gE,GAAAvyB,GAAA+5B,MAAAi7D,SAAAt9F,KAAAiJ,KAAAgrB,GAAA,EAAAj0B,KAAAC,MAAAg0B,GAAA,GA3QA,GAIKmpE,GAAAtB,EAAAnmE,EAAAwnE,EAAAN,EAAA/1D,EAAAvsB,EAAAqqB,EAAAnqB,EAJLihF,GACAv4F,EAAA,EACAiG,EAAA,EACA6qB,EAAA,GACKzvB,GAAA,SAAA6E,EAAAk0F,GAAApgF,EAAA,IAAA6+E,EAAA,EAAAtC,EAAA,iBAAA0C,EAAA,iBAAAC,EAAA,eAAA1C,EAAA,kBAAAt3D,EAAAuvB,EAAA95C,EAAA,6BAyQL,OAxQAujF,MACAA,GAAA,WAAAnH,KAAAmJ,GAAA,WACA,OAAA/0F,GAAA+5B,MAAAm7D,QAAAl1F,GAAA+5B,MAAAo7D,UAAA,QACO,yBAAAvJ,KAAAmJ,GAAA,WACP,MAAA/0F,IAAA+5B,MAAAq7D,YACO,eAAAL,GAAA,WACP,OAAA/0F,GAAA+5B,MAAAs7D,QACO,wBAKP7lF,EAAAuqB,MAAA,SAAA/2B,GACAA,EAAAT,KAAA,WACA,GAAAwmD,GAAAhvB,EAAAwvB,GAAAptD,KAAAkL,WAAAiuF,EAAAlC,CACAmC,IACAv1F,GAAAqC,OAAAlG,MAAA4G,aAAAR,KAAA,wBACA6wF,EAAAj3F,KAAAmJ,YACAzK,EAAA,EACAiG,EAAA,EACA6qB,EAAA,GAEA8nE,EAAA1qC,KACWshC,MAAA,uBACX,GAAApjF,GAAA/K,EAAA,GAAAgI,EAAAhI,EAAA,GAAAga,EAAAs9E,IAAA,GAAAvsF,EAAA,EAAAkP,EAAAq9E,IAAA,GAAAtvF,EAAA,EAAA7C,EAAArB,GAAAsyF,kBAAAp8E,EAAAk9E,EAAAv4F,GAAAu4F,EAAAznE,GAAAxV,EAAAi9E,EAAAtyF,GAAAsyF,EAAAznE,EAAA1kB,EAAAmsF,EAAAznE,KAAAzV,EAAAo/E,EAAAz6F,GAAAy6F,EAAA3pE,GAAAxV,EAAAm/E,EAAAx0F,GAAAw0F,EAAA3pE,EAAA1kB,EAAAquF,EAAA3pE,GACA,iBAAAlR,GACA,GAAAkxB,GAAAtqC,EAAAoZ,GAAAkR,EAAA1kB,EAAA0kC,EAAA,EACAxvC,MAAAmJ,UAAA8tF,GACAv4F,EAAAqb,EAAAy1B,EAAA,GAAAhgB,EACA7qB,EAAAqV,EAAAw1B,EAAA,GAAAhgB,EACAA,KAEAgoE,EAAA5qC,MAEWxmD,KAAA,4BACXqxF,EAAA7qC,KACWxmD,KAAA,sBACXqxF,EAAA7qC,MAGA5sD,KAAAmJ,UAAA8tF,EACAK,EAAA1qC,GACA4qC,EAAA5qC,GACA6qC,EAAA7qC,OAIAv5C,EAAAoiC,UAAA,SAAA8V,GACA,MAAArgD,WAAAtO,QACAq6F,GACAv4F,GAAA6sD,EAAA,GACA5mD,GAAA4mD,EAAA,GACA/7B,EAAAynE,EAAAznE,GAEAs3D,IACAzzE,IAPA4jF,EAAAv4F,EAAAu4F,EAAAtyF,IASA0O,EAAApO,MAAA,SAAAsmD,GACA,MAAArgD,WAAAtO,QACAq6F,GACAv4F,EAAAu4F,EAAAv4F,EACAiG,EAAAsyF,EAAAtyF,EACA6qB,EAAA,MAEA0nE,GAAA3rC,GACAu7B,IACAzzE,GARA4jF,EAAAznE,GAUAnc,EAAAzO,YAAA,SAAA2mD,GACA,MAAArgD,WAAAtO,QACAgI,EAAA,MAAA2mD,EAAAutC,KAAAvtC,EAAA,IAAAA,EAAA,IACAl4C,GAFAzO,GAIAyO,EAAA6d,OAAA,SAAAq6B,GACA,MAAArgD,WAAAtO,QACAs0B,EAAAq6B,OAAA,IAAAA,EAAA,IACAl4C,GAFA6d,GAIA7d,EAAAtT,KAAA,SAAAwrD,GACA,MAAArgD,WAAAtO,QACAmD,EAAAwrD,OAAA,IAAAA,EAAA,IACAl4C,GAFAtT,GAIAsT,EAAAqF,SAAA,SAAA6yC,GACA,MAAArgD,WAAAtO,QACA8b,GAAA6yC,EACAl4C,GAFAqF,GAIArF,EAAA3U,EAAA,SAAA+8C,GACA,MAAAvwC,WAAAtO,QACAkZ,EAAA2lC,EACApZ,EAAAoZ,EAAAj2C,OACAyxF,GACAv4F,EAAA,EACAiG,EAAA,EACA6qB,EAAA,GAEAnc,GARAyC,GAUAzC,EAAA1O,EAAA,SAAA82C,GACA,MAAAvwC,WAAAtO,QACAoZ,EAAAylC,EACAtb,EAAAsb,EAAAj2C,OACAyxF,GACAv4F,EAAA,EACAiG,EAAA,EACA6qB,EAAA,GAEAnc,GARA2C,GAoKAnS,GAAA40D,OAAAplD,EAAAuqB,EAAA,MAEA,IAAAg7D,IAAAhC,GAAAkC,IAAA,EAAAltF,IACA/H,IAAAkK,MAAAknD,GAEAA,GAAA1yD,UAAAoF,SAAA,WACA,MAAA3H,MAAA45C,MAAA,IAEA/1C,GAAA+yD,IAAA1B,EAIA,IAAAmkC,IAAAnkC,GAAA3yD,UAAA,GAAA0yD,GACAokC,IAAAx/C,SAAA,SAAArqB,GAEA,MADAA,GAAAj0B,KAAA08B,IAAA,GAAA/sB,UAAAtO,OAAA4yB,EAAA,GACA,GAAA0lC,IAAAl1D,KAAAgG,EAAAhG,KAAA0K,EAAA1K,KAAAwvC,EAAAhgB,IAEA6pE,GAAAC,OAAA,SAAA9pE,GAEA,MADAA,GAAAj0B,KAAA08B,IAAA,GAAA/sB,UAAAtO,OAAA4yB,EAAA,GACA,GAAA0lC,IAAAl1D,KAAAgG,EAAAhG,KAAA0K,EAAA8kB,EAAAxvB,KAAAwvC,IAEA6pD,GAAAz/C,IAAA,WACA,MAAAyb,IAAAr1D,KAAAgG,EAAAhG,KAAA0K,EAAA1K,KAAAwvC,IAqBA3rC,GAAA06E,IAAA7oB,EAIA,IAAA6jC,IAAA7jC,GAAAnzD,UAAA,GAAA0yD,GACAskC,IAAA1/C,SAAA,SAAArqB,GACA,UAAAkmC,IAAA11D,KAAAgG,EAAAhG,KAAAq2B,EAAA96B,KAAAiyB,IAAA,IAAAxtB,KAAAwvC,EAAAgqD,IAAAtuF,UAAAtO,OAAA4yB,EAAA,MAEA+pE,GAAAD,OAAA,SAAA9pE,GACA,UAAAkmC,IAAA11D,KAAAgG,EAAAhG,KAAAq2B,EAAA96B,KAAA+D,IAAA,EAAAU,KAAAwvC,EAAAgqD,IAAAtuF,UAAAtO,OAAA4yB,EAAA,MAEA+pE,GAAA3/C,IAAA,WACA,MAAAkc,IAAA91D,KAAAgG,EAAAhG,KAAAq2B,EAAAr2B,KAAAwvC,GAAAoK,OAOA/1C,GAAAo7E,IAAAtpB,EAIA,IAAA6jC,IAAA,GACAtjC,GAAA,OAAAC,GAAA,EAAAC,GAAA,QACAqjC,GAAA9jC,GAAApzD,UAAA,GAAA0yD,GACAwkC,IAAA5/C,SAAA,SAAArqB,GACA,UAAAmmC,IAAAp6D,KAAAiyB,IAAA,IAAAxtB,KAAAwvC,EAAAgqD,IAAAtuF,UAAAtO,OAAA4yB,EAAA,IAAAxvB,KAAAo1B,EAAAp1B,KAAAq1B,IAEAokE,GAAAH,OAAA,SAAA9pE,GACA,UAAAmmC,IAAAp6D,KAAA+D,IAAA,EAAAU,KAAAwvC,EAAAgqD,IAAAtuF,UAAAtO,OAAA4yB,EAAA,IAAAxvB,KAAAo1B,EAAAp1B,KAAAq1B,IAEAokE,GAAA7/C,IAAA,WACA,MAAAoc,IAAAh2D,KAAAwvC,EAAAxvC,KAAAo1B,EAAAp1B,KAAAq1B,IAqBAxxB,GAAA+1C,IAAA6b,EAUA,IAAAikC,IAAAjkC,GAAAlzD,UAAA,GAAA0yD,GACAykC,IAAA7/C,SAAA,SAAArqB,GACAA,EAAAj0B,KAAA08B,IAAA,GAAA/sB,UAAAtO,OAAA4yB,EAAA,EACA,IAAAwV,GAAAhlC,KAAAglC,EAAAn+B,EAAA7G,KAAA6G,EAAAwuB,EAAAr1B,KAAAq1B,EAAAnwB,EAAA,EACA,OAAA8/B,IAAAn+B,GAAAwuB,GACA2P,KAAA9/B,IAAA8/B,EAAA9/B,GACA2B,KAAA3B,IAAA2B,EAAA3B,GACAmwB,KAAAnwB,IAAAmwB,EAAAnwB,GACA,GAAAuwD,IAAAl6D,KAAAiyB,IAAA,IAAAwX,EAAAxV,GAAAj0B,KAAAiyB,IAAA,IAAA3mB,EAAA2oB,GAAAj0B,KAAAiyB,IAAA,IAAA6H,EAAA7F,KAJA,GAAAimC,IAAAvwD,QAMAw0F,GAAAJ,OAAA,SAAA9pE,GAEA,MADAA,GAAAj0B,KAAA08B,IAAA,GAAA/sB,UAAAtO,OAAA4yB,EAAA,GACA,GAAAimC,IAAAjmC,EAAAxvB,KAAAglC,EAAAxV,EAAAxvB,KAAA6G,EAAA2oB,EAAAxvB,KAAAq1B,IAEAqkE,GAAA9iC,IAAA,WACA,MAAAxB,IAAAp1D,KAAAglC,EAAAhlC,KAAA6G,EAAA7G,KAAAq1B,IAEAqkE,GAAA/xF,SAAA,WACA,UAAAgvD,GAAA32D,KAAAglC,GAAA2xB,GAAA32D,KAAA6G,GAAA8vD,GAAA32D,KAAAq1B,GAmEA,IAAA2hC,IAAAnzD,GAAA4G,KACAkvF,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACA/tB,IAAA,SACAguB,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,UAEA7rC,IAAAxzD,QAAA,SAAAC,EAAA9J,GACAq9D,GAAArjC,IAAAlwB,EAAAgzD,GAAA98D,MAOAkK,GAAAi/F,QAAA3rC,GACAtzD,GAAA80B,IAAAy+B,GAAAlL,GA4FAroD,GAAAk/F,IAAA,SAAAC,EAAAxqE,GAEA,QAAAuqE,GAAAxqE,EAAAq5D,EAAA3uE,GACA/X,UAAAtO,OAAA,IAAAqmB,EAAA2uE,IAAA,KACA,IAAAj5D,GAAA0+B,GAAA9+B,EAAAC,EAAA,MAAAo5D,EAAA34D,EAAAgqE,EAAArR,GAAA3uE,EAIA,OAHA0V,GAAAi5D,IAAA,SAAArmC,GACA,MAAArgD,WAAAtO,OAAA+7B,EAAAM,SAAA,OAAA24D,EAAArmC,GAAAtyB,EAAAgqE,EAAA13C,IAAAqmC,GAEAj5D,EAEA,QAAAM,GAAAu+B,GACA,MAAAurC,GAAArnG,MAAA87D,EAAAmB,cAEA,QAAAsqC,GAAAzgG,GACA,gBAAAg1D,GACA,MAAAurC,GAAArnG,MAAA87D,EAAAmB,aAAAn2D,IA+EA,QAAA0gG,GAAAtR,GACA,MAAAA,GAAAnnF,IAAA04F,GAAAzoC,KAAAsoC,GAEA,QAAAG,GAAAh9F,GACA,MAAAi9F,GAAAzzC,KAAAxpD,GAAA,IAAAA,EAAA8zB,QAAA,gBAAA9zB,EAjGA,GAAAi9F,GAAA,GAAAn0C,QAAA,KAAA+zC,EAAA,OAAAK,EAAAL,EAAAzmC,WAAA,EAmGA,OAlFAwmC,GAAArnG,MAAA,SAAAyK,EAAA3D,GACA,GAAAq3B,EACA,OAAAkpE,GAAAxpE,UAAApzB,EAAA,SAAAyrF,EAAA1sF,GACA,GAAA20B,EAAA,MAAAA,GAAA+3D,EAAA1sF,EAAA,EACA,IAAAkwB,GAAA,GAAAwmB,UAAA,eAA2Cg2C,EAAAnnF,IAAA,SAAAqpB,EAAA5uB,GAC3C,MAAApE,MAAAC,UAAA+yB,GAAA,OAAA5uB,EAAA,MACSw1D,KAAA,SACT7gC,GAAAr3B,EAAA,SAAAovF,EAAA1sF,GACA,MAAA1C,GAAA4yB,EAAAw8D,GAAA1sF,IACSkwB,KAGT2tE,EAAAxpE,UAAA,SAAApzB,EAAA3D,GAEA,QAAA8gG,KACA,GAAA1jC,GAAA6W,EAAA,MAAA8sB,EACA,IAAAC,EAAA,MAAAA,IAAA,EAAAC,CACA,IAAAl0E,GAAAqwC,CACA,SAAAz5D,EAAAo2D,WAAAhtC,GAAA,CAEA,IADA,GAAArqB,GAAAqqB,EACArqB,IAAAuxE,GACA,QAAAtwE,EAAAo2D,WAAAr3D,GAAA,CACA,QAAAiB,EAAAo2D,WAAAr3D,EAAA,WACAA,EAGA06D,EAAA16D,EAAA,CACA,IAAAmxB,GAAAlwB,EAAAo2D,WAAAr3D,EAAA,EAOA,OANA,MAAAmxB,GACAmtE,GAAA,EACA,KAAAr9F,EAAAo2D,WAAAr3D,EAAA,MAAA06D,GACW,KAAAvpC,IACXmtE,GAAA,GAEAr9F,EAAAsB,MAAA8nB,EAAA,EAAArqB,GAAA+0B,QAAA,WAEA,KAAA2lC,EAAA6W,GAAA,CACA,GAAApgD,GAAAlwB,EAAAo2D,WAAAqD,KAAApwC,EAAA,CACA,SAAA6G,EAAAmtE,GAAA,MAAmC,SAAAntE,EACnCmtE,GAAA,EACA,KAAAr9F,EAAAo2D,WAAAqD,WAAApwC,OACW,IAAA6G,IAAAgtE,EAAA,QACX,OAAAl9F,GAAAsB,MAAA8nB,EAAAqwC,EAAApwC,GAEA,MAAArpB,GAAAsB,MAAA8nB,GAEA,IAjCA,GAA4BjR,GAAAklF,EAA5BC,KAAkBF,KAAU5mG,KAAA85E,EAAAtwE,EAAAvJ,OAAAgjE,EAAA,EAAA18C,EAAA,GAiC5B5E,EAAAglF,OAAAC,GAAA,CAEA,IADA,GAAAnuE,MACA9W,IAAAmlF,GAAAnlF,IAAAilF,GACAnuE,EAAA72B,KAAA+f,GACAA,EAAAglF,GAEA9gG,IAAA,OAAA4yB,EAAA5yB,EAAA4yB,EAAAlS,OACAvmB,EAAA4B,KAAA62B,GAEA,MAAAz4B,IAEAomG,EAAA3mG,OAAA,SAAAO,GACA,GAAAihD,MAAAq0C,QAAAt1F,EAAA,UAAAomG,GAAAW,WAAA/mG,EACA,IAAAgnG,GAAA,GAAA13C,GAAA23C,IAQA,OAPAjnG,GAAA6G,QAAA,SAAAouF,GACA,OAAAiS,KAAAjS,GACA+R,EAAAj7D,IAAAm7D,IACAD,EAAArlG,KAAAolG,EAAAplF,IAAAslF,OAIAD,EAAAn5F,IAAA04F,GAAAzoC,KAAAsoC,IAAAx7F,OAAA7K,EAAA8N,IAAA,SAAAmnF,GACA,MAAAgS,GAAAn5F,IAAA,SAAAo5F,GACA,MAAAV,GAAAvR,EAAAiS,MACSnpC,KAAAsoC,MACFtoC,KAAA,OAEPqoC,EAAAW,WAAA,SAAA/mG,GACA,MAAAA,GAAA8N,IAAAy4F,GAAAxoC,KAAA,OAQAqoC,GAEAl/F,GAAA21B,IAAA31B,GAAAk/F,IAAA,gBACAl/F,GAAA41B,IAAA51B,GAAAk/F,IAAA,iCACA,IAAA9pC,IAAAD,GAAAE,GAAAC,GAAAC,GAAAp5D,KAAAqsD,EAAArsD,KAAA,oCAAAijB,GACAT,WAAAS,EAAA,IAEApf,IAAAsf,MAAA,WACAy1C,GAAAxzD,MAAApF,KAAAkL,YAiCArH,GAAAsf,MAAAV,MAAA,WACA62C,KACAC,MA0BA11D,GAAA0zC,MAAA,SAAA74C,EAAAwkB,GACA,MAAAA,GAAA3nB,KAAAg8C,MAAA74C,GAAAwkB,EAAA3nB,KAAA08B,IAAA,GAAA/U,OAAA3nB,KAAAg8C,MAAA74C,GAEA,IAAAolG,KAAA,oEAAAr5F,IAAAovD,GACAh2D,IAAA23D,aAAA,SAAA7hE,EAAAshE,GACA,GAAA/1D,GAAA,CAOA,QANAvL,QACAA,EAAA,IAAAA,IAAA,GACAshE,IAAAthE,EAAAkK,GAAA0zC,MAAA59C,EAAA+/D,GAAA//D,EAAAshE,KACA/1D,EAAA,EAAA3J,KAAAC,MAAA,MAAAD,KAAAo+D,IAAAhgE,GAAA4B,KAAAq+D,MACA10D,EAAA3J,KAAA+D,KAAA,GAAA/D,KAAAiyB,IAAA,KAAAjyB,KAAAC,OAAA0J,EAAA,SAEA4+F,GAAA,EAAA5+F,EAAA,GAwGA,IAAA01D,IAAA,yEACAO,GAAAt3D,GAAA4G,KACA4qB,EAAA,SAAA32B,GACA,MAAAA,GAAAiJ,SAAA,IAEA0uB,EAAA,SAAA33B,GACA,MAAAqlG,QAAAC,aAAAtlG,IAEAm7B,EAAA,SAAAn7B,GACA,MAAAA,GAAAiJ,SAAA,IAEAjJ,EAAA,SAAAA,GACA,MAAAA,GAAAiJ,SAAA,KAEA02D,EAAA,SAAA3/D,GACA,MAAAA,GAAAiJ,SAAA,IAAA2kD,eAEAzlD,EAAA,SAAAnI,EAAA03B,GACA,MAAA13B,GAAAulG,YAAA7tE,IAEAna,EAAA,SAAAvd,EAAA03B,GACA,MAAA13B,GAAAwlG,cAAA9tE,IAEA5zB,EAAA,SAAA9D,EAAA03B,GACA,MAAA13B,GAAAoyC,QAAA1a,IAEA4O,EAAA,SAAAtmC,EAAA03B,GACA,OAAA13B,EAAAmF,GAAA0zC,MAAA74C,EAAAg7D,GAAAh7D,EAAA03B,KAAA0a,QAAAv1C,KAAA+D,IAAA,EAAA/D,KAAAiyB,IAAA,GAAAksC,GAAAh7D,GAAA,SAAA03B,SAMAypC,GAAAh8D,GAAAwK,QAA4B0tD,GAAAtgE,IAI5BmgE,IAAAr5D,WACAwM,QAAA,WACA,MAAA/O,MAAAurD,EAAA44C,cAEA9oG,OAAA,WACA,MAAA2E,MAAAurD,EAAA64C,aAEAtoG,YAAA,WACA,MAAAkE,MAAAurD,EAAA84C,kBAEAv1F,SAAA,WACA,MAAA9O,MAAAurD,EAAA+4C,eAEA31F,gBAAA,WACA,MAAA3O,MAAAurD,EAAAg5C,sBAEA11F,WAAA,WACA,MAAA7O,MAAAurD,EAAAi5C,iBAEAzoG,SAAA,WACA,MAAAiE,MAAAurD,EAAAk5C,eAEA71F,WAAA,WACA,MAAA5O,MAAAurD,EAAAm5C,iBAEAnyE,QAAA,WACA,MAAAvyB,MAAAurD,EAAAh5B,WAEA6uC,kBAAA,WACA,UAEAujC,QAAA,WACA,MAAA3kG,MAAAurD,EAAAo5C,WAEAC,QAAA,WACAC,GAAAC,WAAA1/F,MAAApF,KAAAurD,EAAArgD,YAEA65F,OAAA,WACAF,GAAAG,UAAA5/F,MAAApF,KAAAurD,EAAArgD,YAEA+xD,YAAA,WACA4nC,GAAAI,eAAA7/F,MAAApF,KAAAurD,EAAArgD,YAEAkyD,SAAA,WACAynC,GAAAK,YAAA9/F,MAAApF,KAAAurD,EAAArgD,YAEAi6F,gBAAA,WACAN,GAAAO,mBAAAhgG,MAAApF,KAAAurD,EAAArgD,YAEAm6F,WAAA,WACAR,GAAAS,cAAAlgG,MAAApF,KAAAurD,EAAArgD,YAEAq6F,SAAA,WACAV,GAAAW,YAAApgG,MAAApF,KAAAurD,EAAArgD,YAEAu6F,WAAA,WACAZ,GAAAa,cAAAtgG,MAAApF,KAAAurD,EAAArgD,YAEAy6F,QAAA,WACAd,GAAAc,QAAAvgG,MAAApF,KAAAurD,EAAArgD,YAGA,IAAA25F,IAAAppG,KAAA8G,SA6DAs9D,IAAAvjE,KAAAw/D,GAAA,SAAAz4C,GAGA,MAFAA,GAAAw8C,GAAA+lC,IAAAviF,GACAA,EAAAkiF,SAAA,KACAliF,GACG,SAAAA,EAAAsK,GACHtK,EAAA45C,YAAA55C,EAAAvnB,cAAA6xB,IACG,SAAAtK,GACH,MAAAA,GAAAvnB,gBAEA+jE,GAAAgmC,MAAAhmC,GAAAvjE,KAAA+L,MACAw3D,GAAAgmC,MAAAv3F,IAAAuxD,GAAAvjE,KAAAgS,IAAAjG,MACAw3D,GAAA+lC,IAAA9pC,GAAA,SAAAz4C,GACA,GAAAuiF,GAAA,GAAA7pC,IAAA,MAEA,OADA6pC,GAAA3oC,YAAA55C,EAAAvnB,cAAAunB,EAAAtnB,WAAAsnB,EAAAtU,WACA62F,GACG,SAAAviF,EAAAsK,GACHtK,EAAAuhF,QAAAvhF,EAAAtU,UAAA4e,IACG,SAAAtK,GACH,MAAAA,GAAAtU,UAAA,IAEA8wD,GAAAd,KAAAc,GAAA+lC,IAAAv9F,MACAw3D,GAAAd,KAAAzwD,IAAAuxD,GAAA+lC,IAAAt3F,IAAAjG,MACAw3D,GAAAC,UAAA,SAAAz8C,GACA,GAAA/mB,GAAAujE,GAAAvjE,KAAA+mB,EACA,OAAA9nB,MAAAC,OAAA6nB,EAAA/mB,EAAA,KAAA+mB,EAAA+9C,oBAAA9kE,EAAA8kE,sBAAA,SAEA,wEAAA59D,QAAA,SAAAoiG,EAAA1gG,GACAA,EAAA,EAAAA,CACA,IAAAuG,GAAAo0D,GAAA+lC,GAAA9pC,GAAA,SAAAz4C,GAEA,OADAA,EAAAw8C,GAAA+lC,IAAAviF,IAAAuhF,QAAAvhF,EAAAtU,WAAAsU,EAAAhoB,SAAA6J,GAAA,GACAme,GACK,SAAAA,EAAAsK,GACLtK,EAAAuhF,QAAAvhF,EAAAtU,UAAA,EAAAxT,KAAAC,MAAAmyB,KACK,SAAAtK,GACL,GAAAuiF,GAAA/lC,GAAAvjE,KAAA+mB,GAAAhoB,QACA,OAAAE,MAAAC,OAAAqkE,GAAAC,UAAAz8C,IAAAuiF,EAAA1gG,GAAA,OAAA0gG,IAAA1gG,IAEA26D,IAAA+lC,EAAA,KAAAn6F,EAAApD,MACAw3D,GAAA+lC,EAAA,KAAAt3F,IAAA7C,EAAA6C,IAAAjG,MACAw3D,GAAA+lC,EAAA,mBAAAviF,GACA,GAAAuiF,GAAA/lC,GAAAvjE,KAAA+mB,GAAAhoB,QACA,OAAAE,MAAAC,OAAAqkE,GAAAC,UAAAz8C,IAAAuiF,EAAA1gG,GAAA,SAGA26D,GAAAimC,KAAAjmC,GAAAkmC,OACAlmC,GAAAmmC,MAAAnmC,GAAAkmC,OAAA19F,MACAw3D,GAAAmmC,MAAA13F,IAAAuxD,GAAAkmC,OAAAz3F,IAAAjG,MACAw3D,GAAAomC,WAAApmC,GAAAE,YAyNA,IAAAvD,KACA0pC,IAAA,GACA36C,EAAA,IACA46C,EAAA,KACGjlC,GAAA,UAAAM,GAAA,IAkGH39D,IAAAm2D,OAAA,SAAAA,GACA,OACAosC,aAAArsC,GAAAC,GACAqsC,WAAAjqC,GAAApC,IAGA,IAAAssC,IAAAziG,GAAAm2D,QACA/Q,QAAA,IACAkR,UAAA,IACAE,UAAA,GACAE,UAAA,QACAkE,SAAA,iBACAp7C,KAAA,WACAhV,KAAA,WACAwwD,SAAA,WACAE,MAAA,wEACAE,WAAA,2CACAE,QAAA,+GACAE,aAAA,0EAEAx7D,IAAAzH,OAAAkqG,GAAAF,aACAviG,GAAA0iG,OAEA7kC,GAAAn/D,WACAmI,EAAA,EACA4T,EAAA,EACAC,IAAA,SAAA5Z,GACAg9D,GAAAh9D,EAAA3E,KAAAse,EAAAkoF,IACA7kC,GAAA6kC,GAAA97F,EAAA1K,KAAA0K,EAAA1K,MACAA,KAAA0K,EAAA1K,KAAAse,GAAAkoF,GAAAloF,EAA2Cte,KAAA0K,EAAA87F,GAAAloF,GAE3CymB,MAAA,WACA/kC,KAAA0K,EAAA1K,KAAAse,EAAA,GAEAqmF,QAAA,WACA,MAAA3kG,MAAA0K,GAGA,IAAA87F,IAAA,GAAA9kC,GAKA79D,IAAA0iG,IAAAj4B,OAAA,SAAA9tE,EAAAusD,GACAvsD,GAAAimG,GAAAxkC,eAAAzhE,EAAArB,MACAsnG,GAAAjmG,EAAArB,MAAAqB,EAAAusD,GAEA+U,GAAAthE,EAAAusD,GAQA,IAAA05C,KACAC,QAAA,SAAAC,EAAA55C,GACA+U,GAAA6kC,EAAA5kC,SAAAhV,IAEA65C,kBAAA,SAAApmG,EAAAusD,GAEA,IADA,GAAA85C,GAAArmG,EAAAqmG,SAAA3hG,GAAA,EAAAge,EAAA2jF,EAAAjqG,SACAsI,EAAAge,GAAA4+C,GAAA+kC,EAAA3hG,GAAA68D,SAAAhV,KAGAiV,IACA8kC,OAAA,SAAAtmG,EAAAusD,GACAA,EAAAib,UAEA++B,MAAA,SAAAvmG,EAAAusD,GACAvsD,IAAA2hE,YACApV,EAAAsG,MAAA7yD,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAwmG,WAAA,SAAAxmG,EAAAusD,GAEA,IADA,GAAAoV,GAAA3hE,EAAA2hE,YAAAj9D,GAAA,EAAAge,EAAAi/C,EAAAvlE,SACAsI,EAAAge,GAAA1iB,EAAA2hE,EAAAj9D,GAAA6nD,EAAAsG,MAAA7yD,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAymG,WAAA,SAAAzmG,EAAAusD,GACAmV,GAAA1hE,EAAA2hE,YAAApV,EAAA,IAEAm6C,gBAAA,SAAA1mG,EAAAusD,GAEA,IADA,GAAAoV,GAAA3hE,EAAA2hE,YAAAj9D,GAAA,EAAAge,EAAAi/C,EAAAvlE,SACAsI,EAAAge,GAAAg/C,GAAAC,EAAAj9D,GAAA6nD,EAAA,IAEAo6C,QAAA,SAAA3mG,EAAAusD,GACAwV,GAAA/hE,EAAA2hE,YAAApV,IAEAq6C,aAAA,SAAA5mG,EAAAusD,GAEA,IADA,GAAAoV,GAAA3hE,EAAA2hE,YAAAj9D,GAAA,EAAAge,EAAAi/C,EAAAvlE,SACAsI,EAAAge,GAAAq/C,GAAAJ,EAAAj9D,GAAA6nD,IAEAs6C,mBAAA,SAAA7mG,EAAAusD,GAEA,IADA,GAAAu6C,GAAA9mG,EAAA8mG,WAAApiG,GAAA,EAAAge,EAAAokF,EAAA1qG,SACAsI,EAAAge,GAAA4+C,GAAAwlC,EAAApiG,GAAA6nD,IAeAlpD,IAAA0iG,IAAAxiE,KAAA,SAAAvjC,GAGA,MAFA+mG,IAAA,EACA1jG,GAAA0iG,IAAAj4B,OAAA9tE,EAAAkjE,IACA6jC,GAEA,IAAAA,IAAAhkC,GAAA,GAAA7B,IACAgC,IACAsE,OAAA,WACAu/B,IAAA,EAAAhzC,IAEAlB,MAAA5G,EACA4V,UAAA5V,EACA6V,QAAA7V,EACA+V,aAAA,WACAe,GAAAx+B,QACA2+B,GAAArB,UAAAK,IAEAD,WAAA,WACA,GAAA1+B,GAAA,EAAAw/B,EACAgkC,KAAAxjE,EAAA,IAAAwwB,GAAAxwB,IACA2/B,GAAArB,UAAAqB,GAAApB,QAAAoB,GAAArQ,MAAA5G,GAmDA5oD,IAAA0iG,IAAAiB,OAAA,WAsBA,QAAAn0C,GAAAuP,EAAAC,GACA4kC,EAAAlpG,KAAA8J,GAAA06D,EAAAH,EAAA0F,EAAA1F,IACAC,EAAAuF,MAAAvF,GACAA,EAAA0F,MAAA1F,GAEA,QAAAuJ,GAAAxJ,EAAAC,GACA,GAAAzsC,GAAAutC,IAAAf,EAAA7M,GAAA8M,EAAA9M,IACA,IAAAqQ,EAAA,CACA,GAAAshC,GAAA5jC,GAAAsC,EAAAhwC,GAAAuxE,GAAAD,EAAA,IAAAA,EAAA,MAAAE,EAAA9jC,GAAA6jC,EAAAD,EACAxjC,IAAA0jC,GACAA,EAAAzjC,GAAAyjC,EACA,IAAA9kC,GAAAF,EAAAilC,EAAAn9F,EAAAo4D,EAAA,OAAAglC,EAAAF,EAAA,GAAArxC,GAAA7rD,EAAA4+D,EAAA/3C,GAAAuxC,GAAA,GACA,IAAAwG,GAAA5+D,EAAAm9F,EAAAC,KAAAp9F,EAAAk4D,GAAA,CACA,GAAAmlC,GAAAH,EAAA,GAAArxC,EACAwxC,GAAAx/B,MAAAw/B,OACS,IAAAD,KAAA,aAAAx+B,GAAA5+D,EAAAm9F,EAAAC,KAAAp9F,EAAAk4D,GAAA,CACT,GAAAmlC,IAAAH,EAAA,GAAArxC,EACAwxC,GAAA3/B,MAAA2/B,OAEAllC,GAAAuF,MAAAvF,GACAA,EAAA0F,MAAA1F,EAEAyG,GACA1G,EAAAilC,EACAxkD,EAAA0f,EAAAH,GAAAvf,EAAA0f,EAAAuF,OAAA1F,GAEAvf,EAAAuf,EAAA0F,GAAAjlB,EAAA0f,EAAAuF,KAAAvF,EAAAH,GAGA0F,GAAAvF,GACAH,EAAAG,MAAAH,GACAA,EAAA0F,MAAA1F,IAEAA,EAAAilC,EACAxkD,EAAA0f,EAAAH,GAAAvf,EAAA0f,EAAAuF,OAAA1F,GAEAvf,EAAAuf,EAAA0F,GAAAjlB,EAAA0f,EAAAuF,KAAAvF,EAAAH,OAKAvP,GAAAuP,EAAAC,EAEAuD,GAAAhwC,EAAAyxE,EAAAjlC,EAEA,QAAAP,KACAgiB,EAAAhxB,MAAA+Y,EAEA,QAAA9J,KACAj6D,EAAA,GAAA06D,EAAA16D,EAAA,GAAAigE,EACA+b,EAAAhxB,QACA+S,EAAA,KAEA,QAAAyJ,GAAAjN,EAAAC,GACA,GAAAuD,EAAA,CACA,GAAAtD,GAAAF,EAAAilC,CACAG,IAAAz2E,GAAAuxC,GAAA,IAAAA,KAAA,YAAAA,MACOmlC,GAAArlC,EAAAslC,EAAArlC,CACPa,IAAArQ,MAAAuP,EAAAC,GACAuJ,EAAAxJ,EAAAC,GAEA,QAAAuE,KACA1D,GAAArB,YAEA,QAAAgF,KACAwI,EAAAo4B,EAAAC,GACAxkC,GAAApB,UACA/wC,GAAAy2E,GAAA1jC,KAAAvB,IAAAuF,EAAA,MACAjgE,EAAA,GAAA06D,EAAA16D,EAAA,GAAAigE,EACAlC,EAAA,KAEA,QAAA/iB,GAAA0f,EAAAuF,GACA,OAAAA,GAAAvF,GAAA,EAAAuF,EAAA,IAAAA,EAEA,QAAA6/B,GAAA/yE,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAEA,QAAA+yE,GAAA1pG,EAAA2J,GACA,MAAAA,GAAA,IAAAA,EAAA,GAAAA,EAAA,IAAA3J,MAAA2J,EAAA,GAAA3J,EAAA2J,EAAA,IAAAA,EAAA,GAAA3J,EAnGA,GAAAqkE,GAAAqF,EAAAE,EAAAC,EAAAs/B,EAAAI,EAAAC,EAAA9hC,EAAA4hC,EAAAP,EAAAp/F,EACAg8E,GACAhxB,QACAgP,YACAC,UACAE,aAAA,WACA6hB,EAAAhxB,MAAAwc,EACAwU,EAAAhiB,UAAA+E,EACAid,EAAA/hB,QAAA+E,EACA2gC,EAAA,EACAtkC,GAAAlB,gBAEAC,WAAA,WACAiB,GAAAjB,aACA4hB,EAAAhxB,QACAgxB,EAAAhiB,YACAgiB,EAAA/hB,UACAiB,GAAA,GAAAR,IAAAuF,EAAA,KAAAF,IAAAG,EAAA,KAAsEy/B,EAAA1jC,GAAAiE,EAAA,GAA6By/B,GAAA1jC,KAAA8D,GAAA,IACnG//D,EAAA,GAAA06D,EAAA16D,EAAA,GAAAigE,GAmFA,iBAAAq+B,GACAp+B,EAAAD,IAAAvF,EAAAqF,EAAAx8D,KACA67F,KACA5jG,GAAA0iG,IAAAj4B,OAAAq4B,EAAAtiB,EACA,IAAAnhE,GAAAukF,EAAA7qG,MACA,IAAAsmB,EAAA,CACAukF,EAAAtyE,KAAAgzE,EACA,QAAA9yE,GAAAnwB,EAAA,EAAAkwB,EAAAqyE,EAAA,GAAAzV,GAAA58D,GAAyDlwB,EAAAge,IAAOhe,EAChEmwB,EAAAoyE,EAAAviG,GACAkjG,EAAA/yE,EAAA,GAAAD,IAAAgzE,EAAA/yE,EAAA,GAAAD,IACAiuB,EAAAjuB,EAAA,GAAAC,EAAA,IAAAguB,EAAAjuB,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,IACAguB,EAAAhuB,EAAA,GAAAD,EAAA,IAAAiuB,EAAAjuB,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,KAEA28D,EAAAzzF,KAAA62B,EAAAC,EAIA,QADAytC,GACAztC,EADAgzE,IAAAz8F,KACAsX,EAAA8uE,EAAAp1F,OAAA,EAAAsI,EAAA,EAAAkwB,EAAA48D,EAAA9uE,GAAgEhe,GAAAge,EAAQkS,EAAAC,IAAAnwB,EACxEmwB,EAAA28D,EAAA9sF,IACA49D,EAAAzf,EAAAjuB,EAAA,GAAAC,EAAA,KAAAgzE,MAAAvlC,EAAAC,EAAA1tC,EAAA,GAAAizC,EAAAlzC,EAAA,IAIA,MADAqyE,GAAAp/F,EAAA,KACA06D,IAAAn3D,KAAAw8D,IAAAx8D,MAAA4L,sBAAAurD,EAAAqF,IAAAE,EAAAC,QAGA1kE,GAAA0iG,IAAAnxD,SAAA,SAAA50C,GACAikE,GAAAM,GAAAL,GAAAC,GAAAC,GAAAI,GAAAC,GAAAC,GAAAK,GAAAC,GAAAC,GAAA,EACA5hE,GAAA0iG,IAAAj4B,OAAA9tE,EAAA2kE,GACA,IAAAzmE,GAAA6mE,GAAA5gE,EAAA6gE,GAAA/pB,EAAAgqB,GAAAtpE,EAAAuC,IAAAiG,IAAA82C,GACA,OAAAt/C,GAAAk9E,KACA36E,EAAAsmE,GAAArgE,EAAAsgE,GAAAxpB,EAAAypB,GACAH,GAAAT,KAAA5lE,EAAAgmE,GAAA//D,EAAAggE,GAAAlpB,EAAAmpB,IACAzoE,EAAAuC,IAAAiG,IAAA82C,IACAt/C,EAAAk9E,KAAA7hE,UAEAjc,KAAA+6D,MAAA3xD,EAAAjG,GAAA63D,GAAA9B,GAAAhZ,EAAAlgD,KAAAy8B,KAAA77B,IAAAo6D,IAEA,IAAAkO,IAAAM,GAAAL,GAAAC,GAAAC,GAAAI,GAAAC,GAAAC,GAAAK,GAAAC,GAAAC,GACAN,IACA6C,OAAAvb,EACA4G,MAAAkR,GACAlC,UAAAwC,GACAvC,QAAA8C,GACA5C,aAAA,WACA2C,GAAA9C,UAAAgD,IAEA5C,WAAA,WACA0C,GAAA9C,UAAAwC,KAqRA6M,GAAA9K,GAAAf,GAAAsC,GAAAU,KAAAtU,OAAA,IAsPAqY,GAAA,GACA/oE,IAAA0iG,IAAA10B,WAAA,WACA,GAAAxvC,GAAAlC,EAAArqB,EAAAE,EAAAs4D,EAAApI,EAAA2L,GACAvD,OAAA,SAAAwD,GAIA,MAHAxD,OAAAiD,OAAA,GACAjD,EAAApI,EAAA4L,GACAxD,EAAAiD,OAAA,EACAjD,GAEA17D,OAAA,SAAA24C,GACA,MAAArgD,WAAAtO,QACAspE,EAAA0F,GAAAvpC,GAAAkpB,EAAA,MAAAprB,GAAAorB,EAAA,MAAAz1C,GAAAy1C,EAAA,MAAAv1C,GAAAu1C,EAAA,OACA+iB,MAAAiD,OAAA,EAAAjD,EAAA,MACAuD,KAHAxvC,EAAAlC,IAAArqB,EAAAE,KAMA,OAAA67D,GAAAj/D,SAAA,mBA4JA/O,GAAA0iG,IAAA+B,eAAA,WACA,MAAAv7B,IAAAI,MACGt/C,IAAAs/C,GACHtpE,GAAA0iG,IAAAgC,OAAA,WACA,MAAA1kG,IAAA0iG,IAAA+B,iBAAA9/F,QAAA,OAAA0oB,SAAA,UAAAg8C,WAAA,YAAAjoE,MAAA,OAEApB,GAAA0iG,IAAAiC,UAAA,WASA,QAAAA,GAAArmC,GACA,GAAAzjE,GAAAyjE,EAAA,GAAAx9D,EAAAw9D,EAAA,EAGA,OAFA9O,GAAA,KACAo1C,EAAA/pG,EAAAiG,GAAA0uD,IAAAq1C,EAAAhqG,EAAAiG,GAAA0uD,IAAAs1C,EAAAjqG,EAAAiG,GACA0uD,EAZA,GAGAA,GAIKo1C,EAAAC,EAAAC,EAPLC,EAAA/kG,GAAA0iG,IAAAgC,SACAM,EAAAhlG,GAAA0iG,IAAA+B,iBAAA9/F,QAAA,QAAA0oB,SAAA,SAAAg8C,WAAA,QACA47B,EAAAjlG,GAAA0iG,IAAA+B,iBAAA9/F,QAAA,QAAA0oB,SAAA,SAAAg8C,WAAA,OACA67B,GACA11C,MAAA,SAAA30D,EAAAiG,GACA0uD,GAAA30D,EAAAiG,IAsEA,OA7DA6jG,GAAA5iC,OAAA,SAAAzD,GACA,GAAA3yC,GAAAo5E,EAAA3jG,QAAAqZ,EAAAsqF,EAAAnzD,YAAA/2C,GAAAyjE,EAAA,GAAA7jD,EAAA,IAAAkR,EAAA7qB,GAAAw9D,EAAA,GAAA7jD,EAAA,IAAAkR,CACA,QAAA7qB,GAAA,KAAAA,EAAA,MAAAjG,IAAA,MAAAA,GAAA,KAAAmqG,EAAAlkG,GAAA,MAAAA,EAAA,MAAAjG,IAAA,MAAAA,GAAA,KAAAoqG,EAAAF,GAAAhjC,OAAAzD,IAEAqmC,EAAAl6B,OAAA,SAAAA,GACA,GAAA06B,GAAAJ,EAAAt6B,UAAA26B,EAAAJ,EAAAv6B,UAAA46B,EAAAJ,EAAAx6B,SACA,QACAjb,MAAA,SAAA30D,EAAAiG,GACAqkG,EAAA31C,MAAA30D,EAAAiG,GACAskG,EAAA51C,MAAA30D,EAAAiG,GACAukG,EAAA71C,MAAA30D,EAAAiG,IAEAqjE,OAAA,WACAghC,EAAAhhC,SACAihC,EAAAjhC,SACAkhC,EAAAlhC,UAEA3F,UAAA,WACA2mC,EAAA3mC,YACA4mC,EAAA5mC,YACA6mC,EAAA7mC,aAEAC,QAAA,WACA0mC,EAAA1mC,UACA2mC,EAAA3mC,UACA4mC,EAAA5mC,WAEAE,aAAA,WACAwmC,EAAAxmC,eACAymC,EAAAzmC,eACA0mC,EAAA1mC,gBAEAC,WAAA,WACAumC,EAAAvmC,aACAwmC,EAAAxmC,aACAymC,EAAAzmC,gBAIA+lC,EAAAvtC,UAAA,SAAA1P,GACA,MAAArgD,WAAAtO,QACAgsG,EAAA3tC,UAAA1P,GACAs9C,EAAA5tC,UAAA1P,GACAu9C,EAAA7tC,UAAA1P,GACAi9C,GAJAI,EAAA3tC,aAMAutC,EAAAvjG,MAAA,SAAAsmD,GACA,MAAArgD,WAAAtO,QACAgsG,EAAA3jG,MAAAsmD,GACAs9C,EAAA5jG,MAAA,IAAAsmD,GACAu9C,EAAA7jG,MAAAsmD,GACAi9C,EAAA/yD,UAAAmzD,EAAAnzD,cAJAmzD,EAAA3jG,SAMAujG,EAAA/yD,UAAA,SAAA8V,GACA,IAAArgD,UAAAtO,OAAA,MAAAgsG,GAAAnzD,WACA,IAAAjmB,GAAAo5E,EAAA3jG,QAAAvG,GAAA6sD,EAAA,GAAA5mD,GAAA4mD,EAAA,EAIA,OAHAk9C,GAAAG,EAAAnzD,UAAA8V,GAAAsmB,aAAAnzE,EAAA,KAAA8wB,EAAA7qB,EAAA,KAAA6qB,IAAA9wB,EAAA,KAAA8wB,EAAA7qB,EAAA,KAAA6qB,KAAA8+C,OAAAy6B,GAAA11C,MACAq1C,EAAAG,EAAApzD,WAAA/2C,EAAA,KAAA8wB,EAAA7qB,EAAA,KAAA6qB,IAAAqiD,aAAAnzE,EAAA,KAAA8wB,EAAA80C,GAAA3/D,EAAA,IAAA6qB,EAAA80C,KAAA5lE,EAAA,KAAA8wB,EAAA80C,GAAA3/D,EAAA,KAAA6qB,EAAA80C,MAAAgK,OAAAy6B,GAAA11C,MACAs1C,EAAAG,EAAArzD,WAAA/2C,EAAA,KAAA8wB,EAAA7qB,EAAA,KAAA6qB,IAAAqiD,aAAAnzE,EAAA,KAAA8wB,EAAA80C,GAAA3/D,EAAA,KAAA6qB,EAAA80C,KAAA5lE,EAAA,KAAA8wB,EAAA80C,GAAA3/D,EAAA,KAAA6qB,EAAA80C,MAAAgK,OAAAy6B,GAAA11C,MACAm1C,GAEAA,EAAAvjG,MAAA,MAEA,IAAAkkG,IAAAz7B,GA2BAK,GAAAE,GAAAD,GAAAE,GA3BAL,IACAxa,MAAA5G,EACA4V,UAAA5V,EACA6V,QAAA7V,EACA+V,aAAA,WACAkL,GAAA,EACAG,GAAAxL,UAAAoL,IAEAhL,WAAA,WACAoL,GAAAxL,UAAAwL,GAAAvL,QAAAuL,GAAAxa,MAAA5G,EACA08C,IAAA53E,GAAAm8C,GAAA,KAkBA07B,IACA/1C,MAAAya,GACAzL,UAAA5V,EACA6V,QAAA7V,EACA+V,aAAA/V,EACAgW,WAAAhW,GAwDAmiB,IACAvb,MAAAqb,GACArM,UAAAsM,GACArM,QAAAuM,GACArM,aAAA,WACAoM,GAAAvM,UAAAyM,IAEArM,WAAA,WACAmM,GAAAvb,MAAAqb,GACAE,GAAAvM,UAAAsM,GACAC,GAAAtM,QAAAuM,IAoKAhrE,IAAA0iG,IAAAz8F,KAAA,WAEA,QAAAA,GAAAtJ,GAMA,MALAA,KACA,kBAAAiuE,IAAA46B,EAAA56B,eAAArpE,MAAApF,KAAAkL,YACAo+F,KAAA/3B,QAAA+3B,EAAAC,EAAAF,IACAxlG,GAAA0iG,IAAAj4B,OAAA9tE,EAAA8oG,IAEAD,EAAA9xC,SAiCA,QAAAxyB,KAEA,MADAukE,GAAA,KACAx/F,EA1CA,GAAAinE,GAAA92B,EAAAsvD,EAAAF,EAAAC,EAAA76B,EAAA,GA4CA,OAnCA3kE,GAAAi6B,KAAA,SAAAvjC,GAGA,MAFA2oG,IAAA,EACAtlG,GAAA0iG,IAAAj4B,OAAA9tE,EAAA+oG,EAAA17B,KACAs7B,IAEAr/F,EAAAsrC,SAAA,SAAA50C,GAGA,MAFAkkE,IAAAC,GAAAC,GAAAI,GAAAC,GAAAC,GAAAK,GAAAC,GAAAC,GAAA,EACA5hE,GAAA0iG,IAAAj4B,OAAA9tE,EAAA+oG,EAAA36B,KACAnJ,IAAAF,GAAAE,GAAAD,GAAAC,IAAAP,IAAAF,GAAAE,GAAAD,GAAAC,IAAAN,IAAAF,GAAAE,GAAAD,GAAAC,KAAAptD,UAEA1N,EAAA09F,OAAA,SAAAhnG,GAGA,MAFAwtE,IAAAE,KAAAH,GAAAE,GAAAriE,KACA/H,GAAA0iG,IAAAj4B,OAAA9tE,EAAA+oG,EAAAH,OACAr7B,GAAAE,KAAAD,GAAAE,MAEApkE,EAAAinE,WAAA,SAAAxlB,GACA,MAAArgD,WAAAtO,QACA2sG,GAAAx4B,EAAAxlB,KAAA+iB,QAAAqC,GAAAplB,GAAAW,EACAnnB,KAFAgsC,GAIAjnE,EAAAmwC,QAAA,SAAAsR,GACA,MAAArgD,WAAAtO,QACAysG,EAAA,OAAApvD,EAAAsR,GAAA,GAAA4iB,IAAA,GAAAY,IAAAxjB,GACA,kBAAAkjB,IAAA46B,EAAA56B,eACA1pC,KAHAkV,GAKAnwC,EAAA2kE,YAAA,SAAAljB,GACA,MAAArgD,WAAAtO,QACA6xE,EAAA,kBAAAljB,MAAA89C,EAAA56B,aAAAljB,OACAzhD,GAFA2kE,GAQA3kE,EAAAinE,WAAAltE,GAAA0iG,IAAAiC,aAAAvuD,QAAA,OAUAp2C,GAAA0iG,IAAAjoD,UAAA,SAAA0wC,GACA,OACA1gB,OAAA,SAAAA,GACA,GAAAhwB,GAAA,GAAAuyB,IAAAvC,EACA,QAAA9+C,KAAAw/D,GAAA1wC,EAAA9uB,GAAAw/D,EAAAx/D,EACA,OAAA8uB,MAOAuyB,GAAAtuE,WACA8wD,MAAA,SAAA30D,EAAAiG,GACA3E,KAAAsuE,OAAAjb,MAAA30D,EAAAiG,IAEAqjE,OAAA,WACAhoE,KAAAsuE,OAAAtG,UAEA3F,UAAA,WACAriE,KAAAsuE,OAAAjM,aAEAC,QAAA,WACAtiE,KAAAsuE,OAAAhM,WAEAE,aAAA;AACAxiE,KAAAsuE,OAAA9L,gBAEAC,WAAA,WACAziE,KAAAsuE,OAAA7L,eAuBA5+D,GAAA0iG,IAAAx1B,WAAAD,GACAjtE,GAAA0iG,IAAAiD,kBAAAv8B,IAsFAppE,GAAA0iG,IAAAkD,gBAAA,WACA,MAAA34B,IAAAiB,MACGlkD,IAAAkkD,GAAAnM,OAAAmM,GACHluE,GAAA0iG,IAAAn0B,SAAA,SAAA5pE,GAEA,QAAA4kE,GAAAjL,GAEA,MADAA,GAAA35D,EAAA25D,EAAA,GAAApM,GAAAoM,EAAA,GAAApM,IACAoM,EAAA,IAAA5L,GAAA4L,EAAA,IAAA5L,GAAA4L,EAMA,MATA35D,GAAA2oE,GAAA3oE,EAAA,OAAAutD,GAAAvtD,EAAA,GAAAutD,GAAAvtD,EAAA5L,OAAA,EAAA4L,EAAA,GAAAutD,GAAA,GAKAqX,EAAAxH,OAAA,SAAAzD,GAEA,MADAA,GAAA35D,EAAAo9D,OAAAzD,EAAA,GAAApM,GAAAoM,EAAA,GAAApM,IACAoM,EAAA,IAAA5L,GAAA4L,EAAA,IAAA5L,GAAA4L,GAEAiL,GAKA4E,GAAApM,OAAAmM,GA0BAluE,GAAA0iG,IAAA7hE,OAAA,WAEA,QAAAA,KACA,GAAAxT,GAAA,kBAAAkM,KAAAh4B,MAAApF,KAAAkL,WAAAkyB,EAAA50B,EAAA2oE,IAAAjgD,EAAA,GAAA6kC,IAAA7kC,EAAA,GAAA6kC,GAAA,GAAA6P,OAAAsB,IAOA,OANA3kC,GAAA,aACA8wB,MAAA,SAAA30D,EAAAiG,GACAuiE,EAAA3oE,KAAAG,EAAA8J,EAAA9J,EAAAiG,IACAjG,EAAA,IAAA63D,GAAA73D,EAAA,IAAA63D,OAIAp3D,KAAA,UACAgjE,aAAA+E,IAXA,GAAA7jB,GAAA9gB,EAAAnF,GAAA,KAAA69B,EAAA,CA6BA,OAfAv2B,GAAAtH,OAAA,SAAA1+B,GACA,MAAAwM,WAAAtO,QACAwgC,EAAA1+B,EACAgmC,GAFAtH,GAIAsH,EAAA2e,MAAA,SAAA3kD,GACA,MAAAwM,WAAAtO,QACA2lC,EAAA+oC,IAAAjoB,GAAA3kD,GAAAq3D,GAAAkF,EAAAlF,IACArxB,GAFA2e,GAIA3e,EAAAu2B,UAAA,SAAA1P,GACA,MAAArgD,WAAAtO,QACA2lC,EAAA+oC,GAAAjoB,EAAA0S,IAAAkF,GAAA1P,GAAAwK,IACArxB,GAFAu2B,GAIAv2B,EAAA2e,MAAA,KA0BAx/C,GAAA0iG,IAAA/yB,SAAA,SAAAp+C,EAAAC,GACA,GAAA/W,GAAAorF,GAAAr0E,EAAA,GAAAD,EAAA,IAAA2gC,GAAAqS,EAAAhzC,EAAA,GAAA2gC,GAAAwS,EAAAlzC,EAAA,GAAA0gC,GAAA4zC,EAAApuG,KAAAoN,IAAA+gG,GAAAh2B,EAAAn4E,KAAAmkC,IAAAgqE,GAAAtmC,EAAA7nE,KAAAoN,IAAAy/D,GAAA9E,EAAA/nE,KAAAmkC,IAAA0oC,GAAAwhC,EAAAruG,KAAAoN,IAAA4/D,GAAAG,EAAAntE,KAAAmkC,IAAA6oC,EACA,OAAAhtE,MAAA+6D,MAAA/6D,KAAAy8B,MAAA1Z,EAAAoqD,EAAAihC,GAAArrF,KAAAglD,EAAAsmC,EAAAxmC,EAAAsF,EAAAgL,GAAAp1D,GAAA8kD,EAAAwmC,EAAAtmC,EAAAoF,EAAAgL,IAEA7vE,GAAA0iG,IAAAsD,UAAA,WAEA,QAAAA,KACA,OACA1qG,KAAA,kBACAgjE,YAAAzgC,KAGA,QAAAA,KACA,MAAA79B,IAAAwE,MAAA9M,KAAAiJ,KAAAslG,EAAAC,KAAAC,EAAAD,GAAAt/F,IAAA4zD,GAAA72D,OAAA3D,GAAAwE,MAAA9M,KAAAiJ,KAAAylG,EAAAC,KAAAC,EAAAD,GAAAz/F,IAAAw1D,IAAAz4D,OAAA3D,GAAAwE,MAAA9M,KAAAiJ,KAAA69B,EAAAv3B,KAAAgL,EAAAhL,GAAAzN,OAAA,SAAAqB,GACA,MAAA6yB,IAAA7yB,EAAAqrG,GAAAzlC,KACO75D,IAAA/L,IAAA8I,OAAA3D,GAAAwE,MAAA9M,KAAAiJ,KAAA27B,EAAAp4B,KAAAiO,EAAAjO,GAAA1K,OAAA,SAAAsH,GACP,MAAA4sB,IAAA5sB,EAAAulG,GAAA5lC,KACO75D,IAAA9F,IAZP,GAAAmR,GAAAusB,EAAA2nE,EAAAF,EAAA9zF,EAAAmqB,EAAAgqE,EAAAF,EAAAvrG,EAAAiG,EAAA05D,EAAA4B,EAAAn1D,EAAA,GAAA/C,EAAA+C,EAAAi/F,EAAA,GAAAG,EAAA,IAAAjvC,EAAA,GAuEA,OAzDA4uC,GAAAnoE,MAAA,WACA,MAAAA,KAAAj3B,IAAA,SAAA03D,GACA,OACAhjE,KAAA,aACAgjE,kBAIA0nC,EAAAO,QAAA,WACA,OACAjrG,KAAA,UACAgjE,aAAA9D,EAAAyrC,GAAAtiG,OAAAy4D,EAAAkqC,GAAA1iG,MAAA,GAAA42D,EAAA2rC,GAAAp4E,UAAAnqB,MAAA,GAAAw4D,EAAAgqC,GAAAr4E,UAAAnqB,MAAA,OAGAoiG,EAAAj3F,OAAA,SAAA24C,GACA,MAAArgD,WAAAtO,OACAitG,EAAAQ,YAAA9+C,GAAA++C,YAAA/+C,GADAs+C,EAAAS,eAGAT,EAAAQ,YAAA,SAAA9+C,GACA,MAAArgD,WAAAtO,QACAktG,GAAAv+C,EAAA,MAAAy+C,GAAAz+C,EAAA,MACA0+C,GAAA1+C,EAAA,MAAA4+C,GAAA5+C,EAAA,MACAu+C,EAAAE,IAAAz+C,EAAAu+C,IAAAE,IAAAz+C,GACA0+C,EAAAE,IAAA5+C,EAAA0+C,IAAAE,IAAA5+C,GACAs+C,EAAA5uC,gBALA6uC,EAAAG,IAAAD,EAAAG,KAOAN,EAAAS,YAAA,SAAA/+C,GACA,MAAArgD,WAAAtO,QACAylC,GAAAkpB,EAAA,MAAAz1C,GAAAy1C,EAAA,MACAprB,GAAAorB,EAAA,MAAAv1C,GAAAu1C,EAAA,MACAlpB,EAAAvsB,IAAAy1C,EAAAlpB,IAAAvsB,IAAAy1C,GACAprB,EAAAnqB,IAAAu1C,EAAAprB,IAAAnqB,IAAAu1C,GACAs+C,EAAA5uC,gBALA54B,EAAAlC,IAAArqB,EAAAE,KAOA6zF,EAAAl9D,KAAA,SAAA4e,GACA,MAAArgD,WAAAtO,OACAitG,EAAAU,UAAAh/C,GAAAi/C,UAAAj/C,GADAs+C,EAAAW,aAGAX,EAAAU,UAAA,SAAAh/C,GACA,MAAArgD,WAAAtO,QACAmtG,GAAAx+C,EAAA,GAAA2+C,GAAA3+C,EAAA,GACAs+C,IAFAE,EAAAG,IAIAL,EAAAW,UAAA,SAAAj/C,GACA,MAAArgD,WAAAtO,QACAkO,GAAAygD,EAAA,GAAAxjD,GAAAwjD,EAAA,GACAs+C,IAFA/+F,EAAA/C,IAIA8hG,EAAA5uC,UAAA,SAAA1P,GACA,MAAArgD,WAAAtO,QACAq+D,GAAA1P,EACA7sD,EAAAi0E,GAAAxyC,EAAAnqB,EAAA,IACArR,EAAAiuE,GAAAvwC,EAAAvsB,EAAAmlD,GACAoD,EAAAsU,GAAAs3B,EAAAE,EAAA,IACAlqC,EAAA2S,GAAAk3B,EAAAE,EAAA/uC,GACA4uC,GANA5uC,GAQA4uC,EAAAQ,eAAA,QAAA/lC,KAAA,OAAAA,MAAAgmC,eAAA,QAAAhmC,KAAA,OAAAA,OAwBAzgE,GAAA0iG,IAAAkE,SAAA,WAEA,QAAAA,KACA,OACAtrG,KAAA,aACAgjE,aAAAuoC,GAAAzgD,EAAA7kD,MAAApF,KAAAkL,WAAAy/F,GAAAtnG,EAAA+B,MAAApF,KAAAkL,aAJA,GAAAw/F,GAAAC,EAAA1gD,EAAA4oB,GAAAxvE,EAAAyvE,EAuBA,OAhBA23B,GAAAj3B,SAAA,WACA,MAAA3vE,IAAA0iG,IAAA/yB,SAAAk3B,GAAAzgD,EAAA7kD,MAAApF,KAAAkL,WAAAy/F,GAAAtnG,EAAA+B,MAAApF,KAAAkL,aAEAu/F,EAAAxgD,OAAA,SAAAsB,GACA,MAAArgD,WAAAtO,QACAqtD,EAAAsB,EAAAm/C,EAAA,kBAAAn/C,GAAA,KAAAA,EACAk/C,GAFAxgD,GAIAwgD,EAAApnG,OAAA,SAAAkoD,GACA,MAAArgD,WAAAtO,QACAyG,EAAAkoD,EAAAo/C,EAAA,kBAAAp/C,GAAA,KAAAA,EACAk/C,GAFApnG,GAIAonG,EAAAxvC,UAAA,WACA,MAAA/vD,WAAAtO,OAAA6tG,EAAA,GAEAA,GAEA5mG,GAAA0iG,IAAAhkE,YAAA,SAAA0nB,EAAA5mD,GACA,MAAA0vE,IAAA9oB,EAAA,GAAA8L,GAAA9L,EAAA,GAAA8L,GAAA1yD,EAAA,GAAA0yD,GAAA1yD,EAAA,GAAA0yD,KAaAlyD,GAAA0iG,IAAA3pG,OAAA,SAAA4D,GAGA,MAFAmzE,IAAA,EACA9vE,GAAA0iG,IAAAj4B,OAAA9tE,EAAAozE,IACAD,GAEA,IAAAA,IACAC,IACA5L,OAAAvb,EACA4G,MAAA5G,EACA4V,UAAAoR,GACAnR,QAAA7V,EACA+V,aAAA/V,EACAgW,WAAAhW,GA4BAm+C,GAAA/2B,GAAA,SAAAg3B,GACA,MAAAtvG,MAAAy8B,KAAA,KAAA6yE,KACG,SAAAx9B,GACH,SAAA9xE,KAAAo5D,KAAA0Y,EAAA,MAEAxpE,GAAA0iG,IAAAuE,mBAAA,WACA,MAAAh6B,IAAA85B,MACG/8E,IAAA+8E,EACH,IAAAG,IAAAl3B,GAAA,SAAAg3B,GACA,GAAAx0E,GAAA96B,KAAAi5D,KAAAq2C,EACA,OAAAx0E,MAAA96B,KAAAoN,IAAA0tB,IACG61B,IACHroD,GAAA0iG,IAAAyE,qBAAA,WACA,MAAAl6B,IAAAi6B,MACGl9E,IAAAk9E,IAqBHlnG,GAAA0iG,IAAA0E,eAAA,WACA,MAAAl+B,IAAAmH,MACGrmD,IAAAqmD,IAcHrwE,GAAA0iG,IAAA2E,iBAAA,WACA,MAAAn+B,IAAAuH,MACGzmD,IAAAymD,EACH,IAAA62B,IAAAt3B,GAAA,SAAAg3B,GACA,SAAAA,GACGtvG,KAAAqtE,OACH/kE,GAAA0iG,IAAA6E,SAAA,WACA,MAAAt6B,IAAAq6B,MACGt9E,IAAAs9E,GAIH92B,GAAAzO,OAAA,SAAAlnE,EAAAiG,GACA,OAAAjG,EAAA,EAAAnD,KAAAqtE,KAAArtE,KAAAs5D,IAAAlwD,IAAA+vD,MA0BA7wD,GAAA0iG,IAAA8E,SAAA,WACA,MAAA72B,IAAAH,MACGxmD,IAAAwmD,EACH,IAAAi3B,IAAAz3B,GAAA,WACA,UACGt4E,KAAAo5D,OACH9wD,GAAA0iG,IAAAgF,aAAA,WACA,MAAAz6B,IAAAw6B,MACGz9E,IAAAy9E,EACH,IAAAE,IAAA33B,GAAA,SAAAg3B,GACA,YAAAA,IACG,SAAAx9B,GACH,SAAA9xE,KAAAqtE,KAAAyE,MAEAxpE,GAAA0iG,IAAAkF,cAAA,WACA,MAAA36B,IAAA06B,MACG39E,IAAA29E,GAIH92B,GAAA9O,OAAA,SAAAlnE,EAAAiG,GACA,QAAAA,EAAA,EAAApJ,KAAAqtE,KAAArtE,KAAAs5D,IAAAn2D,IAAAg2D,MAEA7wD,GAAA0iG,IAAAmF,mBAAA,WACA,GAAA36B,GAAAyD,GAAAE,IAAAxjD,EAAA6/C,EAAA7/C,OAAA1oB,EAAAuoE,EAAAvoE,MAQA,OAPAuoE,GAAA7/C,OAAA,SAAAq6B,GACA,MAAAA,GAAAr6B,IAAAq6B,EAAA,GAAAA,EAAA,MAAAA,EAAAr6B,KAAAq6B,EAAA,IAAAA,EAAA,MAEAwlB,EAAAvoE,OAAA,SAAA+iD,GACA,MAAAA,GAAA/iD,GAAA+iD,EAAA,GAAAA,EAAA,GAAAA,EAAA3uD,OAAA,EAAA2uD,EAAA,YAAAA,EAAA/iD,KACA+iD,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAEA/iD,GAAA,WACGqlB,IAAA6mD,GACH7wE,GAAA8nG,QAOA9nG,GAAA8nG,KAAA72B,KAAA,SAAA82B,GAGA,QAAA92B,GAAAt1E,GACA,GAAAA,EAAA5C,OAAA,UACA,IAAAsI,GAAAm1E,EAAAljB,GAAAz4D,GAAA47E,EAAAnjB,GAAAxyD,GAAAue,EAAA1jB,EAAA5C,OAAAomC,KAAA6oE,IACA,KAAA3mG,EAAA,EAAiBA,EAAAge,EAAOhe,IACxB89B,EAAAzkC,OAAA87E,EAAAn2E,KAAAlE,KAAAR,EAAA0F,OAAAo1E,EAAAp2E,KAAAlE,KAAAR,EAAA0F,SAGA,KADA89B,EAAA7N,KAAA6/C,IACA9vE,EAAA,EAAiBA,EAAAge,EAAOhe,IAAA2mG,EAAAttG,MAAAykC,EAAA99B,GAAA,IAAA89B,EAAA99B,GAAA,IACxB,IAAA4mG,GAAAj3B,GAAA7xC,GAAA+oE,EAAAl3B,GAAAg3B,GACAG,EAAAD,EAAA,KAAAD,EAAA,GAAAG,EAAAF,IAAAnvG,OAAA,KAAAkvG,IAAAlvG,OAAA,GAAA8qE,IACA,KAAAxiE,EAAA4mG,EAAAlvG,OAAA,EAAgCsI,GAAA,IAAQA,EAAAwiE,EAAAnpE,KAAAiB,EAAAwjC,EAAA8oE,EAAA5mG,IAAA,IACxC,KAAAA,GAAA8mG,EAAyB9mG,EAAA6mG,EAAAnvG,OAAAqvG,IAA8B/mG,EAAAwiE,EAAAnpE,KAAAiB,EAAAwjC,EAAA+oE,EAAA7mG,IAAA,IACvD,OAAAwiE,GAdA,GAAAhpE,GAAAi2E,GAAAhwE,EAAAiwE,EACA,OAAA1pE,WAAAtO,OAAAk4E,EAAA82B,IAeA92B,EAAAp2E,EAAA,SAAA6sD,GACA,MAAArgD,WAAAtO,QAAA8B,EAAA6sD,EAAAupB,GAAAp2E,GAEAo2E,EAAAnwE,EAAA,SAAA4mD,GACA,MAAArgD,WAAAtO,QAAA+H,EAAA4mD,EAAAupB,GAAAnwE,GAEAmwE,IAaAjxE,GAAA8nG,KAAAjkC,QAAA,SAAAvF,GAEA,MADAzU,IAAAyU,EAAA+pC,IACA/pC,EAEA,IAAA+pC,IAAAroG,GAAA8nG,KAAAjkC,QAAAnlE,YACA2pG,IAAAnoE,KAAA,WAEA,IADA,GAAA3O,GAAAlwB,GAAA,EAAAge,EAAAljB,KAAApD,OAAAy4B,EAAAr1B,KAAAkjB,EAAA,GAAA6gB,EAAA,IACA7+B,EAAAge,GACAkS,EAAAC,EACAA,EAAAr1B,KAAAkF,GACA6+B,GAAA3O,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,EAEA,UAAA0O,GAEAmoE,GAAA92D,SAAA,SAAA5lB,GACA,GAAA4F,GAAAiB,EAAAnxB,GAAA,EAAAge,EAAAljB,KAAApD,OAAA8B,EAAA,EAAAiG,EAAA,EAAA0wB,EAAAr1B,KAAAkjB,EAAA,EAEA,KADAhY,UAAAtO,SAAA4yB,GAAA,KAAAxvB,KAAA+jC,WACA7+B,EAAAge,GACAkS,EAAAC,EACAA,EAAAr1B,KAAAkF,GACAmxB,EAAAjB,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GACA12B,IAAA02B,EAAA,GAAAC,EAAA,IAAAgB,EACA1xB,IAAAywB,EAAA,GAAAC,EAAA,IAAAgB,CAEA,QAAA33B,EAAA8wB,EAAA7qB,EAAA6qB,IAEA08E,GAAAhmC,KAAA,SAAAD,GAEA,IADA,GAAA8gB,GAAAx3D,EAAApzB,EAAAk5B,EAAAgB,EAAAx6B,EAAA+C,EAAA62E,GAAAxP,GAAA/gE,GAAA,EAAAge,EAAAljB,KAAApD,OAAA64E,GAAAz1E,MAAAo1B,EAAAp1B,KAAAkjB,EAAA,KACAhe,EAAAge,GAAA,CAMA,IALA6jE,EAAA9gB,EAAAx+D,QACAw+D,EAAArpE,OAAA,EACAy4B,EAAAr1B,KAAAkF,GACAmxB,EAAA0wD,GAAA5qF,EAAA4qF,EAAAnqF,OAAAgC,GAAA,GACA2wB,GAAA,IACAA,EAAApzB,GACAN,EAAAkrF,EAAAx3D,GACA0lD,GAAAp5E,EAAAu5B,EAAAC,IACA4/C,GAAA5+C,EAAAjB,EAAAC,IACA4wC,EAAA1nE,KAAA22E,GAAA7+C,EAAAx6B,EAAAu5B,EAAAC,IAEA4wC,EAAA1nE,KAAA1C,IACSo5E,GAAA5+C,EAAAjB,EAAAC,IACT4wC,EAAA1nE,KAAA22E,GAAA7+C,EAAAx6B,EAAAu5B,EAAAC,IAEAgB,EAAAx6B,CAEA+C,IAAAqnE,EAAA1nE,KAAA0nE,EAAA,IACA7wC,EAAAC,EAEA,MAAA4wC,GAaA,IAAA0T,IAAAd,GAAA1C,GAAAsD,GAAAD,GAAAxD,MAAAuD,KAgIAlB,IAAA91E,UAAAw2E,QAAA,WAEA,IADA,GAAAnD,GAAA8C,EAAA14E,KAAAs4E,MAAAG,EAAAC,EAAA97E,OACA67E,KACA7C,EAAA8C,EAAAD,GAAA7C,KACAA,EAAAvgD,GAAAugD,EAAAxgD,GAAAsjD,EAAAp6E,OAAAm6E,EAAA,EAGA,OADAC,GAAAvjD,KAAA+jD,IACAR,EAAA97E,QA4MAo8E,GAAAz2E,WACAuC,MAAA,WACA,MAAA9E,MAAA41E,KAAApmC,IAAAxvC,KAAA61E,KAAA71E,KAAA41E,KAAAxgD,EAAAp1B,KAAA41E,KAAAvgD,GAEAyN,IAAA,WACA,MAAA9iC,MAAA41E,KAAApmC,IAAAxvC,KAAA61E,KAAA71E,KAAA41E,KAAAvgD,EAAAr1B,KAAA41E,KAAAxgD,IASAolD,GAAAj4E,WACAiH,OAAA,SAAAkyD,EAAAhwD,GACA,GAAAkzB,GAAAutE,EAAAC,CACA,IAAA1wC,EAAA,CAKA,GAJAhwD,EAAA6qE,EAAA7a,EACAhwD,EAAA+qE,EAAA/a,EAAA+a,EACA/a,EAAA+a,IAAA/a,EAAA+a,EAAAF,EAAA7qE,GACAgwD,EAAA+a,EAAA/qE,EACAgwD,EAAA8b,EAAA,CAEA,IADA9b,IAAA8b,EACA9b,EAAAmB,GAAAnB,IAAAmB,CACAnB,GAAAmB,EAAAnxD,MAEAgwD,GAAA8b,EAAA9rE,CAEAkzB,GAAA88B,MACO17D,MAAAurD,GACPmQ,EAAAkf,GAAA56E,KAAAurD,GACA7/C,EAAA6qE,EAAA,KACA7qE,EAAA+qE,EAAA/a,EACAA,EAAA6a,EAAA7a,EAAAmB,EAAAnxD,EACAkzB,EAAA88B,IAEAhwD,EAAA6qE,EAAA7qE,EAAA+qE,EAAA,KACAz2E,KAAAurD,EAAA7/C,EACAkzB,EAAA,KAMA,KAJAlzB,EAAAmxD,EAAAnxD,EAAA8rE,EAAA,KACA9rE,EAAAyxD,EAAAv+B,EACAlzB,EAAA4hE,GAAA,EACA5R,EAAAhwD,EACAkzB,KAAA0uC,GACA6+B,EAAAvtE,EAAAu+B,EACAv+B,IAAAutE,EAAAtvC,GACAuvC,EAAAD,EAAA30B,EACA40B,KAAA9+B,GACA1uC,EAAA0uC,EAAA8+B,EAAA9+B,GAAA,EACA6+B,EAAA7+B,GAAA,EACA5R,EAAAywC,IAEAzwC,IAAA98B,EAAA44C,IACAiD,GAAAz6E,KAAA4+B,GACA88B,EAAA98B,EACAA,EAAA88B,EAAAyB,GAEAv+B,EAAA0uC,GAAA,EACA6+B,EAAA7+B,GAAA,EACAqN,GAAA36E,KAAAmsG,MAGAC,EAAAD,EAAAtvC,EACAuvC,KAAA9+B,GACA1uC,EAAA0uC,EAAA8+B,EAAA9+B,GAAA,EACA6+B,EAAA7+B,GAAA,EACA5R,EAAAywC,IAEAzwC,IAAA98B,EAAAi+B,IACA8d,GAAA36E,KAAA4+B,GACA88B,EAAA98B,EACAA,EAAA88B,EAAAyB,GAEAv+B,EAAA0uC,GAAA,EACA6+B,EAAA7+B,GAAA,EACAmN,GAAAz6E,KAAAmsG,KAGAvtE,EAAA88B,EAAAyB,CAEAn9D,MAAAurD,EAAA+hB,GAAA,GAEA3jE,OAAA,SAAA+B,GACAA,EAAA+qE,IAAA/qE,EAAA+qE,EAAAF,EAAA7qE,EAAA6qE,GACA7qE,EAAA6qE,IAAA7qE,EAAA6qE,EAAAE,EAAA/qE,EAAA+qE,GACA/qE,EAAA+qE,EAAA/qE,EAAA6qE,EAAA,IACA,IAAA81B,GAAA71B,EAAA2qB,EAAAviE,EAAAlzB,EAAAyxD,EAAA7xD,EAAAI,EAAAmxD,EAAAzxD,EAAAM,EAAA8rE,CA6BA,IA5B4DhB,EAA5DlrE,EAA8BF,EAA8BwvE,GAAAxvE,GAA9BE,EAA9BF,EACAwzB,EACAA,EAAAi+B,IAAAnxD,EAAAkzB,EAAAi+B,EAAA2Z,EAA+C53C,EAAA44C,EAAAhB,EAE/Cx2E,KAAAurD,EAAAirB,EAEAlrE,GAAAF,GACA+1F,EAAA3qB,EAAAlJ,EACAkJ,EAAAlJ,EAAA5hE,EAAA4hE,EACAkJ,EAAA3Z,EAAAvxD,EACAA,EAAA6xD,EAAAqZ,EACAA,IAAAprE,GACAwzB,EAAA43C,EAAArZ,EACAqZ,EAAArZ,EAAAzxD,EAAAyxD,EACAzxD,EAAA8qE,EAAAgB,EACA54C,EAAAi+B,EAAAnxD,EACA8qE,EAAAgB,EAAApsE,EACAA,EAAA+xD,EAAAqZ,IAEAA,EAAArZ,EAAAv+B,EACAA,EAAA43C,EACA9qE,EAAA8qE,EAAAgB,KAGA2pB,EAAAz1F,EAAA4hE,EACA5hE,EAAA8qE,GAEA9qE,MAAAyxD,EAAAv+B,IACAuiE,EAAA,CACA,GAAAz1F,KAAA4hE,EAEA,YADA5hE,EAAA4hE,GAAA,EAGA,IACA,GAAA5hE,IAAA1L,KAAAurD,EAAA,KACA,IAAA7/C,IAAAkzB,EAAAi+B,GAQA,GAPAwvC,EAAAztE,EAAA44C,EACA60B,EAAA/+B,IACA++B,EAAA/+B,GAAA,EACA1uC,EAAA0uC,GAAA,EACAmN,GAAAz6E,KAAA4+B,GACAytE,EAAAztE,EAAA44C,GAEA60B,EAAAxvC,GAAAwvC,EAAAxvC,EAAAyQ,GAAA++B,EAAA70B,GAAA60B,EAAA70B,EAAAlK,EAAA,CACA++B,EAAA70B,GAAA60B,EAAA70B,EAAAlK,IACA++B,EAAAxvC,EAAAyQ,GAAA,EACA++B,EAAA/+B,GAAA,EACAqN,GAAA36E,KAAAqsG,GACAA,EAAAztE,EAAA44C,GAEA60B,EAAA/+B,EAAA1uC,EAAA0uC,EACA1uC,EAAA0uC,EAAA++B,EAAA70B,EAAAlK,GAAA,EACAmN,GAAAz6E,KAAA4+B,GACAlzB,EAAA1L,KAAAurD,CACA,YAUA,IAPA8gD,EAAAztE,EAAAi+B,EACAwvC,EAAA/+B,IACA++B,EAAA/+B,GAAA,EACA1uC,EAAA0uC,GAAA,EACAqN,GAAA36E,KAAA4+B,GACAytE,EAAAztE,EAAAi+B,GAEAwvC,EAAAxvC,GAAAwvC,EAAAxvC,EAAAyQ,GAAA++B,EAAA70B,GAAA60B,EAAA70B,EAAAlK,EAAA,CACA++B,EAAAxvC,GAAAwvC,EAAAxvC,EAAAyQ,IACA++B,EAAA70B,EAAAlK,GAAA,EACA++B,EAAA/+B,GAAA,EACAmN,GAAAz6E,KAAAqsG,GACAA,EAAAztE,EAAAi+B,GAEAwvC,EAAA/+B,EAAA1uC,EAAA0uC,EACA1uC,EAAA0uC,EAAA++B,EAAAxvC,EAAAyQ,GAAA,EACAqN,GAAA36E,KAAA4+B,GACAlzB,EAAA1L,KAAAurD,CACA,OAGA8gD,EAAA/+B,GAAA,EACA5hE,EAAAkzB,EACAA,IAAAu+B,SACOzxD,EAAA4hE,EACP5hE,OAAA4hE,GAAA,MAiEAzpE,GAAA8nG,KAAAW,QAAA,SAAAtpE,GAGA,QAAAspE,GAAA9sG,GACA,GAAA+sG,GAAA,GAAA3uD,OAAAp+C,EAAA5C,QAAAylC,EAAAwvC,EAAA,MAAA1xC,EAAA0xC,EAAA,MAAA/7D,EAAA+7D,EAAA,MAAA77D,EAAA67D,EAAA,KAQA,OAPAgJ,IAAAC,EAAAt7E,GAAAqyE,GAAA+G,MAAAp1E,QAAA,SAAAg1E,EAAAtzE,GACA,GAAAozE,GAAAE,EAAAF,MAAAzC,EAAA2C,EAAA3C,KAAAnO,EAAA6kC,EAAArnG,GAAAozE,EAAA17E,OAAA07E,EAAA7tE,IAAA,SAAAwR,GACA,GAAAvR,GAAAuR,EAAAnX,OACA,QAAA4F,EAAAhM,EAAAgM,EAAA/F,KACSkxE,EAAAn3E,GAAA2jC,GAAAwzC,EAAAn3E,GAAAoX,GAAA+/D,EAAAlxE,GAAAw7B,GAAA01C,EAAAlxE,GAAAqR,IAAAqsB,EAAArsB,IAAAF,EAAAE,IAAAF,EAAAqqB,IAAAkC,EAAAlC,MACTunC,GAAArU,MAAA7zD,EAAA0F,KAEAqnG,EAEA,QAAAzxB,GAAAt7E,GACA,MAAAA,GAAAiL,IAAA,SAAA5O,EAAAqJ,GACA,OACAxG,EAAAnD,KAAAg8C,MAAA8iC,EAAAx+E,EAAAqJ,GAAAo/D,OACA3/D,EAAApJ,KAAAg8C,MAAA+iC,EAAAz+E,EAAAqJ,GAAAo/D,OACAp/D,OAlBA,GAAAxG,GAAAi2E,GAAAhwE,EAAAiwE,GAAAyF,EAAA37E,EAAA47E,EAAA31E,EAAAktE,EAAA26B,EACA,OAAAxpE,GAAAspE,EAAAtpE,IAqBAspE,EAAA9pB,MAAA,SAAAhjF,GACA,MAAAq7E,IAAAC,EAAAt7E,IAAA84E,MAAAj7E,OAAA,SAAAu4E,GACA,MAAAA,GAAApmC,GAAAomC,EAAA5wC,IACOv6B,IAAA,SAAAmrE,GACP,OACA3rB,OAAAzqD,EAAAo2E,EAAApmC,EAAAtqC,GACA7B,OAAA7D,EAAAo2E,EAAA5wC,EAAA9/B,OAIAonG,EAAAG,UAAA,SAAAjtG,GACA,GAAAitG,KAaA,OAZA5xB,IAAAC,EAAAt7E,IAAAo5E,MAAAp1E,QAAA,SAAAg1E,EAAAtzE,GAEA,IADA,GAAAsoD,GAAAk/C,EAAA72B,EAAA2C,EAAA3C,KAAAyC,EAAAE,EAAAF,MAAAnjD,KAAA+jD,IAAA3pD,GAAA,EAAApzB,EAAAm8E,EAAA17E,OAAA2wD,EAAA+qB,EAAAn8E,EAAA,GAAAy5E,KAAA6O,EAAAl3B,EAAA/d,IAAAqmC,EAAAtoB,EAAAvoB,EAAAuoB,EAAA/d,IACAjgB,EAAApzB,GACAqxD,EAAAD,EACAm/C,EAAAjoB,EACAl3B,EAAA+qB,EAAA/oD,GAAAqmD,KACA6O,EAAAl3B,EAAA/d,IAAAqmC,EAAAtoB,EAAAvoB,EAAAuoB,EAAA/d,EACAtqC,EAAAwnG,EAAAxnG,KAAAu/E,EAAAv/E,GAAAg2E,GAAArF,EAAA62B,EAAAjoB,GAAA,GACAgoB,EAAAluG,MAAAiB,EAAA0F,GAAA1F,EAAAktG,EAAAxnG,GAAA1F,EAAAilF,EAAAv/E,OAIAunG,GAEAH,EAAA5tG,EAAA,SAAA6sD,GACA,MAAArgD,WAAAtO,QAAAy9E,EAAAljB,GAAAz4D,EAAA6sD,GAAA+gD,GAAA5tG,GAEA4tG,EAAA3nG,EAAA,SAAA4mD,GACA,MAAArgD,WAAAtO,QAAA09E,EAAAnjB,GAAAxyD,EAAA4mD,GAAA+gD,GAAA3nG,GAEA2nG,EAAAz6B,WAAA,SAAAtmB,GACA,MAAArgD,WAAAtO,QACAi1E,EAAA,MAAAtmB,EAAAihD,GAAAjhD,EACA+gD,GAFAz6B,IAAA26B,GAAA,KAAA36B,GAIAy6B,EAAAvsG,KAAA,SAAAwrD,GACA,MAAArgD,WAAAtO,OACA0vG,EAAAz6B,WAAAtmB,KAAA,KAAAA,IADAsmB,IAAA26B,GAAA,KAAA36B,KAAA,IAGAy6B,GAEA,IAAAE,OAAA,oBAIA3oG,IAAA8nG,KAAAgB,SAAA,SAAAf,GACA,MAAA/nG,IAAA8nG,KAAAW,UAAAG,UAAAb,IAEA/nG,GAAA8nG,KAAAiB,SAAA,SAAA5pE,EAAAltB,EAAAE,EAAAD,EAAA1F,GAYA,QAAAu8F,GAAAptG,GA4BA,QAAAgK,GAAA0Z,EAAArnB,EAAA6C,EAAAiG,EAAAmR,EAAAE,EAAAD,EAAA1F,GACA,IAAAmT,MAAA9kB,KAAA8kB,MAAA7e,GACA,GAAAue,EAAAo4D,KAAA,CACA,GAAAuxB,GAAA3pF,EAAAxkB,EAAAouG,EAAA5pF,EAAAve,CACA,UAAAkoG,EACA,GAAAt7E,GAAAs7E,EAAAnuG,GAAA6yB,GAAAu7E,EAAAnoG,GAAA,IACAooG,EAAA7pF,EAAArnB,EAAA6C,EAAAiG,EAAAmR,EAAAE,EAAAD,EAAA1F,OACa,CACb,GAAA28F,GAAA9pF,EAAAmwC,KACAnwC,GAAAxkB,EAAAwkB,EAAAve,EAAAue,EAAAmwC,MAAA,KACA05C,EAAA7pF,EAAA8pF,EAAAH,EAAAC,EAAAh3F,EAAAE,EAAAD,EAAA1F,GACA08F,EAAA7pF,EAAArnB,EAAA6C,EAAAiG,EAAAmR,EAAAE,EAAAD,EAAA1F,OAGA6S,GAAAxkB,IAAAwkB,EAAAve,IAAAue,EAAAmwC,MAAAx3D,MAGAkxG,GAAA7pF,EAAArnB,EAAA6C,EAAAiG,EAAAmR,EAAAE,EAAAD,EAAA1F,GAGA,QAAA08F,GAAA7pF,EAAArnB,EAAA6C,EAAAiG,EAAAmR,EAAAE,EAAAD,EAAA1F,GACA,GAAA0rE,GAAA,IAAAjmE,EAAAC,GAAAimE,EAAA,IAAAhmE,EAAA3F,GAAAjF,EAAA1M,GAAAq9E,EAAAE,EAAAt3E,GAAAq3E,EAAA92E,EAAA+2E,GAAA,EAAA7wE,CACA8X,GAAAo4D,MAAA,EACAp4D,IAAAq4D,MAAAr2E,KAAAge,EAAAq4D,MAAAr2E,GAAAm2E,MACAjwE,EAAA0K,EAAAimE,EAA2BhmE,EAAAgmE,EAC3BE,EAAAjmE,EAAAgmE,EAA2B3rE,EAAA2rE,EAC3BxyE,EAAA0Z,EAAArnB,EAAA6C,EAAAiG,EAAAmR,EAAAE,EAAAD,EAAA1F,GArDA,GAAAxU,GAAAkW,EAAA8d,EAAA3qB,EAAAge,EAAA+pF,EAAAC,EAAAC,EAAAC,EAAA/yB,EAAAljB,GAAAz4D,GAAA47E,EAAAnjB,GAAAxyD,EACA,UAAAmR,EACAm3F,EAAAn3F,EAAAo3F,EAAAl3F,EAAAm3F,EAAAp3F,EAAAq3F,EAAA/8F,MAKA,IAHA88F,EAAAC,IAAAH,EAAAC,EAAAthG,KACAmG,KAAA8d,KACA3M,EAAA1jB,EAAA5C,OACAywG,EAAA,IAAAnoG,EAAA,EAA+BA,EAAAge,IAAOhe,EACtCrJ,EAAA2D,EAAA0F,GACArJ,EAAA6C,EAAAuuG,MAAApxG,EAAA6C,GACA7C,EAAA8I,EAAAuoG,MAAArxG,EAAA8I,GACA9I,EAAA6C,EAAAyuG,MAAAtxG,EAAA6C,GACA7C,EAAA8I,EAAAyoG,MAAAvxG,EAAA8I,GACAoN,EAAAxT,KAAA1C,EAAA6C,GACAmxB,EAAAtxB,KAAA1C,EAAA8I,OACS,KAAAO,EAAA,EAAiBA,EAAAge,IAAOhe,EAAA,CACjC,GAAAonE,IAAA+N,EAAAx+E,EAAA2D,EAAA0F,MAAAqnE,GAAA+N,EAAAz+E,EAAAqJ,EACAonE,GAAA2gC,MAAA3gC,GACAC,EAAA2gC,MAAA3gC,GACAD,EAAA6gC,MAAA7gC,GACAC,EAAA6gC,MAAA7gC,GACAx6D,EAAAxT,KAAA+tE,GACAz8C,EAAAtxB,KAAAguE,GAGA,GAAAzhE,GAAAqiG,EAAAF,EAAAllG,EAAAqlG,EAAAF,CACApiG,GAAA/C,EAAAqlG,EAAAF,EAAApiG,EAAkCqiG,EAAAF,EAAAllG,CA6BlC,IAAA4zE,GAAAN,IAWA,IAVAM,EAAAp9D,IAAA,SAAA1iB,GACA2N,EAAAmyE,EAAA9/E,GAAAw+E,EAAAx+E,IAAAqJ,IAAAo1E,EAAAz+E,EAAAqJ,GAAA+nG,EAAAC,EAAAC,EAAAC,IAEAzxB,EAAA2xB,MAAA,SAAA9qG,GACAg5E,GAAAh5E,EAAAm5E,EAAAsxB,EAAAC,EAAAC,EAAAC,IAEAzxB,EAAAzuD,KAAA,SAAAmmC,GACA,MAAAqoB,IAAAC,EAAAtoB,EAAA,GAAAA,EAAA,GAAA45C,EAAAC,EAAAC,EAAAC,IAEAloG,GAAA,EACA,MAAA4Q,EAAA,CACA,OAAA5Q,EAAAge,GACA1Z,EAAAmyE,EAAAn8E,EAAA0F,GAAA6M,EAAA7M,GAAA2qB,EAAA3qB,GAAA+nG,EAAAC,EAAAC,EAAAC,KAEAloG,MACO1F,GAAAgE,QAAAm4E,EAAAp9D,IAEP,OADAxM,GAAA8d,EAAArwB,EAAA3D,EAAA,KACA8/E,EArFA,GAAA0xB,GAAA3uG,EAAAi2E,GAAAhwE,EAAAiwE,EACA,QAAAy4B,EAAAniG,UAAAtO,SACA8B,EAAAy8E,GACAx2E,EAAAy2E,GACA,IAAAiyB,IACAh9F,EAAA2F,EACAD,EAAAD,EACAE,EAAAF,EAAA,GAEA82F,EAAA5pE,KA8EA4pE,EAAAluG,EAAA,SAAA6sD,GACA,MAAArgD,WAAAtO,QAAA8B,EAAA6sD,EAAAqhD,GAAAluG,GAEAkuG,EAAAjoG,EAAA,SAAA4mD,GACA,MAAArgD,WAAAtO,QAAA+H,EAAA4mD,EAAAqhD,GAAAjoG,GAEAioG,EAAAh6F,OAAA,SAAA24C,GACA,MAAArgD,WAAAtO,QACA,MAAA2uD,EAAAz1C,EAAAE,EAAAD,EAAA1F,EAAA,MAA8CyF,GAAAy1C,EAAA,MAAAv1C,GAAAu1C,EAAA,MAAAx1C,GAAAw1C,EAAA,MAC9Cl7C,GAAAk7C,EAAA,OACAqhD,GAHA,MAAA92F,EAAA,OAAAA,EAAAE,IAAAD,EAAA1F,KAKAu8F,EAAA7sG,KAAA,SAAAwrD,GACA,MAAArgD,WAAAtO,QACA,MAAA2uD,EAAAz1C,EAAAE,EAAAD,EAAA1F,EAAA,MAA8CyF,EAAAE,EAAA,EAAAD,GAAAw1C,EAAA,GAAAl7C,GAAAk7C,EAAA,IAC9CqhD,GAFA,MAAA92F,EAAA,MAAAC,EAAAD,EAAAzF,EAAA2F,IAIA42F,IA8DA/oG,GAAA0pG,eAAArxB,GASAr4E,GAAA2pG,kBAAA/wB,GAoBA54E,GAAA4pG,kBAAA9wB,GAOA94E,GAAA6pG,kBAAA9wB,EAiCA,IAAAK,IAAA,8CAAAC,GAAA,GAAAjuB,QAAAguB,GAAAhzB,OAAA,IACApmD,IAAA0+B,YAAAm6C,GAMA74E,GAAAs5E,eAAA,SAAA/nD,EAAAC,GACA,GAAA/W,SAAA+W,EACA,mBAAA/W,EAAA04C,GAAAtuB,IAAArT,EAAAO,gBAAA,oBAAA+5B,KAAAt6B,GAAA6mD,GAAAU,GAAAvnD,YAAA4/B,IAAAinB,GAAAt+B,MAAAq0C,QAAA58D,GAAA+nD,GAAA,WAAA9+D,GAAAkF,MAAA6R,GAAAonD,GAAAE,IAAAvnD,EAAAC,KAEAxxB,GAAA8pG,iBAAAvwB,EAWA,IAAAwwB,IAAA,WACA,MAAA1hD,IAEA2hD,GAAAhqG,GAAA4G,KACAM,OAAA6iG,GACAE,KAAA/vB,GACAkE,KAAA,WACA,MAAAtE,KAEAowB,MAAA,WACA,MAAAnwB,KAEAj1E,IAAA,WACA,MAAAq1E,KAEAnpB,IAAA,WACA,MAAAopB,KAEAv5C,OAAA,WACA,MAAAw5C,KAEA8vB,QAAA7vB,GACA8vB,KAAA7vB,GACA8vB,OAAA,WACA,MAAA7vB,OAGA8vB,GAAAtqG,GAAA4G,KACA2jG,GAAAliD,EACAmiD,IAAA5wB,GACA6wB,SAAA5wB,GACA6wB,SAAA,SAAA/rG,GACA,MAAAk7E,IAAAD,GAAAj7E,MAGAqB,IAAAi7C,KAAA,SAAAhrB,GACA,GAAA5uB,GAAA4uB,EAAA5X,QAAA,KAAAoC,EAAApZ,GAAA,EAAA4uB,EAAArsB,MAAA,EAAAvC,GAAA4uB,EAAA33B,EAAA+I,GAAA,EAAA4uB,EAAArsB,MAAAvC,EAAA,OAGA,OAFAoZ,GAAAuvF,GAAAh1E,IAAAva,IAAAsvF,GACAzxG,EAAAgyG,GAAAt1E,IAAA18B,IAAA+vD,EACAsxB,GAAArhF,EAAAmiB,EAAAlZ,MAAA,KAAA0qF,GAAA5rF,KAAAgH,UAAA,OA4DArH,GAAA2qG,eAAAlwB,GAWAz6E,GAAA4qG,eAAA3vB,GAWAj7E,GAAA6qG,eAAA1vB,GASAn7E,GAAA8qG,iBAAAvvB,GAOAv7E,GAAAy6C,UAAA,SAAA/9C,GACA,GAAAsG,GAAA4oF,GAAA9+B,gBAAA9sD,GAAA+qD,GAAArS,OAAAjpC,IAAA,IACA,QAAAzP,GAAAy6C,UAAA,SAAA/9C,GACA,SAAAA,EAAA,CACAsG,EAAA+/C,aAAA,YAAArmD,EACA,IAAA+d,GAAAzX,EAAAy3C,UAAAswD,QAAAC,cAEA,UAAAxvB,IAAA/gE,IAAAqzE,OAAAmd,MACKvuG,IAeL8+E,GAAA98E,UAAAoF,SAAA,WACA,mBAAA3H,KAAAy1C,UAAA,WAAAz1C,KAAAwI,OAAA,UAAAxI,KAAA6/E,KAAA,UAAA7/E,KAAAiF,MAAA,IAkBA,IAAA6pG,KACA15E,EAAA,EACAC,EAAA,EACAgB,EAAA,EACAx6B,EAAA,EACAogB,EAAA,EACAzZ,EAAA,EAEAqB,IAAAkrG,qBAAApuB,GA+EA98E,GAAAmwC,UACAnwC,GAAAmwC,OAAAg7D,OAAA,WACA,gBAAAxsB,GAEA,IADA,GAAAysB,MAAA/pG,GAAA,EAAAge,EAAAs/D,EAAA5lF,SACAsI,EAAAge,GAAA+rF,EAAA1wG,KAAAuiF,GAAA0B,EAAAt9E,IACA,OAAA+pG,KAoCAprG,GAAAmwC,OAAAk7D,MAAA,WAEA,QAAAC,KACA,GAAwB3/E,GAAA9wB,EAAA2jC,EAAAn9B,EAAAqqB,EAAxBgkE,KAAwB6b,KAAAC,EAAAxrG,GAAAwE,MAAA6a,GAAAosF,IAIxB,KAHAC,KACAjwD,KACA9vB,EAAA,EAAAtqB,GAAA,IACAA,EAAAge,GAAA,CAEA,IADAxkB,EAAA,EAAA6wB,GAAA,IACAA,EAAArM,GACAxkB,GAAAizF,EAAAzsF,GAAAqqB,EAEA6/E,GAAA7wG,KAAAG,GACA4wG,EAAA/wG,KAAAsF,GAAAwE,MAAA6a,IACAsM,GAAA9wB,EAgBA,IAdA8wG,GACAH,EAAAl6E,KAAA,SAAAC,EAAAC,GACA,MAAAm6E,GAAAJ,EAAAh6E,GAAAg6E,EAAA/5E,MAGAo6E,GACAH,EAAA9rG,QAAA,SAAA3H,EAAAqJ,GACArJ,EAAAs5B,KAAA,SAAAC,EAAAC,GACA,MAAAo6E,GAAA9d,EAAAzsF,GAAAkwB,GAAAu8D,EAAAzsF,GAAAmwB,QAIA7F,GAAA+5C,GAAAj5C,EAAApN,GAAAsM,EACA9wB,EAAA,EAAAwG,GAAA,IACAA,EAAAge,GAAA,CAEA,IADAmf,EAAA3jC,EAAA6wB,GAAA,IACAA,EAAArM,GAAA,CACA,GAAAwsF,GAAAL,EAAAnqG,GAAAyqG,EAAAL,EAAAI,GAAAngF,GAAA5pB,EAAAgsF,EAAA+d,GAAAC,GAAAhgC,EAAAjxE,EAAAytE,EAAAztE,GAAAiH,EAAA6pB,CACA+jE,GAAAmc,EAAA,IAAAC,IACAjzG,MAAAgzG,EACAE,SAAAD,EACA76D,WAAA66B,EACA56B,SAAAo3B,EACAxyE,MAAAgM,GAGA25C,EAAAowD,IACAhzG,MAAAgzG,EACA56D,WAAAzS,EACA0S,SAAAr2C,EACA/E,MAAAy1G,EAAAM,IAEAhxG,GAAA4xB,EAGA,IADAprB,GAAA,IACAA,EAAAge,GAEA,IADAqM,EAAArqB,EAAA,IACAqqB,EAAArM,GAAA,CACA,GAAA+mC,GAAAspC,EAAAruF,EAAA,IAAAqqB,GAAAlsB,EAAAkwF,EAAAhkE,EAAA,IAAArqB,IACA+kD,EAAAtwD,OAAA0J,EAAA1J,QACA41G,EAAAhxG,KAAA0rD,EAAAtwD,MAAA0J,EAAA1J,OACAswD,OAAA5mD,EACAA,OAAA4mD,IAEAA,SACA5mD,WAKAwsG,GAAAC,IAEA,QAAAA,KACAP,EAAAp6E,KAAA,SAAAC,EAAAC,GACA,MAAAw6E,IAAAz6E,EAAA60B,OAAAtwD,MAAAy7B,EAAA/xB,OAAA1J,OAAA,GAAA07B,EAAA40B,OAAAtwD,MAAA07B,EAAAhyB,OAAA1J,OAAA,KArEA,GAAkB41G,GAAAjwD,EAAAqyC,EAAAzuE,EAAAssF,EAAAC,EAAAI,EAAlBX,KAAkB5+E,EAAA,CA8GlB,OAtCA4+E,GAAAvd,OAAA,SAAAjzF,GACA,MAAAwM,WAAAtO,QACAsmB,GAAAyuE,EAAAjzF,IAAAizF,EAAA/0F,OACA2yG,EAAAjwD,EAAA,KACA4vD,GAHAvd,GAKAud,EAAA5+E,QAAA,SAAA5xB,GACA,MAAAwM,WAAAtO,QACA0zB,EAAA5xB,EACA6wG,EAAAjwD,EAAA,KACA4vD,GAHA5+E,GAKA4+E,EAAAM,WAAA,SAAA9wG,GACA,MAAAwM,WAAAtO,QACA4yG,EAAA9wG,EACA6wG,EAAAjwD,EAAA,KACA4vD,GAHAM,GAKAN,EAAAO,cAAA,SAAA/wG,GACA,MAAAwM,WAAAtO,QACA6yG,EAAA/wG,EACA6wG,EAAA,KACAL,GAHAO,GAKAP,EAAAW,WAAA,SAAAnxG,GACA,MAAAwM,WAAAtO,QACAizG,EAAAnxG,EACA6wG,GAAAO,IACAZ,GAHAW,GAKAX,EAAAK,OAAA,WAEA,MADAA,IAAAJ,IACAI,GAEAL,EAAA5vD,OAAA,WAEA,MADAA,IAAA6vD,IACA7vD,GAEA4vD,GAEArrG,GAAAmwC,OAAAuB,MAAA,WAEA,QAAAw6D,GAAArkG,GACA,gBAAAu2E,EAAAnsE,EAAAy1C,EAAAx1C,GACA,GAAAksE,EAAA5uB,QAAA3nD,EAAA,CACA,GAAAZ,GAAAm3E,EAAAloE,GAAArO,EAAAhN,EAAAqJ,EAAAk6E,EAAAjoE,GAAAtO,EAAA/G,EAAAqrG,EAAAj6F,EAAAD,EAAAm6F,EAAAnlG,IAAA/C,GACA,IAAAioG,IAAAE,EAAAD,EAAA,CACA,GAAAA,EAAAE,EAAA,CACA,GAAA3gF,GAAAyyD,EAAAG,OAAA6tB,CACAvkG,GAAAm2E,IAAA/2E,EAAA0kB,EACA9jB,EAAAo2E,IAAA/5E,EAAAynB,EAEA,SAEA,GAAAyyD,EAAA5uB,OAAA48C,KAAAE,EAAA,CACA,GAAA3gF,GAAAyyD,EAAAI,YAAA4tB,CACAvkG,GAAAm2E,IAAA/2E,EAAA0kB,EACA9jB,EAAAo2E,IAAA/5E,EAAAynB,GAGA,OAAAyyD,EAAAG,QAgMA,QAAAguB,GAAAv0G,GACAA,EAAAgmF,GAAAh+E,GAAA+5B,MAAAl/B,EAAA7C,EAAAimF,GAAAj+E,GAAA+5B,MAAAj5B,EACA4wC,EAAA86D,SArNA,GAAkBltF,GAAA+Z,EAAAglD,EAAAouB,EAAAC,EAAApuB,EAAlB5sC,KAAkB3X,EAAA/5B,GAAA+oD,SAAA,sBAAA7sD,GAAA,KAAAywG,EAAA,GAAAC,EAAAC,GAAAC,EAAAC,GAAAxuB,GAAA,GAAA+tB,EAAAU,GAAAC,EAAA,GAAAZ,EAAA,IAAA30B,KAAAiH,IAuNlB,OAjMAjtC,GAAAn2C,KAAA,WACA,IAAA8iF,GAAA,UAMA,MALA/+D,GAAA,KACAya,EAAAkF,KACA3jC,KAAA,MACA+iF,QAAA,KAEA,CAEA,IAAAhX,GAAAhmE,EAAA20B,EAAAnvB,EAAA4T,EAAAkxB,EAAAhgB,EAAA9wB,EAAAiG,EAAAue,EAAAq4D,EAAA3+E,OAAAT,EAAAqmF,EAAA5lF,MACA,KAAAsI,EAAA,EAAiBA,EAAA/I,IAAO+I,EACxB20B,EAAA2oD,EAAAt9E,GACAwF,EAAAmvB,EAAAowB,OACA3rC,EAAAub,EAAAx2B,OACA3E,EAAA4f,EAAA5f,EAAAgM,EAAAhM,EACAiG,EAAA2Z,EAAA3Z,EAAA+F,EAAA/F,GACA6qC,EAAA9wC,IAAAiG,OACA6qC,EAAA0yC,EAAAquB,EAAArrG,KAAAsqC,EAAAj0C,KAAAy8B,KAAAwX,IAAA8gE,EAAAprG,IAAAsqC,EACA9wC,GAAA8wC,EACA7qC,GAAA6qC,EACAlxB,EAAA5f,MAAA8wB,EAAA9kB,EAAAqmG,OAAAzyF,EAAAyyF,OAAArmG,EAAAqmG,QAAArmG,EAAAqmG,OAAAzyF,EAAAyyF,QAAA,IACAzyF,EAAA3Z,KAAA6qB,EACA9kB,EAAAhM,MAAA8wB,EAAA,EAAAA,GACA9kB,EAAA/F,KAAA6qB,EAGA,KAAAA,EAAA0yD,EAAA4uB,KACApyG,EAAAqB,EAAA,KACA4E,EAAA5E,EAAA,KACAmF,GAAA,EACAsqB,GAAA,OAAAtqB,EAAAge,GACA2W,EAAA0hD,EAAAr2E,GACA20B,EAAAn7B,MAAAm7B,EAAAn7B,GAAA8wB,EACAqK,EAAAl1B,MAAAk1B,EAAAl1B,GAAA6qB,CAGA,IAAA4yD,EAGA,IAFAJ,GAAA9W,EAAArnE,GAAA8nG,KAAAiB,SAAArxB,GAAA2G,EAAAC,GACAj9E,GAAA,IACAA,EAAAge,IACA2W,EAAA0hD,EAAAr2E,IAAAw8E,OACAxW,EAAAoiC,MAAAyC,EAAAl2E,GAKA,KADA30B,GAAA,IACAA,EAAAge,GACA2W,EAAA0hD,EAAAr2E,GACA20B,EAAA6nD,OACA7nD,EAAAn7B,EAAAm7B,EAAAgoD,GACAhoD,EAAAl1B,EAAAk1B,EAAAioD,KAEAjoD,EAAAn7B,IAAAm7B,EAAAgoD,IAAAhoD,EAAAgoD,GAAAhoD,EAAAn7B,IAAA8xG,EACA32E,EAAAl1B,IAAAk1B,EAAAioD,IAAAjoD,EAAAioD,GAAAjoD,EAAAl1B,IAAA6rG,EAGA5yE,GAAAx+B,MACAD,KAAA,OACA+iF,WAGA3sC,EAAAgmC,MAAA,SAAA78E,GACA,MAAAwM,WAAAtO,QACA2+E,EAAA78E,EACA62C,GAFAgmC,GAIAhmC,EAAAitC,MAAA,SAAA9jF,GACA,MAAAwM,WAAAtO,QACA4lF,EAAA9jF,EACA62C,GAFAitC,GAIAjtC,EAAAx1C,KAAA,SAAArB,GACA,MAAAwM,WAAAtO,QACAmD,EAAArB,EACA62C,GAFAx1C,GAIAw1C,EAAAk7D,aAAA,SAAA/xG,GACA,MAAAwM,WAAAtO,QACA6zG,EAAA,kBAAA/xG,QACA62C,GAFAk7D,GAIAl7D,EAAAi+B,SAAAj+B,EAAAk7D,aACAl7D,EAAAo7D,aAAA,SAAAjyG,GACA,MAAAwM,WAAAtO,QACA+zG,EAAA,kBAAAjyG,QACA62C,GAFAo7D,GAIAp7D,EAAAi7D,SAAA,SAAA9xG,GACA,MAAAwM,WAAAtO,QACA4zG,GAAA9xG,EACA62C,GAFAi7D,GAIAj7D,EAAA6sC,OAAA,SAAA1jF,GACA,MAAAwM,WAAAtO,QACAwlF,EAAA,kBAAA1jF,QACA62C,GAFA6sC,GAIA7sC,EAAAy7D,eAAA,SAAAtyG,GACA,MAAAwM,WAAAtO,QACAuzG,EAAAzxG,IACA62C,GAFAh6C,KAAAy8B,KAAAm4E,IAIA56D,EAAAu7D,QAAA,SAAApyG,GACA,MAAAwM,WAAAtO,QACAk0G,GAAApyG,EACA62C,GAFAu7D,GAIAv7D,EAAA07D,MAAA,SAAAvyG,GACA,MAAAwM,WAAAtO,QACAszG,EAAAxxG,IACA62C,GAFAh6C,KAAAy8B,KAAAk4E,IAIA36D,EAAA2sC,MAAA,SAAAxjF,GACA,MAAAwM,WAAAtO,QACA8B,KACAwjF,EACAxjF,EAAA,EACAwjF,EAAAxjF,GAEAykB,EAAAkT,EAAA,KAAAlT,EAAA7E,EAAA9G,IAAA2L,EAAA,KACAya,EAAAkF,KACA3jC,KAAA,MACA+iF,QAAA,KAGOxjF,EAAA,IACPk/B,EAAA94B,OACA3F,KAAA,QACA+iF,QAAAxjF,IAEAykB,EAAAy1C,GAAArjB,EAAAn2C,OAEAm2C,GAnBA2sC,GAqBA3sC,EAAAzwC,MAAA,WA0BA,QAAAw6B,GAAA4xE,EAAAnxG,GACA,IAAAoxG,EAAA,CAEA,IADAA,EAAA,GAAAvzD,OAAA16B,GACAqM,EAAA,EAAqBA,EAAArM,IAAOqM,EAC5B4hF,EAAA5hF,KAEA,KAAAA,EAAA,EAAqBA,EAAApzB,IAAOozB,EAAA,CAC5B,GAAAsK,GAAA2oD,EAAAjzD,EACA4hF,GAAAt3E,EAAAowB,OAAAvtD,OAAA6B,KAAAs7B,EAAAx2B,QACA8tG,EAAAt3E,EAAAx2B,OAAA3G,OAAA6B,KAAAs7B,EAAAowB,SAIA,IADA,GAAAvrD,GAAA04B,EAAA+5E,EAAAjsG,GAAAqqB,GAAA,EAAAigB,EAAApY,EAAAx6B,SACA2yB,EAAAigB,GAAA,IAAAhsB,MAAA9kB,EAAA04B,EAAA7H,GAAA2hF,IAAA,MAAAxyG,EACA,OAAAnD,MAAAumC,SAAA/hC,EAvCA,GAAAmF,GAAAisG,EAAAt3E,EAAA3W,EAAAq4D,EAAA3+E,OAAAT,EAAAqmF,EAAA5lF,OAAAqJ,EAAAlG,EAAA,GAAAiG,EAAAjG,EAAA,EACA,KAAAmF,EAAA,EAAiBA,EAAAge,IAAOhe,GACxB20B,EAAA0hD,EAAAr2E,IAAAxI,MAAAwI,EACA20B,EAAAk3E,OAAA,CAEA,KAAA7rG,EAAA,EAAiBA,EAAA/I,IAAO+I,EACxB20B,EAAA2oD,EAAAt9E,GACA,gBAAA20B,GAAAowB,SAAApwB,EAAAowB,OAAAsxB,EAAA1hD,EAAAowB,SACA,gBAAApwB,GAAAx2B,SAAAw2B,EAAAx2B,OAAAk4E,EAAA1hD,EAAAx2B,WACAw2B,EAAAowB,OAAA8mD,SACAl3E,EAAAx2B,OAAA0tG,MAEA,KAAA7rG,EAAA,EAAiBA,EAAAge,IAAOhe,EACxB20B,EAAA0hD,EAAAr2E,GACAse,MAAAqW,EAAAn7B,KAAAm7B,EAAAn7B,EAAA4gC,EAAA,IAAAr5B,IACAud,MAAAqW,EAAAl1B,KAAAk1B,EAAAl1B,EAAA26B,EAAA,IAAAt5B,IACAwd,MAAAqW,EAAAgoD,MAAAhoD,EAAAgoD,GAAAhoD,EAAAn7B,GACA8kB,MAAAqW,EAAAioD,MAAAjoD,EAAAioD,GAAAjoD,EAAAl1B,EAGA,IADA2rG,KACA,kBAAAG,GAAA,IAAAvrG,EAAA,EAAyDA,EAAA/I,IAAO+I,EAAAorG,EAAAprG,IAAAurG,EAAAvsG,KAAAlE,KAAAwiF,EAAAt9E,UAA2D,KAAAA,EAAA,EAAiBA,EAAA/I,IAAO+I,EAAAorG,EAAAprG,GAAAurG,CAEnJ,IADAF,KACA,kBAAAI,GAAA,IAAAzrG,EAAA,EAAyDA,EAAA/I,IAAO+I,EAAAqrG,EAAArrG,IAAAyrG,EAAAzsG,KAAAlE,KAAAwiF,EAAAt9E,UAA2D,KAAAA,EAAA,EAAiBA,EAAA/I,IAAO+I,EAAAqrG,EAAArrG,GAAAyrG,CAEnJ,IADAxuB,KACA,kBAAAC,GAAA,IAAAl9E,EAAA,EAAmDA,EAAAge,IAAOhe,EAAAi9E,EAAAj9E,IAAAk9E,EAAAl+E,KAAAlE,KAAAu7E,EAAAr2E,UAAmD,KAAAA,EAAA,EAAiBA,EAAAge,IAAOhe,EAAAi9E,EAAAj9E,GAAAk9E,CAiBrI,OAAA7sC,GAAA86D,UAEA96D,EAAA86D,OAAA,WACA,MAAA96D,GAAA2sC,MAAA,KAEA3sC,EAAAxwC,KAAA,WACA,MAAAwwC,GAAA2sC,MAAA,IAEA3sC,EAAArY,KAAA,WAEA,MADAA,OAAAr5B,GAAAs5B,SAAAD,OAAAE,OAAA8uB,GAAA34C,GAAA,kBAAAkuE,IAAAluE,GAAA,aAAA68F,GAAA78F,GAAA,gBAAAouE,KACAz2E,UAAAtO,WACAoD,MAAAuT,GAAA,kBAAAquE,IAAAruE,GAAA,iBAAAwuE,IAAA79E,KAAAg5B,GADAA,GAOAr5B,GAAA40D,OAAAljB,EAAA3X,EAAA,MA0CA,IAAA8yE,IAAA,GAAAE,GAAA,EAAAC,GAAAjlG,GACA/H,IAAAmwC,OAAAuuC,UAAA,WAEA,QAAAA,GAAA5G,GACA,GAAAjwE,GAAA0lG,GAAAz1B,GAAAJ,IAEA,KADAI,EAAAzL,MAAA,EACA,OAAAxkE,EAAA0lG,EAAA3pC,QAEA,GADA8T,EAAAh9E,KAAAmN,IACA2lG,EAAA51B,EAAAv3E,KAAAq+E,EAAA72E,IAAAwkE,UAAAhtD,EAAAmuF,EAAAz0G,QAAA,CAEA,IADA,GAAAsmB,GAAAmuF,EAAAruB,IACA9/D,GAAA,GACAkuF,EAAA7yG,KAAAykF,EAAAquB,EAAAnuF,IACA8/D,EAAApkD,OAAAlzB,EACAs3E,EAAA9S,MAAAxkE,EAAAwkE,MAAA,CAEAv2E,KAAA+R,EAAA/R,MAAA,GACA+R,EAAA+vE,SAAA41B,MAEA13G,KAAA+R,EAAA/R,SAAAuK,KAAAq+E,EAAA72E,IAAAwkE,QAAA,SACAxkE,GAAA+vE,QAQA,OALAkH,IAAAhH,EAAA,SAAAjwE,GACA,GAAA2lG,GAAAzyE,CACAzJ,KAAAk8E,EAAA3lG,EAAA+vE,WAAA41B,EAAAl8E,QACAx7B,IAAAilC,EAAAlzB,EAAAkzB,YAAAjlC,OAAA+R,EAAA/R,SAEA4hF,EAzBA,GAAApmD,GAAA4tD,GAAAtH,EAAAoH,GAAAlpF,EAAAmpF,EAuDA,OA5BAP,GAAAptD,KAAA,SAAAz2B,GACA,MAAAwM,WAAAtO,QACAu4B,EAAAz2B,EACA6jF,GAFAptD,GAIAotD,EAAA9G,SAAA,SAAA/8E,GACA,MAAAwM,WAAAtO,QACA6+E,EAAA/8E,EACA6jF,GAFA9G,GAIA8G,EAAA5oF,MAAA,SAAA+E,GACA,MAAAwM,WAAAtO,QACAjD,EAAA+E,EACA6jF,GAFA5oF,GAIA4oF,EAAA+uB,QAAA,SAAA31B,GAWA,MAVAhiF,KACA+oF,GAAA/G,EAAA,SAAAjwE,GACAA,EAAA+vE,WAAA/vE,EAAA/R,MAAA,KAEAgpF,GAAAhH,EAAA,SAAAjwE,GACA,GAAAkzB,EACAlzB,GAAA+vE,WAAA/vE,EAAA/R,SAAAuK,KAAAq+E,EAAA72E,IAAAwkE,QAAA,IACAtxC,EAAAlzB,EAAAkzB,YAAAjlC,OAAA+R,EAAA/R,UAGAgiF,GAEA4G,GAkDA1+E,GAAAmwC,OAAAu9D,UAAA,WAEA,QAAAjyE,GAAA5zB,EAAAhN,EAAAoM,EAAA/C,GACA,GAAA0zE,GAAA/vE,EAAA+vE,QAKA,IAJA/vE,EAAAhN,IACAgN,EAAA/G,EAAA+G,EAAAwkE,MAAAnoE,EACA2D,EAAAZ,KACAY,EAAA3D,KACA0zE,IAAAv4D,EAAAu4D,EAAA7+E,QAAA,CACA,GAAAsmB,GAAAmT,EAAAx6B,EAAAqJ,GAAA,CAEA,KADA4F,EAAAY,EAAA/R,MAAAmR,EAAAY,EAAA/R,MAAA,IACAuL,EAAAge,GACAoc,EAAAjJ,EAAAolD,EAAAv2E,GAAAxG,EAAA7C,EAAAw6B,EAAA18B,MAAAmR,EAAA/C,GACArJ,GAAA7C,GAIA,QAAAq0E,GAAAxkE,GACA,GAAA+vE,GAAA/vE,EAAA+vE,SAAA5/E,EAAA,CACA,IAAA4/E,IAAAv4D,EAAAu4D,EAAA7+E,QAEA,IADA,GAAAsmB,GAAAhe,GAAA,IACAA,EAAAge,GAAArnB,EAAAN,KAAA+D,IAAAzD,EAAAq0E,EAAAuL,EAAAv2E,IAEA,UAAArJ,EAEA,QAAA01G,GAAA11G,EAAAqJ,GACA,GAAAq2E,GAAAgH,EAAAr+E,KAAAlE,KAAAnE,EAAAqJ,EAEA,OADAo6B,GAAAi8C,EAAA,KAAAx7E,EAAA,GAAAA,EAAA,GAAAmwE,EAAAqL,EAAA,KACAA,EA3BA,GAAAgH,GAAA1+E,GAAAmwC,OAAAuuC,YAAAxiF,GAAA,IAkCA,OALAwxG,GAAAxxG,KAAA,SAAArB,GACA,MAAAwM,WAAAtO,QACAmD,EAAArB,EACA6yG,GAFAxxG,GAIAuiF,GAAAivB,EAAAhvB,IAEA1+E,GAAAmwC,OAAAD,IAAA,WAEA,QAAAA,GAAAv0C,GACA,GAEOmG,GAFPud,EAAA1jB,EAAA5C,OAAAk1B,EAAAtyB,EAAAiL,IAAA,SAAA5O,EAAAqJ,GACA,OAAAvL,EAAAuK,KAAA6vC,EAAAl4C,EAAAqJ,KACOkwB,IAAA,kBAAA0f,KAAA1vC,MAAApF,KAAAkL,WAAA4pC,GAAAgwC,GAAA,kBAAA/vC,KAAA3vC,MAAApF,KAAAkL,WAAA6pC,GAAA3f,EAAAgB,EAAA76B,KAAAiyB,IAAAjyB,KAAAg2B,IAAAuzD,GAAA5hE,IAAA,kBAAA0mE,KAAAxkF,MAAApF,KAAAkL,WAAA0+E,IAAArf,EAAAn0C,GAAA0uD,EAAA,QAAA6L,EAAA9sF,GAAA8sF,IAAA7+D,GAAAtC,EAAAmhE,GAAA7L,EAAA5hE,EAAAqnD,GAAAomB,EAAA,EAAAj0F,EAAAmH,GAAAwE,MAAA6a,GAAA6zB,IAeP,OAdA,OAAA5hB,GAAAz4B,EAAAy4B,SAAAq8E,GAAA,SAAAtsG,EAAAqqB,GACA,MAAAuC,GAAAvC,GAAAuC,EAAA5sB,IACO,SAAAA,EAAAqqB,GACP,MAAA4F,GAAA31B,EAAA0F,GAAA1F,EAAA+vB,MAEA7yB,EAAA8G,QAAA,SAAA0B,GACA6xC,EAAA7xC,IACA1F,OAAA0F,GACAvL,MAAAgM,EAAAmsB,EAAA5sB,GACA4vC,WAAA1f,EACA2f,SAAA3f,GAAAzvB,EAAA6pB,EAAA+6C,EACAqf,SAAAxzD,KAGA2gB,EAnBA,GAAAp9C,GAAAqtF,OAAA7xD,EAAAq8E,GAAA18D,EAAA,EAAAC,EAAAw0B,GAAAqgB,EAAA,CA8CA,OAzBA71C,GAAAp6C,MAAA,SAAA4xD,GACA,MAAArgD,WAAAtO,QACAjD,EAAA4xD,EACAxX,GAFAp6C,GAIAo6C,EAAA5e,KAAA,SAAAo2B,GACA,MAAArgD,WAAAtO,QACAu4B,EAAAo2B,EACAxX,GAFA5e,GAIA4e,EAAAe,WAAA,SAAAyW,GACA,MAAArgD,WAAAtO,QACAk4C,EAAAyW,EACAxX,GAFAe,GAIAf,EAAAgB,SAAA,SAAAwW,GACA,MAAArgD,WAAAtO,QACAm4C,EAAAwW,EACAxX,GAFAgB,GAIAhB,EAAA61C,SAAA,SAAAr+B,GACA,MAAArgD,WAAAtO,QACAgtF,EAAAr+B,EACAxX,GAFA61C,GAIA71C,EAEA,IAAAy9D,MACA3tG,IAAAmwC,OAAAo9D,MAAA,WAEA,QAAAA,GAAA5xG,EAAA9C,GACA,KAAAwmB,EAAA1jB,EAAA5C,QAAA,MAAA4C,EACA,IAAAiyG,GAAAjyG,EAAAiL,IAAA,SAAA5O,EAAAqJ,GACA,MAAA4sB,GAAA5tB,KAAAktG,EAAAv1G,EAAAqJ,KAEA89B,EAAAyuE,EAAAhnG,IAAA,SAAA5O,GACA,MAAAA,GAAA4O,IAAA,SAAA9E,EAAAT,GACA,OAAAxG,EAAAwF,KAAAktG,EAAAzrG,EAAAT,GAAAP,EAAAT,KAAAktG,EAAAzrG,EAAAT,QAGAwsG,EAAA9e,EAAA1uF,KAAAktG,EAAApuE,EAAAtmC,EACA+0G,GAAA5tG,GAAAytF,QAAAmgB,EAAAC,GACA1uE,EAAAn/B,GAAAytF,QAAAtuD,EAAA0uE,EACA,IACAxuF,GAAAhe,EAAAqqB,EAAAsK,EADAwU,EAAA1gB,EAAAzpB,KAAAktG,EAAApuE,EAAAtmC,GACAP,EAAAs1G,EAAA,GAAA70G,MACA,KAAA2yB,EAAA,EAAiBA,EAAApzB,IAAOozB,EAExB,IADA8+E,EAAAnqG,KAAAktG,EAAAK,EAAA,GAAAliF,GAAAsK,EAAAwU,EAAA9e,GAAAyT,EAAA,GAAAzT,GAAA,IACArqB,EAAA,EAAmBA,EAAAge,IAAOhe,EAC1BmpG,EAAAnqG,KAAAktG,EAAAK,EAAAvsG,GAAAqqB,GAAAsK,GAAAmJ,EAAA99B,EAAA,GAAAqqB,GAAA,GAAAyT,EAAA99B,GAAAqqB,GAAA,GAGA,OAAA/vB,GAtBA,GAAAsyB,GAAAo6B,EAAA0mC,EAAAxP,GAAAz1D,EAAA01D,GAAAgrB,EAAAlrB,GAAAzkF,EAAAukF,GAAAt+E,EAAAu+E,EAsDA,OA9BAkuB,GAAAt/E,OAAA,SAAApzB,GACA,MAAAwM,WAAAtO,QACAk1B,EAAApzB,EACA0yG,GAFAt/E,GAIAs/E,EAAAxe,MAAA,SAAAl0F,GACA,MAAAwM,WAAAtO,QACAg2F,EAAA,kBAAAl0F,KAAAizG,GAAA94E,IAAAn6B,IAAA0kF,GACAguB,GAFAxe,GAIAwe,EAAAzjF,OAAA,SAAAjvB,GACA,MAAAwM,WAAAtO,QACA+wB,EAAA,kBAAAjvB,KAAAkzG,GAAA/4E,IAAAn6B,IAAA2kF,GACA+tB,GAFAzjF,GAIAyjF,EAAA1yG,EAAA,SAAA+8C,GACA,MAAAvwC,WAAAtO,QACA8B,EAAA+8C,EACA21D,GAFA1yG,GAIA0yG,EAAAzsG,EAAA,SAAA82C,GACA,MAAAvwC,WAAAtO,QACA+H,EAAA82C,EACA21D,GAFAzsG,GAIAysG,EAAA/C,IAAA,SAAA5yD,GACA,MAAAvwC,WAAAtO,QACAyxG,EAAA5yD,EACA21D,GAFA/C,GAIA+C,EAYA,IAAAO,IAAA9tG,GAAA4G,KACAonG,aAAA,SAAAryG,GACA,GAAA0F,GAAAqqB,EAAArM,EAAA1jB,EAAA5C,OAAA0C,EAAAE,EAAAiL,IAAA64E,IAAAwuB,EAAAtyG,EAAAiL,IAAA84E,IAAA7mF,EAAAmH,GAAAwE,MAAA6a,GAAAiS,KAAA,SAAAC,EAAAC,GACA,MAAA/1B,GAAA81B,GAAA91B,EAAA+1B,KACOlqB,EAAA,EAAAE,EAAA,EAAA0mG,KAAAC,IACP,KAAA9sG,EAAA,EAAiBA,EAAAge,IAAOhe,EACxBqqB,EAAA7yB,EAAAwI,GACAiG,EAAAE,GACAF,GAAA2mG,EAAAviF,GACAwiF,EAAAxzG,KAAAgxB,KAEAlkB,GAAAymG,EAAAviF,GACAyiF,EAAAzzG,KAAAgxB,GAGA,OAAAyiF,GAAApgF,UAAApqB,OAAAuqG,IAEAngF,QAAA,SAAApyB,GACA,MAAAqE,IAAAwE,MAAA7I,EAAA5C,QAAAg1B,WAEAp4B,QAAA4pF,KAEAwuB,GAAA/tG,GAAA4G,KACAwnG,WAAA,SAAAzyG,GACA,GAAA0F,GAAAqqB,EAAAsK,EAAA3W,EAAA1jB,EAAA5C,OAAAT,EAAAqD,EAAA,GAAA5C,OAAAk1G,KAAAxyG,EAAA,EAAA6gC,IACA,KAAA5Q,EAAA,EAAiBA,EAAApzB,IAAOozB,EAAA,CACxB,IAAArqB,EAAA,EAAA20B,EAAA,EAA0B30B,EAAAge,EAAOhe,IAAA20B,GAAAr6B,EAAA0F,GAAAqqB,GAAA,EACjCsK,GAAAv6B,MAAAu6B,GACAi4E,EAAAvzG,KAAAs7B,GAEA,IAAAtK,EAAA,EAAiBA,EAAApzB,IAAOozB,EACxB4Q,EAAA5Q,IAAAjwB,EAAAwyG,EAAAviF,IAAA,CAEA,OAAA4Q,IAEA+xE,OAAA,SAAA1yG,GACA,GAAA0F,GAAAqqB,EAAAC,EAAAi1D,EAAAC,EAAAytB,EAAArnG,EAAA+uB,EAAAu4E,EAAAlvF,EAAA1jB,EAAA5C,OAAA8B,EAAAc,EAAA,GAAArD,EAAAuC,EAAA9B,OAAAujC,IAEA,KADAA,EAAA,GAAAtG,EAAAu4E,EAAA,EACA7iF,EAAA,EAAiBA,EAAApzB,IAAOozB,EAAA,CACxB,IAAArqB,EAAA,EAAAu/E,EAAA,EAA2Bv/E,EAAAge,IAAOhe,EAAAu/E,GAAAjlF,EAAA0F,GAAAqqB,GAAA,EAClC,KAAArqB,EAAA,EAAAw/E,EAAA,EAAA55E,EAAApM,EAAA6wB,GAAA,GAAA7wB,EAAA6wB,EAAA,MAAuDrqB,EAAAge,IAAOhe,EAAA,CAC9D,IAAAsqB,EAAA,EAAA2iF,GAAA3yG,EAAA0F,GAAAqqB,GAAA,GAAA/vB,EAAA0F,GAAAqqB,EAAA,UAAAzkB,GAA0E0kB,EAAAtqB,IAAOsqB,EACjF2iF,IAAA3yG,EAAAgwB,GAAAD,GAAA,GAAA/vB,EAAAgwB,GAAAD,EAAA,OAAAzkB,CAEA45E,IAAAytB,EAAA3yG,EAAA0F,GAAAqqB,GAAA,GAEA4Q,EAAA5Q,GAAAsK,GAAA4qD,EAAAC,EAAAD,EAAA35E,EAAA,EACA+uB,EAAAu4E,MAAAv4E,GAEA,IAAAtK,EAAA,EAAiBA,EAAApzB,IAAOozB,EAAA4Q,EAAA5Q,IAAA6iF,CACxB,OAAAjyE,IAEAkyE,OAAA,SAAA7yG,GACA,GAAA0F,GAAAqqB,EAAAsK,EAAA3W,EAAA1jB,EAAA5C,OAAAT,EAAAqD,EAAA,GAAA5C,OAAA4yB,EAAA,EAAAtM,EAAAid,IACA,KAAA5Q,EAAA,EAAiBA,EAAApzB,IAAOozB,EAAA,CACxB,IAAArqB,EAAA,EAAA20B,EAAA,EAA0B30B,EAAAge,EAAOhe,IAAA20B,GAAAr6B,EAAA0F,GAAAqqB,GAAA,EACjC,IAAAsK,EAAA,IAAA30B,EAAA,EAA0BA,EAAAge,EAAOhe,IAAA1F,EAAA0F,GAAAqqB,GAAA,IAAAsK,MAAyB,KAAA30B,EAAA,EAAiBA,EAAAge,EAAOhe,IAAA1F,EAAA0F,GAAAqqB,GAAA,GAAAC,EAElF,IAAAD,EAAA,EAAiBA,EAAApzB,IAAOozB,EAAA4Q,EAAA5Q,GAAA,CACxB,OAAA4Q,IAEAmyE,KAAAjvB,IA0BAx/E,IAAAmwC,OAAAu+D,UAAA,WAEA,QAAAA,GAAA/yG,EAAA0F,GAEA,IADA,GAAAstG,GAAA9zG,EAAA+zG,KAAA3gF,EAAAtyB,EAAAiL,IAAAioG,EAAA1yG,MAAAqI,EAAAigF,EAAApkF,KAAAlE,KAAA8xB,EAAA5sB,GAAA4jF,EAAA6pB,EAAAzuG,KAAAlE,KAAAqI,EAAAypB,EAAA5sB,MAAA,EAAAge,EAAA4O,EAAAl1B,OAAAT,EAAA2sF,EAAAlsF,OAAA,EAAA4yB,EAAAojF,EAAA,IAAA1vF,IACAhe,EAAA/I,GACAq2G,EAAAC,EAAAvtG,MACAstG,EAAA1nG,GAAAg+E,EAAA5jF,EAAA,IAAAstG,EAAA9zG,EAAAoqF,EAAA5jF,IACAstG,EAAA7tG,EAAA,CAEA,IAAAxI,EAAA,EAEA,IADA+I,GAAA,IACAA,EAAAge,GACAxkB,EAAAozB,EAAA5sB,GACAxG,GAAA2J,EAAA,IAAA3J,GAAA2J,EAAA,KACAmqG,EAAAC,EAAA5uG,GAAA8iF,OAAAmC,EAAApqF,EAAA,EAAAvC,GAAA,GACAq2G,EAAA7tG,GAAA6qB,EACAgjF,EAAAj0G,KAAAiB,EAAA0F,IAIA,OAAAutG,GAnBA,GAAAG,IAAA,EAAAF,EAAA1rB,OAAAsB,EAAA1E,GAAA+uB,EAAAlvB,EA2CA,OAtBA8uB,GAAA54G,MAAA,SAAA+E,GACA,MAAAwM,WAAAtO,QACA81G,EAAAh0G,EACA6zG,GAFAG,GAIAH,EAAAlqG,MAAA,SAAA3J,GACA,MAAAwM,WAAAtO,QACA0rF,EAAAnxB,GAAAz4D,GACA6zG,GAFAjqB,GAIAiqB,EAAAE,KAAA,SAAA/zG,GACA,MAAAwM,WAAAtO,QACA+1G,EAAA,gBAAAj0G,GAAA,SAAA2J,GACA,MAAAq7E,IAAAr7E,EAAA3J,IACOy4D,GAAAz4D,GACP6zG,GAJAI,GAMAJ,EAAAK,UAAA,SAAAl0G,GACA,MAAAwM,WAAAtO,QACAg2G,IAAAl0G,EACA6zG,GAFAK,GAIAL,GAaA1uG,GAAAmwC,OAAA6+D,KAAA,WAEA,QAAAA,GAAAh3G,EAAAqJ,GACA,GAAAq2E,GAAAgH,EAAAr+E,KAAAlE,KAAAnE,EAAAqJ,GAAAy2E,EAAAJ,EAAA,GAAAt1E,EAAAlG,EAAA,GAAAiG,EAAAjG,EAAA,GAAAilC,EAAA,MAAAiP,EAAA14C,KAAAy8B,KAAA,kBAAAic,KAAA,WACA,MAAAA,GAOA,IALA0nC,EAAAj9E,EAAAi9E,EAAAh3E,EAAA,EACAg+E,GAAAhH,EAAA,SAAA9/E,GACAA,EAAAmpC,KAAAnpC,EAAAlC,SAEAgpF,GAAAhH,EAAAyI,IACA9zD,EAAA,CACA,GAAA6zD,GAAA7zD,GAAA2jB,EAAA,EAAA14C,KAAA+D,IAAA,EAAAq8E,EAAA32C,EAAA/+B,EAAA,EAAA01E,EAAA32C,EAAAh/B,IAAA,CACA28E,IAAAhH,EAAA,SAAA9/E,GACAA,EAAAmpC,GAAAm/C,IAEAxB,GAAAhH,EAAAyI,IACAzB,GAAAhH,EAAA,SAAA9/E,GACAA,EAAAmpC,GAAAm/C,IAIA,MADAS,IAAAjJ,EAAA11E,EAAA,EAAAD,EAAA,EAAAiuC,EAAA,IAAA14C,KAAA+D,IAAA,EAAAq8E,EAAA32C,EAAA/+B,EAAA,EAAA01E,EAAA32C,EAAAh/B,IACAu1E,EArBA,GAAAtnC,GAAAsuC,EAAA1+E,GAAAmwC,OAAAuuC,YAAAptD,KAAA0uD,IAAAvzD,EAAA,EAAAvwB,GAAA,IAsCA,OAfA8yG,GAAA9yG,KAAA,SAAAwrD,GACA,MAAArgD,WAAAtO,QACAmD,EAAAwrD,EACAsnD,GAFA9yG,GAIA8yG,EAAA5+D,OAAA,SAAAsX,GACA,MAAArgD,WAAAtO,QACAq3C,EAAA,MAAAsX,GAAA,kBAAAA,QACAsnD,GAFA5+D,GAIA4+D,EAAAviF,QAAA,SAAAi7B,GACA,MAAArgD,WAAAtO,QACA0zB,GAAAi7B,EACAsnD,GAFAviF,GAIAgyD,GAAAuwB,EAAAtwB,IAmHA1+E,GAAAmwC,OAAA0mC,KAAA,WAEA,QAAAA,GAAA7+E,EAAAqJ,GACA,GAAAq2E,GAAAgH,EAAAr+E,KAAAlE,KAAAnE,EAAAqJ,GAAA4tG,EAAAv3B,EAAA,GAAAw3B,EAAAC,EAAAF,EAGA,IAFAnwB,GAAAowB,EAAAE,GAAAF,EAAAn0E,OAAAziC,GAAA42G,EAAAt3D,EACAinC,GAAAqwB,EAAAG,GACAC,EAAAzwB,GAAAowB,EAAAM,OAAoE,CACpE,GAAA9nG,GAAAwnG,EAAA1nG,EAAA0nG,EAAAznG,EAAAynG,CACApwB,IAAAowB,EAAA,SAAApnG,GACAA,EAAAhN,EAAA4M,EAAA5M,IAAA4M,EAAAI,GACAA,EAAAhN,EAAA0M,EAAA1M,IAAA0M,EAAAM,GACAA,EAAAwkE,MAAA7kE,EAAA6kE,QAAA7kE,EAAAK,IAEA,IAAA2nG,GAAAC,EAAAhoG,EAAAF,GAAA,EAAAE,EAAA5M,EAAA6gF,EAAAx/E,EAAA,IAAAqL,EAAA1M,EAAA40G,EAAAloG,EAAAE,GAAA,EAAA+nG,GAAA1zB,EAAA5/E,EAAA,IAAAsL,EAAA6kE,OAAA,EACAwS,IAAAowB,EAAA,SAAApnG,GACAA,EAAAhN,GAAAgN,EAAAhN,EAAA20G,GAAA9zB,EACA7zE,EAAA/G,EAAA+G,EAAAwkE,MAAAyP,IAGA,MAAApE,GAEA,QAAAy3B,GAAAF,GAKA,IAJA,GAGOS,GAHPR,GACAtzC,EAAA,KACAgc,UAAAq3B,IACOU,GAAAT,GACP,OAAAQ,EAAAC,EAAA/rC,QACA,OAAAub,GAAAvH,EAAA83B,EAAA93B,SAAAv2E,EAAA,EAAAge,EAAAu4D,EAAA7+E,OAA8EsI,EAAAge,IAAOhe,EACrFsuG,EAAAj1G,MAAAk9E,EAAAv2E,GAAA89E,GACAz3B,EAAAkwB,EAAAv2E,GACA05B,OAAA20E,EACA93B,UAAAuH,EAAAvH,EAAAv2E,GAAAu2E,WAAAuH,EAAAv7E,YACAg4D,EAAA,KACArqC,EAAA,KACAqmB,EAAA,EACAt/C,EAAA,EACAk6B,EAAA,EACA3rB,EAAA,EACA4T,EAAA,KACApZ,MACWkwB,EAAA4tD,EAGX,OAAA+vB,GAAAt3B,SAAA,GAEA,QAAAw3B,GAAAttG,GACA,GAAA81E,GAAA91E,EAAA81E,SAAAg4B,EAAA9tG,EAAAi5B,OAAA68C,SAAAx1E,EAAAN,EAAAT,EAAAuuG,EAAA9tG,EAAAT,EAAA,OACA,IAAAu2E,EAAA7+E,OAAA,CACA2oF,GAAA5/E,EACA,IAAA+tG,IAAAj4B,EAAA,GAAAhgC,EAAAggC,IAAA7+E,OAAA,GAAA6+C,GAAA,CACAx1C,IACAN,EAAA81C,EAAAx1C,EAAAw1C,EAAA63D,EAAA3tG,EAAA4lD,EAAAtlD,EAAAslD,GACA5lD,EAAAxJ,EAAAwJ,EAAA81C,EAAAi4D,GAEA/tG,EAAA81C,EAAAi4D,MAEOztG,KACPN,EAAA81C,EAAAx1C,EAAAw1C,EAAA63D,EAAA3tG,EAAA4lD,EAAAtlD,EAAAslD,GAEA5lD,GAAAi5B,OAAA6gC,EAAAk0C,EAAAhuG,EAAAM,EAAAN,EAAAi5B,OAAA6gC,GAAAg0C,EAAA,IAEA,QAAAP,GAAAvtG,GACAA,EAAA4lD,EAAA7sD,EAAAiH,EAAA81C,EAAA91C,EAAAi5B,OAAAziC,EACAwJ,EAAAxJ,GAAAwJ,EAAAi5B,OAAAziC,EAEA,QAAAw3G,GAAAhuG,EAAAM,EAAAy/E,GACA,GAAAz/E,EAAA,CAEA,IADA,GAAAknB,GAAAymF,EAAAjuG,EAAAkuG,EAAAluG,EAAA8/E,EAAAx/E,EAAA6tG,EAAAF,EAAAh1E,OAAA68C,SAAA,GAAAs4B,EAAAH,EAAAz3G,EAAA63G,EAAAH,EAAA13G,EAAA83G,EAAAxuB,EAAAtpF,EAAA+3G,EAAAJ,EAAA33G,EACAspF,EAAAP,GAAAO,GAAAmuB,EAAA3uB,GAAA2uB,GAAAnuB,GAAAmuB,GACAE,EAAA7uB,GAAA6uB,GACAD,EAAA3uB,GAAA2uB,GACAA,EAAAz+E,EAAAzvB,EACAwnB,EAAAs4D,EAAAhqC,EAAAw4D,EAAAL,EAAAn4D,EAAAs4D,EAAAT,EAAA7tB,EAAAl6B,EAAAqoD,EAAAroD,GACAp+B,EAAA,IACAg4D,GAAAK,GAAAC,EAAA9/E,EAAA+/E,GAAA//E,EAAAwnB,GACA4mF,GAAA5mF,EACA6mF,GAAA7mF,GAEA8mF,GAAAxuB,EAAAtpF,EACA43G,GAAAH,EAAAz3G,EACA+3G,GAAAJ,EAAA33G,EACA63G,GAAAH,EAAA13G,CAEAspF,KAAAP,GAAA2uB,KACAA,EAAAv1F,EAAAmnE,EACAouB,EAAA13G,GAAA83G,EAAAD,GAEAJ,IAAA3uB,GAAA6uB,KACAA,EAAAx1F,EAAAs1F,EACAE,EAAA33G,GAAA43G,EAAAG,EACAxuB,EAAA//E,GAGA,MAAA+/E,GAEA,QAAA0tB,GAAA1nG,GACAA,EAAAhN,GAAAqB,EAAA,GACA2L,EAAA/G,EAAA+G,EAAAwkE,MAAAnwE,EAAA,GAhGA,GAAAwiF,GAAA1+E,GAAAmwC,OAAAuuC,YAAAptD,KAAA,MAAAx7B,MAAA,MAAA25G,EAAAtuB,GAAAjlF,GAAA,KAAAozG,EAAA,IAiHA,OAfAz4B,GAAA44B,WAAA,SAAA50G,GACA,MAAAwM,WAAAtO,QACA02G,EAAA50G,EACAg8E,GAFA44B,GAIA54B,EAAA36E,KAAA,SAAArB,GACA,MAAAwM,WAAAtO,QACAu2G,EAAA,OAAApzG,EAAArB,GAAA00G,EAAA,KACA14B,GAFAy4B,EAAA,KAAApzG,GAIA26E,EAAAy4B,SAAA,SAAAz0G,GACA,MAAAwM,WAAAtO,QACAu2G,EAAA,OAAApzG,EAAArB,GAAA,KAAA00G,EACA14B,GAFAy4B,EAAApzG,EAAA,MAIAuiF,GAAA5H,EAAA6H,IAiCA1+E,GAAAmwC,OAAAmgE,QAAA,WAEA,QAAAA,GAAAt4G,EAAAqJ,GACA,GAAAkvG,GAAA74B,EAAAgH,EAAAr+E,KAAAlE,KAAAnE,EAAAqJ,GAAAy2E,EAAAJ,EAAA,GAAA78E,EAAA,CACAikF,IAAAhH,EAAA,SAAAjwE,GACA,GAAA+vE,GAAA/vE,EAAA+vE,QACAA,MAAA7+E,QACA8O,EAAAhN,EAAAknF,GAAAnK,GACA/vE,EAAA/G,EAAAghF,GAAAlK,KAEA/vE,EAAAhN,EAAA01G,EAAA11G,GAAA40G,EAAA5nG,EAAA0oG,GAAA,EACA1oG,EAAA/G,EAAA,EACAyvG,EAAA1oG,IAGA,IAAAJ,GAAAu6E,GAAAlK,GAAAvwE,EAAA06E,GAAAnK,GAAAt5C,EAAA/2B,EAAA5M,EAAA40G,EAAAhoG,EAAAF,GAAA,EAAA0K,EAAA1K,EAAA1M,EAAA40G,EAAAloG,EAAAE,GAAA,CAQA,OAPAq3E,IAAAhH,EAAAw3B,EAAA,SAAAznG,GACAA,EAAAhN,GAAAgN,EAAAhN,EAAAi9E,EAAAj9E,GAAAqB,EAAA,GACA2L,EAAA/G,GAAAg3E,EAAAh3E,EAAA+G,EAAA/G,GAAA5E,EAAA,IACO,SAAA2L,GACPA,EAAAhN,GAAAgN,EAAAhN,EAAA2jC,IAAAvsB,EAAAusB,GAAAtiC,EAAA,GACA2L,EAAA/G,GAAA,GAAAg3E,EAAAh3E,EAAA+G,EAAA/G,EAAAg3E,EAAAh3E,EAAA,IAAA5E,EAAA,KAEAw7E,EAtBA,GAAAgH,GAAA1+E,GAAAmwC,OAAAuuC,YAAAptD,KAAA,MAAAx7B,MAAA,MAAA25G,EAAAtuB,GAAAjlF,GAAA,KAAAozG,GAAA,CAuCA,OAfAgB,GAAAb,WAAA,SAAA50G,GACA,MAAAwM,WAAAtO,QACA02G,EAAA50G,EACAy1G,GAFAb,GAIAa,EAAAp0G,KAAA,SAAArB,GACA,MAAAwM,WAAAtO,QACAu2G,EAAA,OAAApzG,EAAArB,GACAy1G,GAFAhB,EAAA,KAAApzG,GAIAo0G,EAAAhB,SAAA,SAAAz0G,GACA,MAAAwM,WAAAtO,QACAu2G,EAAA,OAAApzG,EAAArB,GACAy1G,GAFAhB,EAAApzG,EAAA,MAIAuiF,GAAA6xB,EAAA5xB,IAoBA1+E,GAAAmwC,OAAAqgE,QAAA,WAEA,QAAApvG,GAAAw2E,EAAAjsD,GAEA,IADA,GAAAwzD,GAAAj/C,EAAA7+B,GAAA,EAAAge,EAAAu4D,EAAA7+E,SACAsI,EAAAge,GACA6gB,GAAAi/C,EAAAvH,EAAAv2E,IAAAvL,OAAA61B,EAAA,IAAAA,GACAwzD,EAAAj/C,KAAAvgB,MAAAugB,OAAA,IAAAA,EAGA,QAAAuwE,GAAA5oG,GACA,GAAA+vE,GAAA/vE,EAAA+vE,QACA,IAAAA,KAAA7+E,OAAA,CACA,GAAAomF,GAAAuxB,EAAArxF,EAAAykB,EAAA6sE,EAAA9oG,GAAAkmF,KAAA6iB,EAAAh5B,EAAAh0E,QAAA4gG,EAAAz8F,IAAAy3D,EAAA,UAAAqxC,EAAA/sE,EAAA78B,GAAA,SAAA4pG,EAAA/sE,EAAA5/B,GAAA,eAAA2sG,EAAA,EAAAhpG,EAAAwkE,MAAAvoC,EAAA5/B,GAAA4/B,EAAA78B,GAAAvP,KAAAiyB,IAAAma,EAAA78B,GAAA68B,EAAA5/B,GAGA,KAFA9C,EAAAwvG,EAAA9sE,EAAA78B,GAAA68B,EAAA5/B,GAAA2D,EAAA/R,OACAi4F,EAAA7tD,KAAA,GACA7gB,EAAAuxF,EAAA73G,QAAA,GACAg1F,EAAArzF,KAAAykF,EAAAyxB,EAAAvxF,EAAA,IACA0uE,EAAA7tD,MAAAi/C,EAAAj/C,KACA,aAAA2wE,IAAAH,EAAAI,EAAA/iB,EAAAvuB,KAAAglC,GACAoM,EAAAhtC,MACA4gC,EAAAkM,IAEA3iB,EAAA7tD,MAAA6tD,EAAAnqB,MAAA1jC,KACAzE,EAAAsyD,EAAAvuB,EAAA17B,GAAA,GACA07B,EAAA9nE,KAAAiyB,IAAAma,EAAA78B,GAAA68B,EAAA5/B,IACA6pF,EAAAh1F,OAAAg1F,EAAA7tD,KAAA,EACAskE,EAAAz8F,IAGAgmF,GAAAh1F,SACA0iC,EAAAsyD,EAAAvuB,EAAA17B,GAAA,GACAiqD,EAAAh1F,OAAAg1F,EAAA7tD,KAAA,GAEA03C,EAAAj4E,QAAA8wG,IAGA,QAAAM,GAAAlpG,GACA,GAAA+vE,GAAA/vE,EAAA+vE,QACA,IAAAA,KAAA7+E,OAAA,CACA,GAAAomF,GAAAr7C,EAAA6sE,EAAA9oG,GAAA+oG,EAAAh5B,EAAAh0E,QAAAmqF,IAGA,KAFA3sF,EAAAwvG,EAAA9sE,EAAA78B,GAAA68B,EAAA5/B,GAAA2D,EAAA/R,OACAi4F,EAAA7tD,KAAA,EACAi/C,EAAAyxB,EAAAhtC,OACAmqB,EAAArzF,KAAAykF,GACA4O,EAAA7tD,MAAAi/C,EAAAj/C,KACA,MAAAi/C,EAAAvnC,IACAnc,EAAAsyD,EAAA5O,EAAAvnC,EAAA9T,EAAA78B,GAAA68B,EAAA5/B,GAAA4/B,GAAA8sE,EAAA73G,QACAg1F,EAAAh1F,OAAAg1F,EAAA7tD,KAAA,EAGA03C,GAAAj4E,QAAAoxG,IAGA,QAAAD,GAAA/iB,EAAAvuB,GAEA,IADA,GAAAr+B,GAAAt6B,EAAAknF,EAAA7tD,KAAA8wE,EAAA,EAAAC,EAAAlpG,IAAA1G,GAAA,EAAAge,EAAA0uE,EAAAh1F,SACAsI,EAAAge,IACA8hB,EAAA4sD,EAAA1sF,GAAA6+B,QACAiB,EAAA8vE,MAAA9vE,GACAA,EAAA6vE,MAAA7vE,GAIA,OAFAt6B,MACA24D,KACA34D,EAAAnP,KAAA+D,IAAA+jE,EAAAwxC,EAAAnkF,EAAAhmB,KAAA24D,EAAAyxC,EAAApkF,IAAA9kB,IAEA,QAAA0zB,GAAAsyD,EAAAvuB,EAAA17B,EAAAllB,GACA,GAAAoX,GAAA30B,GAAA,EAAAge,EAAA0uE,EAAAh1F,OAAA8B,EAAAipC,EAAAjpC,EAAAiG,EAAAgjC,EAAAhjC,EAAAgB,EAAA09D,EAAA9rB,EAAAq6C,EAAA7tD,KAAAs/B,GAAA,CACA,IAAAA,GAAA17B,EAAA78B,GAAA,CAEA,KADA2X,GAAA9c,EAAAgiC,EAAA5/B,MAAApC,EAAAgiC,EAAA5/B,MACA7C,EAAAge,GACA2W,EAAA+3D,EAAA1sF,GACA20B,EAAAn7B,IACAm7B,EAAAl1B,IACAk1B,EAAA9xB,GAAApC,EACAjH,GAAAm7B,EAAA/uB,GAAAvP,KAAAiyB,IAAAma,EAAAjpC,EAAAipC,EAAA78B,GAAApM,EAAAiH,EAAA4xC,EAAA1d,EAAAkK,KAAAp+B,GAAA,EAEAk0B,GAAA4hB,GAAA,EACA5hB,EAAA/uB,IAAA68B,EAAAjpC,EAAAipC,EAAA78B,GAAApM,EACAipC,EAAAhjC,GAAAgB,EACAgiC,EAAA5/B,IAAApC,MACO,CAEP,KADA8c,GAAA9c,EAAAgiC,EAAA78B,MAAAnF,EAAAgiC,EAAA78B,MACA5F,EAAAge,GACA2W,EAAA+3D,EAAA1sF,GACA20B,EAAAn7B,IACAm7B,EAAAl1B,IACAk1B,EAAA/uB,GAAAnF,EACAhB,GAAAk1B,EAAA9xB,GAAAxM,KAAAiyB,IAAAma,EAAAhjC,EAAAgjC,EAAA5/B,GAAApD,EAAAgB,EAAA4xC,EAAA1d,EAAAkK,KAAAp+B,GAAA,EAEAk0B,GAAA4hB,GAAA,EACA5hB,EAAA9xB,IAAA4/B,EAAAhjC,EAAAgjC,EAAA5/B,GAAApD,EACAgjC,EAAAjpC,GAAAiH,EACAgiC,EAAA78B,IAAAnF,GAGA,QAAA0uG,GAAAx4G,GACA,GAAA0/E,GAAAw5B,GAAAxyB,EAAA1mF,GAAA8/E,EAAAJ,EAAA,EAOA,OANAI,GAAAj9E,EAAAi9E,EAAAh3E,EAAA,EACAg3E,EAAAhiF,OAAAgiF,EAAA7wE,GAAA/K,EAAA,GAAA47E,EAAA5zE,GAAAhI,EAAA,IAA2D47E,EAAA7wE,GAAA6wE,EAAA5zE,GAAA,EAC3DgtG,GAAAxyB,EAAA+uB,QAAA31B,GACA12E,GAAA02E,KAAA7wE,GAAA6wE,EAAA5zE,GAAA4zE,EAAAhiF,QACAo7G,EAAAH,EAAAN,GAAA34B,GACAq5B,IAAAD,EAAAx5B,GACAA,EArGA,GAAAw5B,GAAAxyB,EAAA1+E,GAAAmwC,OAAAuuC,YAAAhrC,EAAAh8C,KAAAg8C,MAAAx3C,GAAA,KAAAuwB,EAAA,KAAAkkF,EAAAzuB,GAAAivB,GAAA,EAAAN,EAAA,WAAAhkF,EAAA,MAAAn1B,KAAAy8B,KAAA,GA+IA,OAxCAq8E,GAAAt0G,KAAA,SAAArB,GACA,MAAAwM,WAAAtO,QACAmD,EAAArB,EACA21G,GAFAt0G,GAIAs0G,EAAA/jF,QAAA,SAAA5xB,GAEA,QAAAu2G,GAAAvpG,GACA,GAAA0qB,GAAA13B,EAAAwF,KAAAmwG,EAAA3oG,IAAAwkE,MACA,cAAA95C,EAAA2vD,GAAAr6E,GAAAs6E,GAAAt6E,EAAA,gBAAA0qB,gBAEA,QAAA8+E,GAAAxpG,GACA,MAAAs6E,IAAAt6E,EAAAhN,GANA,IAAAwM,UAAAtO,OAAA,MAAA0zB,EAQA,IAAAnxB,EAGA,OAFAq1G,GAAA,OAAAlkF,EAAA5xB,GAAAqnF,GAAA,aAAA5mF,QAAAT,IAAAu2G,EAAA,WAAA91G,GAAAT,YACAw2G,KACAb,GAEAA,EAAA98D,MAAA,SAAA74C,GACA,MAAAwM,WAAAtO,QACA26C,EAAA74C,EAAAnD,KAAAg8C,MAAAyvC,OACAqtB,GAFA98D,GAAAyvC,QAIAqtB,EAAAW,OAAA,SAAAt2G,GACA,MAAAwM,WAAAtO,QACAo4G,EAAAt2G,EACAq2G,EAAA,KACAV,GAHAW,GAKAX,EAAA3jF,MAAA,SAAAhyB,GACA,MAAAwM,WAAAtO,QACA8zB,EAAAhyB,EACA21G,GAFA3jF,GAIA2jF,EAAAK,KAAA,SAAAh2G,GACA,MAAAwM,WAAAtO,QACA83G,EAAAh2G,EAAA,GACA21G,GAFAK,GAIApyB,GAAA+xB,EAAA9xB,IA2BA1+E,GAAAi+B,QACA4lE,OAAA,SAAAyN,EAAAC,GACA,GAAAlyF,GAAAhY,UAAAtO,MAGA,OAFAsmB,GAAA,IAAAkyF,EAAA,GACAlyF,EAAA,IAAAiyF,EAAA,GACA,WACA,GAAAz2G,GAAAiG,EAAAqgC,CACA,GACAtmC,GAAA,EAAAnD,KAAAumC,SAAA,EACAn9B,EAAA,EAAApJ,KAAAumC,SAAA,EACAkD,EAAAtmC,IAAAiG,WACSqgC,KAAA,EACT,OAAAmwE,GAAAC,EAAA12G,EAAAnD,KAAAy8B,MAAA,EAAAz8B,KAAAo+D,IAAA30B,QAGAqwE,UAAA,WACA,GAAAvzE,GAAAj+B,GAAAi+B,OAAA4lE,OAAAtiG,MAAAvB,GAAAqH,UACA,mBACA,MAAA3P,MAAAs5D,IAAA/yB,OAGAwzE,MAAA,SAAAn5G,GACA,GAAA2lC,GAAAj+B,GAAAi+B,OAAAyzE,UAAAp5G,EACA,mBACA,MAAA2lC,KAAA3lC,IAGAo5G,UAAA,SAAAp5G,GACA,kBACA,OAAAuO,GAAA,EAAA6kB,EAAA,EAA8BA,EAAApzB,EAAOozB,IAAA7kB,GAAAnP,KAAAumC,QACrC,OAAAp3B,MAIA7G,GAAAoB,QAkCA,IAAAwhF,KACAjrF,MAAA0wD,EACA1nD,KAAA0nD,EAiBAroD,IAAAoB,MAAA8F,OAAA,WACA,MAAA67E,KAAA,WAAAlK,IAAA,GA+FA,IAAAiL,KACAj9E,EAAA,EACA7D,EAAA,EACAuvB,EAAA,EACA4O,EAAA,EACA/oB,EAAA,EASApY,IAAAoB,MAAA00D,IAAA,WACA,MAAAiuB,IAAA/jF,GAAAoB,MAAA8F,SAAAlG,QAAA,oBAgEA,IAAAmjF,IAAAnkF,GAAAzH,OAAA,OAAA2rF,IACAvsF,MAAA,SAAAkD,GACA,OAAAnD,KAAAiJ,MAAA9F,IAEA8F,KAAA,SAAA9F,GACA,OAAAnD,KAAAC,OAAAkD,IAGAmF,IAAAoB,MAAAgzB,IAAA,WACA,MAAAgwD,IAAApkF,GAAAoB,MAAA8F,SAAA,UAyCAlH,GAAAoB,MAAA+yB,KAAA,WACA,MAAAn0B,IAAAoB,MAAAgzB,MAAA6wB,SAAA,KAEAjlD,GAAAoB,MAAAuwG,QAAA,WACA,MAAAntB,QACA/pE,EAAA,QACA8W,UA4FAvxB,GAAAoB,MAAA02C,WAAA,WACA,MAAA93C,IAAAoB,MAAAuwG,UAAAntG,MAAAotG,KAEA5xG,GAAAoB,MAAAywG,WAAA,WACA,MAAA7xG,IAAAoB,MAAAuwG,UAAAntG,MAAAstG,KAEA9xG,GAAAoB,MAAA2wG,YAAA,WACA,MAAA/xG,IAAAoB,MAAAuwG,UAAAntG,MAAAwtG,KAEAhyG,GAAAoB,MAAA6wG,YAAA,WACA,MAAAjyG,IAAAoB,MAAAuwG,UAAAntG,MAAA0tG,IAEA,IAAAN,KAAA,qFAAAhrG,IAAAisD,IACAi/C,IAAA,+KAAAlrG,IAAAisD,IACAm/C,IAAA,6KAAAprG,IAAAisD,IACAq/C,IAAA,8KAAAtrG,IAAAisD,GACA7yD,IAAAoB,MAAA8jF,SAAA,WACA,MAAAF,YAmCAhlF,GAAAoB,MAAA+wG,SAAA,WACA,MAAA9sB,IAAA,YAiCArlF,GAAAoB,MAAAwxC,UAAA,WACA,MAAA0yC,KAAA,YAyBAtlF,GAAAoB,MAAAokF,SAAA,WACA,MAAAD,KAAA,OAuBAvlF,GAAAyP,OAIAzP,GAAAyP,IAAA0hC,IAAA,WAEA,QAAAA,KACA,GAAAsqC,GAAA/jF,KAAA+D,IAAA,GAAA60C,EAAA/uC,MAAApF,KAAAkL,YAAAi4C,EAAA5nD,KAAA+D,IAAA,GAAA21C,EAAA7vC,MAAApF,KAAAkL,YAAAykE,EAAA76B,EAAA1vC,MAAApF,KAAAkL,WAAAwpD,GAAAyX,EAAAp3B,EAAA3vC,MAAApF,KAAAkL,WAAAwpD,GAAAowB,EAAAvpF,KAAAg2B,IAAA46C,EAAAwD,GAAAqa,EAAAra,EAAAxD,EAAA,GAEA,IADAhpB,EAAAm8B,IAAAyK,EAAA5mC,IAAAm8B,IAAAyK,GACAjF,GAAAiR,GAAA,MAAAkgB,GAAA9yD,EAAA6mC,IAAA1K,EAAA22B,EAAA32B,EAAA,EAAA0K,GAAA,OACA,IAAAD,GAAAngB,EAAAssC,EAAAC,EAAA9zE,EAAAlC,EAAArqB,EAAAE,EAAAD,EAAA1F,EAAA8kE,EAAAG,EAAAlP,EAAA,EAAAC,EAAA,EAAAv8D,IAOA,KANAqsG,IAAAvsB,EAAAxkF,MAAApF,KAAAkL,YAAA,QACAgrG,EAAAE,IAAAC,GAAA96G,KAAAy8B,KAAAsnD,IAAAn8B,MAAAizD,EAAAhxG,MAAApF,KAAAkL,WACA8+E,IAAA3jB,IAAA,GACAljB,IAAAkjB,EAAA5R,GAAAyhD,EAAA/yD,EAAA5nD,KAAAoN,IAAAwtG,KACA72B,IAAAlZ,EAAA3R,GAAAyhD,EAAA52B,EAAA/jF,KAAAoN,IAAAwtG,MAEAhzD,EAAA,CACA9gB,EAAA8gB,EAAA5nD,KAAAmkC,IAAAiwC,EAAAtJ,GACAlmC,EAAAgjB,EAAA5nD,KAAAoN,IAAAgnE,EAAAtJ,GACAvwD,EAAAqtC,EAAA5nD,KAAAmkC,IAAAysC,EAAA9F,GACArwD,EAAAmtC,EAAA5nD,KAAAoN,IAAAwjE,EAAA9F,EACA,IAAAkyB,GAAAh9F,KAAAg2B,IAAA46C,EAAAwD,EAAA,EAAAtJ,IAAA9R,GAAA,GACA,IAAA8R,GAAAwjB,GAAAxnD,EAAAlC,EAAArqB,EAAAE,KAAAg0E,EAAAuO,EAAA,CACA,GAAA+d,IAAA3mC,EAAAxD,GAAA,CACA9pC,GAAA8gB,EAAA5nD,KAAAmkC,IAAA42E,GACAn2E,EAAAgjB,EAAA5nD,KAAAoN,IAAA2tG,GACAxgG,EAAAE,EAAA,UAGAqsB,GAAAlC,EAAA,CAEA,IAAAm/C,EAAA,CACAvpE,EAAAupE,EAAA/jF,KAAAmkC,IAAAysC,EAAA/F,GACA/1D,EAAAivE,EAAA/jF,KAAAoN,IAAAwjE,EAAA/F,GACA+O,EAAAmK,EAAA/jF,KAAAmkC,IAAAiwC,EAAAvJ,GACAkP,EAAAgK,EAAA/jF,KAAAoN,IAAAgnE,EAAAvJ,EACA,IAAAkyB,GAAA/8F,KAAAg2B,IAAAo+C,EAAAxD,EAAA,EAAA/F,IAAA7R,GAAA,GACA,IAAA6R,GAAAyjB,GAAA9zE,EAAA1F,EAAA8kE,EAAAG,KAAA,EAAA0U,EAAAsO,EAAA,CACA,GAAAie,IAAA5mC,EAAAxD,GAAA,CACAp2D,GAAAupE,EAAA/jF,KAAAmkC,IAAA62E,GACAlmG,EAAAivE,EAAA/jF,KAAAoN,IAAA4tG,GACAphC,EAAAG,EAAA,UAGAv/D,GAAA1F,EAAA,CAEA,IAAAy0E,EAAAxgB,KAAAylB,EAAAxuF,KAAAiyB,IAAAjyB,KAAAg2B,IAAA4xB,EAAAm8B,GAAA,GAAAk3B,EAAApxG,MAAApF,KAAAkL,aAAA,MACA0+D,EAAA0V,EAAAn8B,EAAA6mC,EAAA,GACA,IAAAysB,GAAA1sB,EAAA2sB,EAAA3sB,CACA,IAAAjF,EAAAvwB,GAAA,CACA,GAAAoiD,GAAA,MAAAxhC,GAAAp/D,EAAA1F,GAAA,MAAAyF,GAAAusB,EAAAlC,GAAA+0C,IAAA7yC,EAAAlC,IAAAg1C,EAAAG,IAAAx/D,EAAAE,IAAAD,EAAA1F,IAAAm7D,EAAAnpC,EAAAs0E,EAAA,GAAAlrC,EAAAtrC,EAAAw2E,EAAA,GAAAjrC,EAAA51D,EAAA6gG,EAAA,GAAAhrC,EAAA31D,EAAA2gG,EAAA,GAAAC,EAAA,EAAAr7G,KAAAoN,IAAApN,KAAAi5D,MAAAgX,EAAAE,EAAAD,EAAAE,IAAApwE,KAAAy8B,KAAAwzC,IAAAC,KAAAlwE,KAAAy8B,KAAA0zC,IAAAC,OAAA,GAAAkrC,EAAAt7G,KAAAy8B,KAAA2+E,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAD,GAAAn7G,KAAAiyB,IAAAu8D,GAAAzK,EAAAu3B,IAAAD,EAAA,IACAH,EAAAl7G,KAAAiyB,IAAAu8D,GAAA5mC,EAAA0zD,IAAAD,EAAA,IAEA,SAAA9gG,EAAA,CACA,GAAAghG,GAAAhtB,GAAA,MAAA3U,GAAAp/D,EAAA1F,IAAA8kE,EAAAG,IAAAjzC,EAAAlC,GAAAgjB,EAAAszD,EAAAzsB,GAAA+sB,EAAAjtB,IAAAh0E,EAAAE,IAAAD,EAAA1F,GAAA8yC,EAAAszD,EAAAzsB,EACAD,KAAA0sB,EACA3sG,EAAAvL,KAAA,IAAAu4G,EAAA,OAAAL,EAAA,IAAAA,EAAA,QAAA7sC,EAAA,IAAAktC,EAAA,OAAA3zD,EAAA,IAAAA,EAAA,QAAA6mC,EAAAH,GAAAitB,EAAA,MAAAA,EAAA,MAAAC,EAAA,MAAAA,EAAA,WAAA/sB,EAAA,IAAA+sB,EAAA,OAAAN,EAAA,IAAAA,EAAA,QAAA7sC,EAAA,IAAAmtC,EAAA,IAEAjtG,EAAAvL,KAAA,IAAAu4G,EAAA,OAAAL,EAAA,IAAAA,EAAA,QAAA7sC,EAAA,IAAAmtC,EAAA,QAGAjtG,GAAAvL,KAAA,IAAA8jC,EAAA,IAAAlC,EAEA,UAAAg1C,EAAA,CACA,GAAA6hC,GAAAltB,IAAAznD,EAAAlC,IAAAg1C,EAAAG,GAAAgK,GAAAo3B,EAAA1sB,GAAAitB,EAAAntB,IAAA/zE,EAAA1F,GAAA,MAAAyF,GAAAusB,EAAAlC,IAAArqB,EAAAE,GAAAspE,GAAAo3B,EAAA1sB,EACAD,KAAA2sB,EACA5sG,EAAAvL,KAAA,IAAA04G,EAAA,OAAAP,EAAA,IAAAA,EAAA,QAAA9sC,EAAA,IAAAqtC,EAAA,OAAA33B,EAAA,IAAAA,EAAA,MAAA0K,EAAAH,GAAAotB,EAAA,MAAAA,EAAA,MAAAD,EAAA,MAAAA,EAAA,aAAAhtB,EAAA,IAAAgtB,EAAA,OAAAN,EAAA,IAAAA,EAAA,QAAA9sC,EAAA,IAAAotC,EAAA,IAEAltG,EAAAvL,KAAA,IAAA04G,EAAA,OAAAP,EAAA,IAAAA,EAAA,QAAA9sC,EAAA,IAAAotC,EAAA,QAGAltG,GAAAvL,KAAA,IAAAwX,EAAA,IAAA1F,OAGAvG,GAAAvL,KAAA,IAAA8jC,EAAA,IAAAlC,GACA,MAAArqB,GAAAhM,EAAAvL,KAAA,IAAA4kD,EAAA,IAAAA,EAAA,MAAAo1C,EAAA,IAAAvO,EAAA,IAAAl0E,EAAA,IAAAE,GACAlM,EAAAvL,KAAA,IAAAwX,EAAA,IAAA1F,GACA,MAAA8kE,GAAArrE,EAAAvL,KAAA,IAAA+gF,EAAA,IAAAA,EAAA,MAAAgZ,EAAA,MAAAtO,EAAA,IAAA7U,EAAA,IAAAG,EAGA,OADAxrE,GAAAvL,KAAA,KACAuL,EAAA4wD,KAAA,IAEA,QAAAu7C,GAAA9yD,EAAA6mC,GACA,YAAA7mC,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAA6mC,EAAA,OAAA7mC,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAA6mC,EAAA,MAAA7mC,EAhFA,GAAAhP,GAAAo1C,GAAAt0C,EAAAu0C,GAAAgtB,EAAAltB,GAAA8sB,EAAAC,GAAAvhE,EAAA20C,GAAA10C,EAAA20C,GAAAE,EAAAD,EAyHA,OAvCA30C,GAAAb,YAAA,SAAAxuC,GACA,MAAAuF,WAAAtO,QACAu3C,EAAAgjB,GAAAxxD,GACAqvC,GAFAb,GAIAa,EAAAC,YAAA,SAAAtvC,GACA,MAAAuF,WAAAtO,QACAq4C,EAAAkiB,GAAAxxD,GACAqvC,GAFAC,GAIAD,EAAAwhE,aAAA,SAAA7wG,GACA,MAAAuF,WAAAtO,QACA45G,EAAAr/C,GAAAxxD,GACAqvC,GAFAwhE,GAIAxhE,EAAAohE,UAAA,SAAAzwG,GACA,MAAAuF,WAAAtO,QACAw5G,EAAAzwG,GAAA0wG,MAAAl/C,GAAAxxD,GACAqvC,GAFAohE,GAIAphE,EAAAF,WAAA,SAAAnvC,GACA,MAAAuF,WAAAtO,QACAk4C,EAAAqiB,GAAAxxD,GACAqvC,GAFAF,GAIAE,EAAAD,SAAA,SAAApvC,GACA,MAAAuF,WAAAtO,QACAm4C,EAAAoiB,GAAAxxD,GACAqvC,GAFAD,GAIAC,EAAA40C,SAAA,SAAAjkF,GACA,MAAAuF,WAAAtO,QACAgtF,EAAAzyB,GAAAxxD,GACAqvC,GAFA40C,GAIA50C,EAAAI,SAAA,WACA,GAAApQ,KAAAmP,EAAA/uC,MAAApF,KAAAkL,aAAA+pC,EAAA7vC,MAAApF,KAAAkL,YAAA,EAAAkqB,IAAA0f,EAAA1vC,MAAApF,KAAAkL,aAAA6pC,EAAA3vC,MAAApF,KAAAkL,YAAA,EAAAwpD,EACA,QAAAn5D,KAAAmkC,IAAAtK,GAAA4P,EAAAzpC,KAAAoN,IAAAysB,GAAA4P,IAEAgQ,EAEA,IAAAqhE,IAAA,MAqEAxyG,IAAAyP,IAAAquB,KAAA,WACA,MAAAipD,IAAA1+B,GAEA,IAAA8+B,IAAAnnF,GAAA4G,KACAM,OAAA+/E,GACAosB,gBAAAjsB,GACAt+C,KAAAu+C,GACAisB,cAAAhsB,GACAisB,aAAAhsB,GACAisB,MAAAvrB,GACAwrB,aAAAprB,GACAqrB,eAAAprB,GACA6iB,OAAA5iB,GACAorB,SAAA/rB,GACAgsB,gBAAApsB,GACAqsB,kBAAAlsB,GACAmsB,SAAAjrB,IAEA1B,IAAAxnF,QAAA,SAAAC,EAAA9J,GACAA,EAAA8J,MACA9J,EAAAiF,OAAA,WAAA+wD,KAAAlsD,IA8IA,IAAA4oF,KAAA,aAAAC,IAAA,aAAAN,IAAA,cA0CAnoF,IAAAyP,IAAAquB,KAAAi2E,OAAA,WACA,GAAAj2E,GAAAipD,GAAA+B,GAGA,OAFAhrD,GAAAsS,OAAAtS,EAAAjjC,QAAAijC,GAAAjjC,EACAijC,EAAA0hB,MAAA1hB,EAAAh9B,QAAAg9B,GAAAh9B,EACAg9B,GAsFAwpD,GAAAv5D,QAAAw5D,GACAA,GAAAx5D,QAAAu5D,GACAtnF,GAAAyP,IAAAywB,KAAA,WACA,MAAA6oD,IAAA1gC,IAEAroD,GAAAyP,IAAAywB,KAAA6zE,OAAA,WACA,GAAA7zE,GAAA6oD,GAAAD,GAOA,OANA5oD,GAAAkQ,OAAAlQ,EAAArlC,QAAAqlC,GAAArlC,EACAqlC,EAAAoQ,YAAApQ,EAAA1B,SAAA0B,GAAA1B,GACA0B,EAAAkR,YAAAlR,EAAAjuB,SAAAiuB,GAAAjuB,GACAiuB,EAAAsf,MAAAtf,EAAAp/B,QAAAo/B,GAAAp/B,EACAo/B,EAAA+Q,WAAA/Q,EAAA5D,SAAA4D,GAAA5D,GACA4D,EAAAgR,SAAAhR,EAAA/tB,SAAA+tB,GAAA/tB,GACA+tB,GAEAlgC,GAAAyP,IAAA47F,MAAA,WAEA,QAAAA,GAAArzG,EAAAqJ,GACA,GAAAwF,GAAA2oF,EAAArzF,KAAAiqD,EAAApuD,EAAAqJ,GAAAoZ,EAAA+0E,EAAArzF,KAAAqD,EAAAxH,EAAAqJ,EACA,WAAAwF,EAAA07D,GAAApxB,EAAAtqC,EAAAs6B,EAAAt6B,EAAA27D,GAAA37D,EAAAyhE,GAAAzhE,EAAAilE,KAAAkoC,EAAAntG,EAAA4T,GAAAw5F,EAAAptG,EAAAs6B,EAAAt6B,EAAA27D,GAAA37D,EAAAs6B,EAAAt6B,EAAA07D,IAAA0xC,EAAAptG,EAAAs6B,EAAAt6B,EAAA27D,GAAA/nD,EAAA0mB,EAAA1mB,EAAA8nD,IAAApxB,EAAA12B,EAAA0mB,EAAA1mB,EAAA+nD,GAAA/nD,EAAA6tD,GAAA7tD,EAAAqxD,IAAAmoC,EAAAx5F,EAAA0mB,EAAA1mB,EAAA+nD,GAAA37D,EAAAs6B,EAAAt6B,EAAA07D,KAAA,IAEA,QAAAitB,GAAA0kB,EAAAv1G,EAAA3G,EAAAqJ,GACA,GAAAmuF,GAAA7wF,EAAA0B,KAAA6zG,EAAAl8G,EAAAqJ,GAAA8/B,EAAAiP,EAAA/vC,KAAA6zG,EAAA1kB,EAAAnuF,GAAAyqE,EAAA76B,EAAA5wC,KAAA6zG,EAAA1kB,EAAAnuF,GAAAwvD,GAAAyX,EAAAp3B,EAAA7wC,KAAA6zG,EAAA1kB,EAAAnuF,GAAAwvD,EACA,QACA1vB,IACA2qC,KACAxD,KACA/F,IAAAphC,EAAAzpC,KAAAmkC,IAAAiwC,GAAA3qC,EAAAzpC,KAAAoN,IAAAgnE,IACAtJ,IAAArhC,EAAAzpC,KAAAmkC,IAAAysC,GAAAnnC,EAAAzpC,KAAAoN,IAAAwjE,KAGA,QAAA0rC,GAAAziF,EAAAC;AACA,MAAAD,GAAAu6C,IAAAt6C,EAAAs6C,IAAAv6C,EAAA+2C,IAAA92C,EAAA82C,GAEA,QAAAn3B,GAAAhQ,EAAA5O,EAAAhB,GACA,UAAA4P,EAAA,IAAAA,EAAA,SAAA5P,EAAAm/B,IAAA,MAAAn+B,EAEA,QAAA0hF,GAAAx4B,EAAAlZ,EAAAjjB,EAAAkjB,GACA,eAAAA,EAtBA,GAAApc,GAAA4oB,GAAAxvE,EAAAyvE,GAAA7+B,EAAAm5C,GAAAt4C,EAAA20C,GAAA10C,EAAA20C,EAiDA,OAzBAwlB,GAAAj7D,OAAA,SAAAtuC,GACA,MAAAuF,WAAAtO,QACAq3C,EAAAkjB,GAAAxxD,GACAupG,GAFAj7D,GAIAi7D,EAAAjlD,OAAA,SAAAtkD,GACA,MAAAuF,WAAAtO,QACAqtD,EAAAkN,GAAAxxD,GACAupG,GAFAjlD,GAIAilD,EAAA7rG,OAAA,SAAAsC,GACA,MAAAuF,WAAAtO,QACAyG,EAAA8zD,GAAAxxD,GACAupG,GAFA7rG,GAIA6rG,EAAAp6D,WAAA,SAAAnvC,GACA,MAAAuF,WAAAtO,QACAk4C,EAAAqiB,GAAAxxD,GACAupG,GAFAp6D,GAIAo6D,EAAAn6D,SAAA,SAAApvC,GACA,MAAAuF,WAAAtO,QACAm4C,EAAAoiB,GAAAxxD,GACAupG,GAFAn6D,GAIAm6D,GAKArrG,GAAAyP,IAAA0kG,SAAA,WAEA,QAAAA,GAAAn8G,EAAAqJ,GACA,GAAAkhE,GAAAnc,EAAA/lD,KAAAlE,KAAAnE,EAAAqJ,GAAA+yG,EAAA50G,EAAAa,KAAAlE,KAAAnE,EAAAqJ,GAAA/I,GAAAiqE,EAAAzhE,EAAAszG,EAAAtzG,GAAA,EAAAyxB,GAAAgwC,GACA1nE,EAAA0nE,EAAA1nE,EACAiG,EAAAxI,IAEAuC,EAAAu5G,EAAAv5G,EACAiG,EAAAxI,GACO87G,EAEP,OADA7hF,KAAA3rB,IAAAsmE,GACA,IAAA36C,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAVA,GAAA6zB,GAAA4oB,GAAAxvE,EAAAyvE,GAAA/B,EAAAsc,EA2BA,OAfA2qB,GAAA/tD,OAAA,SAAAvrD,GACA,MAAAwM,WAAAtO,QACAqtD,EAAAkN,GAAAz4D,GACAs5G,GAFA/tD,GAIA+tD,EAAA30G,OAAA,SAAA3E,GACA,MAAAwM,WAAAtO,QACAyG,EAAA8zD,GAAAz4D,GACAs5G,GAFA30G,GAIA20G,EAAAjnC,WAAA,SAAAryE,GACA,MAAAwM,WAAAtO,QACAm0E,EAAAryE,EACAs5G,GAFAjnC,GAIAinC,GAKAn0G,GAAAyP,IAAA0kG,SAAAJ,OAAA,WACA,GAAAI,GAAAn0G,GAAAyP,IAAA0kG,WAAAjnC,EAAAsc,GAAA6qB,EAAAF,EAAAjnC,UAIA,OAHAinC,GAAAjnC,WAAA,SAAAryE,GACA,MAAAwM,WAAAtO,OAAAs7G,EAAA5qB,GAAAvc,EAAAryE,IAAAqyE,GAEAinC,GAQAn0G,GAAAyP,IAAAwmD,OAAA,WAEA,QAAAA,GAAAj+D,EAAAqJ,GACA,OAAAizG,GAAAt/E,IAAA15B,EAAA+E,KAAAlE,KAAAnE,EAAAqJ,KAAAuoF,IAAA1tF,EAAAmE,KAAAlE,KAAAnE,EAAAqJ,IAFA,GAAA/F,GAAAquF,GAAAztF,EAAAwtF,EAcA,OAVAzzB,GAAA36D,KAAA,SAAAT,GACA,MAAAwM,WAAAtO,QACAuC,EAAAg4D,GAAAz4D,GACAo7D,GAFA36D,GAIA26D,EAAA/5D,KAAA,SAAArB,GACA,MAAAwM,WAAAtO,QACAmD,EAAAo3D,GAAAz4D,GACAo7D,GAFA/5D,GAIA+5D,EAYA,IAAAq+C,IAAAt0G,GAAA4G,KACAi6B,OAAA+oD,GACA2qB,MAAA,SAAAr4G,GACA,GAAAilC,GAAAzpC,KAAAy8B,KAAAj4B,EAAA,IACA,cAAAilC,EAAA,KAAAA,EAAA,KAAAA,EAAA,OAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,MAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,OAAAA,EAAA,KAEAqzE,QAAA,SAAAt4G,GACA,GAAAq6E,GAAA7+E,KAAAy8B,KAAAj4B,GAAA,EAAAu4G,KAAAn+B,EAAAC,EAAAk+B,EACA,cAAAl+B,EAAA,IAAAD,EAAA,QAAAC,EAAA,KAAAD,EAAA,OAEAo+B,OAAA,SAAAx4G,GACA,GAAAilC,GAAAzpC,KAAAy8B,KAAAj4B,GAAA,CACA,YAAAilC,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAEAwzE,gBAAA,SAAAz4G,GACA,GAAAo6E,GAAA5+E,KAAAy8B,KAAAj4B,EAAA04G,IAAAr+B,EAAAD,EAAAs+B,GAAA,CACA,aAAAr+B,EAAA,IAAAD,EAAA,KAAAC,EAAA,KAAAD,EAAA,KAAAC,EAAA,KAEAs+B,cAAA,SAAA34G,GACA,GAAAo6E,GAAA5+E,KAAAy8B,KAAAj4B,EAAA04G,IAAAr+B,EAAAD,EAAAs+B,GAAA,CACA,cAAAr+B,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAAD,EAAA,IAAAC,EAAA,MAGAv2E,IAAAyP,IAAAqlG,YAAAR,GAAA50G,MACA,IAAAk1G,IAAAl9G,KAAAy8B,KAAA,GAAAsgF,GAAA/8G,KAAA64E,IAAA,GAAAre,GACApI,IAAA/mD,WAAA,SAAAktB,GAOA,OANAu/D,GAAA3nF,EAAAhK,EAAA03F,MAAAwf,GAAAhqD,EAAAw/B,GAAAt6D,GAAAy/D,KAAA3sF,EAAAiyG,KACAxqG,KAAA5S,KAAAs9D,MACAja,KAAA++B,GACAhlB,MAAA,EACAngD,SAAA,KAEA6W,GAAA,EAAApzB,EAAA6D,KAAApD,SAAqC2yB,EAAApzB,GAAS,CAC9Co3F,EAAAh1F,KAAA80F,KACA,QAAAhiC,GAAArxD,KAAAuvB,GAAArqB,GAAA,EAAAge,EAAAmuC,EAAAz0D,SAAyDsI,EAAAge,IACzDxX,EAAA2lD,EAAAnsD,KAAAmpF,GAAA3iF,EAAAxG,EAAA0pD,EAAAltD,EAAAkF,GACAysF,EAAA90F,KAAAmN,GAGA,MAAAqiF,IAAAwF,EAAA3kC,EAAAltD,IAEAisD,GAAAmgC,UAAA,SAAAh6D,GACA,MAAA9zB,MAAAoG,KAAA,MAAA0tB,EAAA+jE,GAAAnK,GAAAU,GAAAt6D,KAEA,IAmBAslE,IAAAyf,GAnBAhhB,GAAAnK,GAAAU,MAmBAJ,MAAA4qB,GAAA,CACA5qB,IAAA9pF,KAAAypD,GAAAzpD,KACA8pF,GAAAt8E,MAAAi8C,GAAAj8C,MACAs8E,GAAAtiF,KAAAiiD,GAAAjiD,KACAsiF,GAAAjuF,KAAA4tD,GAAA5tD,KACA8D,GAAA+C,WAAA,SAAAtC,EAAAwvB,GACA,MAAAxvB,MAAAsC,WAAAwyF,GAAA90F,EAAAsC,WAAAktB,GAAAxvB,EAAAT,GAAAS,YAAAsC,WAAAtC,IAEAT,GAAA+C,WAAArE,UAAAyrF,GACAA,GAAA9nF,OAAA,SAAAy3B,GACA,GAAA01D,GAAAC,EAAA5nF,EAAAhK,EAAA1B,KAAA0B,GAAAktD,EAAA5uD,KAAAwwD,UAAA+iC,IACA51D,GAAAiwB,EAAAjwB,EACA,QAAApO,IAAA,EAAApzB,EAAA6D,KAAApD,SAAqC2yB,EAAApzB,GAAS,CAC9Co3F,EAAAh1F,KAAA80F,KACA,QAAAhiC,GAAArxD,KAAAuvB,GAAArqB,GAAA,EAAAge,EAAAmuC,EAAAz0D,SAAyDsI,EAAAge,IACzDxX,EAAA2lD,EAAAnsD,MAAAouF,EAAA31D,EAAAz5B,KAAAwH,IAAAqzC,SAAA75C,EAAAqqB,KACA,YAAA7jB,KAAA4nF,EAAAv0C,SAAArzC,EAAAqzC,UACAsvC,GAAAiF,EAAApuF,EAAA0pD,EAAAltD,EAAAgK,EAAAkjD,GAAAltD,IACA2xF,EAAA90F,KAAA+0F,IAEAD,EAAA90F,KAAA,MAIA,MAAAwvF,IAAAwF,EAAA3kC,EAAAltD,IAEAssF,GAAA3kF,UAAA,SAAAs0B,GACA,GAAA01D,GAAAylB,EAAAptG,EAAA4nF,EAAA1sF,EAAAlF,EAAA1B,KAAA0B,GAAAktD,EAAA5uD,KAAAwwD,UAAA+iC,IACA51D,GAAAmwB,EAAAnwB,EACA,QAAApO,IAAA,EAAApzB,EAAA6D,KAAApD,SAAqC2yB,EAAApzB,GACrC,OAAAk1D,GAAArxD,KAAAuvB,GAAArqB,GAAA,EAAAge,EAAAmuC,EAAAz0D,SAAyDsI,EAAAge,GACzD,GAAAxX,EAAA2lD,EAAAnsD,GAAA,CACA0B,EAAA8E,EAAAkjD,GAAAltD,GACAo3G,EAAAn7E,EAAAz5B,KAAAwH,IAAAqzC,SAAA75C,EAAAqqB,GACAgkE,EAAAh1F,KAAA80F,KACA,QAAA7jE,IAAA,EAAAqK,EAAAi/E,EAAAl8G,SAA+C4yB,EAAAqK,IAC/Cy5D,EAAAwlB,EAAAtpF,KAAA6+D,GAAAiF,EAAA9jE,EAAAo/B,EAAAltD,EAAAkF,GACAysF,EAAA90F,KAAA+0F,GAKA,MAAAvF,IAAAwF,EAAA3kC,EAAAltD,IAEAssF,GAAA3wF,OAAA,SAAAA,GACA,GAAAg2F,GAAAhiC,EAAA3lD,EAAA6nF,IACA,mBAAAl2F,OAAA2zD,EAAA3zD,GACA,QAAAkyB,GAAA,EAAApzB,EAAA6D,KAAApD,OAAoC2yB,EAAApzB,EAAOozB,IAAA,CAC3CgkE,EAAAh1F,KAAA80F,KACA,QAAAhiC,GAAArxD,KAAAuvB,GAAArqB,EAAA,EAAAge,EAAAmuC,EAAAz0D,OAAwDsI,EAAAge,EAAOhe,KAC/DwG,EAAA2lD,EAAAnsD,KAAA7H,EAAA6G,KAAAwH,IAAAqzC,SAAA75C,EAAAqqB,IACA8jE,EAAA90F,KAAAmN,GAIA,MAAAqiF,IAAAwF,EAAAvzF,KAAAwwD,UAAAxwD,KAAA0B,KAEAssF,GAAAE,MAAA,SAAAp6D,EAAAo6D,GACA,GAAAxsF,GAAA1B,KAAA0B,GAAAktD,EAAA5uD,KAAAwwD,SACA,OAAAtlD,WAAAtO,OAAA,EAAAoD,KAAA0L,OAAAkjD,GAAAltD,GAAAwsF,MAAAr1D,IAAA/E,GACAs9B,EAAApxD,KAAA,MAAAkuF,EAAA,SAAAxiF,GACAA,EAAAkjD,GAAAltD,GAAAwsF,MAAAvkF,OAAAmqB,IACK,SAAApoB,GACLA,EAAAkjD,GAAAltD,GAAAwsF,MAAAv6D,IAAAG,EAAAo6D,MAWAF,GAAAzpF,KAAA,SAAAw0G,EAAAp/G,GAMA,QAAAs0D,KACAjuD,KAAAkuD,gBAAAp6B,GAEA,QAAAq6B,KACAnuD,KAAAouD,kBAAAt6B,EAAAu6B,MAAAv6B,EAAAw6B,OAEA,QAAAlX,GAAA/hB,GACA,aAAAA,EAAA44B,GAAA54B,GAAA,cACA,GAAAnwB,GAAAkwB,EAAAp1B,KAAA+lD,aAAAjyB,EACA,OAAAsB,KAAAC,IAAAnwB,EAAAq9B,EAAAnN,EAAAC,GAAA,SAAA/W,GACAte,KAAA4mD,aAAA9yB,EAAA5uB,EAAAoZ,QAIA,QAAA06F,GAAA3jF,GACA,aAAAA,EAAA84B,GAAA94B,GAAA,cACA,GAAAnwB,GAAAkwB,EAAAp1B,KAAA6zF,eAAA//D,EAAAu6B,MAAAv6B,EAAAw6B,MACA,OAAAl5B,KAAAC,IAAAnwB,EAAAq9B,EAAAnN,EAAAC,GAAA,SAAA/W,GACAte,KAAAyuD,eAAA36B,EAAAu6B,MAAAv6B,EAAAw6B,MAAAppD,EAAAoZ,QAvBA,GAAApT,UAAAtO,OAAA,GACA,IAAAjD,IAAAo/G,GAAA/4G,KAAAuE,KAAA5K,EAAAo/G,EAAAp/G,GACA,OAAAqG,MAEA,GAAAuiC,GAAA,aAAAw2E,EAAAp4B,GAAAjE,GAAA5oD,EAAAjwB,GAAA+qD,GAAAC,QAAAkqD,EAuBA,OAAA9qB,IAAAjuF,KAAA,QAAA+4G,EAAAp/G,EAAAm6B,EAAAw6B,MAAA0qD,EAAA5hE,IAEA42C,GAAA52C,UAAA,SAAA2hE,EAAA7qB,GAEA,QAAA92C,GAAAv7C,EAAAqJ,GACA,GAAA1C,GAAA0rF,EAAAhqF,KAAAlE,KAAAnE,EAAAqJ,EAAAlF,KAAA+lD,aAAAjyB,GACA,OAAAtxB,IAAA,SAAA8b,GACAte,KAAA4mD,aAAA9yB,EAAAtxB,EAAA8b,KAGA,QAAA06F,GAAAn9G,EAAAqJ,GACA,GAAA1C,GAAA0rF,EAAAhqF,KAAAlE,KAAAnE,EAAAqJ,EAAAlF,KAAA6zF,eAAA//D,EAAAu6B,MAAAv6B,EAAAw6B,OACA,OAAA9rD,IAAA,SAAA8b,GACAte,KAAAyuD,eAAA36B,EAAAu6B,MAAAv6B,EAAAw6B,MAAA9rD,EAAA8b,KAVA,GAAAwV,GAAAjwB,GAAA+qD,GAAAC,QAAAkqD,EAaA,OAAA/4G,MAAAkuF,MAAA,QAAA6qB,EAAAjlF,EAAAw6B,MAAA0qD,EAAA5hE,IAEA42C,GAAArsF,MAAA,SAAAmyB,EAAAn6B,EAAAk2D,GAUA,QAAAC,KACA9vD,KAAA2B,MAAAouD,eAAAj8B,GAEA,QAAAmlF,GAAA5jF,GACA,aAAAA,EAAAy6B,GAAAz6B,GAAA,cACA,GAAAnwB,GAAAkwB,EAAAm1B,EAAAvqD,MAAA+zF,iBAAA/zF,KAAA,MAAAg0F,iBAAAlgE,EACA,OAAAsB,KAAAC,IAAAnwB,EAAAw3E,GAAAtnD,EAAAC,GAAA,SAAA/W,GACAte,KAAA2B,MAAAsuD,YAAAn8B,EAAA5uB,EAAAoZ,GAAAuxC,OAhBA,GAAA3sC,GAAAhY,UAAAtO,MACA,IAAAsmB,EAAA,GACA,mBAAA4Q,GAAA,CACA5Q,EAAA,IAAAvpB,EAAA,GACA,KAAAk2D,IAAA/7B,GAAA9zB,KAAA2B,MAAAkuD,EAAA/7B,EAAA+7B,GAAAl2D,EACA,OAAAqG,MAEA6vD,EAAA,GAaA,MAAAo+B,IAAAjuF,KAAA,SAAA8zB,EAAAn6B,EAAAs/G,IAEAjrB,GAAAkrB,WAAA,SAAAplF,EAAAo6D,EAAAr+B,GAEA,QAAAqpD,GAAAr9G,EAAAqJ,GACA,GAAA1C,GAAA0rF,EAAAhqF,KAAAlE,KAAAnE,EAAAqJ,EAAAqlD,EAAAvqD,MAAA+zF,iBAAA/zF,KAAA,MAAAg0F,iBAAAlgE,GACA,OAAAtxB,IAAA,SAAA8b,GACAte,KAAA2B,MAAAsuD,YAAAn8B,EAAAtxB,EAAA8b,GAAAuxC,IAGA,MAPA3kD,WAAAtO,OAAA,IAAAizD,EAAA,IAOA7vD,KAAAkuF,MAAA,SAAAp6D,EAAAolF,IAEAlrB,GAAA7nF,KAAA,SAAAxM,GACA,MAAAs0F,IAAAjuF,KAAA,OAAArG,EAAAw0F,KAQAH,GAAArkF,OAAA,WACA,GAAAilD,GAAA5uD,KAAAwwD,SACA,OAAAxwD,MAAAoG,KAAA,4BACA,GAAAgwB,EACAp2B,MAAA4uD,GAAAzb,MAAA,IAAA/c,EAAAp2B,KAAA2hB,aAAAyU,EAAA06B,YAAA9wD,SAGAguF,GAAAlvC,KAAA,SAAAnlD,GACA,GAAA+H,GAAA1B,KAAA0B,GAAAktD,EAAA5uD,KAAAwwD,SACA,OAAAtlD,WAAAtO,OAAA,EAAAoD,KAAA0L,OAAAkjD,GAAAltD,GAAAo9C,MACA,kBAAAnlD,OAAAkK,GAAAi7C,KAAA15C,MAAAvB,GAAAqH,YACAkmD,EAAApxD,KAAA,SAAA0L,GACAA,EAAAkjD,GAAAltD,GAAAo9C,KAAAnlD,MAGAq0F,GAAAn1B,MAAA,SAAAl/D,GACA,GAAA+H,GAAA1B,KAAA0B,GAAAktD,EAAA5uD,KAAAwwD,SACA,OAAAtlD,WAAAtO,OAAA,EAAAoD,KAAA0L,OAAAkjD,GAAAltD,GAAAm3D,MACAzH,EAAApxD,KAAA,kBAAArG,GAAA,SAAA+R,EAAAxG,EAAAqqB,GACA7jB,EAAAkjD,GAAAltD,GAAAm3D,OAAAl/D,EAAAuK,KAAAwH,IAAAqzC,SAAA75C,EAAAqqB,KACK51B,KAAA,SAAA+R,GACLA,EAAAkjD,GAAAltD,GAAAm3D,MAAAl/D,MAGAq0F,GAAAt1E,SAAA,SAAA/e,GACA,GAAA+H,GAAA1B,KAAA0B,GAAAktD,EAAA5uD,KAAAwwD,SACA,OAAAtlD,WAAAtO,OAAA,EAAAoD,KAAA0L,OAAAkjD,GAAAltD,GAAAgX,SACA04C,EAAApxD,KAAA,kBAAArG,GAAA,SAAA+R,EAAAxG,EAAAqqB,GACA7jB,EAAAkjD,GAAAltD,GAAAgX,SAAAnd,KAAA+D,IAAA,EAAA3F,EAAAuK,KAAAwH,IAAAqzC,SAAA75C,EAAAqqB,MACK51B,EAAA4B,KAAA+D,IAAA,EAAA3F,GAAA,SAAA+R,GACLA,EAAAkjD,GAAAltD,GAAAgX,SAAA/e,MAGAq0F,GAAA5nF,KAAA,SAAAjH,EAAA4tD,GACA,GAAArrD,GAAA1B,KAAA0B,GAAAktD,EAAA5uD,KAAAwwD,SACA,IAAAtlD,UAAAtO,OAAA,GACA,GAAAuF,GAAA02G,GAAAM,EAAA/f,EACA,KACAA,GAAA13F,EACA0vD,EAAApxD,KAAA,SAAA0L,EAAAxG,EAAAqqB,GACAspF,GAAAntG,EAAAkjD,GAAAltD,GACAvC,EAAA+E,KAAAwH,IAAAqzC,SAAA75C,EAAAqqB,KAEO,QACPspF,GAAA12G,EACAi3F,GAAA+f,OAGA/nD,GAAApxD,KAAA,SAAA0L,GACA,GAAA9E,GAAA8E,EAAAkjD,GAAAltD,IACAkF,EAAAg3B,QAAAh3B,EAAAg3B,MAAA/5B,GAAA+oD,SAAA,6BAAAr5C,GAAApU,EAAA4tD,IAGA,OAAA/sD,OAEAguF,GAAApnF,WAAA,WAEA,OADAysF,GAAAhiC,EAAA3lD,EAAA9E,EAAAwyG,EAAAp5G,KAAA0B,GAAA23G,IAAAT,GAAAhqD,EAAA5uD,KAAAwwD,UAAA+iC,KACAhkE,EAAA,EAAApzB,EAAA6D,KAAApD,OAAoC2yB,EAAApzB,EAAOozB,IAAA,CAC3CgkE,EAAAh1F,KAAA80F,KACA,QAAAhiC,GAAArxD,KAAAuvB,GAAArqB,EAAA,EAAAge,EAAAmuC,EAAAz0D,OAAwDsI,EAAAge,EAAOhe,KAC/DwG,EAAA2lD,EAAAnsD,MACA0B,EAAA8E,EAAAkjD,GAAAwqD,GACA/qB,GAAA3iF,EAAAxG,EAAA0pD,EAAAyqD,GACAhrG,KAAAzH,EAAAyH,KACAywC,KAAAl4C,EAAAk4C,KACA+Z,MAAAjyD,EAAAiyD,MAAAjyD,EAAA8R,SACAA,SAAA9R,EAAA8R,YAGA26E,EAAA90F,KAAAmN,GAGA,MAAAqiF,IAAAwF,EAAA3kC,EAAAyqD,IAgFAx1G,GAAAyP,IAAApU,KAAA,WAEA,QAAAA,GAAA2H,GACAA,EAAAT,KAAA,WACA,GAEA2C,GAFAlC,EAAAhD,GAAAqC,OAAAlG,MACAkJ,EAAAlJ,KAAAmJ,WAAAlE,EAAA4C,EAAA7H,KAAAmJ,UAAAlE,EAAAO,OACAL,EAAA,MAAAiE,EAAAvB,EAAA1C,MAAA0C,EAAA1C,MAAAC,MAAAyC,EAAAyxG,GAAAzxG,EAAAhD,SAAAuE,EAAAvD,EAAA,MAAA0zG,EAAA1xG,EAAAhC,WAAAgC,EAAAhC,WAAAT,MAAAyC,EAAAyxG,GAAAptD,EAAAqtD,EAAAn6G,EAAAyH,EAAAwC,UAAA,SAAA7J,KAAA2F,EAAA0C,GAAAyB,EAAAlK,EAAAmK,QAAAC,OAAA,eAAAjF,KAAA,gBAAA5C,MAAA,UAAA2iE,IAAA76D,EAAA5F,GAAA+C,WAAAxH,EAAAsK,QAAA/H,MAAA,UAAA2iE,IAAA36D,SAAAC,EAAA/F,GAAA+C,WAAAxH,EAAAwzF,SAAAjxF,MAAA,aAAA63G,EAAAj+G,KAAA+D,IAAAgJ,EAAA,GAAAgC,EACAjC,EAAA69E,GAAAr+E,GAAAiC,EAAAjD,EAAAwC,UAAA,WAAA7J,MAAA,IAAAuK,GAAAD,EAAAP,QAAAS,OAAA,QAAAzF,KAAA,kBACAV,GAAA+C,WAAAkD,GACAR,GAAAU,OAAA,QACAV,EAAAU,OAAA,OACA,IAAA8L,GAAAC,EAAAC,EAAA3F,EAAApG,EAAAX,EAAApD,OAAA,QAAAgE,EAAAN,EAAA1D,OAAA,QAAAC,EAAA/G,EAAA8G,OAAA,QAAAC,KAAAN,GAAAsE,EAAAb,EAAApD,OAAA,QAAAkE,EAAAR,EAAA1D,OAAA,QAAAgjD,EAAA,QAAAlhD,GAAA,SAAAA,GAAA,GAcA,IAbA,WAAAA,GAAA,QAAAA,GACAe,EAAA4lF,GAAA74E,EAAA,IAAAE,EAAA,IAAAD,EAAA,KAAA1F,EAAA,KACAlK,EAAA5B,KAAA,KAAA2kD,EAAA,iBAAAvnD,MAAA,wBACAoI,EAAAxF,KAAA,QAAA8D,EAAA,OAAA6gD,EAAAt+C,EAAA,MAAAvC,EAAA,OAAA6gD,EAAAt+C,KAEA7B,EAAA6lF,GAAA94E,EAAA,IAAAE,EAAA,IAAAD,EAAA,KAAA1F,EAAA,KACAlK,EAAA5B,KAAA,cAAA5C,MAAA,cAAAunD,EAAA,iBACAn/C,EAAAxF,KAAA,QAAA2kD,EAAAt+C,EAAA,IAAAvC,EAAA,SAAAA,EAAA,OAAA6gD,EAAAt+C,IAEAX,EAAA1F,KAAA8L,EAAA64C,EAAA5gD,GACA6B,EAAA5F,KAAAyR,EAAAkzC,EAAAswD,GACAtvG,EAAA3F,KAAAwR,EAAA,GAAAxR,KAAA8L,EAAA64C,EAAA5gD,GACA8B,EAAA7F,KAAAuR,EAAA,GAAAvR,KAAAyR,EAAAkzC,EAAAswD,GACA3xG,EAAAgD,UAAA,CACA,GAAAnM,GAAAmJ,EAAAiD,EAAApM,EAAAmM,YAAA,CACA3B,GAAArB,EAAA,SAAAhM,GACA,MAAA6C,GAAA7C,GAAAiP,OAES5B,GAAA2B,UACT3B,EAAArB,EAEA4B,EAAAvF,KAAA6E,EAAAlB,EAAAqB,EAEAI,GAAApF,KAAA6E,EAAAG,EAAArB,GACA+B,EAAA1F,KAAA6E,EAAAlB,OAnCA,GAAA0xG,GAAAt0G,EAAApB,GAAAoB,MAAA8F,SAAA/C,EAAAyxG,GAAAnxG,EAAA,EAAAsC,EAAA,EAAAN,EAAA,EAAAgvG,GAAA,IAAAlwG,EAAA,IAwFA,OAlDAlK,GAAA+F,MAAA,SAAAvG,GACA,MAAAwM,WAAAtO,QACAqI,EAAAvG,EACAQ,GAFA+F,GAIA/F,EAAA8I,OAAA,SAAAtJ,GACA,MAAAwM,WAAAtO,QACAoL,EAAAtJ,IAAAg7G,IAAAh7G,EAAA,GAAA+6G,GACAv6G,GAFA8I,GAIA9I,EAAAiG,MAAA,WACA,MAAA+F,WAAAtO,QACA08G,EAAArnD,GAAA/mD,WACAhM,GAFAo6G,GAIAp6G,EAAAkK,WAAA,SAAA1K,GACA,MAAAwM,WAAAtO,QACAwM,EAAA1K,EACAQ,GAFAkK,GAIAlK,EAAA2G,WAAA,SAAAnH,GACA,MAAAwM,WAAAtO,QACA28G,EAAA76G,EACAQ,GAFAq6G,GAIAr6G,EAAAgJ,SAAA,SAAAxJ,GACA,GAAAwkB,GAAAhY,UAAAtO,MACA,OAAAsmB,IACA5a,GAAA5J,EACAkM,GAAAM,UAAAgY,EAAA,GACAhkB,GAHAoJ,GAKApJ,EAAAoJ,cAAA,SAAA5J,GACA,MAAAwM,WAAAtO,QACA0L,GAAA5J,EACAQ,GAFAoJ,GAIApJ,EAAA0L,cAAA,SAAAlM,GACA,MAAAwM,WAAAtO,QACAgO,GAAAlM,EACAQ,GAFA0L,GAIA1L,EAAAoL,YAAA,SAAA5L,GACA,MAAAwM,WAAAtO,QACA0N,GAAA5L,EACAQ,GAFAoL,GAIApL,EAAAy6G,cAAA,WACA,MAAAzuG,WAAAtO,QAAAsC,GAEAA,EAEA,IAAAu6G,IAAA,SAAAC,IACAvuG,IAAA,EACAC,MAAA,EACAC,OAAA,EACAC,KAAA,EAcAzH,IAAAyP,IAAAH,MAAA,WAEA,QAAAA,GAAAtM,GACAA,EAAAT,KAAA,WACA,GAAAS,GAAAhD,GAAAqC,OAAAlG,MAAA2B,MAAA,wBAAAA,MAAA,+CAAA4R,GAAA,kBAAAqmG,GAAArmG,GAAA,mBAAAqmG,GACAjqE,EAAA9oC,EAAAwC,UAAA,eAAA7J,MAAA,GACAmwC,GAAApmC,QAAAS,OAAA,QAAAzF,KAAA,sBAAA5C,MAAA,uBAAAA,MAAA,sBACAkF,EAAAwC,UAAA,WAAA7J,MAAA,IAAA+J,QAAAS,OAAA,QAAAzF,KAAA,kBAAA5C,MAAA,gBACA,IAAAg+C,GAAA94C,EAAAwC,UAAA,WAAA7J,KAAAq6G,EAAA3tD,EACAvM,GAAAj2C,OAAAC,SACAg2C,EAAAp2C,QAAAS,OAAA,KAAAzF,KAAA,iBAAA1I,GACA,gBAAAA,IACS8F,MAAA,kBAAA9F,GACT,MAAAi+G,IAAAj+G,KACSmO,OAAA,QAAAzF,KAAA,aAAA1I,GACT,cAAA8zD,KAAA9zD,IAAA,SACS0I,KAAA,aAAA1I,GACT,cAAA8zD,KAAA9zD,IAAA,SACS0I,KAAA,WAAAA,KAAA,YAAA5C,MAAA,uBACTg+C,EAAAh+C,MAAA,UAAAwR,EAAAzB,QAAA,YACA,IAAArJ,GAAA0xG,EAAAl2G,GAAA+C,WAAAC,GAAAmzG,EAAAn2G,GAAA+C,WAAA+oC,EACAjxC,KACA2J,EAAA69E,GAAAxnF,GACAs7G,EAAAz1G,KAAA,IAAA8D,EAAA,IAAA9D,KAAA,QAAA8D,EAAA,GAAAA,EAAA,IACA4xG,EAAAF,IAEAp1G,IACA0D,EAAA69E,GAAAvhF,GACAq1G,EAAAz1G,KAAA,IAAA8D,EAAA,IAAA9D,KAAA,SAAA8D,EAAA,GAAAA,EAAA,IACA6xG,EAAAH,IAEA1kG,EAAA0kG,KAyDA,QAAA1kG,GAAAxO,GACAA,EAAAwC,UAAA,WAAA9E,KAAA,qBAAA1I,GACA,mBAAAs+G,GAAA,KAAAxqD,KAAA9zD,IAAA,IAAAu+G,GAAA,KAAAzqD,KAAA9zD,IAAA,MAGA,QAAAo+G,GAAApzG,GACAA,EAAAX,OAAA,WAAA3B,KAAA,IAAA41G,EAAA,IACAtzG,EAAAwC,UAAA,2BAAA9E,KAAA,QAAA41G,EAAA,GAAAA,EAAA,IAEA,QAAAD,GAAArzG,GACAA,EAAAX,OAAA,WAAA3B,KAAA,IAAA61G,EAAA,IACAvzG,EAAAwC,UAAA,2BAAA9E,KAAA,SAAA61G,EAAA,GAAAA,EAAA,IAEA,QAAAR,KAwBA,QAAAS,KACA,IAAAx2G,GAAA+5B,MAAA08E,UACA5sG,IACAwjB,EAAA,KACAkM,EAAA,IAAA+8E,EAAA,GACA/8E,EAAA,IAAAg9E,EAAA,GACA1sG,EAAA,GAEAs/C,KAGA,QAAAutD,KACA,IAAA12G,GAAA+5B,MAAA08E,SAAA,GAAA5sG,IACA0vB,EAAA,IAAA+8E,EAAA,GACA/8E,EAAA,IAAAg9E,EAAA,GACA1sG,EAAA,EACAs/C,KAGA,QAAAwtD,KACA,GAAAnnD,GAAAxvD,GAAA+4B,MAAAv5B,GAAA+xF,GAAA,CACAznE,KACA0lC,EAAA,IAAA1lC,EAAA,GACA0lC,EAAA,IAAA1lC,EAAA,IAEAjgB,IACA7J,GAAA+5B,MAAAgS,QACA1e,QAAAipF,EAAA,GAAAA,EAAA,OAAAC,EAAA,GAAAA,EAAA,QACAh9E,EAAA,GAAA+8E,IAAA9mD,EAAA,GAAAniC,EAAA,KACAkM,EAAA,GAAAg9E,IAAA/mD,EAAA,GAAAniC,EAAA,MACWA,EAAA,MAEXupF,GAAAC,EAAArnD,EAAA30D,EAAA,KACAu7G,EAAApzG,GACAuuF,GAAA,GAEAulB,GAAAD,EAAArnD,EAAA1uD,EAAA,KACAu1G,EAAArzG,GACAuuF,GAAA,GAEAA,IACA//E,EAAAxO,GACA+zG,GACAz7G,KAAA,QACAu1G,KAAAhnG,EAAA,mBAIA,QAAAgtG,GAAArnD,EAAApuD,EAAAC,GACA,GAAAsoB,GAAAluB,EAAA+I,EAAA69E,GAAAjhF,GAAAq6E,EAAAj3E,EAAA,GAAA86C,EAAA96C,EAAA,GAAAi3B,EAAAlC,EAAAl4B,GAAA0N,EAAA1N,EAAAk1G,EAAAD,EAAAp6G,EAAA6S,EAAA,GAAAA,EAAA,EAiBA,IAhBAlF,IACA4xE,GAAAhgD,EACA6jB,GAAApjD,EAAAu/B,GAEA9R,GAAAtoB,EAAA21G,EAAAC,GAAAv/G,KAAA+D,IAAAggF,EAAA/jF,KAAAiyB,IAAA21B,EAAAkQ,EAAAnuD,KAAAmuD,EAAAnuD,GACAwI,EACApO,GAAAkuB,GAAA8R,GAAAv/B,GAEAmxB,IAAAoO,EAAA/jC,KAAA+D,IAAAggF,EAAA/jF,KAAAiyB,IAAA21B,EAAA,EAAAjyB,EAAAhsB,GAAAsoB,KACA8R,EAAA9R,GACAluB,EAAAkuB,EACAA,EAAA8R,GAEAhgC,EAAAggC,GAGA1sB,EAAA,IAAA4a,GAAA5a,EAAA,IAAAtT,EAIA,MAHA4F,GAAA61G,EAAA,KAAsCC,EAAA,KACtCpoG,EAAA,GAAA4a,EACA5a,EAAA,GAAAtT,GACA,EAGA,QAAA27G,KACAT,IACA3zG,EAAAlF,MAAA,wBAAA0H,UAAA,WAAA1H,MAAA,UAAAwR,EAAAzB,QAAA,aACA7N,GAAAqC,OAAA,QAAAvE,MAAA,eACAsE,EAAAsN,GAAA,wBAAAA,GAAA,sBAAAA,GAAA,wBAAAA,GAAA,uBAAAA,GAAA,sBAAAA,GAAA,oBACAsiF,IACA+kB,GACAz7G,KAAA,aAvGA,GAAA+xB,GAAAvD,EAAAtqB,EAAArD,KAAAk7G,EAAAr3G,GAAAqC,OAAArC,GAAA+5B,MAAAv6B,QAAAu3G,EAAAh9E,EAAAwvB,GAAA/pD,EAAA6H,WAAArE,EAAAhD,GAAAqC,OAAA7C,GAAA83G,EAAAD,EAAAx/E,QAAA++E,GAAA,UAAA9qD,KAAAwrD,IAAAz8G,EAAAi8G,GAAA,UAAAhrD,KAAAwrD,IAAAx2G,EAAA+I,EAAAwtG,EAAAppG,QAAA,UAAA+jF,EAAAnjC,GAAArvD,GAAA+5B,EAAAv5B,GAAA+4B,MAAAv5B,GACA4C,EAAApC,GAAAqC,OAAAqkD,EAAAlnD,IAAAkQ,GAAA,gBAAA8mG,GAAA9mG,GAAA,cAAAgnG,EAOA,IANA12G,GAAA+5B,MAAAs1B,eACAjtD,EAAAsN,GAAA,kBAAAinG,GAAAjnG,GAAA,iBAAA0nG,GAEAh1G,EAAAsN,GAAA,kBAAAinG,GAAAjnG,GAAA,gBAAA0nG,GAEAp0G,EAAAinF,YAAAzkF,UAAA,KAAAykF,YACApgF,EACA0vB,EAAA,GAAA+8E,EAAA,GAAA/8E,EAAA,GACAA,EAAA,GAAAg9E,EAAA,GAAAh9E,EAAA,OACO,IAAA+9E,EAAA,CACP,GAAAx0E,IAAA,KAAAgpB,KAAAwrD,GAAAt0E,GAAA,KAAA8oB,KAAAwrD,EACAxtF,IAAAwsF,EAAA,EAAAxzE,GAAAvJ,EAAA,GAAAg9E,EAAA,EAAAvzE,GAAAzJ,EAAA,IACAA,EAAA,GAAA+8E,EAAAxzE,GACAvJ,EAAA,GAAAg9E,EAAAvzE,OACOhjC,IAAA+5B,MAAAgS,SAAA1e,EAAAkM,EAAA31B,QACPZ,GAAAlF,MAAA,yBAAA0H,UAAA,WAAA1H,MAAA,gBACAkC,GAAAqC,OAAA,QAAAvE,MAAA,SAAAu5G,EAAAv5G,MAAA,WACAi5G,GACAz7G,KAAA,eAEAq7G,IA3HA,GAAAQ,GAAAD,EAAAn9E,EAAAuvB,EAAAh6C,EAAA,iCAAAzU,EAAA,KAAAiG,EAAA,KAAAw1G,GAAA,KAAAC,GAAA,KAAAU,GAAA,EAAAD,GAAA,EAAAhB,EAAAuB,GAAA,EAoRA,OAnPAjoG,GAAAyqB,MAAA,SAAA/2B,GACAA,EAAAT,KAAA,WACA,GAAAw0G,GAAAh9E,EAAAwvB,GAAAptD,KAAAkL,WAAAmwG,GACA38G,EAAAy7G,EACAx1G,EAAAy1G,EACAl1G,EAAA81G,EACAzrF,EAAAwrF,GACSO,EAAAt7G,KAAAmJ,WAAAkyG,CACTr7G,MAAAmJ,UAAAkyG,EACAjiB,GACAv1F,GAAAqC,OAAAlG,MAAA4G,aAAAR,KAAA,yBACA40G,EAAAM,EAAAp2G,EACA61G,EAAAO,EAAA/rF,EACA4qF,EAAAmB,EAAA58G,EACA07G,EAAAkB,EAAA32G,EACAi2G,GACAz7G,KAAA,iBAEW+uF,MAAA,yBACX,GAAA3F,GAAAnL,GAAA+8B,EAAAkB,EAAA38G,GAAA68G,EAAAn+B,GAAAg9B,EAAAiB,EAAA12G,EAEA,OADAq2G,GAAAD,EAAA,KACA,SAAAz8F,GACA67F,EAAAkB,EAAA38G,EAAA6pF,EAAAjqE,GACA87F,EAAAiB,EAAA12G,EAAA42G,EAAAj9F,GACAs8F,GACAz7G,KAAA,QACAu1G,KAAA,cAGWtuG,KAAA,uBACX40G,EAAAK,EAAAn2G,EACA61G,EAAAM,EAAA9rF,EACAqrF,GACAz7G,KAAA,QACAu1G,KAAA,WAEAkG,GACAz7G,KAAA,gBAIAy7G,GACAz7G,KAAA,eAEAy7G,GACAz7G,KAAA,QACAu1G,KAAA,WAEAkG,GACAz7G,KAAA,iBA8HAgU,EAAAzU,EAAA,SAAA+8C,GACA,MAAAvwC,WAAAtO,QACA8B,EAAA+8C,EACAo+D,EAAAuB,IAAA18G,GAAA,GAAAiG,GACAwO,GAHAzU,GAKAyU,EAAAxO,EAAA,SAAA82C,GACA,MAAAvwC,WAAAtO,QACA+H,EAAA82C,EACAo+D,EAAAuB,IAAA18G,GAAA,GAAAiG,GACAwO,GAHAxO,GAKAwO,EAAA0zE,MAAA,SAAAprC,GACA,MAAAvwC,WAAAtO,QACA8B,GAAAiG,GAAAm2G,IAAAr/D,EAAA,GAAAo/D,IAAAp/D,EAAA,IAAmD/8C,EAAAo8G,IAAAr/D,EAA0B92C,IAAAk2G,IAAAp/D,GAC7EtoC,GAFAzU,GAAAiG,GAAAm2G,EAAAD,GAAAn8G,EAAAo8G,EAAAn2G,EAAAk2G,EAAA,MAIA1nG,EAAAP,OAAA,SAAA6oC,GACA,GAAApZ,GAAAvsB,EAAAqqB,EAAAnqB,EAAAsI,CACA,OAAApT,WAAAtO,QAqBA8B,IACA2jC,EAAAoZ,EAAA,GAAA3lC,EAAA2lC,EAAA,GACA92C,IAAA09B,IAAA,GAAAvsB,IAAA,IACAklG,GAAA34E,EAAAvsB,GACApX,EAAAknE,SAAAvjC,EAAA3jC,EAAA2jC,GAAAvsB,EAAApX,EAAAoX,IACAA,EAAAusB,IAAA/jB,EAAA+jB,IAAAvsB,IAAAwI,GACA+jB,GAAA83E,EAAA,IAAArkG,GAAAqkG,EAAA,KAAAA,GAAA93E,EAAAvsB,KAEAnR,IACAw7B,EAAAsb,EAAA,GAAAzlC,EAAAylC,EAAA,GACA/8C,IAAAyhC,IAAA,GAAAnqB,IAAA,IACA+kG,GAAA56E,EAAAnqB,GACArR,EAAAihE,SAAAzlC,EAAAx7B,EAAAw7B,GAAAnqB,EAAArR,EAAAqR,IACAA,EAAAmqB,IAAA7hB,EAAA6hB,IAAAnqB,IAAAsI,GACA6hB,GAAAi6E,EAAA,IAAApkG,GAAAokG,EAAA,KAAAA,GAAAj6E,EAAAnqB,KAEA7C,IApCAzU,IACAs8G,GACA34E,EAAA24E,EAAA,GAAAllG,EAAAklG,EAAA,KAEA34E,EAAA83E,EAAA,GAAArkG,EAAAqkG,EAAA,GACAz7G,EAAAknE,SAAAvjC,EAAA3jC,EAAAknE,OAAAvjC,GAAAvsB,EAAApX,EAAAknE,OAAA9vD,IACAA,EAAAusB,IAAA/jB,EAAA+jB,IAAAvsB,IAAAwI,KAGA3Z,IACAo2G,GACA56E,EAAA46E,EAAA,GAAA/kG,EAAA+kG,EAAA,KAEA56E,EAAAi6E,EAAA,GAAApkG,EAAAokG,EAAA,GACAz1G,EAAAihE,SAAAzlC,EAAAx7B,EAAAihE,OAAAzlC,GAAAnqB,EAAArR,EAAAihE,OAAA5vD,IACAA,EAAAmqB,IAAA7hB,EAAA6hB,IAAAnqB,IAAAsI,KAGA5f,GAAAiG,IAAA09B,EAAAlC,IAAArqB,EAAAE,IAAAtX,GAAA2jC,EAAAvsB,GAAAnR,IAAAw7B,EAAAnqB,KAoBA7C,EAAAoqC,MAAA,WAKA,MAJApqC,GAAAzB,UACAyoG,GAAA,KAAAC,GAAA,KACAY,EAAAD,EAAA,MAEA5nG,GAEAA,EAAAzB,MAAA,WACA,QAAAhT,GAAAy7G,EAAA,IAAAA,EAAA,MAAAx1G,GAAAy1G,EAAA,IAAAA,EAAA,IAEAv2G,GAAA40D,OAAAtlD,EAAAyqB,EAAA,MAEA,IAAAk8E,KACA52F,EAAA,YACAjH,EAAA,YACAvR,EAAA,YACAzE,EAAA,YACAu1G,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAEAP,KAAA,6DACA/+C,GAAAwD,GAAAzjE,OAAAkqG,GAAAD,WACAuV,GAAAv/C,GAAA/tD,IACAutG,GAAAD,GAAA,wBACAv/C,IAAAy/C,IAAArgH,KAAA8G,UAAAusF,cAAA,GAAArzF,MAAA,4BAAAozF,GAAAgtB,GAIAhtB,GAAAnzF,MAAA,SAAA6E,GACA,GAAA8iB,GAAA,GAAA5nB,MAAA8E,EACA,OAAAijB,OAAAH,GAAA,KAAAA,GAEAwrE,GAAAlnF,SAAAk0G,GAAAl0G,SACAk4D,GAAAk8C,OAAAjgD,GAAA,SAAAz4C,GACA,UAAA04C,IAAA,IAAAxgE,KAAAC,MAAA6nB,EAAA,OACG,SAAAA,EAAAsK,GACHtK,EAAAsiF,QAAAtiF,EAAAkP,UAAA,IAAAh3B,KAAAC,MAAAmyB,KACG,SAAAtK,GACH,MAAAA,GAAAzU,eAEAixD,GAAAm8C,QAAAn8C,GAAAk8C,OAAA1zG,MACAw3D,GAAAm8C,QAAA1tG,IAAAuxD,GAAAk8C,OAAAztG,IAAAjG,MACAw3D,GAAAo8C,OAAAngD,GAAA,SAAAz4C,GACA,UAAA04C,IAAA,IAAAxgE,KAAAC,MAAA6nB,EAAA,OACG,SAAAA,EAAAsK,GACHtK,EAAAsiF,QAAAtiF,EAAAkP,UAAA,IAAAh3B,KAAAC,MAAAmyB,KACG,SAAAtK,GACH,MAAAA,GAAAxU,eAEAgxD,GAAAq8C,QAAAr8C,GAAAo8C,OAAA5zG,MACAw3D,GAAAq8C,QAAA5tG,IAAAuxD,GAAAo8C,OAAA3tG,IAAAjG,MACAw3D,GAAAs8C,KAAArgD,GAAA,SAAAz4C,GACA,GAAA+4F,GAAA/4F,EAAA+9C,oBAAA,EACA,WAAArF,IAAA,MAAAxgE,KAAAC,MAAA6nB,EAAA,KAAA+4F,QACG,SAAA/4F,EAAAsK,GACHtK,EAAAsiF,QAAAtiF,EAAAkP,UAAA,KAAAh3B,KAAAC,MAAAmyB,KACG,SAAAtK,GACH,MAAAA,GAAAvU,aAEA+wD,GAAAw8C,MAAAx8C,GAAAs8C,KAAA9zG,MACAw3D,GAAAw8C,MAAA/tG,IAAAuxD,GAAAs8C,KAAA7tG,IAAAjG,MACAw3D,GAAAxjE,MAAAy/D,GAAA,SAAAz4C,GAGA,MAFAA,GAAAw8C,GAAA+lC,IAAAviF,GACAA,EAAAuhF,QAAA,GACAvhF,GACG,SAAAA,EAAAsK,GACHtK,EAAAkiF,SAAAliF,EAAAtnB,WAAA4xB,IACG,SAAAtK,GACH,MAAAA,GAAAtnB,aAEA8jE,GAAAV,OAAAU,GAAAxjE,MAAAgM,MACAw3D,GAAAV,OAAA7wD,IAAAuxD,GAAAxjE,MAAAiS,IAAAjG,KAsDA,IAAA6mF,KAAA,oGACAotB,KAAAz8C,GAAAk8C,OAAA,IAAAl8C,GAAAk8C,OAAA,IAAAl8C,GAAAk8C,OAAA,KAAAl8C,GAAAk8C,OAAA,KAAAl8C,GAAAo8C,OAAA,IAAAp8C,GAAAo8C,OAAA,IAAAp8C,GAAAo8C,OAAA,KAAAp8C,GAAAo8C,OAAA,KAAAp8C,GAAAs8C,KAAA,IAAAt8C,GAAAs8C,KAAA,IAAAt8C,GAAAs8C,KAAA,IAAAt8C,GAAAs8C,KAAA,KAAAt8C,GAAA+lC,IAAA,IAAA/lC,GAAA+lC,IAAA,IAAA/lC,GAAAimC,KAAA,IAAAjmC,GAAAxjE,MAAA,IAAAwjE,GAAAxjE,MAAA,IAAAwjE,GAAAvjE,KAAA,IACAigH,GAAAlgD,GAAA3tD,QAAA,eAAA7S,GACA,MAAAA,GAAA8S,qBACG,eAAA9S,GACH,MAAAA,GAAA+S,gBACG,iBAAA/S,GACH,MAAAA,GAAAgT,gBACG,iBAAAhT,GACH,MAAAA,GAAAiT,cACG,iBAAAjT,GACH,MAAAA,GAAAR,UAAA,GAAAQ,EAAAkT,aACG,iBAAAlT,GACH,UAAAA,EAAAkT,aACG,cAAAlT,GACH,MAAAA,GAAAE,cACG,KAAA8pE,MACHspB,IACA9mF,MAAA,SAAAvD,EAAAC,EAAA4nC,GACA,MAAA9oC,IAAAwE,MAAA9M,KAAAiJ,KAAAM,EAAA6nC,MAAA5nC,EAAA4nC,GAAAliC,IAAA2kF,KAEA5zF,MAAA0wD,EACA1nD,KAAA0nD,EAEAowD,IAAAhgH,KAAAujE,GAAAvjE,KACAujE,GAAA56D,MAAA,WACA,MAAA8pF,IAAAlrF,GAAAoB,MAAA8F,SAAAuxG,GAAAC,IAEA,IAAAC,IAAAF,GAAA7xG,IAAA,SAAAtO,GACA,OAAAA,EAAA,GAAAmS,IAAAnS,EAAA,MAEAsgH,GAAAb,GAAAltG,QAAA,eAAA7S,GACA,MAAAA,GAAA0oG,wBACG,eAAA1oG,GACH,MAAAA,GAAA6oG,mBACG,iBAAA7oG,GACH,MAAAA,GAAA2oG,mBACG,iBAAA3oG,GACH,MAAAA,GAAAyoG,iBACG,iBAAAzoG,GACH,MAAAA,GAAAuoG,aAAA,GAAAvoG,EAAAsoG,gBACG,iBAAAtoG,GACH,UAAAA,EAAAsoG,gBACG,cAAAtoG,GACH,MAAAA,GAAA4oG,iBACG,KAAA5+B,KACH22C,IAAAlgH,KAAAujE,GAAAvjE,KAAAgS,IACAuxD,GAAA56D,MAAAqJ,IAAA,WACA,MAAAygF,IAAAlrF,GAAAoB,MAAA8F,SAAAyxG,GAAAC,KAEA54G,GAAAsC,KAAAixD,GAAA,SAAAI,GACA,MAAAA,GAAAmB,eAEA90D,GAAA61B,KAAA,SAAAnB,EAAAtV,GACA,MAAAo0C,IAAA9+B,EAAA,mBAAAg3D,GAAAtsE,IAKApf,GAAAgO,KAAA,SAAA0mB,EAAAtV,GACA,MAAAo0C,IAAA9+B,EAAA,YAAAi3D,GAAAvsE,IAOApf,GAAA8vF,IAAAv8B,GAAA,SAAAI,GACA,MAAAA,GAAAklD,cAEA18G,KAAA6D,MAAAsmD,EAAA,GAAApoD,EAAA,kBAAAooD,KAAAjmD,KAAA/K,EAAAC,EAAAD,EAAAD,GAAAixD,IAAA1jD,SAAA1E,IAAA7I,EAAAC,QAAA4I","file":"4.bundle.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 1576:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _react = __webpack_require__(368);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _underscore = __webpack_require__(757);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tvar _reactOcticons = __webpack_require__(1017);\n\t\n\tvar _chart = __webpack_require__(1577);\n\t\n\tvar _chart2 = _interopRequireDefault(_chart);\n\t\n\tvar _database = __webpack_require__(1366);\n\t\n\tvar _database2 = _interopRequireDefault(_database);\n\t\n\tvar _routeUtils = __webpack_require__(756);\n\t\n\tvar _issueStore = __webpack_require__(1477);\n\t\n\tvar _issueStore2 = _interopRequireDefault(_issueStore);\n\t\n\tvar _loadable = __webpack_require__(1521);\n\t\n\tvar _loadable2 = _interopRequireDefault(_loadable);\n\t\n\tvar _moment = __webpack_require__(1367);\n\t\n\tvar _moment2 = _interopRequireDefault(_moment);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar BurnupShell = _react2.default.createClass({\n\t  displayName: 'BurnupShell',\n\t  componentWillMount: function componentWillMount() {\n\t    // Needs to be called before `render()`\n\t    _issueStore2.default.startPolling();\n\t  },\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    _issueStore2.default.stopPolling();\n\t  },\n\t  renderLoaded: function renderLoaded(cards) {\n\t    function getDay(dateStr) {\n\t      return Math.floor(Date.parse(dateStr) / 1000 / 60 / 60 / 24);\n\t    }\n\t\n\t    var chunkType = null;\n\t    function getChunk(dateStr) {\n\t      if (chunkType === 'day') {\n\t        return Math.floor(Date.parse(dateStr) / 1000 / 60 / 60 / 24);\n\t        // } else if (chunkType === 'week') {\n\t        //   return Math.floor(Date.parse(dateStr) / 1000 / 60 / 60 / 24 / 7);\n\t      } else if (chunkType === 'month') {\n\t        var d = new Date(dateStr);\n\t        return d.getFullYear() * 100 + d.getMonth();\n\t      } else if (chunkType === 'year') {\n\t        var _d = new Date(dateStr);\n\t        return _d.getFullYear();\n\t      } else {\n\t        throw new Error('BUG: Invalid date range chunk type');\n\t      }\n\t    }\n\t    function formatChunk(chunk) {\n\t      if (chunkType === 'day') {\n\t        var m = new _moment2.default(chunk * 1000 * 60 * 60 * 24);\n\t        return m.format('MMM DD');\n\t        // } else if (chunkType === 'week') {\n\t        //   return Math.floor(Date.parse(dateStr) / 1000 / 60 / 60 / 24 / 7);\n\t      } else if (chunkType === 'month') {\n\t        var month = chunk % 100;\n\t        if (month === 0) {\n\t          var year = chunk / 100 % 100; // only use the last 2 digits of the year\n\t          return _moment2.default.monthsShort(month) + ' \\'' + year; // moment months are 0-indexed\n\t        } else {\n\t          return _moment2.default.monthsShort(month); // moment months are 0-indexed\n\t        }\n\t      } else if (chunkType === 'year') {\n\t        return chunk;\n\t      } else {\n\t        throw new Error('BUG: Invalid date range chunk type');\n\t      }\n\t    }\n\t    function incrementChunk(chunk) {\n\t      if (chunkType === 'day') {\n\t        return chunk + 1;\n\t        // } else if (chunkType === 'week') {\n\t        //   return chunk + 7;\n\t      } else if (chunkType === 'month') {\n\t        var month = chunk % 100; // split off the year\n\t        if (month >= 12) {\n\t          return chunk - month + 100;\n\t        } else {\n\t          return chunk + 1;\n\t        }\n\t      } else if (chunkType === 'year') {\n\t        return chunk + 1;\n\t      } else {\n\t        throw new Error('BUG: Invalid date range chunk type');\n\t      }\n\t    }\n\t\n\t    // Get the total number of Issues\n\t    var total = cards.length;\n\t\n\t    if (!cards.length) {\n\t      return _react2.default.createElement(\n\t        'span',\n\t        null,\n\t        'Not showing a chart because there are 0 cards to show'\n\t      );\n\t    }\n\t\n\t    cards = _underscore2.default.sortBy(cards, function (card) {\n\t      return getDay(card.issue.createdAt);\n\t    });\n\t    // Get the oldest Issue and the newest Issue Date\n\t    var startDate = cards[0].issue.createdAt;\n\t\n\t    var openedCards = cards;\n\t\n\t    // From this point, we only care about closed Issues\n\t    var closedCards = cards.filter(function (card) {\n\t      return card.issue.closedAt;\n\t    });\n\t    closedCards = _underscore2.default.sortBy(closedCards, function (card) {\n\t      return getDay(card.issue.closedAt);\n\t    });\n\t    var endDate = void 0;\n\t    if (closedCards.length && openedCards.length) {\n\t      var lastOpened = openedCards[openedCards.length - 1].issue.createdAt;\n\t      var lastClosed = closedCards[closedCards.length - 1].issue.closedAt;\n\t      if (Date.parse(lastOpened) < Date.parse(lastClosed)) {\n\t        endDate = lastClosed;\n\t      } else {\n\t        endDate = lastOpened;\n\t      }\n\t    } else if (openedCards.length) {\n\t      endDate = openedCards[openedCards.length - 1].issue.createdAt;\n\t    } else if (closedCards.length) {\n\t      endDate = closedCards[closedCards.length - 1].issue.closedAt;\n\t    } else {\n\t      throw new Error('BUG: should not have gotten here');\n\t    }\n\t\n\t    var startDays = getDay(startDate);\n\t    var endDays = getDay(endDate);\n\t\n\t    if (endDays - startDays < 90) {\n\t      chunkType = 'day';\n\t      // } else if (endDays - startDays < 100) {\n\t      //   chunkType = 'week';\n\t    } else if (endDays - startDays < 1500) {\n\t      chunkType = 'month';\n\t    } else {\n\t      chunkType = 'year';\n\t    }\n\t\n\t    var startChunk = getChunk(startDate);\n\t    var endChunk = getChunk(endDate);\n\t\n\t    // TODO: If the number of days is more than, say 50, then show changes per week.\n\t    // Loop over the days and build a chart\n\t    var closedCount = 0;\n\t    var openedCount = 0;\n\t    var rows = [];\n\t    for (var currentChunk = startChunk; currentChunk <= endChunk; currentChunk = incrementChunk(currentChunk)) {\n\t      // loop through the cards to count how many have closed on this day\n\t      var closedToday = 0;\n\t      var openedToday = 0;\n\t      for (var cardIndex = 0; cardIndex < closedCards.length; cardIndex++) {\n\t        var cardClosedDay = getChunk(closedCards[cardIndex].issue.closedAt);\n\t        if (cardClosedDay <= currentChunk) {\n\t          closedToday++;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      for (var _cardIndex = 0; _cardIndex < openedCards.length; _cardIndex++) {\n\t        var cardOpenedDay = getChunk(openedCards[_cardIndex].issue.createdAt);\n\t        if (cardOpenedDay <= currentChunk) {\n\t          openedToday++;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      // remove the cards since they are now accounted for\n\t      if (closedToday) {\n\t        closedCards.splice(0, closedToday);\n\t        closedCount += closedToday;\n\t      }\n\t      if (openedToday) {\n\t        openedCards.splice(0, openedToday);\n\t        openedCount += openedToday;\n\t      }\n\t      // Only add an entry if it changed\n\t      rows.push([currentChunk,\n\t      // closedToday ? closedCount : null,\n\t      // openedToday ? openedCount : null,\n\t      closedCount, openedCount, openedToday || null]);\n\t    }\n\t\n\t    // if (closedCards.length > 0) {\n\t    //   throw new Error('BUG: Should have counted all the cards');\n\t    // }\n\t\n\t    // Add the row titles and the \"Ideal\" line\n\t    rows[0].push(0); // ideal start\n\t    rows[rows.length - 1].push(openedCount); // ideal end\n\t    rows.unshift(['chunk', 'closed', 'total', 'new', 'ideal']);\n\t\n\t    var chartData = {\n\t      x: 'chunk',\n\t      rows: rows,\n\t      colors: {\n\t        closed: '#ff0000',\n\t        total: '#00ff00',\n\t        'new': '#0000ff',\n\t        ideal: '#999999'\n\t      },\n\t      types: {\n\t        closed: 'area-spline',\n\t        total: 'area-spline',\n\t        'new': 'bar'\n\t      }\n\t    };\n\t    function formatChunkIndex(index) {\n\t      return formatChunk(rows[index + 1][0]); // +1 because 1st row is the headers\n\t    }\n\t    var options = {\n\t      axis: {\n\t        x: {\n\t          type: 'category',\n\t          tick: {\n\t            format: formatChunkIndex,\n\t            culling: {\n\t              max: 20\n\t            }\n\t          }\n\t        }\n\t      }\n\t    };\n\t    return _react2.default.createElement(_chart2.default, { className: 'burnup-chart', data: chartData, options: options, element: 'burnup' });\n\t  },\n\t  render: function render() {\n\t    // TODO: send the current filter as an arg to `Database.fetchCards()` so it can smartly (using Indexes) fetch the cards\n\t    var promise = _database2.default.fetchCards((0, _routeUtils.getFilters)());\n\t\n\t    return _react2.default.createElement(\n\t      'div',\n\t      { className: 'burnup' },\n\t      _react2.default.createElement(\n\t        'h2',\n\t        null,\n\t        _react2.default.createElement(_reactOcticons.GraphIcon, { size: 'mega' }),\n\t        '  Burnup Chart'\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Make sure you selected ',\n\t        _react2.default.createElement(\n\t          'strong',\n\t          null,\n\t          'closed'\n\t        ),\n\t        ' and ',\n\t        _react2.default.createElement(\n\t          'strong',\n\t          null,\n\t          'Issues'\n\t        ),\n\t        ' and optionally a Milestone from the filter dropdown at the top of this page'\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Also, this chart only fills the area when something changed (useful for weekends/open-source projects that frequently have periods of no change)'\n\t      ),\n\t      _react2.default.createElement(_loadable2.default, {\n\t        promise: promise,\n\t        renderLoaded: this.renderLoaded\n\t      })\n\t    );\n\t  }\n\t});\n\t\n\texports.default = BurnupShell;\n\n/***/ },\n\n/***/ 1577:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _c = __webpack_require__(1578);\n\t\n\tvar _c2 = _interopRequireDefault(_c);\n\t\n\tvar _react = __webpack_require__(368);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * React-C3 Chart\n\t * Copyright 2015 - Cody Reichert <codyreichert@gmail.com>\n\t */\n\t\n\tvar ChartComponent = _react2.default.createClass({\n\t  displayName: 'React-C3-Chart',\n\t\n\t  propTypes: {\n\t    className: _react2.default.PropTypes.string,\n\t    data: _react2.default.PropTypes.object.isRequired,\n\t    element: _react2.default.PropTypes.string.isRequired,\n\t    options: _react2.default.PropTypes.object\n\t  },\n\t\n\t  chart: null,\n\t\n\t  shouldComponentUpdate: function shouldComponentUpdate(nextProps) {\n\t    if (this.props.data.rows.length !== nextProps.data.rows.length) {\n\t      // shallow check\n\t      return true;\n\t    } else if (JSON.stringify(this.props.data.rows) !== JSON.stringify(nextProps.data.rows)) {\n\t      // deeper check\n\t      return true;\n\t    }\n\t    return false;\n\t  },\n\t\n\t  componentDidMount: function componentDidMount() {\n\t    this._generateChart(this.props.data, this.props.element, this.props.options);\n\t  },\n\t\n\t  componentDidUpdate: function componentDidUpdate(prevProps) {\n\t    if (prevProps.data.rows !== this.props.data.rows) {\n\t      this._generateChart(this.props.data, this.props.element, this.props.options);\n\t    }\n\t  },\n\t\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    this._destroyChart();\n\t  },\n\t\n\t  _generateChart: function _generateChart(data, element, options) {\n\t    var build = Object.assign({}, {\n\t      bindto: '#' + element,\n\t      data: data\n\t    }, options);\n\t    this.chart = _c2.default.generate(build);\n\t  },\n\t\n\t  _destroyChart: function _destroyChart() {\n\t    this.chart.destroy();\n\t  },\n\t\n\t  render: function render() {\n\t    var className = void 0;\n\t    if (this.props.className) {\n\t      className = 'c3 ' + this.props.className;\n\t    } else {\n\t      className = 'c3';\n\t    }\n\t    return _react2.default.createElement('div', { className: className,\n\t      id: this.props.element,\n\t      style: this.props.styles });\n\t  }\n\t});\n\t\n\texports.default = ChartComponent;\n\n/***/ },\n\n/***/ 1578:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (window) {\n\t    'use strict';\n\t\n\t    /*global define, module, exports, require */\n\t\n\t    var c3 = { version: \"0.4.11\" };\n\t\n\t    var c3_chart_fn,\n\t        c3_chart_internal_fn,\n\t        c3_chart_internal_axis_fn;\n\t\n\t    function API(owner) {\n\t        this.owner = owner;\n\t    }\n\t\n\t    function inherit(base, derived) {\n\t\n\t        if (Object.create) {\n\t            derived.prototype = Object.create(base.prototype);\n\t        } else {\n\t            var f = function f() {};\n\t            f.prototype = base.prototype;\n\t            derived.prototype = new f();\n\t        }\n\t\n\t        derived.prototype.constructor = derived;\n\t\n\t        return derived;\n\t    }\n\t\n\t    function Chart(config) {\n\t        var $$ = this.internal = new ChartInternal(this);\n\t        $$.loadConfig(config);\n\t\n\t        $$.beforeInit(config);\n\t        $$.init();\n\t        $$.afterInit(config);\n\t\n\t        // bind \"this\" to nested API\n\t        (function bindThis(fn, target, argThis) {\n\t            Object.keys(fn).forEach(function (key) {\n\t                target[key] = fn[key].bind(argThis);\n\t                if (Object.keys(fn[key]).length > 0) {\n\t                    bindThis(fn[key], target[key], argThis);\n\t                }\n\t            });\n\t        })(c3_chart_fn, this, this);\n\t    }\n\t\n\t    function ChartInternal(api) {\n\t        var $$ = this;\n\t        $$.d3 = window.d3 ? window.d3 :  true ? __webpack_require__(1579) : undefined;\n\t        $$.api = api;\n\t        $$.config = $$.getDefaultConfig();\n\t        $$.data = {};\n\t        $$.cache = {};\n\t        $$.axes = {};\n\t    }\n\t\n\t    c3.generate = function (config) {\n\t        return new Chart(config);\n\t    };\n\t\n\t    c3.chart = {\n\t        fn: Chart.prototype,\n\t        internal: {\n\t            fn: ChartInternal.prototype,\n\t            axis: {\n\t                fn: Axis.prototype\n\t            }\n\t        }\n\t    };\n\t    c3_chart_fn = c3.chart.fn;\n\t    c3_chart_internal_fn = c3.chart.internal.fn;\n\t    c3_chart_internal_axis_fn = c3.chart.internal.axis.fn;\n\t\n\t    c3_chart_internal_fn.beforeInit = function () {\n\t        // can do something\n\t    };\n\t    c3_chart_internal_fn.afterInit = function () {\n\t        // can do something\n\t    };\n\t    c3_chart_internal_fn.init = function () {\n\t        var $$ = this, config = $$.config;\n\t\n\t        $$.initParams();\n\t\n\t        if (config.data_url) {\n\t            $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n\t        }\n\t        else if (config.data_json) {\n\t            $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n\t        }\n\t        else if (config.data_rows) {\n\t            $$.initWithData($$.convertRowsToData(config.data_rows));\n\t        }\n\t        else if (config.data_columns) {\n\t            $$.initWithData($$.convertColumnsToData(config.data_columns));\n\t        }\n\t        else {\n\t            throw Error('url or json or rows or columns is required.');\n\t        }\n\t    };\n\t\n\t    c3_chart_internal_fn.initParams = function () {\n\t        var $$ = this, d3 = $$.d3, config = $$.config;\n\t\n\t        // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n\t        $$.clipId = \"c3-\" + (+new Date()) + '-clip',\n\t        $$.clipIdForXAxis = $$.clipId + '-xaxis',\n\t        $$.clipIdForYAxis = $$.clipId + '-yaxis',\n\t        $$.clipIdForGrid = $$.clipId + '-grid',\n\t        $$.clipIdForSubchart = $$.clipId + '-subchart',\n\t        $$.clipPath = $$.getClipPath($$.clipId),\n\t        $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis),\n\t        $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n\t        $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid),\n\t        $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart),\n\t\n\t        $$.dragStart = null;\n\t        $$.dragging = false;\n\t        $$.flowing = false;\n\t        $$.cancelClick = false;\n\t        $$.mouseover = false;\n\t        $$.transiting = false;\n\t\n\t        $$.color = $$.generateColor();\n\t        $$.levelColor = $$.generateLevelColor();\n\t\n\t        $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;\n\t        $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;\n\t        $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([\n\t            [\".%L\", function (d) { return d.getMilliseconds(); }],\n\t            [\":%S\", function (d) { return d.getSeconds(); }],\n\t            [\"%I:%M\", function (d) { return d.getMinutes(); }],\n\t            [\"%I %p\", function (d) { return d.getHours(); }],\n\t            [\"%-m/%-d\", function (d) { return d.getDay() && d.getDate() !== 1; }],\n\t            [\"%-m/%-d\", function (d) { return d.getDate() !== 1; }],\n\t            [\"%-m/%-d\", function (d) { return d.getMonth(); }],\n\t            [\"%Y/%-m/%-d\", function () { return true; }]\n\t        ]);\n\t\n\t        $$.hiddenTargetIds = [];\n\t        $$.hiddenLegendIds = [];\n\t        $$.focusedTargetIds = [];\n\t        $$.defocusedTargetIds = [];\n\t\n\t        $$.xOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\t        $$.yOrient = config.axis_rotated ? (config.axis_y_inner ? \"top\" : \"bottom\") : (config.axis_y_inner ? \"right\" : \"left\");\n\t        $$.y2Orient = config.axis_rotated ? (config.axis_y2_inner ? \"bottom\" : \"top\") : (config.axis_y2_inner ? \"left\" : \"right\");\n\t        $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\t\n\t        $$.isLegendRight = config.legend_position === 'right';\n\t        $$.isLegendInset = config.legend_position === 'inset';\n\t        $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n\t        $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n\t        $$.legendStep = 0;\n\t        $$.legendItemWidth = 0;\n\t        $$.legendItemHeight = 0;\n\t\n\t        $$.currentMaxTickWidths = {\n\t            x: 0,\n\t            y: 0,\n\t            y2: 0\n\t        };\n\t\n\t        $$.rotated_padding_left = 30;\n\t        $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n\t        $$.rotated_padding_top = 5;\n\t\n\t        $$.withoutFadeIn = {};\n\t\n\t        $$.intervalForObserveInserted = undefined;\n\t\n\t        $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n\t    };\n\t\n\t    c3_chart_internal_fn.initChartElements = function () {\n\t        if (this.initBar) { this.initBar(); }\n\t        if (this.initLine) { this.initLine(); }\n\t        if (this.initArc) { this.initArc(); }\n\t        if (this.initGauge) { this.initGauge(); }\n\t        if (this.initText) { this.initText(); }\n\t    };\n\t\n\t    c3_chart_internal_fn.initWithData = function (data) {\n\t        var $$ = this, d3 = $$.d3, config = $$.config;\n\t        var defs, main, binding = true;\n\t\n\t        $$.axis = new Axis($$);\n\t\n\t        if ($$.initPie) { $$.initPie(); }\n\t        if ($$.initBrush) { $$.initBrush(); }\n\t        if ($$.initZoom) { $$.initZoom(); }\n\t\n\t        if (!config.bindto) {\n\t            $$.selectChart = d3.selectAll([]);\n\t        }\n\t        else if (typeof config.bindto.node === 'function') {\n\t            $$.selectChart = config.bindto;\n\t        }\n\t        else {\n\t            $$.selectChart = d3.select(config.bindto);\n\t        }\n\t        if ($$.selectChart.empty()) {\n\t            $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n\t            $$.observeInserted($$.selectChart);\n\t            binding = false;\n\t        }\n\t        $$.selectChart.html(\"\").classed(\"c3\", true);\n\t\n\t        // Init data as targets\n\t        $$.data.xs = {};\n\t        $$.data.targets = $$.convertDataToTargets(data);\n\t\n\t        if (config.data_filter) {\n\t            $$.data.targets = $$.data.targets.filter(config.data_filter);\n\t        }\n\t\n\t        // Set targets to hide if needed\n\t        if (config.data_hide) {\n\t            $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n\t        }\n\t        if (config.legend_hide) {\n\t            $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n\t        }\n\t\n\t        // when gauge, hide legend // TODO: fix\n\t        if ($$.hasType('gauge')) {\n\t            config.legend_show = false;\n\t        }\n\t\n\t        // Init sizes and scales\n\t        $$.updateSizes();\n\t        $$.updateScales();\n\t\n\t        // Set domains for each scale\n\t        $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n\t        $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n\t        $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n\t        $$.subX.domain($$.x.domain());\n\t        $$.subY.domain($$.y.domain());\n\t        $$.subY2.domain($$.y2.domain());\n\t\n\t        // Save original x domain for zoom update\n\t        $$.orgXDomain = $$.x.domain();\n\t\n\t        // Set initialized scales to brush and zoom\n\t        if ($$.brush) { $$.brush.scale($$.subX); }\n\t        if (config.zoom_enabled) { $$.zoom.scale($$.x); }\n\t\n\t        /*-- Basic Elements --*/\n\t\n\t        // Define svgs\n\t        $$.svg = $$.selectChart.append(\"svg\")\n\t            .style(\"overflow\", \"hidden\")\n\t            .on('mouseenter', function () { return config.onmouseover.call($$); })\n\t            .on('mouseleave', function () { return config.onmouseout.call($$); });\n\t\n\t        if ($$.config.svg_classname) {\n\t            $$.svg.attr('class', $$.config.svg_classname);\n\t        }\n\t\n\t        // Define defs\n\t        defs = $$.svg.append(\"defs\");\n\t        $$.clipChart = $$.appendClip(defs, $$.clipId);\n\t        $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n\t        $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n\t        $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n\t        $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n\t        $$.updateSvgSize();\n\t\n\t        // Define regions\n\t        main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\t\n\t        if ($$.initSubchart) { $$.initSubchart(); }\n\t        if ($$.initTooltip) { $$.initTooltip(); }\n\t        if ($$.initLegend) { $$.initLegend(); }\n\t        if ($$.initTitle) { $$.initTitle(); }\n\t\n\t        /*-- Main Region --*/\n\t\n\t        // text when empty\n\t        main.append(\"text\")\n\t            .attr(\"class\", CLASS.text + ' ' + CLASS.empty)\n\t            .attr(\"text-anchor\", \"middle\") // horizontal centering of text at x position in all browsers.\n\t            .attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n\t\n\t        // Regions\n\t        $$.initRegion();\n\t\n\t        // Grids\n\t        $$.initGrid();\n\t\n\t        // Define g for chart area\n\t        main.append('g')\n\t            .attr(\"clip-path\", $$.clipPath)\n\t            .attr('class', CLASS.chart);\n\t\n\t        // Grid lines\n\t        if (config.grid_lines_front) { $$.initGridLines(); }\n\t\n\t        // Cover whole with rects for events\n\t        $$.initEventRect();\n\t\n\t        // Define g for chart\n\t        $$.initChartElements();\n\t\n\t        // if zoom privileged, insert rect to forefront\n\t        // TODO: is this needed?\n\t        main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions)\n\t            .attr('class', CLASS.zoomRect)\n\t            .attr('width', $$.width)\n\t            .attr('height', $$.height)\n\t            .style('opacity', 0)\n\t            .on(\"dblclick.zoom\", null);\n\t\n\t        // Set default extent if defined\n\t        if (config.axis_x_extent) { $$.brush.extent($$.getDefaultExtent()); }\n\t\n\t        // Add Axis\n\t        $$.axis.init();\n\t\n\t        // Set targets\n\t        $$.updateTargets($$.data.targets);\n\t\n\t        // Draw with targets\n\t        if (binding) {\n\t            $$.updateDimension();\n\t            $$.config.oninit.call($$);\n\t            $$.redraw({\n\t                withTransition: false,\n\t                withTransform: true,\n\t                withUpdateXDomain: true,\n\t                withUpdateOrgXDomain: true,\n\t                withTransitionForAxis: false\n\t            });\n\t        }\n\t\n\t        // Bind resize event\n\t        $$.bindResize();\n\t\n\t        // export element of the chart\n\t        $$.api.element = $$.selectChart.node();\n\t    };\n\t\n\t    c3_chart_internal_fn.smoothLines = function (el, type) {\n\t        var $$ = this;\n\t        if (type === 'grid') {\n\t            el.each(function () {\n\t                var g = $$.d3.select(this),\n\t                    x1 = g.attr('x1'),\n\t                    x2 = g.attr('x2'),\n\t                    y1 = g.attr('y1'),\n\t                    y2 = g.attr('y2');\n\t                g.attr({\n\t                    'x1': Math.ceil(x1),\n\t                    'x2': Math.ceil(x2),\n\t                    'y1': Math.ceil(y1),\n\t                    'y2': Math.ceil(y2)\n\t                });\n\t            });\n\t        }\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.updateSizes = function () {\n\t        var $$ = this, config = $$.config;\n\t        var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n\t            legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n\t            legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n\t            hasArc = $$.hasArcType(),\n\t            xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n\t            subchartHeight = config.subchart_show && !hasArc ? (config.subchart_size_height + xAxisHeight) : 0;\n\t\n\t        $$.currentWidth = $$.getCurrentWidth();\n\t        $$.currentHeight = $$.getCurrentHeight();\n\t\n\t        // for main\n\t        $$.margin = config.axis_rotated ? {\n\t            top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n\t            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n\t            bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n\t            left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n\t        } : {\n\t            top: 4 + $$.getCurrentPaddingTop(), // for top tick text\n\t            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n\t            bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n\t            left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n\t        };\n\t\n\t        // for subchart\n\t        $$.margin2 = config.axis_rotated ? {\n\t            top: $$.margin.top,\n\t            right: NaN,\n\t            bottom: 20 + legendHeightForBottom,\n\t            left: $$.rotated_padding_left\n\t        } : {\n\t            top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n\t            right: NaN,\n\t            bottom: xAxisHeight + legendHeightForBottom,\n\t            left: $$.margin.left\n\t        };\n\t\n\t        // for legend\n\t        $$.margin3 = {\n\t            top: 0,\n\t            right: NaN,\n\t            bottom: 0,\n\t            left: 0\n\t        };\n\t        if ($$.updateSizeForLegend) { $$.updateSizeForLegend(legendHeight, legendWidth); }\n\t\n\t        $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n\t        $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n\t        if ($$.width < 0) { $$.width = 0; }\n\t        if ($$.height < 0) { $$.height = 0; }\n\t\n\t        $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n\t        $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n\t        if ($$.width2 < 0) { $$.width2 = 0; }\n\t        if ($$.height2 < 0) { $$.height2 = 0; }\n\t\n\t        // for arc\n\t        $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n\t        $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n\t        if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n\t            $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n\t        }\n\t        if ($$.updateRadius) { $$.updateRadius(); }\n\t\n\t        if ($$.isLegendRight && hasArc) {\n\t            $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n\t        }\n\t    };\n\t\n\t    c3_chart_internal_fn.updateTargets = function (targets) {\n\t        var $$ = this;\n\t\n\t        /*-- Main --*/\n\t\n\t        //-- Text --//\n\t        $$.updateTargetsForText(targets);\n\t\n\t        //-- Bar --//\n\t        $$.updateTargetsForBar(targets);\n\t\n\t        //-- Line --//\n\t        $$.updateTargetsForLine(targets);\n\t\n\t        //-- Arc --//\n\t        if ($$.hasArcType() && $$.updateTargetsForArc) { $$.updateTargetsForArc(targets); }\n\t\n\t        /*-- Sub --*/\n\t\n\t        if ($$.updateTargetsForSubchart) { $$.updateTargetsForSubchart(targets); }\n\t\n\t        // Fade-in each chart\n\t        $$.showTargets();\n\t    };\n\t    c3_chart_internal_fn.showTargets = function () {\n\t        var $$ = this;\n\t        $$.svg.selectAll('.' + CLASS.target).filter(function (d) { return $$.isTargetToShow(d.id); })\n\t          .transition().duration($$.config.transition_duration)\n\t            .style(\"opacity\", 1);\n\t    };\n\t\n\t    c3_chart_internal_fn.redraw = function (options, transitions) {\n\t        var $$ = this, main = $$.main, d3 = $$.d3, config = $$.config;\n\t        var areaIndices = $$.getShapeIndices($$.isAreaType), barIndices = $$.getShapeIndices($$.isBarType), lineIndices = $$.getShapeIndices($$.isLineType);\n\t        var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis,\n\t            withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend,\n\t            withEventRect, withDimension, withUpdateXAxis;\n\t        var hideAxis = $$.hasArcType();\n\t        var drawArea, drawBar, drawLine, xForText, yForText;\n\t        var duration, durationForExit, durationForAxis;\n\t        var waitForDraw, flow;\n\t        var targetsToShow = $$.filterTargetsToShow($$.data.targets), tickValues, i, intervalForCulling, xDomainForZoom;\n\t        var xv = $$.xv.bind($$), cx, cy;\n\t\n\t        options = options || {};\n\t        withY = getOption(options, \"withY\", true);\n\t        withSubchart = getOption(options, \"withSubchart\", true);\n\t        withTransition = getOption(options, \"withTransition\", true);\n\t        withTransform = getOption(options, \"withTransform\", false);\n\t        withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n\t        withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n\t        withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n\t        withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n\t        withLegend = getOption(options, \"withLegend\", false);\n\t        withEventRect = getOption(options, \"withEventRect\", true);\n\t        withDimension = getOption(options, \"withDimension\", true);\n\t        withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n\t        withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n\t\n\t        duration = withTransition ? config.transition_duration : 0;\n\t        durationForExit = withTransitionForExit ? duration : 0;\n\t        durationForAxis = withTransitionForAxis ? duration : 0;\n\t\n\t        transitions = transitions || $$.axis.generateTransitions(durationForAxis);\n\t\n\t        // update legend and transform each g\n\t        if (withLegend && config.legend_show) {\n\t            $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n\t        } else if (withDimension) {\n\t            // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n\t            // no need to update axis in it because they will be updated in redraw()\n\t            $$.updateDimension(true);\n\t        }\n\t\n\t        // MEMO: needed for grids calculation\n\t        if ($$.isCategorized() && targetsToShow.length === 0) {\n\t            $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n\t        }\n\t\n\t        if (targetsToShow.length) {\n\t            $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n\t            if (!config.axis_x_tick_values) {\n\t                tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n\t            }\n\t        } else {\n\t            $$.xAxis.tickValues([]);\n\t            $$.subXAxis.tickValues([]);\n\t        }\n\t\n\t        if (config.zoom_rescale && !options.flow) {\n\t            xDomainForZoom = $$.x.orgDomain();\n\t        }\n\t\n\t        $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n\t        $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\t\n\t        if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n\t            $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n\t        }\n\t        if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n\t            $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n\t        }\n\t\n\t        // axes\n\t        $$.axis.redraw(transitions, hideAxis);\n\t\n\t        // Update axis label\n\t        $$.axis.updateLabels(withTransition);\n\t\n\t        // show/hide if manual culling needed\n\t        if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n\t            if (config.axis_x_tick_culling && tickValues) {\n\t                for (i = 1; i < tickValues.length; i++) {\n\t                    if (tickValues.length / i < config.axis_x_tick_culling_max) {\n\t                        intervalForCulling = i;\n\t                        break;\n\t                    }\n\t                }\n\t                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n\t                    var index = tickValues.indexOf(e);\n\t                    if (index >= 0) {\n\t                        d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n\t                    }\n\t                });\n\t            } else {\n\t                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n\t            }\n\t        }\n\t\n\t        // setup drawer - MEMO: these must be called after axis updated\n\t        drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n\t        drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n\t        drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n\t        xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n\t        yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\n\t\n\t        // Update sub domain\n\t        if (withY) {\n\t            $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n\t            $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n\t        }\n\t\n\t        // xgrid focus\n\t        $$.updateXgridFocus();\n\t\n\t        // Data empty label positioning and text.\n\t        main.select(\"text.\" + CLASS.text + '.' + CLASS.empty)\n\t            .attr(\"x\", $$.width / 2)\n\t            .attr(\"y\", $$.height / 2)\n\t            .text(config.data_empty_label_text)\n\t          .transition()\n\t            .style('opacity', targetsToShow.length ? 0 : 1);\n\t\n\t        // grid\n\t        $$.updateGrid(duration);\n\t\n\t        // rect for regions\n\t        $$.updateRegion(duration);\n\t\n\t        // bars\n\t        $$.updateBar(durationForExit);\n\t\n\t        // lines, areas and cricles\n\t        $$.updateLine(durationForExit);\n\t        $$.updateArea(durationForExit);\n\t        $$.updateCircle();\n\t\n\t        // text\n\t        if ($$.hasDataLabel()) {\n\t            $$.updateText(durationForExit);\n\t        }\n\t\n\t        // title\n\t        if ($$.redrawTitle) { $$.redrawTitle(); }\n\t\n\t        // arc\n\t        if ($$.redrawArc) { $$.redrawArc(duration, durationForExit, withTransform); }\n\t\n\t        // subchart\n\t        if ($$.redrawSubchart) {\n\t            $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n\t        }\n\t\n\t        // circles for select\n\t        main.selectAll('.' + CLASS.selectedCircles)\n\t            .filter($$.isBarType.bind($$))\n\t            .selectAll('circle')\n\t            .remove();\n\t\n\t        // event rects will redrawn when flow called\n\t        if (config.interaction_enabled && !options.flow && withEventRect) {\n\t            $$.redrawEventRect();\n\t            if ($$.updateZoom) { $$.updateZoom(); }\n\t        }\n\t\n\t        // update circleY based on updated parameters\n\t        $$.updateCircleY();\n\t\n\t        // generate circle x/y functions depending on updated params\n\t        cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n\t        cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\t\n\t        if (options.flow) {\n\t            flow = $$.generateFlow({\n\t                targets: targetsToShow,\n\t                flow: options.flow,\n\t                duration: options.flow.duration,\n\t                drawBar: drawBar,\n\t                drawLine: drawLine,\n\t                drawArea: drawArea,\n\t                cx: cx,\n\t                cy: cy,\n\t                xv: xv,\n\t                xForText: xForText,\n\t                yForText: yForText\n\t            });\n\t        }\n\t\n\t        if ((duration || flow) && $$.isTabVisible()) { // Only use transition if tab visible. See #938.\n\t            // transition should be derived from one transition\n\t            d3.transition().duration(duration).each(function () {\n\t                var transitionsToWait = [];\n\t\n\t                // redraw and gather transitions\n\t                [\n\t                    $$.redrawBar(drawBar, true),\n\t                    $$.redrawLine(drawLine, true),\n\t                    $$.redrawArea(drawArea, true),\n\t                    $$.redrawCircle(cx, cy, true),\n\t                    $$.redrawText(xForText, yForText, options.flow, true),\n\t                    $$.redrawRegion(true),\n\t                    $$.redrawGrid(true),\n\t                ].forEach(function (transitions) {\n\t                    transitions.forEach(function (transition) {\n\t                        transitionsToWait.push(transition);\n\t                    });\n\t                });\n\t\n\t                // Wait for end of transitions to call flow and onrendered callback\n\t                waitForDraw = $$.generateWait();\n\t                transitionsToWait.forEach(function (t) {\n\t                    waitForDraw.add(t);\n\t                });\n\t            })\n\t            .call(waitForDraw, function () {\n\t                if (flow) {\n\t                    flow();\n\t                }\n\t                if (config.onrendered) {\n\t                    config.onrendered.call($$);\n\t                }\n\t            });\n\t        }\n\t        else {\n\t            $$.redrawBar(drawBar);\n\t            $$.redrawLine(drawLine);\n\t            $$.redrawArea(drawArea);\n\t            $$.redrawCircle(cx, cy);\n\t            $$.redrawText(xForText, yForText, options.flow);\n\t            $$.redrawRegion();\n\t            $$.redrawGrid();\n\t            if (config.onrendered) {\n\t                config.onrendered.call($$);\n\t            }\n\t        }\n\t\n\t        // update fadein condition\n\t        $$.mapToIds($$.data.targets).forEach(function (id) {\n\t            $$.withoutFadeIn[id] = true;\n\t        });\n\t    };\n\t\n\t    c3_chart_internal_fn.updateAndRedraw = function (options) {\n\t        var $$ = this, config = $$.config, transitions;\n\t        options = options || {};\n\t        // same with redraw\n\t        options.withTransition = getOption(options, \"withTransition\", true);\n\t        options.withTransform = getOption(options, \"withTransform\", false);\n\t        options.withLegend = getOption(options, \"withLegend\", false);\n\t        // NOT same with redraw\n\t        options.withUpdateXDomain = true;\n\t        options.withUpdateOrgXDomain = true;\n\t        options.withTransitionForExit = false;\n\t        options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\n\t        // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n\t        $$.updateSizes();\n\t        // MEMO: called in updateLegend in redraw if withLegend\n\t        if (!(options.withLegend && config.legend_show)) {\n\t            transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\n\t            // Update scales\n\t            $$.updateScales();\n\t            $$.updateSvgSize();\n\t            // Update g positions\n\t            $$.transformAll(options.withTransitionForTransform, transitions);\n\t        }\n\t        // Draw with new sizes & scales\n\t        $$.redraw(options, transitions);\n\t    };\n\t    c3_chart_internal_fn.redrawWithoutRescale = function () {\n\t        this.redraw({\n\t            withY: false,\n\t            withSubchart: false,\n\t            withEventRect: false,\n\t            withTransitionForAxis: false\n\t        });\n\t    };\n\t\n\t    c3_chart_internal_fn.isTimeSeries = function () {\n\t        return this.config.axis_x_type === 'timeseries';\n\t    };\n\t    c3_chart_internal_fn.isCategorized = function () {\n\t        return this.config.axis_x_type.indexOf('categor') >= 0;\n\t    };\n\t    c3_chart_internal_fn.isCustomX = function () {\n\t        var $$ = this, config = $$.config;\n\t        return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n\t    };\n\t\n\t    c3_chart_internal_fn.isTimeSeriesY = function () {\n\t        return this.config.axis_y_type === 'timeseries';\n\t    };\n\t\n\t    c3_chart_internal_fn.getTranslate = function (target) {\n\t        var $$ = this, config = $$.config, x, y;\n\t        if (target === 'main') {\n\t            x = asHalfPixel($$.margin.left);\n\t            y = asHalfPixel($$.margin.top);\n\t        } else if (target === 'context') {\n\t            x = asHalfPixel($$.margin2.left);\n\t            y = asHalfPixel($$.margin2.top);\n\t        } else if (target === 'legend') {\n\t            x = $$.margin3.left;\n\t            y = $$.margin3.top;\n\t        } else if (target === 'x') {\n\t            x = 0;\n\t            y = config.axis_rotated ? 0 : $$.height;\n\t        } else if (target === 'y') {\n\t            x = 0;\n\t            y = config.axis_rotated ? $$.height : 0;\n\t        } else if (target === 'y2') {\n\t            x = config.axis_rotated ? 0 : $$.width;\n\t            y = config.axis_rotated ? 1 : 0;\n\t        } else if (target === 'subx') {\n\t            x = 0;\n\t            y = config.axis_rotated ? 0 : $$.height2;\n\t        } else if (target === 'arc') {\n\t            x = $$.arcWidth / 2;\n\t            y = $$.arcHeight / 2;\n\t        }\n\t        return \"translate(\" + x + \",\" + y + \")\";\n\t    };\n\t    c3_chart_internal_fn.initialOpacity = function (d) {\n\t        return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n\t    };\n\t    c3_chart_internal_fn.initialOpacityForCircle = function (d) {\n\t        return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n\t    };\n\t    c3_chart_internal_fn.opacityForCircle = function (d) {\n\t        var opacity = this.config.point_show ? 1 : 0;\n\t        return isValue(d.value) ? (this.isScatterType(d) ? 0.5 : opacity) : 0;\n\t    };\n\t    c3_chart_internal_fn.opacityForText = function () {\n\t        return this.hasDataLabel() ? 1 : 0;\n\t    };\n\t    c3_chart_internal_fn.xx = function (d) {\n\t        return d ? this.x(d.x) : null;\n\t    };\n\t    c3_chart_internal_fn.xv = function (d) {\n\t        var $$ = this, value = d.value;\n\t        if ($$.isTimeSeries()) {\n\t            value = $$.parseDate(d.value);\n\t        }\n\t        else if ($$.isCategorized() && typeof d.value === 'string') {\n\t            value = $$.config.axis_x_categories.indexOf(d.value);\n\t        }\n\t        return Math.ceil($$.x(value));\n\t    };\n\t    c3_chart_internal_fn.yv = function (d) {\n\t        var $$ = this,\n\t            yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n\t        return Math.ceil(yScale(d.value));\n\t    };\n\t    c3_chart_internal_fn.subxx = function (d) {\n\t        return d ? this.subX(d.x) : null;\n\t    };\n\t\n\t    c3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n\t        var $$ = this,\n\t            xAxis, yAxis, y2Axis;\n\t        if (transitions && transitions.axisX) {\n\t            xAxis = transitions.axisX;\n\t        } else {\n\t            xAxis  = $$.main.select('.' + CLASS.axisX);\n\t            if (withTransition) { xAxis = xAxis.transition(); }\n\t        }\n\t        if (transitions && transitions.axisY) {\n\t            yAxis = transitions.axisY;\n\t        } else {\n\t            yAxis = $$.main.select('.' + CLASS.axisY);\n\t            if (withTransition) { yAxis = yAxis.transition(); }\n\t        }\n\t        if (transitions && transitions.axisY2) {\n\t            y2Axis = transitions.axisY2;\n\t        } else {\n\t            y2Axis = $$.main.select('.' + CLASS.axisY2);\n\t            if (withTransition) { y2Axis = y2Axis.transition(); }\n\t        }\n\t        (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n\t        xAxis.attr(\"transform\", $$.getTranslate('x'));\n\t        yAxis.attr(\"transform\", $$.getTranslate('y'));\n\t        y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n\t        $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n\t    };\n\t    c3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n\t        var $$ = this;\n\t        $$.transformMain(withTransition, transitions);\n\t        if ($$.config.subchart_show) { $$.transformContext(withTransition, transitions); }\n\t        if ($$.legend) { $$.transformLegend(withTransition); }\n\t    };\n\t\n\t    c3_chart_internal_fn.updateSvgSize = function () {\n\t        var $$ = this,\n\t            brush = $$.svg.select(\".c3-brush .background\");\n\t        $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n\t        $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect')\n\t            .attr('width', $$.width)\n\t            .attr('height', $$.height);\n\t        $$.svg.select('#' + $$.clipIdForXAxis).select('rect')\n\t            .attr('x', $$.getXAxisClipX.bind($$))\n\t            .attr('y', $$.getXAxisClipY.bind($$))\n\t            .attr('width', $$.getXAxisClipWidth.bind($$))\n\t            .attr('height', $$.getXAxisClipHeight.bind($$));\n\t        $$.svg.select('#' + $$.clipIdForYAxis).select('rect')\n\t            .attr('x', $$.getYAxisClipX.bind($$))\n\t            .attr('y', $$.getYAxisClipY.bind($$))\n\t            .attr('width', $$.getYAxisClipWidth.bind($$))\n\t            .attr('height', $$.getYAxisClipHeight.bind($$));\n\t        $$.svg.select('#' + $$.clipIdForSubchart).select('rect')\n\t            .attr('width', $$.width)\n\t            .attr('height', brush.size() ? brush.attr('height') : 0);\n\t        $$.svg.select('.' + CLASS.zoomRect)\n\t            .attr('width', $$.width)\n\t            .attr('height', $$.height);\n\t        // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n\t        $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.updateDimension = function (withoutAxis) {\n\t        var $$ = this;\n\t        if (!withoutAxis) {\n\t            if ($$.config.axis_rotated) {\n\t                $$.axes.x.call($$.xAxis);\n\t                $$.axes.subx.call($$.subXAxis);\n\t            } else {\n\t                $$.axes.y.call($$.yAxis);\n\t                $$.axes.y2.call($$.y2Axis);\n\t            }\n\t        }\n\t        $$.updateSizes();\n\t        $$.updateScales();\n\t        $$.updateSvgSize();\n\t        $$.transformAll(false);\n\t    };\n\t\n\t    c3_chart_internal_fn.observeInserted = function (selection) {\n\t        var $$ = this, observer;\n\t        if (typeof MutationObserver === 'undefined') {\n\t            window.console.error(\"MutationObserver not defined.\");\n\t            return;\n\t        }\n\t        observer= new MutationObserver(function (mutations) {\n\t            mutations.forEach(function (mutation) {\n\t                if (mutation.type === 'childList' && mutation.previousSibling) {\n\t                    observer.disconnect();\n\t                    // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n\t                    $$.intervalForObserveInserted = window.setInterval(function () {\n\t                        // parentNode will NOT be null when completed\n\t                        if (selection.node().parentNode) {\n\t                            window.clearInterval($$.intervalForObserveInserted);\n\t                            $$.updateDimension();\n\t                            if ($$.brush) { $$.brush.update(); }\n\t                            $$.config.oninit.call($$);\n\t                            $$.redraw({\n\t                                withTransform: true,\n\t                                withUpdateXDomain: true,\n\t                                withUpdateOrgXDomain: true,\n\t                                withTransition: false,\n\t                                withTransitionForTransform: false,\n\t                                withLegend: true\n\t                            });\n\t                            selection.transition().style('opacity', 1);\n\t                        }\n\t                    }, 10);\n\t                }\n\t            });\n\t        });\n\t        observer.observe(selection.node(), {attributes: true, childList: true, characterData: true});\n\t    };\n\t\n\t    c3_chart_internal_fn.bindResize = function () {\n\t        var $$ = this, config = $$.config;\n\t\n\t        $$.resizeFunction = $$.generateResize();\n\t\n\t        $$.resizeFunction.add(function () {\n\t            config.onresize.call($$);\n\t        });\n\t        if (config.resize_auto) {\n\t            $$.resizeFunction.add(function () {\n\t                if ($$.resizeTimeout !== undefined) {\n\t                    window.clearTimeout($$.resizeTimeout);\n\t                }\n\t                $$.resizeTimeout = window.setTimeout(function () {\n\t                    delete $$.resizeTimeout;\n\t                    $$.api.flush();\n\t                }, 100);\n\t            });\n\t        }\n\t        $$.resizeFunction.add(function () {\n\t            config.onresized.call($$);\n\t        });\n\t\n\t        if (window.attachEvent) {\n\t            window.attachEvent('onresize', $$.resizeFunction);\n\t        } else if (window.addEventListener) {\n\t            window.addEventListener('resize', $$.resizeFunction, false);\n\t        } else {\n\t            // fallback to this, if this is a very old browser\n\t            var wrapper = window.onresize;\n\t            if (!wrapper) {\n\t                // create a wrapper that will call all charts\n\t                wrapper = $$.generateResize();\n\t            } else if (!wrapper.add || !wrapper.remove) {\n\t                // there is already a handler registered, make sure we call it too\n\t                wrapper = $$.generateResize();\n\t                wrapper.add(window.onresize);\n\t            }\n\t            // add this graph to the wrapper, we will be removed if the user calls destroy\n\t            wrapper.add($$.resizeFunction);\n\t            window.onresize = wrapper;\n\t        }\n\t    };\n\t\n\t    c3_chart_internal_fn.generateResize = function () {\n\t        var resizeFunctions = [];\n\t        function callResizeFunctions() {\n\t            resizeFunctions.forEach(function (f) {\n\t                f();\n\t            });\n\t        }\n\t        callResizeFunctions.add = function (f) {\n\t            resizeFunctions.push(f);\n\t        };\n\t        callResizeFunctions.remove = function (f) {\n\t            for (var i = 0; i < resizeFunctions.length; i++) {\n\t                if (resizeFunctions[i] === f) {\n\t                    resizeFunctions.splice(i, 1);\n\t                    break;\n\t                }\n\t            }\n\t        };\n\t        return callResizeFunctions;\n\t    };\n\t\n\t    c3_chart_internal_fn.endall = function (transition, callback) {\n\t        var n = 0;\n\t        transition\n\t            .each(function () { ++n; })\n\t            .each(\"end\", function () {\n\t                if (!--n) { callback.apply(this, arguments); }\n\t            });\n\t    };\n\t    c3_chart_internal_fn.generateWait = function () {\n\t        var transitionsToWait = [],\n\t            f = function (transition, callback) {\n\t                var timer = setInterval(function () {\n\t                    var done = 0;\n\t                    transitionsToWait.forEach(function (t) {\n\t                        if (t.empty()) {\n\t                            done += 1;\n\t                            return;\n\t                        }\n\t                        try {\n\t                            t.transition();\n\t                        } catch (e) {\n\t                            done += 1;\n\t                        }\n\t                    });\n\t                    if (done === transitionsToWait.length) {\n\t                        clearInterval(timer);\n\t                        if (callback) { callback(); }\n\t                    }\n\t                }, 10);\n\t            };\n\t        f.add = function (transition) {\n\t            transitionsToWait.push(transition);\n\t        };\n\t        return f;\n\t    };\n\t\n\t    c3_chart_internal_fn.parseDate = function (date) {\n\t        var $$ = this, parsedDate;\n\t        if (date instanceof Date) {\n\t            parsedDate = date;\n\t        } else if (typeof date === 'string') {\n\t            parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);\n\t        } else if (typeof date === 'number' && !isNaN(date)) {\n\t            parsedDate = new Date(+date);\n\t        }\n\t        if (!parsedDate || isNaN(+parsedDate)) {\n\t            window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n\t        }\n\t        return parsedDate;\n\t    };\n\t\n\t    c3_chart_internal_fn.isTabVisible = function () {\n\t        var hidden;\n\t        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support\n\t            hidden = \"hidden\";\n\t        } else if (typeof document.mozHidden !== \"undefined\") {\n\t            hidden = \"mozHidden\";\n\t        } else if (typeof document.msHidden !== \"undefined\") {\n\t            hidden = \"msHidden\";\n\t        } else if (typeof document.webkitHidden !== \"undefined\") {\n\t            hidden = \"webkitHidden\";\n\t        }\n\t\n\t        return document[hidden] ? false : true;\n\t    };\n\t\n\t    c3_chart_internal_fn.getDefaultConfig = function () {\n\t        var config = {\n\t            bindto: '#chart',\n\t            svg_classname: undefined,\n\t            size_width: undefined,\n\t            size_height: undefined,\n\t            padding_left: undefined,\n\t            padding_right: undefined,\n\t            padding_top: undefined,\n\t            padding_bottom: undefined,\n\t            resize_auto: true,\n\t            zoom_enabled: false,\n\t            zoom_extent: undefined,\n\t            zoom_privileged: false,\n\t            zoom_rescale: false,\n\t            zoom_onzoom: function () {},\n\t            zoom_onzoomstart: function () {},\n\t            zoom_onzoomend: function () {},\n\t            zoom_x_min: undefined,\n\t            zoom_x_max: undefined,\n\t            interaction_brighten: true,\n\t            interaction_enabled: true,\n\t            onmouseover: function () {},\n\t            onmouseout: function () {},\n\t            onresize: function () {},\n\t            onresized: function () {},\n\t            oninit: function () {},\n\t            onrendered: function () {},\n\t            transition_duration: 350,\n\t            data_x: undefined,\n\t            data_xs: {},\n\t            data_xFormat: '%Y-%m-%d',\n\t            data_xLocaltime: true,\n\t            data_xSort: true,\n\t            data_idConverter: function (id) { return id; },\n\t            data_names: {},\n\t            data_classes: {},\n\t            data_groups: [],\n\t            data_axes: {},\n\t            data_type: undefined,\n\t            data_types: {},\n\t            data_labels: {},\n\t            data_order: 'desc',\n\t            data_regions: {},\n\t            data_color: undefined,\n\t            data_colors: {},\n\t            data_hide: false,\n\t            data_filter: undefined,\n\t            data_selection_enabled: false,\n\t            data_selection_grouped: false,\n\t            data_selection_isselectable: function () { return true; },\n\t            data_selection_multiple: true,\n\t            data_selection_draggable: false,\n\t            data_onclick: function () {},\n\t            data_onmouseover: function () {},\n\t            data_onmouseout: function () {},\n\t            data_onselected: function () {},\n\t            data_onunselected: function () {},\n\t            data_url: undefined,\n\t            data_headers: undefined,\n\t            data_json: undefined,\n\t            data_rows: undefined,\n\t            data_columns: undefined,\n\t            data_mimeType: undefined,\n\t            data_keys: undefined,\n\t            // configuration for no plot-able data supplied.\n\t            data_empty_label_text: \"\",\n\t            // subchart\n\t            subchart_show: false,\n\t            subchart_size_height: 60,\n\t            subchart_axis_x_show: true,\n\t            subchart_onbrush: function () {},\n\t            // color\n\t            color_pattern: [],\n\t            color_threshold: {},\n\t            // legend\n\t            legend_show: true,\n\t            legend_hide: false,\n\t            legend_position: 'bottom',\n\t            legend_inset_anchor: 'top-left',\n\t            legend_inset_x: 10,\n\t            legend_inset_y: 0,\n\t            legend_inset_step: undefined,\n\t            legend_item_onclick: undefined,\n\t            legend_item_onmouseover: undefined,\n\t            legend_item_onmouseout: undefined,\n\t            legend_equally: false,\n\t            legend_padding: 0,\n\t            legend_item_tile_width: 10,\n\t            legend_item_tile_height: 10,\n\t            // axis\n\t            axis_rotated: false,\n\t            axis_x_show: true,\n\t            axis_x_type: 'indexed',\n\t            axis_x_localtime: true,\n\t            axis_x_categories: [],\n\t            axis_x_tick_centered: false,\n\t            axis_x_tick_format: undefined,\n\t            axis_x_tick_culling: {},\n\t            axis_x_tick_culling_max: 10,\n\t            axis_x_tick_count: undefined,\n\t            axis_x_tick_fit: true,\n\t            axis_x_tick_values: null,\n\t            axis_x_tick_rotate: 0,\n\t            axis_x_tick_outer: true,\n\t            axis_x_tick_multiline: true,\n\t            axis_x_tick_width: null,\n\t            axis_x_max: undefined,\n\t            axis_x_min: undefined,\n\t            axis_x_padding: {},\n\t            axis_x_height: undefined,\n\t            axis_x_extent: undefined,\n\t            axis_x_label: {},\n\t            axis_y_show: true,\n\t            axis_y_type: undefined,\n\t            axis_y_max: undefined,\n\t            axis_y_min: undefined,\n\t            axis_y_inverted: false,\n\t            axis_y_center: undefined,\n\t            axis_y_inner: undefined,\n\t            axis_y_label: {},\n\t            axis_y_tick_format: undefined,\n\t            axis_y_tick_outer: true,\n\t            axis_y_tick_values: null,        \n\t            axis_y_tick_rotate: 0,\n\t            axis_y_tick_count: undefined,\n\t            axis_y_tick_time_value: undefined,\n\t            axis_y_tick_time_interval: undefined,\n\t            axis_y_padding: {},\n\t            axis_y_default: undefined,\n\t            axis_y2_show: false,\n\t            axis_y2_max: undefined,\n\t            axis_y2_min: undefined,\n\t            axis_y2_inverted: false,\n\t            axis_y2_center: undefined,\n\t            axis_y2_inner: undefined,\n\t            axis_y2_label: {},\n\t            axis_y2_tick_format: undefined,\n\t            axis_y2_tick_outer: true,\n\t            axis_y2_tick_values: null,\n\t            axis_y2_tick_count: undefined,\n\t            axis_y2_padding: {},\n\t            axis_y2_default: undefined,\n\t            // grid\n\t            grid_x_show: false,\n\t            grid_x_type: 'tick',\n\t            grid_x_lines: [],\n\t            grid_y_show: false,\n\t            // not used\n\t            // grid_y_type: 'tick',\n\t            grid_y_lines: [],\n\t            grid_y_ticks: 10,\n\t            grid_focus_show: true,\n\t            grid_lines_front: true,\n\t            // point - point of each data\n\t            point_show: true,\n\t            point_r: 2.5,\n\t            point_sensitivity: 10,\n\t            point_focus_expand_enabled: true,\n\t            point_focus_expand_r: undefined,\n\t            point_select_r: undefined,\n\t            // line\n\t            line_connectNull: false,\n\t            line_step_type: 'step',\n\t            // bar\n\t            bar_width: undefined,\n\t            bar_width_ratio: 0.6,\n\t            bar_width_max: undefined,\n\t            bar_zerobased: true,\n\t            // area\n\t            area_zerobased: true,\n\t            area_above: false,\n\t            // pie\n\t            pie_label_show: true,\n\t            pie_label_format: undefined,\n\t            pie_label_threshold: 0.05,\n\t            pie_label_ratio: undefined,\n\t            pie_expand: {},\n\t            pie_expand_duration: 50,\n\t            // gauge\n\t            gauge_fullCircle: false,\n\t            gauge_label_show: true,\n\t            gauge_label_format: undefined,\n\t            gauge_min: 0,\n\t            gauge_max: 100,\n\t            gauge_startingAngle: -1 * Math.PI/2,\n\t            gauge_units: undefined,\n\t            gauge_width: undefined,\n\t            gauge_expand: {},\n\t            gauge_expand_duration: 50,\n\t            // donut\n\t            donut_label_show: true,\n\t            donut_label_format: undefined,\n\t            donut_label_threshold: 0.05,\n\t            donut_label_ratio: undefined,\n\t            donut_width: undefined,\n\t            donut_title: \"\",\n\t            donut_expand: {},\n\t            donut_expand_duration: 50,\n\t            // spline\n\t            spline_interpolation_type: 'cardinal',\n\t            // region - region to change style\n\t            regions: [],\n\t            // tooltip - show when mouseover on each data\n\t            tooltip_show: true,\n\t            tooltip_grouped: true,\n\t            tooltip_format_title: undefined,\n\t            tooltip_format_name: undefined,\n\t            tooltip_format_value: undefined,\n\t            tooltip_position: undefined,\n\t            tooltip_contents: function (d, defaultTitleFormat, defaultValueFormat, color) {\n\t                return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n\t            },\n\t            tooltip_init_show: false,\n\t            tooltip_init_x: 0,\n\t            tooltip_init_position: {top: '0px', left: '50px'},\n\t            tooltip_onshow: function () {},\n\t            tooltip_onhide: function () {},\n\t            // title\n\t            title_text: undefined,\n\t            title_padding: {\n\t                top: 0,\n\t                right: 0,\n\t                bottom: 0,\n\t                left: 0\n\t            },\n\t            title_position: 'top-center',\n\t        };\n\t\n\t        Object.keys(this.additionalConfig).forEach(function (key) {\n\t            config[key] = this.additionalConfig[key];\n\t        }, this);\n\t\n\t        return config;\n\t    };\n\t    c3_chart_internal_fn.additionalConfig = {};\n\t\n\t    c3_chart_internal_fn.loadConfig = function (config) {\n\t        var this_config = this.config, target, keys, read;\n\t        function find() {\n\t            var key = keys.shift();\n\t    //        console.log(\"key =>\", key, \", target =>\", target);\n\t            if (key && target && typeof target === 'object' && key in target) {\n\t                target = target[key];\n\t                return find();\n\t            }\n\t            else if (!key) {\n\t                return target;\n\t            }\n\t            else {\n\t                return undefined;\n\t            }\n\t        }\n\t        Object.keys(this_config).forEach(function (key) {\n\t            target = config;\n\t            keys = key.split('_');\n\t            read = find();\n\t    //        console.log(\"CONFIG : \", key, read);\n\t            if (isDefined(read)) {\n\t                this_config[key] = read;\n\t            }\n\t        });\n\t    };\n\t\n\t    c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n\t        return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);\n\t    };\n\t    c3_chart_internal_fn.getX = function (min, max, domain, offset) {\n\t        var $$ = this,\n\t            scale = $$.getScale(min, max, $$.isTimeSeries()),\n\t            _scale = domain ? scale.domain(domain) : scale, key;\n\t        // Define customized scale if categorized axis\n\t        if ($$.isCategorized()) {\n\t            offset = offset || function () { return 0; };\n\t            scale = function (d, raw) {\n\t                var v = _scale(d) + offset(d);\n\t                return raw ? v : Math.ceil(v);\n\t            };\n\t        } else {\n\t            scale = function (d, raw) {\n\t                var v = _scale(d);\n\t                return raw ? v : Math.ceil(v);\n\t            };\n\t        }\n\t        // define functions\n\t        for (key in _scale) {\n\t            scale[key] = _scale[key];\n\t        }\n\t        scale.orgDomain = function () {\n\t            return _scale.domain();\n\t        };\n\t        // define custom domain() for categorized axis\n\t        if ($$.isCategorized()) {\n\t            scale.domain = function (domain) {\n\t                if (!arguments.length) {\n\t                    domain = this.orgDomain();\n\t                    return [domain[0], domain[1] + 1];\n\t                }\n\t                _scale.domain(domain);\n\t                return scale;\n\t            };\n\t        }\n\t        return scale;\n\t    };\n\t    c3_chart_internal_fn.getY = function (min, max, domain) {\n\t        var scale = this.getScale(min, max, this.isTimeSeriesY());\n\t        if (domain) { scale.domain(domain); }\n\t        return scale;\n\t    };\n\t    c3_chart_internal_fn.getYScale = function (id) {\n\t        return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n\t    };\n\t    c3_chart_internal_fn.getSubYScale = function (id) {\n\t        return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n\t    };\n\t    c3_chart_internal_fn.updateScales = function () {\n\t        var $$ = this, config = $$.config,\n\t            forInit = !$$.x;\n\t        // update edges\n\t        $$.xMin = config.axis_rotated ? 1 : 0;\n\t        $$.xMax = config.axis_rotated ? $$.height : $$.width;\n\t        $$.yMin = config.axis_rotated ? 0 : $$.height;\n\t        $$.yMax = config.axis_rotated ? $$.width : 1;\n\t        $$.subXMin = $$.xMin;\n\t        $$.subXMax = $$.xMax;\n\t        $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n\t        $$.subYMax = config.axis_rotated ? $$.width2 : 1;\n\t        // update scales\n\t        $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () { return $$.xAxis.tickOffset(); });\n\t        $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n\t        $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n\t        $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) { return d % 1 ? 0 : $$.subXAxis.tickOffset(); });\n\t        $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n\t        $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\n\t        // update axes\n\t        $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n\t        $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n\t        $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n\t        $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n\t\n\t        $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n\t        $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n\t        $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n\t        $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\n\t\n\t        // Set initialized scales to brush and zoom\n\t        if (!forInit) {\n\t            if ($$.brush) { $$.brush.scale($$.subX); }\n\t            if (config.zoom_enabled) { $$.zoom.scale($$.x); }\n\t        }\n\t        // update for arc\n\t        if ($$.updateArc) { $$.updateArc(); }\n\t    };\n\t\n\t    c3_chart_internal_fn.getYDomainMin = function (targets) {\n\t        var $$ = this, config = $$.config,\n\t            ids = $$.mapToIds(targets), ys = $$.getValuesAsIdKeyed(targets),\n\t            j, k, baseId, idsInGroup, id, hasNegativeValue;\n\t        if (config.data_groups.length > 0) {\n\t            hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n\t            for (j = 0; j < config.data_groups.length; j++) {\n\t                // Determine baseId\n\t                idsInGroup = config.data_groups[j].filter(function (id) { return ids.indexOf(id) >= 0; });\n\t                if (idsInGroup.length === 0) { continue; }\n\t                baseId = idsInGroup[0];\n\t                // Consider negative values\n\t                if (hasNegativeValue && ys[baseId]) {\n\t                    ys[baseId].forEach(function (v, i) {\n\t                        ys[baseId][i] = v < 0 ? v : 0;\n\t                    });\n\t                }\n\t                // Compute min\n\t                for (k = 1; k < idsInGroup.length; k++) {\n\t                    id = idsInGroup[k];\n\t                    if (! ys[id]) { continue; }\n\t                    ys[id].forEach(function (v, i) {\n\t                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n\t                            ys[baseId][i] += +v;\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t        }\n\t        return $$.d3.min(Object.keys(ys).map(function (key) { return $$.d3.min(ys[key]); }));\n\t    };\n\t    c3_chart_internal_fn.getYDomainMax = function (targets) {\n\t        var $$ = this, config = $$.config,\n\t            ids = $$.mapToIds(targets), ys = $$.getValuesAsIdKeyed(targets),\n\t            j, k, baseId, idsInGroup, id, hasPositiveValue;\n\t        if (config.data_groups.length > 0) {\n\t            hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\t            for (j = 0; j < config.data_groups.length; j++) {\n\t                // Determine baseId\n\t                idsInGroup = config.data_groups[j].filter(function (id) { return ids.indexOf(id) >= 0; });\n\t                if (idsInGroup.length === 0) { continue; }\n\t                baseId = idsInGroup[0];\n\t                // Consider positive values\n\t                if (hasPositiveValue && ys[baseId]) {\n\t                    ys[baseId].forEach(function (v, i) {\n\t                        ys[baseId][i] = v > 0 ? v : 0;\n\t                    });\n\t                }\n\t                // Compute max\n\t                for (k = 1; k < idsInGroup.length; k++) {\n\t                    id = idsInGroup[k];\n\t                    if (! ys[id]) { continue; }\n\t                    ys[id].forEach(function (v, i) {\n\t                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n\t                            ys[baseId][i] += +v;\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t        }\n\t        return $$.d3.max(Object.keys(ys).map(function (key) { return $$.d3.max(ys[key]); }));\n\t    };\n\t    c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n\t        var $$ = this, config = $$.config,\n\t            targetsByAxisId = targets.filter(function (t) { return $$.axis.getId(t.id) === axisId; }),\n\t            yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n\t            yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n\t            yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n\t            yDomainMin = $$.getYDomainMin(yTargets),\n\t            yDomainMax = $$.getYDomainMax(yTargets),\n\t            domain, domainLength, padding, padding_top, padding_bottom,\n\t            center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n\t            yDomainAbs, lengths, diff, ratio, isAllPositive, isAllNegative,\n\t            isZeroBased = ($$.hasType('bar', yTargets) && config.bar_zerobased) || ($$.hasType('area', yTargets) && config.area_zerobased),\n\t            isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n\t            showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n\t            showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\n\t\n\t        // MEMO: avoid inverting domain unexpectedly\n\t        yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? (yDomainMin < yMax ? yDomainMin : yMax - 10) : yDomainMin;\n\t        yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? (yMin < yDomainMax ? yDomainMax : yMin + 10) : yDomainMax;\n\t\n\t        if (yTargets.length === 0) { // use current domain if target of axisId is none\n\t            return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n\t        }\n\t        if (isNaN(yDomainMin)) { // set minimum to zero when not number\n\t            yDomainMin = 0;\n\t        }\n\t        if (isNaN(yDomainMax)) { // set maximum to have same value as yDomainMin\n\t            yDomainMax = yDomainMin;\n\t        }\n\t        if (yDomainMin === yDomainMax) {\n\t            yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n\t        }\n\t        isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n\t        isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\n\t\n\t        // Cancel zerobased if axis_*_min / axis_*_max specified\n\t        if ((isValue(yMin) && isAllPositive) || (isValue(yMax) && isAllNegative)) {\n\t            isZeroBased = false;\n\t        }\n\t\n\t        // Bar/Area chart should be 0-based if all positive|negative\n\t        if (isZeroBased) {\n\t            if (isAllPositive) { yDomainMin = 0; }\n\t            if (isAllNegative) { yDomainMax = 0; }\n\t        }\n\t\n\t        domainLength = Math.abs(yDomainMax - yDomainMin);\n\t        padding = padding_top = padding_bottom = domainLength * 0.1;\n\t\n\t        if (typeof center !== 'undefined') {\n\t            yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n\t            yDomainMax = center + yDomainAbs;\n\t            yDomainMin = center - yDomainAbs;\n\t        }\n\t        // add padding for data label\n\t        if (showHorizontalDataLabel) {\n\t            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n\t            diff = diffDomain($$.y.range());\n\t            ratio = [lengths[0] / diff, lengths[1] / diff];\n\t            padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n\t            padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n\t        } else if (showVerticalDataLabel) {\n\t            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n\t            padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n\t            padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n\t        }\n\t        if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n\t            padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n\t            padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n\t        }\n\t        if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n\t            padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n\t            padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n\t        }\n\t        // Bar/Area chart should be 0-based if all positive|negative\n\t        if (isZeroBased) {\n\t            if (isAllPositive) { padding_bottom = yDomainMin; }\n\t            if (isAllNegative) { padding_top = -yDomainMax; }\n\t        }\n\t        domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n\t        return isInverted ? domain.reverse() : domain;\n\t    };\n\t    c3_chart_internal_fn.getXDomainMin = function (targets) {\n\t        var $$ = this, config = $$.config;\n\t        return isDefined(config.axis_x_min) ?\n\t            ($$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min) :\n\t        $$.d3.min(targets, function (t) { return $$.d3.min(t.values, function (v) { return v.x; }); });\n\t    };\n\t    c3_chart_internal_fn.getXDomainMax = function (targets) {\n\t        var $$ = this, config = $$.config;\n\t        return isDefined(config.axis_x_max) ?\n\t            ($$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max) :\n\t        $$.d3.max(targets, function (t) { return $$.d3.max(t.values, function (v) { return v.x; }); });\n\t    };\n\t    c3_chart_internal_fn.getXDomainPadding = function (domain) {\n\t        var $$ = this, config = $$.config,\n\t            diff = domain[1] - domain[0],\n\t            maxDataCount, padding, paddingLeft, paddingRight;\n\t        if ($$.isCategorized()) {\n\t            padding = 0;\n\t        } else if ($$.hasType('bar')) {\n\t            maxDataCount = $$.getMaxDataCount();\n\t            padding = maxDataCount > 1 ? (diff / (maxDataCount - 1)) / 2 : 0.5;\n\t        } else {\n\t            padding = diff * 0.01;\n\t        }\n\t        if (typeof config.axis_x_padding === 'object' && notEmpty(config.axis_x_padding)) {\n\t            paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n\t            paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n\t        } else if (typeof config.axis_x_padding === 'number') {\n\t            paddingLeft = paddingRight = config.axis_x_padding;\n\t        } else {\n\t            paddingLeft = paddingRight = padding;\n\t        }\n\t        return {left: paddingLeft, right: paddingRight};\n\t    };\n\t    c3_chart_internal_fn.getXDomain = function (targets) {\n\t        var $$ = this,\n\t            xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n\t            firstX = xDomain[0], lastX = xDomain[1],\n\t            padding = $$.getXDomainPadding(xDomain),\n\t            min = 0, max = 0;\n\t        // show center of x domain if min and max are the same\n\t        if ((firstX - lastX) === 0 && !$$.isCategorized()) {\n\t            if ($$.isTimeSeries()) {\n\t                firstX = new Date(firstX.getTime() * 0.5);\n\t                lastX = new Date(lastX.getTime() * 1.5);\n\t            } else {\n\t                firstX = firstX === 0 ? 1 : (firstX * 0.5);\n\t                lastX = lastX === 0 ? -1 : (lastX * 1.5);\n\t            }\n\t        }\n\t        if (firstX || firstX === 0) {\n\t            min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n\t        }\n\t        if (lastX || lastX === 0) {\n\t            max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n\t        }\n\t        return [min, max];\n\t    };\n\t    c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n\t        var $$ = this, config = $$.config;\n\t\n\t        if (withUpdateOrgXDomain) {\n\t            $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n\t            $$.orgXDomain = $$.x.domain();\n\t            if (config.zoom_enabled) { $$.zoom.scale($$.x).updateScaleExtent(); }\n\t            $$.subX.domain($$.x.domain());\n\t            if ($$.brush) { $$.brush.scale($$.subX); }\n\t        }\n\t        if (withUpdateXDomain) {\n\t            $$.x.domain(domain ? domain : (!$$.brush || $$.brush.empty()) ? $$.orgXDomain : $$.brush.extent());\n\t            if (config.zoom_enabled) { $$.zoom.scale($$.x).updateScaleExtent(); }\n\t        }\n\t\n\t        // Trim domain when too big by zoom mousemove event\n\t        if (withTrim) { $$.x.domain($$.trimXDomain($$.x.orgDomain())); }\n\t\n\t        return $$.x.domain();\n\t    };\n\t    c3_chart_internal_fn.trimXDomain = function (domain) {\n\t        var zoomDomain = this.getZoomDomain(),\n\t            min = zoomDomain[0], max = zoomDomain[1];\n\t        if (domain[0] <= min) {\n\t            domain[1] = +domain[1] + (min - domain[0]);\n\t            domain[0] = min;\n\t        }\n\t        if (max <= domain[1]) {\n\t            domain[0] = +domain[0] - (domain[1] - max);\n\t            domain[1] = max;\n\t        }\n\t        return domain;\n\t    };\n\t\n\t    c3_chart_internal_fn.isX = function (key) {\n\t        var $$ = this, config = $$.config;\n\t        return (config.data_x && key === config.data_x) || (notEmpty(config.data_xs) && hasValue(config.data_xs, key));\n\t    };\n\t    c3_chart_internal_fn.isNotX = function (key) {\n\t        return !this.isX(key);\n\t    };\n\t    c3_chart_internal_fn.getXKey = function (id) {\n\t        var $$ = this, config = $$.config;\n\t        return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n\t    };\n\t    c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n\t        var $$ = this,\n\t            xValues, ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n\t        ids.forEach(function (id) {\n\t            if ($$.getXKey(id) === key) {\n\t                xValues = $$.data.xs[id];\n\t            }\n\t        });\n\t        return xValues;\n\t    };\n\t    c3_chart_internal_fn.getIndexByX = function (x) {\n\t        var $$ = this,\n\t            data = $$.filterByX($$.data.targets, x);\n\t        return data.length ? data[0].index : null;\n\t    };\n\t    c3_chart_internal_fn.getXValue = function (id, i) {\n\t        var $$ = this;\n\t        return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n\t    };\n\t    c3_chart_internal_fn.getOtherTargetXs = function () {\n\t        var $$ = this,\n\t            idsForX = Object.keys($$.data.xs);\n\t        return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n\t    };\n\t    c3_chart_internal_fn.getOtherTargetX = function (index) {\n\t        var xs = this.getOtherTargetXs();\n\t        return xs && index < xs.length ? xs[index] : null;\n\t    };\n\t    c3_chart_internal_fn.addXs = function (xs) {\n\t        var $$ = this;\n\t        Object.keys(xs).forEach(function (id) {\n\t            $$.config.data_xs[id] = xs[id];\n\t        });\n\t    };\n\t    c3_chart_internal_fn.hasMultipleX = function (xs) {\n\t        return this.d3.set(Object.keys(xs).map(function (id) { return xs[id]; })).size() > 1;\n\t    };\n\t    c3_chart_internal_fn.isMultipleX = function () {\n\t        return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');\n\t    };\n\t    c3_chart_internal_fn.addName = function (data) {\n\t        var $$ = this, name;\n\t        if (data) {\n\t            name = $$.config.data_names[data.id];\n\t            data.name = name !== undefined ? name : data.id;\n\t        }\n\t        return data;\n\t    };\n\t    c3_chart_internal_fn.getValueOnIndex = function (values, index) {\n\t        var valueOnIndex = values.filter(function (v) { return v.index === index; });\n\t        return valueOnIndex.length ? valueOnIndex[0] : null;\n\t    };\n\t    c3_chart_internal_fn.updateTargetX = function (targets, x) {\n\t        var $$ = this;\n\t        targets.forEach(function (t) {\n\t            t.values.forEach(function (v, i) {\n\t                v.x = $$.generateTargetX(x[i], t.id, i);\n\t            });\n\t            $$.data.xs[t.id] = x;\n\t        });\n\t    };\n\t    c3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n\t        var $$ = this;\n\t        targets.forEach(function (t) {\n\t            if (xs[t.id]) {\n\t                $$.updateTargetX([t], xs[t.id]);\n\t            }\n\t        });\n\t    };\n\t    c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n\t        var $$ = this, x;\n\t        if ($$.isTimeSeries()) {\n\t            x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n\t        }\n\t        else if ($$.isCustomX() && !$$.isCategorized()) {\n\t            x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n\t        }\n\t        else {\n\t            x = index;\n\t        }\n\t        return x;\n\t    };\n\t    c3_chart_internal_fn.cloneTarget = function (target) {\n\t        return {\n\t            id : target.id,\n\t            id_org : target.id_org,\n\t            values : target.values.map(function (d) {\n\t                return {x: d.x, value: d.value, id: d.id};\n\t            })\n\t        };\n\t    };\n\t    c3_chart_internal_fn.updateXs = function () {\n\t        var $$ = this;\n\t        if ($$.data.targets.length) {\n\t            $$.xs = [];\n\t            $$.data.targets[0].values.forEach(function (v) {\n\t                $$.xs[v.index] = v.x;\n\t            });\n\t        }\n\t    };\n\t    c3_chart_internal_fn.getPrevX = function (i) {\n\t        var x = this.xs[i - 1];\n\t        return typeof x !== 'undefined' ? x : null;\n\t    };\n\t    c3_chart_internal_fn.getNextX = function (i) {\n\t        var x = this.xs[i + 1];\n\t        return typeof x !== 'undefined' ? x : null;\n\t    };\n\t    c3_chart_internal_fn.getMaxDataCount = function () {\n\t        var $$ = this;\n\t        return $$.d3.max($$.data.targets, function (t) { return t.values.length; });\n\t    };\n\t    c3_chart_internal_fn.getMaxDataCountTarget = function (targets) {\n\t        var length = targets.length, max = 0, maxTarget;\n\t        if (length > 1) {\n\t            targets.forEach(function (t) {\n\t                if (t.values.length > max) {\n\t                    maxTarget = t;\n\t                    max = t.values.length;\n\t                }\n\t            });\n\t        } else {\n\t            maxTarget = length ? targets[0] : null;\n\t        }\n\t        return maxTarget;\n\t    };\n\t    c3_chart_internal_fn.getEdgeX = function (targets) {\n\t        var $$ = this;\n\t        return !targets.length ? [0, 0] : [\n\t            $$.d3.min(targets, function (t) { return t.values[0].x; }),\n\t            $$.d3.max(targets, function (t) { return t.values[t.values.length - 1].x; })\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.mapToIds = function (targets) {\n\t        return targets.map(function (d) { return d.id; });\n\t    };\n\t    c3_chart_internal_fn.mapToTargetIds = function (ids) {\n\t        var $$ = this;\n\t        return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n\t    };\n\t    c3_chart_internal_fn.hasTarget = function (targets, id) {\n\t        var ids = this.mapToIds(targets), i;\n\t        for (i = 0; i < ids.length; i++) {\n\t            if (ids[i] === id) {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t    c3_chart_internal_fn.isTargetToShow = function (targetId) {\n\t        return this.hiddenTargetIds.indexOf(targetId) < 0;\n\t    };\n\t    c3_chart_internal_fn.isLegendToShow = function (targetId) {\n\t        return this.hiddenLegendIds.indexOf(targetId) < 0;\n\t    };\n\t    c3_chart_internal_fn.filterTargetsToShow = function (targets) {\n\t        var $$ = this;\n\t        return targets.filter(function (t) { return $$.isTargetToShow(t.id); });\n\t    };\n\t    c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n\t        var $$ = this;\n\t        var xs = $$.d3.set($$.d3.merge(targets.map(function (t) { return t.values.map(function (v) { return +v.x; }); }))).values();\n\t        xs = $$.isTimeSeries() ? xs.map(function (x) { return new Date(+x); }) : xs.map(function (x) { return +x; });\n\t        return xs.sort(function (a, b) { return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN; });\n\t    };\n\t    c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n\t        this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds);\n\t    };\n\t    c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n\t        this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) { return targetIds.indexOf(id) < 0; });\n\t    };\n\t    c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n\t        this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds);\n\t    };\n\t    c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n\t        this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) { return targetIds.indexOf(id) < 0; });\n\t    };\n\t    c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n\t        var ys = {};\n\t        targets.forEach(function (t) {\n\t            ys[t.id] = [];\n\t            t.values.forEach(function (v) {\n\t                ys[t.id].push(v.value);\n\t            });\n\t        });\n\t        return ys;\n\t    };\n\t    c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n\t        var ids = Object.keys(targets), i, j, values;\n\t        for (i = 0; i < ids.length; i++) {\n\t            values = targets[ids[i]].values;\n\t            for (j = 0; j < values.length; j++) {\n\t                if (checker(values[j].value)) {\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t    c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n\t        return this.checkValueInTargets(targets, function (v) { return v < 0; });\n\t    };\n\t    c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n\t        return this.checkValueInTargets(targets, function (v) { return v > 0; });\n\t    };\n\t    c3_chart_internal_fn.isOrderDesc = function () {\n\t        var config = this.config;\n\t        return typeof(config.data_order) === 'string' && config.data_order.toLowerCase() === 'desc';\n\t    };\n\t    c3_chart_internal_fn.isOrderAsc = function () {\n\t        var config = this.config;\n\t        return typeof(config.data_order) === 'string' && config.data_order.toLowerCase() === 'asc';\n\t    };\n\t    c3_chart_internal_fn.orderTargets = function (targets) {\n\t        var $$ = this, config = $$.config, orderAsc = $$.isOrderAsc(), orderDesc = $$.isOrderDesc();\n\t        if (orderAsc || orderDesc) {\n\t            targets.sort(function (t1, t2) {\n\t                var reducer = function (p, c) { return p + Math.abs(c.value); };\n\t                var t1Sum = t1.values.reduce(reducer, 0),\n\t                    t2Sum = t2.values.reduce(reducer, 0);\n\t                return orderAsc ? t2Sum - t1Sum : t1Sum - t2Sum;\n\t            });\n\t        } else if (isFunction(config.data_order)) {\n\t            targets.sort(config.data_order);\n\t        } // TODO: accept name array for order\n\t        return targets;\n\t    };\n\t    c3_chart_internal_fn.filterByX = function (targets, x) {\n\t        return this.d3.merge(targets.map(function (t) { return t.values; })).filter(function (v) { return v.x - x === 0; });\n\t    };\n\t    c3_chart_internal_fn.filterRemoveNull = function (data) {\n\t        return data.filter(function (d) { return isValue(d.value); });\n\t    };\n\t    c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n\t        return targets.map(function (t) {\n\t            return {\n\t                id: t.id,\n\t                id_org: t.id_org,\n\t                values: t.values.filter(function (v) {\n\t                    return xDomain[0] <= v.x && v.x <= xDomain[1];\n\t                })\n\t            };\n\t        });\n\t    };\n\t    c3_chart_internal_fn.hasDataLabel = function () {\n\t        var config = this.config;\n\t        if (typeof config.data_labels === 'boolean' && config.data_labels) {\n\t            return true;\n\t        } else if (typeof config.data_labels === 'object' && notEmpty(config.data_labels)) {\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n\t        var $$ = this,\n\t            lengths = [0, 0], paddingCoef = 1.3;\n\t        $$.selectChart.select('svg').selectAll('.dummy')\n\t            .data([min, max])\n\t            .enter().append('text')\n\t            .text(function (d) { return $$.dataLabelFormat(d.id)(d); })\n\t            .each(function (d, i) {\n\t                lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n\t            })\n\t            .remove();\n\t        return lengths;\n\t    };\n\t    c3_chart_internal_fn.isNoneArc = function (d) {\n\t        return this.hasTarget(this.data.targets, d.id);\n\t    },\n\t    c3_chart_internal_fn.isArc = function (d) {\n\t        return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n\t    };\n\t    c3_chart_internal_fn.findSameXOfValues = function (values, index) {\n\t        var i, targetX = values[index].x, sames = [];\n\t        for (i = index - 1; i >= 0; i--) {\n\t            if (targetX !== values[i].x) { break; }\n\t            sames.push(values[i]);\n\t        }\n\t        for (i = index; i < values.length; i++) {\n\t            if (targetX !== values[i].x) { break; }\n\t            sames.push(values[i]);\n\t        }\n\t        return sames;\n\t    };\n\t\n\t    c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n\t        var $$ = this, candidates;\n\t\n\t        // map to array of closest points of each target\n\t        candidates = targets.map(function (target) {\n\t            return $$.findClosest(target.values, pos);\n\t        });\n\t\n\t        // decide closest point and return\n\t        return $$.findClosest(candidates, pos);\n\t    };\n\t    c3_chart_internal_fn.findClosest = function (values, pos) {\n\t        var $$ = this, minDist = $$.config.point_sensitivity, closest;\n\t\n\t        // find mouseovering bar\n\t        values.filter(function (v) { return v && $$.isBarType(v.id); }).forEach(function (v) {\n\t            var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n\t            if (!closest && $$.isWithinBar(shape)) {\n\t                closest = v;\n\t            }\n\t        });\n\t\n\t        // find closest point from non-bar\n\t        values.filter(function (v) { return v && !$$.isBarType(v.id); }).forEach(function (v) {\n\t            var d = $$.dist(v, pos);\n\t            if (d < minDist) {\n\t                minDist = d;\n\t                closest = v;\n\t            }\n\t        });\n\t\n\t        return closest;\n\t    };\n\t    c3_chart_internal_fn.dist = function (data, pos) {\n\t        var $$ = this, config = $$.config,\n\t            xIndex = config.axis_rotated ? 1 : 0,\n\t            yIndex = config.axis_rotated ? 0 : 1,\n\t            y = $$.circleY(data, data.index),\n\t            x = $$.x(data.x);\n\t        return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n\t    };\n\t    c3_chart_internal_fn.convertValuesToStep = function (values) {\n\t        var converted = [].concat(values), i;\n\t\n\t        if (!this.isCategorized()) {\n\t            return values;\n\t        }\n\t\n\t        for (i = values.length + 1; 0 < i; i--) {\n\t            converted[i] = converted[i - 1];\n\t        }\n\t\n\t        converted[0] = {\n\t            x: converted[0].x - 1,\n\t            value: converted[0].value,\n\t            id: converted[0].id\n\t        };\n\t        converted[values.length + 1] = {\n\t            x: converted[values.length].x + 1,\n\t            value: converted[values.length].value,\n\t            id: converted[values.length].id\n\t        };\n\t\n\t        return converted;\n\t    };\n\t    c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n\t        var $$ = this, config = $$.config, current = config['data_' + name];\n\t        if (typeof attrs === 'undefined') { return current; }\n\t        Object.keys(attrs).forEach(function (id) {\n\t            current[id] = attrs[id];\n\t        });\n\t        $$.redraw({withLegend: true});\n\t        return current;\n\t    };\n\t\n\t    c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n\t        var $$ = this, type = mimeType ? mimeType : 'csv';\n\t        var req = $$.d3.xhr(url);\n\t        if (headers) {\n\t            Object.keys(headers).forEach(function (header) {\n\t                req.header(header, headers[header]);\n\t            });\n\t        }\n\t        req.get(function (error, data) {\n\t            var d;\n\t            if (!data) {\n\t                throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');\n\t            }\n\t            if (type === 'json') {\n\t                d = $$.convertJsonToData(JSON.parse(data.response), keys);\n\t            } else if (type === 'tsv') {\n\t                d = $$.convertTsvToData(data.response);\n\t            } else {\n\t                d = $$.convertCsvToData(data.response);\n\t            }\n\t            done.call($$, d);\n\t        });\n\t    };\n\t    c3_chart_internal_fn.convertXsvToData = function (xsv, parser) {\n\t        var rows = parser.parseRows(xsv), d;\n\t        if (rows.length === 1) {\n\t            d = [{}];\n\t            rows[0].forEach(function (id) {\n\t                d[0][id] = null;\n\t            });\n\t        } else {\n\t            d = parser.parse(xsv);\n\t        }\n\t        return d;\n\t    };\n\t    c3_chart_internal_fn.convertCsvToData = function (csv) {\n\t        return this.convertXsvToData(csv, this.d3.csv);\n\t    };\n\t    c3_chart_internal_fn.convertTsvToData = function (tsv) {\n\t        return this.convertXsvToData(tsv, this.d3.tsv);\n\t    };\n\t    c3_chart_internal_fn.convertJsonToData = function (json, keys) {\n\t        var $$ = this,\n\t            new_rows = [], targetKeys, data;\n\t        if (keys) { // when keys specified, json would be an array that includes objects\n\t            if (keys.x) {\n\t                targetKeys = keys.value.concat(keys.x);\n\t                $$.config.data_x = keys.x;\n\t            } else {\n\t                targetKeys = keys.value;\n\t            }\n\t            new_rows.push(targetKeys);\n\t            json.forEach(function (o) {\n\t                var new_row = [];\n\t                targetKeys.forEach(function (key) {\n\t                    // convert undefined to null because undefined data will be removed in convertDataToTargets()\n\t                    var v = $$.findValueInJson(o, key);\n\t                    if (isUndefined(v)) {\n\t                        v = null;\n\t                    }\n\t                    new_row.push(v);\n\t                });\n\t                new_rows.push(new_row);\n\t            });\n\t            data = $$.convertRowsToData(new_rows);\n\t        } else {\n\t            Object.keys(json).forEach(function (key) {\n\t                new_rows.push([key].concat(json[key]));\n\t            });\n\t            data = $$.convertColumnsToData(new_rows);\n\t        }\n\t        return data;\n\t    };\n\t    c3_chart_internal_fn.findValueInJson = function (object, path) {\n\t        path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n\t        path = path.replace(/^\\./, '');           // strip a leading dot\n\t        var pathArray = path.split('.');\n\t        for (var i = 0; i < pathArray.length; ++i) {\n\t            var k = pathArray[i];\n\t            if (k in object) {\n\t                object = object[k];\n\t            } else {\n\t                return;\n\t            }\n\t        }\n\t        return object;\n\t    };\n\t    c3_chart_internal_fn.convertRowsToData = function (rows) {\n\t        var keys = rows[0], new_row = {}, new_rows = [], i, j;\n\t        for (i = 1; i < rows.length; i++) {\n\t            new_row = {};\n\t            for (j = 0; j < rows[i].length; j++) {\n\t                if (isUndefined(rows[i][j])) {\n\t                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n\t                }\n\t                new_row[keys[j]] = rows[i][j];\n\t            }\n\t            new_rows.push(new_row);\n\t        }\n\t        return new_rows;\n\t    };\n\t    c3_chart_internal_fn.convertColumnsToData = function (columns) {\n\t        var new_rows = [], i, j, key;\n\t        for (i = 0; i < columns.length; i++) {\n\t            key = columns[i][0];\n\t            for (j = 1; j < columns[i].length; j++) {\n\t                if (isUndefined(new_rows[j - 1])) {\n\t                    new_rows[j - 1] = {};\n\t                }\n\t                if (isUndefined(columns[i][j])) {\n\t                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n\t                }\n\t                new_rows[j - 1][key] = columns[i][j];\n\t            }\n\t        }\n\t        return new_rows;\n\t    };\n\t    c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n\t        var $$ = this, config = $$.config,\n\t            ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),\n\t            xs = $$.d3.keys(data[0]).filter($$.isX, $$),\n\t            targets;\n\t\n\t        // save x for update data by load when custom x and c3.x API\n\t        ids.forEach(function (id) {\n\t            var xKey = $$.getXKey(id);\n\t\n\t            if ($$.isCustomX() || $$.isTimeSeries()) {\n\t                // if included in input data\n\t                if (xs.indexOf(xKey) >= 0) {\n\t                    $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(\n\t                        data.map(function (d) { return d[xKey]; })\n\t                            .filter(isValue)\n\t                            .map(function (rawX, i) { return $$.generateTargetX(rawX, id, i); })\n\t                    );\n\t                }\n\t                // if not included in input data, find from preloaded data of other id's x\n\t                else if (config.data_x) {\n\t                    $$.data.xs[id] = $$.getOtherTargetXs();\n\t                }\n\t                // if not included in input data, find from preloaded data\n\t                else if (notEmpty(config.data_xs)) {\n\t                    $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n\t                }\n\t                // MEMO: if no x included, use same x of current will be used\n\t            } else {\n\t                $$.data.xs[id] = data.map(function (d, i) { return i; });\n\t            }\n\t        });\n\t\n\t\n\t        // check x is defined\n\t        ids.forEach(function (id) {\n\t            if (!$$.data.xs[id]) {\n\t                throw new Error('x is not defined for id = \"' + id + '\".');\n\t            }\n\t        });\n\t\n\t        // convert to target\n\t        targets = ids.map(function (id, index) {\n\t            var convertedId = config.data_idConverter(id);\n\t            return {\n\t                id: convertedId,\n\t                id_org: id,\n\t                values: data.map(function (d, i) {\n\t                    var xKey = $$.getXKey(id), rawX = d[xKey],\n\t                        value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null, x;\n\t                    // use x as categories if custom x and categorized\n\t                    if ($$.isCustomX() && $$.isCategorized() && index === 0 && !isUndefined(rawX)) {\n\t                        if (index === 0 && i === 0) {\n\t                            config.axis_x_categories = [];\n\t                        }\n\t                        x = config.axis_x_categories.indexOf(rawX);\n\t                        if (x === -1) {\n\t                            x = config.axis_x_categories.length;\n\t                            config.axis_x_categories.push(rawX);\n\t                        }\n\t                    } else {\n\t                        x  = $$.generateTargetX(rawX, id, i);\n\t                    }\n\t                    // mark as x = undefined if value is undefined and filter to remove after mapped\n\t                    if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n\t                        x = undefined;\n\t                    }\n\t                    return {x: x, value: value, id: convertedId};\n\t                }).filter(function (v) { return isDefined(v.x); })\n\t            };\n\t        });\n\t\n\t        // finish targets\n\t        targets.forEach(function (t) {\n\t            var i;\n\t            // sort values by its x\n\t            if (config.data_xSort) {\n\t                t.values = t.values.sort(function (v1, v2) {\n\t                    var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n\t                        x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n\t                    return x1 - x2;\n\t                });\n\t            }\n\t            // indexing each value\n\t            i = 0;\n\t            t.values.forEach(function (v) {\n\t                v.index = i++;\n\t            });\n\t            // this needs to be sorted because its index and value.index is identical\n\t            $$.data.xs[t.id].sort(function (v1, v2) {\n\t                return v1 - v2;\n\t            });\n\t        });\n\t\n\t        // cache information about values\n\t        $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n\t        $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\t\n\t        // set target types\n\t        if (config.data_type) {\n\t            $$.setTargetType($$.mapToIds(targets).filter(function (id) { return ! (id in config.data_types); }), config.data_type);\n\t        }\n\t\n\t        // cache as original id keyed\n\t        targets.forEach(function (d) {\n\t            $$.addCache(d.id_org, d);\n\t        });\n\t\n\t        return targets;\n\t    };\n\t\n\t    c3_chart_internal_fn.load = function (targets, args) {\n\t        var $$ = this;\n\t        if (targets) {\n\t            // filter loading targets if needed\n\t            if (args.filter) {\n\t                targets = targets.filter(args.filter);\n\t            }\n\t            // set type if args.types || args.type specified\n\t            if (args.type || args.types) {\n\t                targets.forEach(function (t) {\n\t                    var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n\t                    $$.setTargetType(t.id, type);\n\t                });\n\t            }\n\t            // Update/Add data\n\t            $$.data.targets.forEach(function (d) {\n\t                for (var i = 0; i < targets.length; i++) {\n\t                    if (d.id === targets[i].id) {\n\t                        d.values = targets[i].values;\n\t                        targets.splice(i, 1);\n\t                        break;\n\t                    }\n\t                }\n\t            });\n\t            $$.data.targets = $$.data.targets.concat(targets); // add remained\n\t        }\n\t\n\t        // Set targets\n\t        $$.updateTargets($$.data.targets);\n\t\n\t        // Redraw with new targets\n\t        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n\t\n\t        if (args.done) { args.done(); }\n\t    };\n\t    c3_chart_internal_fn.loadFromArgs = function (args) {\n\t        var $$ = this;\n\t        if (args.data) {\n\t            $$.load($$.convertDataToTargets(args.data), args);\n\t        }\n\t        else if (args.url) {\n\t            $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n\t                $$.load($$.convertDataToTargets(data), args);\n\t            });\n\t        }\n\t        else if (args.json) {\n\t            $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n\t        }\n\t        else if (args.rows) {\n\t            $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n\t        }\n\t        else if (args.columns) {\n\t            $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n\t        }\n\t        else {\n\t            $$.load(null, args);\n\t        }\n\t    };\n\t    c3_chart_internal_fn.unload = function (targetIds, done) {\n\t        var $$ = this;\n\t        if (!done) {\n\t            done = function () {};\n\t        }\n\t        // filter existing target\n\t        targetIds = targetIds.filter(function (id) { return $$.hasTarget($$.data.targets, id); });\n\t        // If no target, call done and return\n\t        if (!targetIds || targetIds.length === 0) {\n\t            done();\n\t            return;\n\t        }\n\t        $$.svg.selectAll(targetIds.map(function (id) { return $$.selectorTarget(id); }))\n\t            .transition()\n\t            .style('opacity', 0)\n\t            .remove()\n\t            .call($$.endall, done);\n\t        targetIds.forEach(function (id) {\n\t            // Reset fadein for future load\n\t            $$.withoutFadeIn[id] = false;\n\t            // Remove target's elements\n\t            if ($$.legend) {\n\t                $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n\t            }\n\t            // Remove target\n\t            $$.data.targets = $$.data.targets.filter(function (t) {\n\t                return t.id !== id;\n\t            });\n\t        });\n\t    };\n\t\n\t    c3_chart_internal_fn.categoryName = function (i) {\n\t        var config = this.config;\n\t        return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n\t    };\n\t\n\t    c3_chart_internal_fn.initEventRect = function () {\n\t        var $$ = this;\n\t        $$.main.select('.' + CLASS.chart).append(\"g\")\n\t            .attr(\"class\", CLASS.eventRects)\n\t            .style('fill-opacity', 0);\n\t    };\n\t    c3_chart_internal_fn.redrawEventRect = function () {\n\t        var $$ = this, config = $$.config,\n\t            eventRectUpdate, maxDataCountTarget,\n\t            isMultipleX = $$.isMultipleX();\n\t\n\t        // rects for mouseover\n\t        var eventRects = $$.main.select('.' + CLASS.eventRects)\n\t                .style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null)\n\t                .classed(CLASS.eventRectsMultiple, isMultipleX)\n\t                .classed(CLASS.eventRectsSingle, !isMultipleX);\n\t\n\t        // clear old rects\n\t        eventRects.selectAll('.' + CLASS.eventRect).remove();\n\t\n\t        // open as public variable\n\t        $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\t\n\t        if (isMultipleX) {\n\t            eventRectUpdate = $$.eventRect.data([0]);\n\t            // enter : only one rect will be added\n\t            $$.generateEventRectsForMultipleXs(eventRectUpdate.enter());\n\t            // update\n\t            $$.updateEventRect(eventRectUpdate);\n\t            // exit : not needed because always only one rect exists\n\t        }\n\t        else {\n\t            // Set data and update $$.eventRect\n\t            maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);\n\t            eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);\n\t            $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\t            eventRectUpdate = $$.eventRect.data(function (d) { return d; });\n\t            // enter\n\t            $$.generateEventRectsForSingleX(eventRectUpdate.enter());\n\t            // update\n\t            $$.updateEventRect(eventRectUpdate);\n\t            // exit\n\t            eventRectUpdate.exit().remove();\n\t        }\n\t    };\n\t    c3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {\n\t        var $$ = this, config = $$.config,\n\t            x, y, w, h, rectW, rectX;\n\t\n\t        // set update selection if null\n\t        eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) { return d; });\n\t\n\t        if ($$.isMultipleX()) {\n\t            // TODO: rotated not supported yet\n\t            x = 0;\n\t            y = 0;\n\t            w = $$.width;\n\t            h = $$.height;\n\t        }\n\t        else {\n\t            if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {\n\t\n\t                // update index for x that is used by prevX and nextX\n\t                $$.updateXs();\n\t\n\t                rectW = function (d) {\n\t                    var prevX = $$.getPrevX(d.index), nextX = $$.getNextX(d.index);\n\t\n\t                    // if there this is a single data point make the eventRect full width (or height)\n\t                    if (prevX === null && nextX === null) {\n\t                        return config.axis_rotated ? $$.height : $$.width;\n\t                    }\n\t\n\t                    if (prevX === null) { prevX = $$.x.domain()[0]; }\n\t                    if (nextX === null) { nextX = $$.x.domain()[1]; }\n\t\n\t                    return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);\n\t                };\n\t                rectX = function (d) {\n\t                    var prevX = $$.getPrevX(d.index), nextX = $$.getNextX(d.index),\n\t                        thisX = $$.data.xs[d.id][d.index];\n\t\n\t                    // if there this is a single data point position the eventRect at 0\n\t                    if (prevX === null && nextX === null) {\n\t                        return 0;\n\t                    }\n\t\n\t                    if (prevX === null) { prevX = $$.x.domain()[0]; }\n\t\n\t                    return ($$.x(thisX) + $$.x(prevX)) / 2;\n\t                };\n\t            } else {\n\t                rectW = $$.getEventRectWidth();\n\t                rectX = function (d) {\n\t                    return $$.x(d.x) - (rectW / 2);\n\t                };\n\t            }\n\t            x = config.axis_rotated ? 0 : rectX;\n\t            y = config.axis_rotated ? rectX : 0;\n\t            w = config.axis_rotated ? $$.width : rectW;\n\t            h = config.axis_rotated ? rectW : $$.height;\n\t        }\n\t\n\t        eventRectUpdate\n\t            .attr('class', $$.classEvent.bind($$))\n\t            .attr(\"x\", x)\n\t            .attr(\"y\", y)\n\t            .attr(\"width\", w)\n\t            .attr(\"height\", h);\n\t    };\n\t    c3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {\n\t        var $$ = this, d3 = $$.d3, config = $$.config;\n\t        eventRectEnter.append(\"rect\")\n\t            .attr(\"class\", $$.classEvent.bind($$))\n\t            .style(\"cursor\", config.data_selection_enabled && config.data_selection_grouped ? \"pointer\" : null)\n\t            .on('mouseover', function (d) {\n\t                var index = d.index;\n\t\n\t                if ($$.dragging || $$.flowing) { return; } // do nothing while dragging/flowing\n\t                if ($$.hasArcType()) { return; }\n\t\n\t                // Expand shapes for selection\n\t                if (config.point_focus_expand_enabled) { $$.expandCircles(index, null, true); }\n\t                $$.expandBars(index, null, true);\n\t\n\t                // Call event handler\n\t                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n\t                    config.data_onmouseover.call($$.api, d);\n\t                });\n\t            })\n\t            .on('mouseout', function (d) {\n\t                var index = d.index;\n\t                if (!$$.config) { return; } // chart is destroyed\n\t                if ($$.hasArcType()) { return; }\n\t                $$.hideXGridFocus();\n\t                $$.hideTooltip();\n\t                // Undo expanded shapes\n\t                $$.unexpandCircles();\n\t                $$.unexpandBars();\n\t                // Call event handler\n\t                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n\t                    config.data_onmouseout.call($$.api, d);\n\t                });\n\t            })\n\t            .on('mousemove', function (d) {\n\t                var selectedData, index = d.index,\n\t                    eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);\n\t\n\t                if ($$.dragging || $$.flowing) { return; } // do nothing while dragging/flowing\n\t                if ($$.hasArcType()) { return; }\n\t\n\t                if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n\t                    index -= 1;\n\t                }\n\t\n\t                // Show tooltip\n\t                selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {\n\t                    return $$.addName($$.getValueOnIndex(t.values, index));\n\t                });\n\t\n\t                if (config.tooltip_grouped) {\n\t                    $$.showTooltip(selectedData, this);\n\t                    $$.showXGridFocus(selectedData);\n\t                }\n\t\n\t                if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {\n\t                    return;\n\t                }\n\t\n\t                $$.main.selectAll('.' + CLASS.shape + '-' + index)\n\t                    .each(function () {\n\t                        d3.select(this).classed(CLASS.EXPANDED, true);\n\t                        if (config.data_selection_enabled) {\n\t                            eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);\n\t                        }\n\t                        if (!config.tooltip_grouped) {\n\t                            $$.hideXGridFocus();\n\t                            $$.hideTooltip();\n\t                            if (!config.data_selection_grouped) {\n\t                                $$.unexpandCircles(index);\n\t                                $$.unexpandBars(index);\n\t                            }\n\t                        }\n\t                    })\n\t                    .filter(function (d) {\n\t                        return $$.isWithinShape(this, d);\n\t                    })\n\t                    .each(function (d) {\n\t                        if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {\n\t                            eventRect.style('cursor', 'pointer');\n\t                        }\n\t                        if (!config.tooltip_grouped) {\n\t                            $$.showTooltip([d], this);\n\t                            $$.showXGridFocus([d]);\n\t                            if (config.point_focus_expand_enabled) { $$.expandCircles(index, d.id, true); }\n\t                            $$.expandBars(index, d.id, true);\n\t                        }\n\t                    });\n\t            })\n\t            .on('click', function (d) {\n\t                var index = d.index;\n\t                if ($$.hasArcType() || !$$.toggleShape) { return; }\n\t                if ($$.cancelClick) {\n\t                    $$.cancelClick = false;\n\t                    return;\n\t                }\n\t                if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n\t                    index -= 1;\n\t                }\n\t                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n\t                    if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n\t                        $$.toggleShape(this, d, index);\n\t                        $$.config.data_onclick.call($$.api, d, this);\n\t                    }\n\t                });\n\t            })\n\t            .call(\n\t                config.data_selection_draggable && $$.drag ? (\n\t                    d3.behavior.drag().origin(Object)\n\t                        .on('drag', function () { $$.drag(d3.mouse(this)); })\n\t                        .on('dragstart', function () { $$.dragstart(d3.mouse(this)); })\n\t                        .on('dragend', function () { $$.dragend(); })\n\t                ) : function () {}\n\t            );\n\t    };\n\t\n\t    c3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {\n\t        var $$ = this, d3 = $$.d3, config = $$.config;\n\t\n\t        function mouseout() {\n\t            $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n\t            $$.hideXGridFocus();\n\t            $$.hideTooltip();\n\t            $$.unexpandCircles();\n\t            $$.unexpandBars();\n\t        }\n\t\n\t        eventRectEnter.append('rect')\n\t            .attr('x', 0)\n\t            .attr('y', 0)\n\t            .attr('width', $$.width)\n\t            .attr('height', $$.height)\n\t            .attr('class', CLASS.eventRect)\n\t            .on('mouseout', function () {\n\t                if (!$$.config) { return; } // chart is destroyed\n\t                if ($$.hasArcType()) { return; }\n\t                mouseout();\n\t            })\n\t            .on('mousemove', function () {\n\t                var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n\t                var mouse, closest, sameXData, selectedData;\n\t\n\t                if ($$.dragging) { return; } // do nothing when dragging\n\t                if ($$.hasArcType(targetsToShow)) { return; }\n\t\n\t                mouse = d3.mouse(this);\n\t                closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\t\n\t                if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n\t                    config.data_onmouseout.call($$.api, $$.mouseover);\n\t                    $$.mouseover = undefined;\n\t                }\n\t\n\t                if (! closest) {\n\t                    mouseout();\n\t                    return;\n\t                }\n\t\n\t                if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n\t                    sameXData = [closest];\n\t                } else {\n\t                    sameXData = $$.filterByX(targetsToShow, closest.x);\n\t                }\n\t\n\t                // show tooltip when cursor is close to some point\n\t                selectedData = sameXData.map(function (d) {\n\t                    return $$.addName(d);\n\t                });\n\t                $$.showTooltip(selectedData, this);\n\t\n\t                // expand points\n\t                if (config.point_focus_expand_enabled) {\n\t                    $$.expandCircles(closest.index, closest.id, true);\n\t                }\n\t                $$.expandBars(closest.index, closest.id, true);\n\t\n\t                // Show xgrid focus line\n\t                $$.showXGridFocus(selectedData);\n\t\n\t                // Show cursor as pointer if point is close to mouse position\n\t                if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n\t                    $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n\t                    if (!$$.mouseover) {\n\t                        config.data_onmouseover.call($$.api, closest);\n\t                        $$.mouseover = closest;\n\t                    }\n\t                }\n\t            })\n\t            .on('click', function () {\n\t                var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n\t                var mouse, closest;\n\t                if ($$.hasArcType(targetsToShow)) { return; }\n\t\n\t                mouse = d3.mouse(this);\n\t                closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\t                if (! closest) { return; }\n\t                // select if selection enabled\n\t                if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n\t                    $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {\n\t                        if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {\n\t                            $$.toggleShape(this, closest, closest.index);\n\t                            $$.config.data_onclick.call($$.api, closest, this);\n\t                        }\n\t                    });\n\t                }\n\t            })\n\t            .call(\n\t                config.data_selection_draggable && $$.drag ? (\n\t                    d3.behavior.drag().origin(Object)\n\t                        .on('drag', function () { $$.drag(d3.mouse(this)); })\n\t                        .on('dragstart', function () { $$.dragstart(d3.mouse(this)); })\n\t                        .on('dragend', function () { $$.dragend(); })\n\t                ) : function () {}\n\t            );\n\t    };\n\t    c3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {\n\t        var $$ = this,\n\t            selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),\n\t            eventRect = $$.main.select(selector).node(),\n\t            box = eventRect.getBoundingClientRect(),\n\t            x = box.left + (mouse ? mouse[0] : 0),\n\t            y = box.top + (mouse ? mouse[1] : 0),\n\t            event = document.createEvent(\"MouseEvents\");\n\t\n\t        event.initMouseEvent(type, true, true, window, 0, x, y, x, y,\n\t                             false, false, false, false, 0, null);\n\t        eventRect.dispatchEvent(event);\n\t    };\n\t\n\t    c3_chart_internal_fn.getCurrentWidth = function () {\n\t        var $$ = this, config = $$.config;\n\t        return config.size_width ? config.size_width : $$.getParentWidth();\n\t    };\n\t    c3_chart_internal_fn.getCurrentHeight = function () {\n\t        var $$ = this, config = $$.config,\n\t            h = config.size_height ? config.size_height : $$.getParentHeight();\n\t        return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1); \n\t    };\n\t    c3_chart_internal_fn.getCurrentPaddingTop = function () {\n\t        var $$ = this,\n\t            config = $$.config,\n\t            padding = isValue(config.padding_top) ? config.padding_top : 0;\n\t        if ($$.title && $$.title.node()) {\n\t            padding += $$.getTitlePadding();\n\t        }\n\t        return padding;\n\t    };\n\t    c3_chart_internal_fn.getCurrentPaddingBottom = function () {\n\t        var config = this.config;\n\t        return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n\t    };\n\t    c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n\t        var $$ = this, config = $$.config;\n\t        if (isValue(config.padding_left)) {\n\t            return config.padding_left;\n\t        } else if (config.axis_rotated) {\n\t            return !config.axis_x_show ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n\t        } else if (!config.axis_y_show || config.axis_y_inner) { // && !config.axis_rotated\n\t            return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n\t        } else {\n\t            return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n\t        }\n\t    };\n\t    c3_chart_internal_fn.getCurrentPaddingRight = function () {\n\t        var $$ = this, config = $$.config,\n\t            defaultPadding = 10, legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n\t        if (isValue(config.padding_right)) {\n\t            return config.padding_right + 1; // 1 is needed not to hide tick line\n\t        } else if (config.axis_rotated) {\n\t            return defaultPadding + legendWidthOnRight;\n\t        } else if (!config.axis_y2_show || config.axis_y2_inner) { // && !config.axis_rotated\n\t            return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n\t        } else {\n\t            return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n\t        }\n\t    };\n\t\n\t    c3_chart_internal_fn.getParentRectValue = function (key) {\n\t        var parent = this.selectChart.node(), v;\n\t        while (parent && parent.tagName !== 'BODY') {\n\t            try {\n\t                v = parent.getBoundingClientRect()[key];\n\t            } catch(e) {\n\t                if (key === 'width') {\n\t                    // In IE in certain cases getBoundingClientRect\n\t                    // will cause an \"unspecified error\"\n\t                    v = parent.offsetWidth;\n\t                }\n\t            }\n\t            if (v) {\n\t                break;\n\t            }\n\t            parent = parent.parentNode;\n\t        }\n\t        return v;\n\t    };\n\t    c3_chart_internal_fn.getParentWidth = function () {\n\t        return this.getParentRectValue('width');\n\t    };\n\t    c3_chart_internal_fn.getParentHeight = function () {\n\t        var h = this.selectChart.style('height');\n\t        return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n\t        var $$ = this, config = $$.config,\n\t            hasLeftAxisRect = config.axis_rotated || (!config.axis_rotated && !config.axis_y_inner),\n\t            leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n\t            leftAxis = $$.main.select('.' + leftAxisClass).node(),\n\t            svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : {right: 0},\n\t            chartRect = $$.selectChart.node().getBoundingClientRect(),\n\t            hasArc = $$.hasArcType(),\n\t            svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n\t        return svgLeft > 0 ? svgLeft : 0;\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n\t        var $$ = this, position = $$.axis.getLabelPositionById(id);\n\t        return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n\t    };\n\t    c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n\t        var $$ = this, config = $$.config, h = 30;\n\t        if (axisId === 'x' && !config.axis_x_show) { return 8; }\n\t        if (axisId === 'x' && config.axis_x_height) { return config.axis_x_height; }\n\t        if (axisId === 'y' && !config.axis_y_show) { \n\t            return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1; \n\t        }\n\t        if (axisId === 'y2' && !config.axis_y2_show) { return $$.rotated_padding_top; }\n\t        // Calculate x axis height when tick rotated\n\t        if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n\t            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);\n\t        }\n\t        // Calculate y axis height when tick rotated\n\t        if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n\t            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);\n\t        }\n\t        return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n\t    };\n\t\n\t    c3_chart_internal_fn.getEventRectWidth = function () {\n\t        return Math.max(0, this.xAxis.tickInterval());\n\t    };\n\t\n\t    c3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n\t        var $$ = this, config = $$.config,\n\t            indices = {}, i = 0, j, k;\n\t        $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n\t            for (j = 0; j < config.data_groups.length; j++) {\n\t                if (config.data_groups[j].indexOf(d.id) < 0) { continue; }\n\t                for (k = 0; k < config.data_groups[j].length; k++) {\n\t                    if (config.data_groups[j][k] in indices) {\n\t                        indices[d.id] = indices[config.data_groups[j][k]];\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            if (isUndefined(indices[d.id])) { indices[d.id] = i++; }\n\t        });\n\t        indices.__max__ = i - 1;\n\t        return indices;\n\t    };\n\t    c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n\t        var $$ = this, scale = isSub ? $$.subX : $$.x;\n\t        return function (d) {\n\t            var index = d.id in indices ? indices[d.id] : 0;\n\t            return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n\t        };\n\t    };\n\t    c3_chart_internal_fn.getShapeY = function (isSub) {\n\t        var $$ = this;\n\t        return function (d) {\n\t            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n\t            return scale(d.value);\n\t        };\n\t    };\n\t    c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n\t        var $$ = this,\n\t            targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n\t            targetIds = targets.map(function (t) { return t.id; });\n\t        return function (d, i) {\n\t            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n\t                y0 = scale(0), offset = y0;\n\t            targets.forEach(function (t) {\n\t                var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n\t                if (t.id === d.id || indices[t.id] !== indices[d.id]) { return; }\n\t                if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n\t                    // check if the x values line up\n\t                    if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {  // \"+\" for timeseries\n\t                        // if not, try to find the value that does line up\n\t                        i = -1;\n\t                        values.forEach(function (v, j) {\n\t                            if (v.x === d.x) {\n\t                                i = j;\n\t                            }\n\t                        });\n\t                    }\n\t                    if (i in values && values[i].value * d.value >= 0) {\n\t                        offset += scale(values[i].value) - y0;\n\t                    }\n\t                }\n\t            });\n\t            return offset;\n\t        };\n\t    };\n\t    c3_chart_internal_fn.isWithinShape = function (that, d) {\n\t        var $$ = this,\n\t            shape = $$.d3.select(that), isWithin;\n\t        if (!$$.isTargetToShow(d.id)) {\n\t            isWithin = false;\n\t        }\n\t        else if (that.nodeName === 'circle') {\n\t            isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n\t        }\n\t        else if (that.nodeName === 'path') {\n\t            isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;\n\t        }\n\t        return isWithin;\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.getInterpolate = function (d) {\n\t        var $$ = this,\n\t            interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';\n\t        return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : \"linear\";\n\t    };\n\t\n\t    c3_chart_internal_fn.initLine = function () {\n\t        var $$ = this;\n\t        $$.main.select('.' + CLASS.chart).append(\"g\")\n\t            .attr(\"class\", CLASS.chartLines);\n\t    };\n\t    c3_chart_internal_fn.updateTargetsForLine = function (targets) {\n\t        var $$ = this, config = $$.config,\n\t            mainLineUpdate, mainLineEnter,\n\t            classChartLine = $$.classChartLine.bind($$),\n\t            classLines = $$.classLines.bind($$),\n\t            classAreas = $$.classAreas.bind($$),\n\t            classCircles = $$.classCircles.bind($$),\n\t            classFocus = $$.classFocus.bind($$);\n\t        mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine)\n\t            .data(targets)\n\t            .attr('class', function (d) { return classChartLine(d) + classFocus(d); });\n\t        mainLineEnter = mainLineUpdate.enter().append('g')\n\t            .attr('class', classChartLine)\n\t            .style('opacity', 0)\n\t            .style(\"pointer-events\", \"none\");\n\t        // Lines for each data\n\t        mainLineEnter.append('g')\n\t            .attr(\"class\", classLines);\n\t        // Areas\n\t        mainLineEnter.append('g')\n\t            .attr('class', classAreas);\n\t        // Circles for each data point on lines\n\t        mainLineEnter.append('g')\n\t            .attr(\"class\", function (d) { return $$.generateClass(CLASS.selectedCircles, d.id); });\n\t        mainLineEnter.append('g')\n\t            .attr(\"class\", classCircles)\n\t            .style(\"cursor\", function (d) { return config.data_selection_isselectable(d) ? \"pointer\" : null; });\n\t        // Update date for selected circles\n\t        targets.forEach(function (t) {\n\t            $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n\t                d.value = t.values[d.index].value;\n\t            });\n\t        });\n\t        // MEMO: can not keep same color...\n\t        //mainLineUpdate.exit().remove();\n\t    };\n\t    c3_chart_internal_fn.updateLine = function (durationForExit) {\n\t        var $$ = this;\n\t        $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line)\n\t            .data($$.lineData.bind($$));\n\t        $$.mainLine.enter().append('path')\n\t            .attr('class', $$.classLine.bind($$))\n\t            .style(\"stroke\", $$.color);\n\t        $$.mainLine\n\t            .style(\"opacity\", $$.initialOpacity.bind($$))\n\t            .style('shape-rendering', function (d) { return $$.isStepType(d) ? 'crispEdges' : ''; })\n\t            .attr('transform', null);\n\t        $$.mainLine.exit().transition().duration(durationForExit)\n\t            .style('opacity', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {\n\t        return [\n\t            (withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine)\n\t                .attr(\"d\", drawLine)\n\t                .style(\"stroke\", this.color)\n\t                .style(\"opacity\", 1)\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n\t        var $$ = this, config = $$.config,\n\t            line = $$.d3.svg.line(),\n\t            getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n\t            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n\t            xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\n\t            yValue = function (d, i) {\n\t                return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n\t            };\n\t\n\t        line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n\t        if (!config.line_connectNull) { line = line.defined(function (d) { return d.value != null; }); }\n\t        return function (d) {\n\t            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n\t                x = isSub ? $$.x : $$.subX, y = yScaleGetter.call($$, d.id), x0 = 0, y0 = 0, path;\n\t            if ($$.isLineType(d)) {\n\t                if (config.data_regions[d.id]) {\n\t                    path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n\t                } else {\n\t                    if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\n\t                    path = line.interpolate($$.getInterpolate(d))(values);\n\t                }\n\t            } else {\n\t                if (values[0]) {\n\t                    x0 = x(values[0].x);\n\t                    y0 = y(values[0].value);\n\t                }\n\t                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n\t            }\n\t            return path ? path : \"M 0 0\";\n\t        };\n\t    };\n\t    c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) { // partial duplication of generateGetBarPoints\n\t        var $$ = this, config = $$.config,\n\t            lineTargetsNum = lineIndices.__max__ + 1,\n\t            x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n\t            y = $$.getShapeY(!!isSub),\n\t            lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n\t            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n\t        return function (d, i) {\n\t            var y0 = yScale.call($$, d.id)(0),\n\t                offset = lineOffset(d, i) || y0, // offset is for stacked area chart\n\t                posX = x(d), posY = y(d);\n\t            // fix posY not to overflow opposite quadrant\n\t            if (config.axis_rotated) {\n\t                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n\t            }\n\t            // 1 point that marks the line position\n\t            return [\n\t                [posX, posY - (y0 - offset)],\n\t                [posX, posY - (y0 - offset)], // needed for compatibility\n\t                [posX, posY - (y0 - offset)], // needed for compatibility\n\t                [posX, posY - (y0 - offset)]  // needed for compatibility\n\t            ];\n\t        };\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n\t        var $$ = this, config = $$.config,\n\t            prev = -1, i, j,\n\t            s = \"M\", sWithRegion,\n\t            xp, yp, dx, dy, dd, diff, diffx2,\n\t            xOffset = $$.isCategorized() ? 0.5 : 0,\n\t            xValue, yValue,\n\t            regions = [];\n\t\n\t        function isWithinRegions(x, regions) {\n\t            var i;\n\t            for (i = 0; i < regions.length; i++) {\n\t                if (regions[i].start < x && x <= regions[i].end) { return true; }\n\t            }\n\t            return false;\n\t        }\n\t\n\t        // Check start/end of regions\n\t        if (isDefined(_regions)) {\n\t            for (i = 0; i < _regions.length; i++) {\n\t                regions[i] = {};\n\t                if (isUndefined(_regions[i].start)) {\n\t                    regions[i].start = d[0].x;\n\t                } else {\n\t                    regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n\t                }\n\t                if (isUndefined(_regions[i].end)) {\n\t                    regions[i].end = d[d.length - 1].x;\n\t                } else {\n\t                    regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n\t                }\n\t            }\n\t        }\n\t\n\t        // Set scales\n\t        xValue = config.axis_rotated ? function (d) { return y(d.value); } : function (d) { return x(d.x); };\n\t        yValue = config.axis_rotated ? function (d) { return x(d.x); } : function (d) { return y(d.value); };\n\t\n\t        // Define svg generator function for region\n\t        function generateM(points) {\n\t            return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n\t        }\n\t        if ($$.isTimeSeries()) {\n\t            sWithRegion = function (d0, d1, j, diff) {\n\t                var x0 = d0.x.getTime(), x_diff = d1.x - d0.x,\n\t                    xv0 = new Date(x0 + x_diff * j),\n\t                    xv1 = new Date(x0 + x_diff * (j + diff)),\n\t                    points;\n\t                if (config.axis_rotated) {\n\t                    points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n\t                } else {\n\t                    points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n\t                }\n\t                return generateM(points);\n\t            };\n\t        } else {\n\t            sWithRegion = function (d0, d1, j, diff) {\n\t                var points;\n\t                if (config.axis_rotated) {\n\t                    points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n\t                } else {\n\t                    points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n\t                }\n\t                return generateM(points);\n\t            };\n\t        }\n\t\n\t        // Generate\n\t        for (i = 0; i < d.length; i++) {\n\t\n\t            // Draw as normal\n\t            if (isUndefined(regions) || ! isWithinRegions(d[i].x, regions)) {\n\t                s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n\t            }\n\t            // Draw with region // TODO: Fix for horizotal charts\n\t            else {\n\t                xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n\t                yp = $$.getScale(d[i - 1].value, d[i].value);\n\t\n\t                dx = x(d[i].x) - x(d[i - 1].x);\n\t                dy = y(d[i].value) - y(d[i - 1].value);\n\t                dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n\t                diff = 2 / dd;\n\t                diffx2 = diff * 2;\n\t\n\t                for (j = diff; j <= 1; j += diffx2) {\n\t                    s += sWithRegion(d[i - 1], d[i], j, diff);\n\t                }\n\t            }\n\t            prev = d[i].x;\n\t        }\n\t\n\t        return s;\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.updateArea = function (durationForExit) {\n\t        var $$ = this, d3 = $$.d3;\n\t        $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area)\n\t            .data($$.lineData.bind($$));\n\t        $$.mainArea.enter().append('path')\n\t            .attr(\"class\", $$.classArea.bind($$))\n\t            .style(\"fill\", $$.color)\n\t            .style(\"opacity\", function () { $$.orgAreaOpacity = +d3.select(this).style('opacity'); return 0; });\n\t        $$.mainArea\n\t            .style(\"opacity\", $$.orgAreaOpacity);\n\t        $$.mainArea.exit().transition().duration(durationForExit)\n\t            .style('opacity', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {\n\t        return [\n\t            (withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea)\n\t                .attr(\"d\", drawArea)\n\t                .style(\"fill\", this.color)\n\t                .style(\"opacity\", this.orgAreaOpacity)\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n\t        var $$ = this, config = $$.config, area = $$.d3.svg.area(),\n\t            getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n\t            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n\t            xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\n\t            value0 = function (d, i) {\n\t                return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n\t            },\n\t            value1 = function (d, i) {\n\t                return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n\t            };\n\t\n\t        area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n\t        if (!config.line_connectNull) {\n\t            area = area.defined(function (d) { return d.value !== null; });\n\t        }\n\t\n\t        return function (d) {\n\t            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n\t                x0 = 0, y0 = 0, path;\n\t            if ($$.isAreaType(d)) {\n\t                if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\n\t                path = area.interpolate($$.getInterpolate(d))(values);\n\t            } else {\n\t                if (values[0]) {\n\t                    x0 = $$.x(values[0].x);\n\t                    y0 = $$.getYScale(d.id)(values[0].value);\n\t                }\n\t                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n\t            }\n\t            return path ? path : \"M 0 0\";\n\t        };\n\t    };\n\t    c3_chart_internal_fn.getAreaBaseValue = function () {\n\t        return 0;\n\t    };\n\t    c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) { // partial duplication of generateGetBarPoints\n\t        var $$ = this, config = $$.config,\n\t            areaTargetsNum = areaIndices.__max__ + 1,\n\t            x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n\t            y = $$.getShapeY(!!isSub),\n\t            areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n\t            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n\t        return function (d, i) {\n\t            var y0 = yScale.call($$, d.id)(0),\n\t                offset = areaOffset(d, i) || y0, // offset is for stacked area chart\n\t                posX = x(d), posY = y(d);\n\t            // fix posY not to overflow opposite quadrant\n\t            if (config.axis_rotated) {\n\t                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n\t            }\n\t            // 1 point that marks the area position\n\t            return [\n\t                [posX, offset],\n\t                [posX, posY - (y0 - offset)],\n\t                [posX, posY - (y0 - offset)], // needed for compatibility\n\t                [posX, offset] // needed for compatibility\n\t            ];\n\t        };\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.updateCircle = function () {\n\t        var $$ = this;\n\t        $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle)\n\t            .data($$.lineOrScatterData.bind($$));\n\t        $$.mainCircle.enter().append(\"circle\")\n\t            .attr(\"class\", $$.classCircle.bind($$))\n\t            .attr(\"r\", $$.pointR.bind($$))\n\t            .style(\"fill\", $$.color);\n\t        $$.mainCircle\n\t            .style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n\t        $$.mainCircle.exit().remove();\n\t    };\n\t    c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {\n\t        var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);\n\t        return [\n\t            (withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle)\n\t                .style('opacity', this.opacityForCircle.bind(this))\n\t                .style(\"fill\", this.color)\n\t                .attr(\"cx\", cx)\n\t                .attr(\"cy\", cy),\n\t            (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles)\n\t                .attr(\"cx\", cx)\n\t                .attr(\"cy\", cy)\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.circleX = function (d) {\n\t        return d.x || d.x === 0 ? this.x(d.x) : null;\n\t    };\n\t    c3_chart_internal_fn.updateCircleY = function () {\n\t        var $$ = this, lineIndices, getPoints;\n\t        if ($$.config.data_groups.length > 0) {\n\t            lineIndices = $$.getShapeIndices($$.isLineType),\n\t            getPoints = $$.generateGetLinePoints(lineIndices);\n\t            $$.circleY = function (d, i) {\n\t                return getPoints(d, i)[0][1];\n\t            };\n\t        } else {\n\t            $$.circleY = function (d) {\n\t                return $$.getYScale(d.id)(d.value);\n\t            };\n\t        }\n\t    };\n\t    c3_chart_internal_fn.getCircles = function (i, id) {\n\t        var $$ = this;\n\t        return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n\t    };\n\t    c3_chart_internal_fn.expandCircles = function (i, id, reset) {\n\t        var $$ = this,\n\t            r = $$.pointExpandedR.bind($$);\n\t        if (reset) { $$.unexpandCircles(); }\n\t        $$.getCircles(i, id)\n\t            .classed(CLASS.EXPANDED, true)\n\t            .attr('r', r);\n\t    };\n\t    c3_chart_internal_fn.unexpandCircles = function (i) {\n\t        var $$ = this,\n\t            r = $$.pointR.bind($$);\n\t        $$.getCircles(i)\n\t            .filter(function () { return $$.d3.select(this).classed(CLASS.EXPANDED); })\n\t            .classed(CLASS.EXPANDED, false)\n\t            .attr('r', r);\n\t    };\n\t    c3_chart_internal_fn.pointR = function (d) {\n\t        var $$ = this, config = $$.config;\n\t        return $$.isStepType(d) ? 0 : (isFunction(config.point_r) ? config.point_r(d) : config.point_r);\n\t    };\n\t    c3_chart_internal_fn.pointExpandedR = function (d) {\n\t        var $$ = this, config = $$.config;\n\t        return config.point_focus_expand_enabled ? (config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75) : $$.pointR(d);\n\t    };\n\t    c3_chart_internal_fn.pointSelectR = function (d) {\n\t        var $$ = this, config = $$.config;\n\t        return isFunction(config.point_select_r) ? config.point_select_r(d) : ((config.point_select_r) ? config.point_select_r : $$.pointR(d) * 4);\n\t    };\n\t    c3_chart_internal_fn.isWithinCircle = function (that, r) {\n\t        var d3 = this.d3,\n\t            mouse = d3.mouse(that), d3_this = d3.select(that),\n\t            cx = +d3_this.attr(\"cx\"), cy = +d3_this.attr(\"cy\");\n\t        return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n\t    };\n\t    c3_chart_internal_fn.isWithinStep = function (that, y) {\n\t        return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n\t    };\n\t\n\t    c3_chart_internal_fn.initBar = function () {\n\t        var $$ = this;\n\t        $$.main.select('.' + CLASS.chart).append(\"g\")\n\t            .attr(\"class\", CLASS.chartBars);\n\t    };\n\t    c3_chart_internal_fn.updateTargetsForBar = function (targets) {\n\t        var $$ = this, config = $$.config,\n\t            mainBarUpdate, mainBarEnter,\n\t            classChartBar = $$.classChartBar.bind($$),\n\t            classBars = $$.classBars.bind($$),\n\t            classFocus = $$.classFocus.bind($$);\n\t        mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar)\n\t            .data(targets)\n\t            .attr('class', function (d) { return classChartBar(d) + classFocus(d); });\n\t        mainBarEnter = mainBarUpdate.enter().append('g')\n\t            .attr('class', classChartBar)\n\t            .style('opacity', 0)\n\t            .style(\"pointer-events\", \"none\");\n\t        // Bars for each data\n\t        mainBarEnter.append('g')\n\t            .attr(\"class\", classBars)\n\t            .style(\"cursor\", function (d) { return config.data_selection_isselectable(d) ? \"pointer\" : null; });\n\t\n\t    };\n\t    c3_chart_internal_fn.updateBar = function (durationForExit) {\n\t        var $$ = this,\n\t            barData = $$.barData.bind($$),\n\t            classBar = $$.classBar.bind($$),\n\t            initialOpacity = $$.initialOpacity.bind($$),\n\t            color = function (d) { return $$.color(d.id); };\n\t        $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar)\n\t            .data(barData);\n\t        $$.mainBar.enter().append('path')\n\t            .attr(\"class\", classBar)\n\t            .style(\"stroke\", color)\n\t            .style(\"fill\", color);\n\t        $$.mainBar\n\t            .style(\"opacity\", initialOpacity);\n\t        $$.mainBar.exit().transition().duration(durationForExit)\n\t            .style('opacity', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {\n\t        return [\n\t            (withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar)\n\t                .attr('d', drawBar)\n\t                .style(\"fill\", this.color)\n\t                .style(\"opacity\", 1)\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n\t        var $$ = this, config = $$.config,\n\t            w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? (axis.tickInterval() * config.bar_width_ratio) / barTargetsNum : 0;\n\t        return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n\t    };\n\t    c3_chart_internal_fn.getBars = function (i, id) {\n\t        var $$ = this;\n\t        return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n\t    };\n\t    c3_chart_internal_fn.expandBars = function (i, id, reset) {\n\t        var $$ = this;\n\t        if (reset) { $$.unexpandBars(); }\n\t        $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n\t    };\n\t    c3_chart_internal_fn.unexpandBars = function (i) {\n\t        var $$ = this;\n\t        $$.getBars(i).classed(CLASS.EXPANDED, false);\n\t    };\n\t    c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n\t        var $$ = this, config = $$.config,\n\t            getPoints = $$.generateGetBarPoints(barIndices, isSub);\n\t        return function (d, i) {\n\t            // 4 points that make a bar\n\t            var points = getPoints(d, i);\n\t\n\t            // switch points if axis is rotated, not applicable for sub chart\n\t            var indexX = config.axis_rotated ? 1 : 0;\n\t            var indexY = config.axis_rotated ? 0 : 1;\n\t\n\t            var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' +\n\t                    'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' +\n\t                    'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' +\n\t                    'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' +\n\t                    'z';\n\t\n\t            return path;\n\t        };\n\t    };\n\t    c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n\t        var $$ = this,\n\t            axis = isSub ? $$.subXAxis : $$.xAxis,\n\t            barTargetsNum = barIndices.__max__ + 1,\n\t            barW = $$.getBarW(axis, barTargetsNum),\n\t            barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n\t            barY = $$.getShapeY(!!isSub),\n\t            barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n\t            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n\t        return function (d, i) {\n\t            var y0 = yScale.call($$, d.id)(0),\n\t                offset = barOffset(d, i) || y0, // offset is for stacked bar chart\n\t                posX = barX(d), posY = barY(d);\n\t            // fix posY not to overflow opposite quadrant\n\t            if ($$.config.axis_rotated) {\n\t                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n\t            }\n\t            // 4 points that make a bar\n\t            return [\n\t                [posX, offset],\n\t                [posX, posY - (y0 - offset)],\n\t                [posX + barW, posY - (y0 - offset)],\n\t                [posX + barW, offset]\n\t            ];\n\t        };\n\t    };\n\t    c3_chart_internal_fn.isWithinBar = function (that) {\n\t        var mouse = this.d3.mouse(that), box = that.getBoundingClientRect(),\n\t            seg0 = that.pathSegList.getItem(0), seg1 = that.pathSegList.getItem(1),\n\t            x = Math.min(seg0.x, seg1.x), y = Math.min(seg0.y, seg1.y),\n\t            w = box.width, h = box.height, offset = 2,\n\t            sx = x - offset, ex = x + w + offset, sy = y + h + offset, ey = y - offset;\n\t        return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n\t    };\n\t\n\t    c3_chart_internal_fn.initText = function () {\n\t        var $$ = this;\n\t        $$.main.select('.' + CLASS.chart).append(\"g\")\n\t            .attr(\"class\", CLASS.chartTexts);\n\t        $$.mainText = $$.d3.selectAll([]);\n\t    };\n\t    c3_chart_internal_fn.updateTargetsForText = function (targets) {\n\t        var $$ = this, mainTextUpdate, mainTextEnter,\n\t            classChartText = $$.classChartText.bind($$),\n\t            classTexts = $$.classTexts.bind($$),\n\t            classFocus = $$.classFocus.bind($$);\n\t        mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText)\n\t            .data(targets)\n\t            .attr('class', function (d) { return classChartText(d) + classFocus(d); });\n\t        mainTextEnter = mainTextUpdate.enter().append('g')\n\t            .attr('class', classChartText)\n\t            .style('opacity', 0)\n\t            .style(\"pointer-events\", \"none\");\n\t        mainTextEnter.append('g')\n\t            .attr('class', classTexts);\n\t    };\n\t    c3_chart_internal_fn.updateText = function (durationForExit) {\n\t        var $$ = this, config = $$.config,\n\t            barOrLineData = $$.barOrLineData.bind($$),\n\t            classText = $$.classText.bind($$);\n\t        $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text)\n\t            .data(barOrLineData);\n\t        $$.mainText.enter().append('text')\n\t            .attr(\"class\", classText)\n\t            .attr('text-anchor', function (d) { return config.axis_rotated ? (d.value < 0 ? 'end' : 'start') : 'middle'; })\n\t            .style(\"stroke\", 'none')\n\t            .style(\"fill\", function (d) { return $$.color(d); })\n\t            .style(\"fill-opacity\", 0);\n\t        $$.mainText\n\t            .text(function (d, i, j) { return $$.dataLabelFormat(d.id)(d.value, d.id, i, j); });\n\t        $$.mainText.exit()\n\t            .transition().duration(durationForExit)\n\t            .style('fill-opacity', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {\n\t        return [\n\t            (withTransition ? this.mainText.transition() : this.mainText)\n\t                .attr('x', xForText)\n\t                .attr('y', yForText)\n\t                .style(\"fill\", this.color)\n\t                .style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.getTextRect = function (text, cls, element) {\n\t        var dummy = this.d3.select('body').append('div').classed('c3', true),\n\t            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n\t            font = this.d3.select(element).style('font'),\n\t            rect;\n\t        svg.selectAll('.dummy')\n\t            .data([text])\n\t          .enter().append('text')\n\t            .classed(cls ? cls : \"\", true)\n\t            .style('font', font)\n\t            .text(text)\n\t          .each(function () { rect = this.getBoundingClientRect(); });\n\t        dummy.remove();\n\t        return rect;\n\t    };\n\t    c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n\t        var $$ = this,\n\t            getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n\t            getBarPoints = $$.generateGetBarPoints(barIndices, false),\n\t            getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n\t            getter = forX ? $$.getXForText : $$.getYForText;\n\t        return function (d, i) {\n\t            var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n\t            return getter.call($$, getPoints(d, i), d, this);\n\t        };\n\t    };\n\t    c3_chart_internal_fn.getXForText = function (points, d, textElement) {\n\t        var $$ = this,\n\t            box = textElement.getBoundingClientRect(), xPos, padding;\n\t        if ($$.config.axis_rotated) {\n\t            padding = $$.isBarType(d) ? 4 : 6;\n\t            xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n\t        } else {\n\t            xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n\t        }\n\t        // show labels regardless of the domain if value is null\n\t        if (d.value === null) {\n\t            if (xPos > $$.width) {\n\t                xPos = $$.width - box.width;\n\t            } else if (xPos < 0) {\n\t                xPos = 4;\n\t            }\n\t        }\n\t        return xPos;\n\t    };\n\t    c3_chart_internal_fn.getYForText = function (points, d, textElement) {\n\t        var $$ = this,\n\t            box = textElement.getBoundingClientRect(),\n\t            yPos;\n\t        if ($$.config.axis_rotated) {\n\t            yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n\t        } else {\n\t            yPos = points[2][1];\n\t            if (d.value < 0  || (d.value === 0 && !$$.hasPositiveValue)) {\n\t                yPos += box.height;\n\t                if ($$.isBarType(d) && $$.isSafari()) {\n\t                    yPos -= 3;\n\t                }\n\t                else if (!$$.isBarType(d) && $$.isChrome()) {\n\t                    yPos += 3;\n\t                }\n\t            } else {\n\t                yPos += $$.isBarType(d) ? -3 : -6;\n\t            }\n\t        }\n\t        // show labels regardless of the domain if value is null\n\t        if (d.value === null && !$$.config.axis_rotated) {\n\t            if (yPos < box.height) {\n\t                yPos = box.height;\n\t            } else if (yPos > this.height) {\n\t                yPos = this.height - 4;\n\t            }\n\t        }\n\t        return yPos;\n\t    };\n\t\n\t    c3_chart_internal_fn.setTargetType = function (targetIds, type) {\n\t        var $$ = this, config = $$.config;\n\t        $$.mapToTargetIds(targetIds).forEach(function (id) {\n\t            $$.withoutFadeIn[id] = (type === config.data_types[id]);\n\t            config.data_types[id] = type;\n\t        });\n\t        if (!targetIds) {\n\t            config.data_type = type;\n\t        }\n\t    };\n\t    c3_chart_internal_fn.hasType = function (type, targets) {\n\t        var $$ = this, types = $$.config.data_types, has = false;\n\t        targets = targets || $$.data.targets;\n\t        if (targets && targets.length) {\n\t            targets.forEach(function (target) {\n\t                var t = types[target.id];\n\t                if ((t && t.indexOf(type) >= 0) || (!t && type === 'line')) {\n\t                    has = true;\n\t                }\n\t            });\n\t        } else if (Object.keys(types).length) {\n\t            Object.keys(types).forEach(function (id) {\n\t                if (types[id] === type) { has = true; }\n\t            });\n\t        } else {\n\t            has = $$.config.data_type === type;\n\t        }\n\t        return has;\n\t    };\n\t    c3_chart_internal_fn.hasArcType = function (targets) {\n\t        return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n\t    };\n\t    c3_chart_internal_fn.isLineType = function (d) {\n\t        var config = this.config, id = isString(d) ? d : d.id;\n\t        return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n\t    };\n\t    c3_chart_internal_fn.isStepType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n\t    };\n\t    c3_chart_internal_fn.isSplineType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n\t    };\n\t    c3_chart_internal_fn.isAreaType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n\t    };\n\t    c3_chart_internal_fn.isBarType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return this.config.data_types[id] === 'bar';\n\t    };\n\t    c3_chart_internal_fn.isScatterType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return this.config.data_types[id] === 'scatter';\n\t    };\n\t    c3_chart_internal_fn.isPieType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return this.config.data_types[id] === 'pie';\n\t    };\n\t    c3_chart_internal_fn.isGaugeType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return this.config.data_types[id] === 'gauge';\n\t    };\n\t    c3_chart_internal_fn.isDonutType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return this.config.data_types[id] === 'donut';\n\t    };\n\t    c3_chart_internal_fn.isArcType = function (d) {\n\t        return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n\t    };\n\t    c3_chart_internal_fn.lineData = function (d) {\n\t        return this.isLineType(d) ? [d] : [];\n\t    };\n\t    c3_chart_internal_fn.arcData = function (d) {\n\t        return this.isArcType(d.data) ? [d] : [];\n\t    };\n\t    /* not used\n\t     function scatterData(d) {\n\t     return isScatterType(d) ? d.values : [];\n\t     }\n\t     */\n\t    c3_chart_internal_fn.barData = function (d) {\n\t        return this.isBarType(d) ? d.values : [];\n\t    };\n\t    c3_chart_internal_fn.lineOrScatterData = function (d) {\n\t        return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n\t    };\n\t    c3_chart_internal_fn.barOrLineData = function (d) {\n\t        return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n\t    };\n\t    c3_chart_internal_fn.isInterpolationType = function (type) {\n\t        return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;\n\t    };\n\t\n\t    c3_chart_internal_fn.initGrid = function () {\n\t        var $$ = this, config = $$.config, d3 = $$.d3;\n\t        $$.grid = $$.main.append('g')\n\t            .attr(\"clip-path\", $$.clipPathForGrid)\n\t            .attr('class', CLASS.grid);\n\t        if (config.grid_x_show) {\n\t            $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n\t        }\n\t        if (config.grid_y_show) {\n\t            $$.grid.append('g').attr('class', CLASS.ygrids);\n\t        }\n\t        if (config.grid_focus_show) {\n\t            $$.grid.append('g')\n\t                .attr(\"class\", CLASS.xgridFocus)\n\t                .append('line')\n\t                .attr('class', CLASS.xgridFocus);\n\t        }\n\t        $$.xgrid = d3.selectAll([]);\n\t        if (!config.grid_lines_front) { $$.initGridLines(); }\n\t    };\n\t    c3_chart_internal_fn.initGridLines = function () {\n\t        var $$ = this, d3 = $$.d3;\n\t        $$.gridLines = $$.main.append('g')\n\t            .attr(\"clip-path\", $$.clipPathForGrid)\n\t            .attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n\t        $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n\t        $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n\t        $$.xgridLines = d3.selectAll([]);\n\t    };\n\t    c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n\t        var $$ = this, config = $$.config, d3 = $$.d3,\n\t            xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n\t            tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n\t\n\t        $$.xgridAttr = config.axis_rotated ? {\n\t            'x1': 0,\n\t            'x2': $$.width,\n\t            'y1': function (d) { return $$.x(d) - tickOffset; },\n\t            'y2': function (d) { return $$.x(d) - tickOffset; }\n\t        } : {\n\t            'x1': function (d) { return $$.x(d) + tickOffset; },\n\t            'x2': function (d) { return $$.x(d) + tickOffset; },\n\t            'y1': 0,\n\t            'y2': $$.height\n\t        };\n\t\n\t        $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid)\n\t            .data(xgridData);\n\t        $$.xgrid.enter().append('line').attr(\"class\", CLASS.xgrid);\n\t        if (!withoutUpdate) {\n\t            $$.xgrid.attr($$.xgridAttr)\n\t                .style(\"opacity\", function () { return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1; });\n\t        }\n\t        $$.xgrid.exit().remove();\n\t    };\n\t\n\t    c3_chart_internal_fn.updateYGrid = function () {\n\t        var $$ = this, config = $$.config,\n\t            gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n\t        $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid)\n\t            .data(gridValues);\n\t        $$.ygrid.enter().append('line')\n\t            .attr('class', CLASS.ygrid);\n\t        $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0)\n\t            .attr(\"x2\", config.axis_rotated ? $$.y : $$.width)\n\t            .attr(\"y1\", config.axis_rotated ? 0 : $$.y)\n\t            .attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n\t        $$.ygrid.exit().remove();\n\t        $$.smoothLines($$.ygrid, 'grid');\n\t    };\n\t\n\t    c3_chart_internal_fn.gridTextAnchor = function (d) {\n\t        return d.position ? d.position : \"end\";\n\t    };\n\t    c3_chart_internal_fn.gridTextDx = function (d) {\n\t        return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n\t    };\n\t    c3_chart_internal_fn.xGridTextX = function (d) {\n\t        return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n\t    };\n\t    c3_chart_internal_fn.yGridTextX = function (d) {\n\t        return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n\t    };\n\t    c3_chart_internal_fn.updateGrid = function (duration) {\n\t        var $$ = this, main = $$.main, config = $$.config,\n\t            xgridLine, ygridLine, yv;\n\t\n\t        // hide if arc type\n\t        $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\t\n\t        main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n\t        if (config.grid_x_show) {\n\t            $$.updateXGrid();\n\t        }\n\t        $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine)\n\t            .data(config.grid_x_lines);\n\t        // enter\n\t        xgridLine = $$.xgridLines.enter().append('g')\n\t            .attr(\"class\", function (d) { return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : ''); });\n\t        xgridLine.append('line')\n\t            .style(\"opacity\", 0);\n\t        xgridLine.append('text')\n\t            .attr(\"text-anchor\", $$.gridTextAnchor)\n\t            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n\t            .attr('dx', $$.gridTextDx)\n\t            .attr('dy', -5)\n\t            .style(\"opacity\", 0);\n\t        // udpate\n\t        // done in d3.transition() of the end of this function\n\t        // exit\n\t        $$.xgridLines.exit().transition().duration(duration)\n\t            .style(\"opacity\", 0)\n\t            .remove();\n\t\n\t        // Y-Grid\n\t        if (config.grid_y_show) {\n\t            $$.updateYGrid();\n\t        }\n\t        $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine)\n\t            .data(config.grid_y_lines);\n\t        // enter\n\t        ygridLine = $$.ygridLines.enter().append('g')\n\t            .attr(\"class\", function (d) { return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : ''); });\n\t        ygridLine.append('line')\n\t            .style(\"opacity\", 0);\n\t        ygridLine.append('text')\n\t            .attr(\"text-anchor\", $$.gridTextAnchor)\n\t            .attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\")\n\t            .attr('dx', $$.gridTextDx)\n\t            .attr('dy', -5)\n\t            .style(\"opacity\", 0);\n\t        // update\n\t        yv = $$.yv.bind($$);\n\t        $$.ygridLines.select('line')\n\t          .transition().duration(duration)\n\t            .attr(\"x1\", config.axis_rotated ? yv : 0)\n\t            .attr(\"x2\", config.axis_rotated ? yv : $$.width)\n\t            .attr(\"y1\", config.axis_rotated ? 0 : yv)\n\t            .attr(\"y2\", config.axis_rotated ? $$.height : yv)\n\t            .style(\"opacity\", 1);\n\t        $$.ygridLines.select('text')\n\t          .transition().duration(duration)\n\t            .attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$))\n\t            .attr(\"y\", yv)\n\t            .text(function (d) { return d.text; })\n\t            .style(\"opacity\", 1);\n\t        // exit\n\t        $$.ygridLines.exit().transition().duration(duration)\n\t            .style(\"opacity\", 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawGrid = function (withTransition) {\n\t        var $$ = this, config = $$.config, xv = $$.xv.bind($$),\n\t            lines = $$.xgridLines.select('line'),\n\t            texts = $$.xgridLines.select('text');\n\t        return [\n\t            (withTransition ? lines.transition() : lines)\n\t                .attr(\"x1\", config.axis_rotated ? 0 : xv)\n\t                .attr(\"x2\", config.axis_rotated ? $$.width : xv)\n\t                .attr(\"y1\", config.axis_rotated ? xv : 0)\n\t                .attr(\"y2\", config.axis_rotated ? xv : $$.height)\n\t                .style(\"opacity\", 1),\n\t            (withTransition ? texts.transition() : texts)\n\t                .attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$))\n\t                .attr(\"y\", xv)\n\t                .text(function (d) { return d.text; })\n\t                .style(\"opacity\", 1)\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.showXGridFocus = function (selectedData) {\n\t        var $$ = this, config = $$.config,\n\t            dataToShow = selectedData.filter(function (d) { return d && isValue(d.value); }),\n\t            focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n\t            xx = $$.xx.bind($$);\n\t        if (! config.tooltip_show) { return; }\n\t        // Hide when scatter plot exists\n\t        if ($$.hasType('scatter') || $$.hasArcType()) { return; }\n\t        focusEl\n\t            .style(\"visibility\", \"visible\")\n\t            .data([dataToShow[0]])\n\t            .attr(config.axis_rotated ? 'y1' : 'x1', xx)\n\t            .attr(config.axis_rotated ? 'y2' : 'x2', xx);\n\t        $$.smoothLines(focusEl, 'grid');\n\t    };\n\t    c3_chart_internal_fn.hideXGridFocus = function () {\n\t        this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n\t    };\n\t    c3_chart_internal_fn.updateXgridFocus = function () {\n\t        var $$ = this, config = $$.config;\n\t        $$.main.select('line.' + CLASS.xgridFocus)\n\t            .attr(\"x1\", config.axis_rotated ? 0 : -10)\n\t            .attr(\"x2\", config.axis_rotated ? $$.width : -10)\n\t            .attr(\"y1\", config.axis_rotated ? -10 : 0)\n\t            .attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n\t    };\n\t    c3_chart_internal_fn.generateGridData = function (type, scale) {\n\t        var $$ = this,\n\t            gridData = [], xDomain, firstYear, lastYear, i,\n\t            tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n\t        if (type === 'year') {\n\t            xDomain = $$.getXDomain();\n\t            firstYear = xDomain[0].getFullYear();\n\t            lastYear = xDomain[1].getFullYear();\n\t            for (i = firstYear; i <= lastYear; i++) {\n\t                gridData.push(new Date(i + '-01-01 00:00:00'));\n\t            }\n\t        } else {\n\t            gridData = scale.ticks(10);\n\t            if (gridData.length > tickNum) { // use only int\n\t                gridData = gridData.filter(function (d) { return (\"\" + d).indexOf('.') < 0; });\n\t            }\n\t        }\n\t        return gridData;\n\t    };\n\t    c3_chart_internal_fn.getGridFilterToRemove = function (params) {\n\t        return params ? function (line) {\n\t            var found = false;\n\t            [].concat(params).forEach(function (param) {\n\t                if ((('value' in param && line.value === param.value) || ('class' in param && line['class'] === param['class']))) {\n\t                    found = true;\n\t                }\n\t            });\n\t            return found;\n\t        } : function () { return true; };\n\t    };\n\t    c3_chart_internal_fn.removeGridLines = function (params, forX) {\n\t        var $$ = this, config = $$.config,\n\t            toRemove = $$.getGridFilterToRemove(params),\n\t            toShow = function (line) { return !toRemove(line); },\n\t            classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n\t            classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n\t        $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove)\n\t            .transition().duration(config.transition_duration)\n\t            .style('opacity', 0).remove();\n\t        if (forX) {\n\t            config.grid_x_lines = config.grid_x_lines.filter(toShow);\n\t        } else {\n\t            config.grid_y_lines = config.grid_y_lines.filter(toShow);\n\t        }\n\t    };\n\t\n\t    c3_chart_internal_fn.initTooltip = function () {\n\t        var $$ = this, config = $$.config, i;\n\t        $$.tooltip = $$.selectChart\n\t            .style(\"position\", \"relative\")\n\t          .append(\"div\")\n\t            .attr('class', CLASS.tooltipContainer)\n\t            .style(\"position\", \"absolute\")\n\t            .style(\"pointer-events\", \"none\")\n\t            .style(\"display\", \"none\");\n\t        // Show tooltip if needed\n\t        if (config.tooltip_init_show) {\n\t            if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n\t                config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n\t                for (i = 0; i < $$.data.targets[0].values.length; i++) {\n\t                    if (($$.data.targets[0].values[i].x - config.tooltip_init_x) === 0) { break; }\n\t                }\n\t                config.tooltip_init_x = i;\n\t            }\n\t            $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n\t                return $$.addName(d.values[config.tooltip_init_x]);\n\t            }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n\t            $$.tooltip.style(\"top\", config.tooltip_init_position.top)\n\t                .style(\"left\", config.tooltip_init_position.left)\n\t                .style(\"display\", \"block\");\n\t        }\n\t    };\n\t    c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n\t        var $$ = this, config = $$.config,\n\t            titleFormat = config.tooltip_format_title || defaultTitleFormat,\n\t            nameFormat = config.tooltip_format_name || function (name) { return name; },\n\t            valueFormat = config.tooltip_format_value || defaultValueFormat,\n\t            text, i, title, value, name, bgcolor,\n\t            orderAsc = $$.isOrderAsc();\n\t\n\t        if (config.data_groups.length === 0) {\n\t            d.sort(function(a, b){\n\t                var v1 = a ? a.value : null, v2 = b ? b.value : null;\n\t                return orderAsc ? v1 - v2 : v2 - v1;\n\t            });\n\t        } else {\n\t            var ids = $$.orderTargets($$.data.targets).map(function (i) {\n\t                return i.id;\n\t            });\n\t            d.sort(function(a, b) {\n\t                var v1 = a ? a.value : null, v2 = b ? b.value : null;\n\t                if (v1 > 0 && v2 > 0) {\n\t                    v1 = a ? ids.indexOf(a.id) : null;\n\t                    v2 = b ? ids.indexOf(b.id) : null;\n\t                }\n\t                return orderAsc ? v1 - v2 : v2 - v1;\n\t            });\n\t        }\n\t\n\t        for (i = 0; i < d.length; i++) {\n\t            if (! (d[i] && (d[i].value || d[i].value === 0))) { continue; }\n\t\n\t            if (! text) {\n\t                title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n\t                text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n\t            }\n\t\n\t            value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n\t            if (value !== undefined) {\n\t                // Skip elements when their name is set to null\n\t                if (d[i].name === null) { continue; }\n\t                name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n\t                bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n\t\n\t                text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n\t                text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n\t                text += \"<td class='value'>\" + value + \"</td>\";\n\t                text += \"</tr>\";\n\t            }\n\t        }\n\t        return text + \"</table>\";\n\t    };\n\t    c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n\t        var $$ = this, config = $$.config, d3 = $$.d3;\n\t        var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n\t        var forArc = $$.hasArcType(),\n\t            mouse = d3.mouse(element);\n\t      // Determin tooltip position\n\t        if (forArc) {\n\t            tooltipLeft = (($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2) + mouse[0];\n\t            tooltipTop = ($$.height / 2) + mouse[1] + 20;\n\t        } else {\n\t            svgLeft = $$.getSvgLeft(true);\n\t            if (config.axis_rotated) {\n\t                tooltipLeft = svgLeft + mouse[0] + 100;\n\t                tooltipRight = tooltipLeft + tWidth;\n\t                chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n\t                tooltipTop = $$.x(dataToShow[0].x) + 20;\n\t            } else {\n\t                tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n\t                tooltipRight = tooltipLeft + tWidth;\n\t                chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n\t                tooltipTop = mouse[1] + 15;\n\t            }\n\t\n\t            if (tooltipRight > chartRight) {\n\t                // 20 is needed for Firefox to keep tooltip width\n\t                tooltipLeft -= tooltipRight - chartRight + 20;\n\t            }\n\t            if (tooltipTop + tHeight > $$.currentHeight) {\n\t                tooltipTop -= tHeight + 30;\n\t            }\n\t        }\n\t        if (tooltipTop < 0) {\n\t            tooltipTop = 0;\n\t        }\n\t        return {top: tooltipTop, left: tooltipLeft};\n\t    };\n\t    c3_chart_internal_fn.showTooltip = function (selectedData, element) {\n\t        var $$ = this, config = $$.config;\n\t        var tWidth, tHeight, position;\n\t        var forArc = $$.hasArcType(),\n\t            dataToShow = selectedData.filter(function (d) { return d && isValue(d.value); }),\n\t            positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n\t        if (dataToShow.length === 0 || !config.tooltip_show) {\n\t            return;\n\t        }\n\t        $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\n\t\n\t        // Get tooltip dimensions\n\t        tWidth = $$.tooltip.property('offsetWidth');\n\t        tHeight = $$.tooltip.property('offsetHeight');\n\t\n\t        position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\n\t        // Set tooltip\n\t        $$.tooltip\n\t            .style(\"top\", position.top + \"px\")\n\t            .style(\"left\", position.left + 'px');\n\t    };\n\t    c3_chart_internal_fn.hideTooltip = function () {\n\t        this.tooltip.style(\"display\", \"none\");\n\t    };\n\t\n\t    c3_chart_internal_fn.initLegend = function () {\n\t        var $$ = this;\n\t        $$.legendItemTextBox = {};\n\t        $$.legendHasRendered = false;\n\t        $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n\t        if (!$$.config.legend_show) {\n\t            $$.legend.style('visibility', 'hidden');\n\t            $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n\t            return;\n\t        }\n\t        // MEMO: call here to update legend box and tranlate for all\n\t        // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n\t        $$.updateLegendWithDefaults();\n\t    };\n\t    c3_chart_internal_fn.updateLegendWithDefaults = function () {\n\t        var $$ = this;\n\t        $$.updateLegend($$.mapToIds($$.data.targets), {withTransform: false, withTransitionForTransform: false, withTransition: false});\n\t    };\n\t    c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n\t        var $$ = this, config = $$.config, insetLegendPosition = {\n\t            top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n\t            left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n\t        };\n\t\n\t        $$.margin3 = {\n\t            top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n\t            right: NaN,\n\t            bottom: 0,\n\t            left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n\t        };\n\t    };\n\t    c3_chart_internal_fn.transformLegend = function (withTransition) {\n\t        var $$ = this;\n\t        (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n\t    };\n\t    c3_chart_internal_fn.updateLegendStep = function (step) {\n\t        this.legendStep = step;\n\t    };\n\t    c3_chart_internal_fn.updateLegendItemWidth = function (w) {\n\t        this.legendItemWidth = w;\n\t    };\n\t    c3_chart_internal_fn.updateLegendItemHeight = function (h) {\n\t        this.legendItemHeight = h;\n\t    };\n\t    c3_chart_internal_fn.getLegendWidth = function () {\n\t        var $$ = this;\n\t        return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n\t    };\n\t    c3_chart_internal_fn.getLegendHeight = function () {\n\t        var $$ = this, h = 0;\n\t        if ($$.config.legend_show) {\n\t            if ($$.isLegendRight) {\n\t                h = $$.currentHeight;\n\t            } else {\n\t                h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n\t            }\n\t        }\n\t        return h;\n\t    };\n\t    c3_chart_internal_fn.opacityForLegend = function (legendItem) {\n\t        return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n\t    };\n\t    c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n\t        return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n\t    };\n\t    c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n\t        var $$ = this;\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t        $$.legend.selectAll('.' + CLASS.legendItem)\n\t            .filter(function (id) { return targetIds.indexOf(id) >= 0; })\n\t            .classed(CLASS.legendItemFocused, focus)\n\t          .transition().duration(100)\n\t            .style('opacity', function () {\n\t                var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n\t                return opacity.call($$, $$.d3.select(this));\n\t            });\n\t    };\n\t    c3_chart_internal_fn.revertLegend = function () {\n\t        var $$ = this, d3 = $$.d3;\n\t        $$.legend.selectAll('.' + CLASS.legendItem)\n\t            .classed(CLASS.legendItemFocused, false)\n\t            .transition().duration(100)\n\t            .style('opacity', function () { return $$.opacityForLegend(d3.select(this)); });\n\t    };\n\t    c3_chart_internal_fn.showLegend = function (targetIds) {\n\t        var $$ = this, config = $$.config;\n\t        if (!config.legend_show) {\n\t            config.legend_show = true;\n\t            $$.legend.style('visibility', 'visible');\n\t            if (!$$.legendHasRendered) {\n\t                $$.updateLegendWithDefaults();\n\t            }\n\t        }\n\t        $$.removeHiddenLegendIds(targetIds);\n\t        $$.legend.selectAll($$.selectorLegends(targetIds))\n\t            .style('visibility', 'visible')\n\t            .transition()\n\t            .style('opacity', function () { return $$.opacityForLegend($$.d3.select(this)); });\n\t    };\n\t    c3_chart_internal_fn.hideLegend = function (targetIds) {\n\t        var $$ = this, config = $$.config;\n\t        if (config.legend_show && isEmpty(targetIds)) {\n\t            config.legend_show = false;\n\t            $$.legend.style('visibility', 'hidden');\n\t        }\n\t        $$.addHiddenLegendIds(targetIds);\n\t        $$.legend.selectAll($$.selectorLegends(targetIds))\n\t            .style('opacity', 0)\n\t            .style('visibility', 'hidden');\n\t    };\n\t    c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n\t        this.legendItemTextBox = {};\n\t    };\n\t    c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n\t        var $$ = this, config = $$.config;\n\t        var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n\t        var paddingTop = 4, paddingRight = 10, maxWidth = 0, maxHeight = 0, posMin = 10, tileWidth = config.legend_item_tile_width + 5;\n\t        var l, totalLength = 0, offsets = {}, widths = {}, heights = {}, margins = [0], steps = {}, step = 0;\n\t        var withTransition, withTransitionForTransform;\n\t        var texts, rects, tiles, background;\n\t\n\t        // Skip elements when their name is set to null\n\t        targetIds = targetIds.filter(function(id) {\n\t            return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n\t        });\n\t\n\t        options = options || {};\n\t        withTransition = getOption(options, \"withTransition\", true);\n\t        withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\t\n\t        function getTextBox(textElement, id) {\n\t            if (!$$.legendItemTextBox[id]) {\n\t                $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n\t            }\n\t            return $$.legendItemTextBox[id];\n\t        }\n\t\n\t        function updatePositions(textElement, id, index) {\n\t            var reset = index === 0, isLast = index === targetIds.length - 1,\n\t                box = getTextBox(textElement, id),\n\t                itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n\t                itemHeight = box.height + paddingTop,\n\t                itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n\t                areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n\t                margin, maxLength;\n\t\n\t            // MEMO: care about condifion of step, totalLength\n\t            function updateValues(id, withoutStep) {\n\t                if (!withoutStep) {\n\t                    margin = (areaLength - totalLength - itemLength) / 2;\n\t                    if (margin < posMin) {\n\t                        margin = (areaLength - itemLength) / 2;\n\t                        totalLength = 0;\n\t                        step++;\n\t                    }\n\t                }\n\t                steps[id] = step;\n\t                margins[step] = $$.isLegendInset ? 10 : margin;\n\t                offsets[id] = totalLength;\n\t                totalLength += itemLength;\n\t            }\n\t\n\t            if (reset) {\n\t                totalLength = 0;\n\t                step = 0;\n\t                maxWidth = 0;\n\t                maxHeight = 0;\n\t            }\n\t\n\t            if (config.legend_show && !$$.isLegendToShow(id)) {\n\t                widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n\t                return;\n\t            }\n\t\n\t            widths[id] = itemWidth;\n\t            heights[id] = itemHeight;\n\t\n\t            if (!maxWidth || itemWidth >= maxWidth) { maxWidth = itemWidth; }\n\t            if (!maxHeight || itemHeight >= maxHeight) { maxHeight = itemHeight; }\n\t            maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\t\n\t            if (config.legend_equally) {\n\t                Object.keys(widths).forEach(function (id) { widths[id] = maxWidth; });\n\t                Object.keys(heights).forEach(function (id) { heights[id] = maxHeight; });\n\t                margin = (areaLength - maxLength * targetIds.length) / 2;\n\t                if (margin < posMin) {\n\t                    totalLength = 0;\n\t                    step = 0;\n\t                    targetIds.forEach(function (id) { updateValues(id); });\n\t                }\n\t                else {\n\t                    updateValues(id, true);\n\t                }\n\t            } else {\n\t                updateValues(id);\n\t            }\n\t        }\n\t\n\t        if ($$.isLegendInset) {\n\t            step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n\t            $$.updateLegendStep(step);\n\t        }\n\t\n\t        if ($$.isLegendRight) {\n\t            xForLegend = function (id) { return maxWidth * steps[id]; };\n\t            yForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n\t        } else if ($$.isLegendInset) {\n\t            xForLegend = function (id) { return maxWidth * steps[id] + 10; };\n\t            yForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n\t        } else {\n\t            xForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n\t            yForLegend = function (id) { return maxHeight * steps[id]; };\n\t        }\n\t        xForLegendText = function (id, i) { return xForLegend(id, i) + 4 + config.legend_item_tile_width; };\n\t        yForLegendText = function (id, i) { return yForLegend(id, i) + 9; };\n\t        xForLegendRect = function (id, i) { return xForLegend(id, i); };\n\t        yForLegendRect = function (id, i) { return yForLegend(id, i) - 5; };\n\t        x1ForLegendTile = function (id, i) { return xForLegend(id, i) - 2; };\n\t        x2ForLegendTile = function (id, i) { return xForLegend(id, i) - 2 + config.legend_item_tile_width; };\n\t        yForLegendTile = function (id, i) { return yForLegend(id, i) + 4; };\n\t\n\t        // Define g for legend area\n\t        l = $$.legend.selectAll('.' + CLASS.legendItem)\n\t            .data(targetIds)\n\t            .enter().append('g')\n\t            .attr('class', function (id) { return $$.generateClass(CLASS.legendItem, id); })\n\t            .style('visibility', function (id) { return $$.isLegendToShow(id) ? 'visible' : 'hidden'; })\n\t            .style('cursor', 'pointer')\n\t            .on('click', function (id) {\n\t                if (config.legend_item_onclick) {\n\t                    config.legend_item_onclick.call($$, id);\n\t                } else {\n\t                    if ($$.d3.event.altKey) {\n\t                        $$.api.hide();\n\t                        $$.api.show(id);\n\t                    } else {\n\t                        $$.api.toggle(id);\n\t                        $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n\t                    }\n\t                }\n\t            })\n\t            .on('mouseover', function (id) {\n\t                if (config.legend_item_onmouseover) {\n\t                    config.legend_item_onmouseover.call($$, id);\n\t                }\n\t                else {\n\t                    $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n\t                    if (!$$.transiting && $$.isTargetToShow(id)) {\n\t                        $$.api.focus(id);\n\t                    }\n\t                }\n\t            })\n\t            .on('mouseout', function (id) {\n\t                if (config.legend_item_onmouseout) {\n\t                    config.legend_item_onmouseout.call($$, id);\n\t                }\n\t                else {\n\t                    $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n\t                    $$.api.revert();\n\t                }\n\t            });\n\t        l.append('text')\n\t            .text(function (id) { return isDefined(config.data_names[id]) ? config.data_names[id] : id; })\n\t            .each(function (id, i) { updatePositions(this, id, i); })\n\t            .style(\"pointer-events\", \"none\")\n\t            .attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200)\n\t            .attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n\t        l.append('rect')\n\t            .attr(\"class\", CLASS.legendItemEvent)\n\t            .style('fill-opacity', 0)\n\t            .attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200)\n\t            .attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n\t        l.append('line')\n\t            .attr('class', CLASS.legendItemTile)\n\t            .style('stroke', $$.color)\n\t            .style(\"pointer-events\", \"none\")\n\t            .attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200)\n\t            .attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile)\n\t            .attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200)\n\t            .attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile)\n\t            .attr('stroke-width', config.legend_item_tile_height);\n\t\n\t        // Set background for inset legend\n\t        background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n\t        if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n\t            background = $$.legend.insert('g', '.' + CLASS.legendItem)\n\t                .attr(\"class\", CLASS.legendBackground)\n\t                .append('rect');\n\t        }\n\t\n\t        texts = $$.legend.selectAll('text')\n\t            .data(targetIds)\n\t            .text(function (id) { return isDefined(config.data_names[id]) ? config.data_names[id] : id; }) // MEMO: needed for update\n\t            .each(function (id, i) { updatePositions(this, id, i); });\n\t        (withTransition ? texts.transition() : texts)\n\t            .attr('x', xForLegendText)\n\t            .attr('y', yForLegendText);\n\t\n\t        rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent)\n\t            .data(targetIds);\n\t        (withTransition ? rects.transition() : rects)\n\t            .attr('width', function (id) { return widths[id]; })\n\t            .attr('height', function (id) { return heights[id]; })\n\t            .attr('x', xForLegendRect)\n\t            .attr('y', yForLegendRect);\n\t\n\t        tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile)\n\t                .data(targetIds);\n\t            (withTransition ? tiles.transition() : tiles)\n\t                .style('stroke', $$.color)\n\t                .attr('x1', x1ForLegendTile)\n\t                .attr('y1', yForLegendTile)\n\t                .attr('x2', x2ForLegendTile)\n\t                .attr('y2', yForLegendTile);\n\t\n\t        if (background) {\n\t            (withTransition ? background.transition() : background)\n\t                .attr('height', $$.getLegendHeight() - 12)\n\t                .attr('width', maxWidth * (step + 1) + 10);\n\t        }\n\t\n\t        // toggle legend state\n\t        $$.legend.selectAll('.' + CLASS.legendItem)\n\t            .classed(CLASS.legendItemHidden, function (id) { return !$$.isTargetToShow(id); });\n\t\n\t        // Update all to reflect change of legend\n\t        $$.updateLegendItemWidth(maxWidth);\n\t        $$.updateLegendItemHeight(maxHeight);\n\t        $$.updateLegendStep(step);\n\t        // Update size and scale\n\t        $$.updateSizes();\n\t        $$.updateScales();\n\t        $$.updateSvgSize();\n\t        // Update g positions\n\t        $$.transformAll(withTransitionForTransform, transitions);\n\t        $$.legendHasRendered = true;\n\t    };\n\t\n\t    c3_chart_internal_fn.initTitle = function () {\n\t        var $$ = this;\n\t        $$.title = $$.svg.append(\"text\")\n\t              .text($$.config.title_text)\n\t              .attr(\"class\", $$.CLASS.title);\n\t    };\n\t    c3_chart_internal_fn.redrawTitle = function () {\n\t        var $$ = this;\n\t        $$.title\n\t              .attr(\"x\", $$.xForTitle.bind($$))\n\t              .attr(\"y\", $$.yForTitle.bind($$));\n\t    };\n\t    c3_chart_internal_fn.xForTitle = function () {\n\t        var $$ = this, config = $$.config, position = config.title_position || 'left', x;\n\t        if (position.indexOf('right') >= 0) {\n\t            x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n\t        } else if (position.indexOf('center') >= 0) {\n\t            x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n\t        } else { // left\n\t            x = config.title_padding.left;\n\t        }\n\t        return x;\n\t    };\n\t    c3_chart_internal_fn.yForTitle = function () {\n\t        var $$ = this;\n\t        return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n\t    };\n\t    c3_chart_internal_fn.getTitlePadding = function() {\n\t        var $$ = this;\n\t        return $$.yForTitle() + $$.config.title_padding.bottom;\n\t    };\n\t\n\t    function Axis(owner) {\n\t        API.call(this, owner);\n\t    }\n\t\n\t    inherit(API, Axis);\n\t\n\t    Axis.prototype.init = function init() {\n\t\n\t        var $$ = this.owner, config = $$.config, main = $$.main;\n\t        $$.axes.x = main.append(\"g\")\n\t            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisX)\n\t            .attr(\"clip-path\", $$.clipPathForXAxis)\n\t            .attr(\"transform\", $$.getTranslate('x'))\n\t            .style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n\t        $$.axes.x.append(\"text\")\n\t            .attr(\"class\", CLASS.axisXLabel)\n\t            .attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\")\n\t            .style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n\t        $$.axes.y = main.append(\"g\")\n\t            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisY)\n\t            .attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis)\n\t            .attr(\"transform\", $$.getTranslate('y'))\n\t            .style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n\t        $$.axes.y.append(\"text\")\n\t            .attr(\"class\", CLASS.axisYLabel)\n\t            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n\t            .style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n\t\n\t        $$.axes.y2 = main.append(\"g\")\n\t            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2)\n\t            // clip-path?\n\t            .attr(\"transform\", $$.getTranslate('y2'))\n\t            .style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n\t        $$.axes.y2.append(\"text\")\n\t            .attr(\"class\", CLASS.axisY2Label)\n\t            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n\t            .style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n\t    };\n\t    Axis.prototype.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n\t        var $$ = this.owner, config = $$.config,\n\t            axisParams = {\n\t                isCategory: $$.isCategorized(),\n\t                withOuterTick: withOuterTick,\n\t                tickMultiline: config.axis_x_tick_multiline,\n\t                tickWidth: config.axis_x_tick_width,\n\t                tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n\t                withoutTransition: withoutTransition,\n\t            },\n\t            axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient);\n\t\n\t        if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n\t            tickValues = tickValues.map(function (v) { return $$.parseDate(v); });\n\t        }\n\t\n\t        // Set tick\n\t        axis.tickFormat(tickFormat).tickValues(tickValues);\n\t        if ($$.isCategorized()) {\n\t            axis.tickCentered(config.axis_x_tick_centered);\n\t            if (isEmpty(config.axis_x_tick_culling)) {\n\t                config.axis_x_tick_culling = false;\n\t            }\n\t        }\n\t\n\t        return axis;\n\t    };\n\t    Axis.prototype.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n\t        var $$ = this.owner, config = $$.config, tickValues;\n\t        if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n\t            tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n\t        }\n\t        if (axis) {\n\t            axis.tickValues(tickValues);\n\t        } else {\n\t            $$.xAxis.tickValues(tickValues);\n\t            $$.subXAxis.tickValues(tickValues);\n\t        }\n\t        return tickValues;\n\t    };\n\t    Axis.prototype.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n\t        var $$ = this.owner, config = $$.config,\n\t            axisParams = {\n\t                withOuterTick: withOuterTick,\n\t                withoutTransition: withoutTransition,\n\t                tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n\t            },\n\t            axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient).tickFormat(tickFormat);\n\t        if ($$.isTimeSeriesY()) {\n\t            axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);\n\t        } else {\n\t            axis.tickValues(tickValues);\n\t        }\n\t        return axis;\n\t    };\n\t    Axis.prototype.getId = function getId(id) {\n\t        var config = this.owner.config;\n\t        return id in config.data_axes ? config.data_axes[id] : 'y';\n\t    };\n\t    Axis.prototype.getXAxisTickFormat = function getXAxisTickFormat() {\n\t        var $$ = this.owner, config = $$.config,\n\t            format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) { return v < 0 ? v.toFixed(0) : v; };\n\t        if (config.axis_x_tick_format) {\n\t            if (isFunction(config.axis_x_tick_format)) {\n\t                format = config.axis_x_tick_format;\n\t            } else if ($$.isTimeSeries()) {\n\t                format = function (date) {\n\t                    return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n\t                };\n\t            }\n\t        }\n\t        return isFunction(format) ? function (v) { return format.call($$, v); } : format;\n\t    };\n\t    Axis.prototype.getTickValues = function getTickValues(tickValues, axis) {\n\t        return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n\t    };\n\t    Axis.prototype.getXAxisTickValues = function getXAxisTickValues() {\n\t        return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n\t    };\n\t    Axis.prototype.getYAxisTickValues = function getYAxisTickValues() {\n\t        return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n\t    };\n\t    Axis.prototype.getY2AxisTickValues = function getY2AxisTickValues() {\n\t        return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n\t    };\n\t    Axis.prototype.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n\t        var $$ = this.owner, config = $$.config, option;\n\t        if (axisId === 'y') {\n\t            option = config.axis_y_label;\n\t        } else if (axisId === 'y2') {\n\t            option = config.axis_y2_label;\n\t        } else if (axisId === 'x') {\n\t            option = config.axis_x_label;\n\t        }\n\t        return option;\n\t    };\n\t    Axis.prototype.getLabelText = function getLabelText(axisId) {\n\t        var option = this.getLabelOptionByAxisId(axisId);\n\t        return isString(option) ? option : option ? option.text : null;\n\t    };\n\t    Axis.prototype.setLabelText = function setLabelText(axisId, text) {\n\t        var $$ = this.owner, config = $$.config,\n\t            option = this.getLabelOptionByAxisId(axisId);\n\t        if (isString(option)) {\n\t            if (axisId === 'y') {\n\t                config.axis_y_label = text;\n\t            } else if (axisId === 'y2') {\n\t                config.axis_y2_label = text;\n\t            } else if (axisId === 'x') {\n\t                config.axis_x_label = text;\n\t            }\n\t        } else if (option) {\n\t            option.text = text;\n\t        }\n\t    };\n\t    Axis.prototype.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n\t        var option = this.getLabelOptionByAxisId(axisId),\n\t            position = (option && typeof option === 'object' && option.position) ? option.position : defaultPosition;\n\t        return {\n\t            isInner: position.indexOf('inner') >= 0,\n\t            isOuter: position.indexOf('outer') >= 0,\n\t            isLeft: position.indexOf('left') >= 0,\n\t            isCenter: position.indexOf('center') >= 0,\n\t            isRight: position.indexOf('right') >= 0,\n\t            isTop: position.indexOf('top') >= 0,\n\t            isMiddle: position.indexOf('middle') >= 0,\n\t            isBottom: position.indexOf('bottom') >= 0\n\t        };\n\t    };\n\t    Axis.prototype.getXAxisLabelPosition = function getXAxisLabelPosition() {\n\t        return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n\t    };\n\t    Axis.prototype.getYAxisLabelPosition = function getYAxisLabelPosition() {\n\t        return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n\t    };\n\t    Axis.prototype.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n\t        return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n\t    };\n\t    Axis.prototype.getLabelPositionById = function getLabelPositionById(id) {\n\t        return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n\t    };\n\t    Axis.prototype.textForXAxisLabel = function textForXAxisLabel() {\n\t        return this.getLabelText('x');\n\t    };\n\t    Axis.prototype.textForYAxisLabel = function textForYAxisLabel() {\n\t        return this.getLabelText('y');\n\t    };\n\t    Axis.prototype.textForY2AxisLabel = function textForY2AxisLabel() {\n\t        return this.getLabelText('y2');\n\t    };\n\t    Axis.prototype.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n\t        var $$ = this.owner;\n\t        if (forHorizontal) {\n\t            return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n\t        } else {\n\t            return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n\t        }\n\t    };\n\t    Axis.prototype.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n\t        if (forHorizontal) {\n\t            return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n\t        } else {\n\t            return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n\t        }\n\t    };\n\t    Axis.prototype.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n\t        if (forHorizontal) {\n\t            return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n\t        } else {\n\t            return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n\t        }\n\t    };\n\t    Axis.prototype.xForXAxisLabel = function xForXAxisLabel() {\n\t        return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n\t    };\n\t    Axis.prototype.xForYAxisLabel = function xForYAxisLabel() {\n\t        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n\t    };\n\t    Axis.prototype.xForY2AxisLabel = function xForY2AxisLabel() {\n\t        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n\t    };\n\t    Axis.prototype.dxForXAxisLabel = function dxForXAxisLabel() {\n\t        return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n\t    };\n\t    Axis.prototype.dxForYAxisLabel = function dxForYAxisLabel() {\n\t        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n\t    };\n\t    Axis.prototype.dxForY2AxisLabel = function dxForY2AxisLabel() {\n\t        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n\t    };\n\t    Axis.prototype.dyForXAxisLabel = function dyForXAxisLabel() {\n\t        var $$ = this.owner, config = $$.config,\n\t            position = this.getXAxisLabelPosition();\n\t        if (config.axis_rotated) {\n\t            return position.isInner ? \"1.2em\" : -25 - this.getMaxTickWidth('x');\n\t        } else {\n\t            return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n\t        }\n\t    };\n\t    Axis.prototype.dyForYAxisLabel = function dyForYAxisLabel() {\n\t        var $$ = this.owner,\n\t            position = this.getYAxisLabelPosition();\n\t        if ($$.config.axis_rotated) {\n\t            return position.isInner ? \"-0.5em\" : \"3em\";\n\t        } else {\n\t            return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : (this.getMaxTickWidth('y') + 10));\n\t        }\n\t    };\n\t    Axis.prototype.dyForY2AxisLabel = function dyForY2AxisLabel() {\n\t        var $$ = this.owner,\n\t            position = this.getY2AxisLabelPosition();\n\t        if ($$.config.axis_rotated) {\n\t            return position.isInner ? \"1.2em\" : \"-2.2em\";\n\t        } else {\n\t            return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : (this.getMaxTickWidth('y2') + 15));\n\t        }\n\t    };\n\t    Axis.prototype.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n\t        var $$ = this.owner;\n\t        return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n\t    };\n\t    Axis.prototype.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n\t        var $$ = this.owner;\n\t        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n\t    };\n\t    Axis.prototype.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n\t        var $$ = this.owner;\n\t        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n\t    };\n\t    Axis.prototype.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n\t        var $$ = this.owner, config = $$.config,\n\t            maxWidth = 0, targetsToShow, scale, axis, dummy, svg;\n\t        if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n\t            return $$.currentMaxTickWidths[id];\n\t        }\n\t        if ($$.svg) {\n\t            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n\t            if (id === 'y') {\n\t                scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n\t                axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n\t            } else if (id === 'y2') {\n\t                scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n\t                axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n\t            } else {\n\t                scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n\t                axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n\t                this.updateXAxisTickValues(targetsToShow, axis);\n\t            }\n\t            dummy = $$.d3.select('body').append('div').classed('c3', true);\n\t            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n\t            svg.append('g').call(axis).each(function () {\n\t                $$.d3.select(this).selectAll('text').each(function () {\n\t                    var box = this.getBoundingClientRect();\n\t                    if (maxWidth < box.width) { maxWidth = box.width; }\n\t                });\n\t                dummy.remove();\n\t            });\n\t        }\n\t        $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n\t        return $$.currentMaxTickWidths[id];\n\t    };\n\t\n\t    Axis.prototype.updateLabels = function updateLabels(withTransition) {\n\t        var $$ = this.owner;\n\t        var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n\t            axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n\t            axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n\t        (withTransition ? axisXLabel.transition() : axisXLabel)\n\t            .attr(\"x\", this.xForXAxisLabel.bind(this))\n\t            .attr(\"dx\", this.dxForXAxisLabel.bind(this))\n\t            .attr(\"dy\", this.dyForXAxisLabel.bind(this))\n\t            .text(this.textForXAxisLabel.bind(this));\n\t        (withTransition ? axisYLabel.transition() : axisYLabel)\n\t            .attr(\"x\", this.xForYAxisLabel.bind(this))\n\t            .attr(\"dx\", this.dxForYAxisLabel.bind(this))\n\t            .attr(\"dy\", this.dyForYAxisLabel.bind(this))\n\t            .text(this.textForYAxisLabel.bind(this));\n\t        (withTransition ? axisY2Label.transition() : axisY2Label)\n\t            .attr(\"x\", this.xForY2AxisLabel.bind(this))\n\t            .attr(\"dx\", this.dxForY2AxisLabel.bind(this))\n\t            .attr(\"dy\", this.dyForY2AxisLabel.bind(this))\n\t            .text(this.textForY2AxisLabel.bind(this));\n\t    };\n\t    Axis.prototype.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n\t        var p = typeof padding === 'number' ? padding : padding[key];\n\t        if (!isValue(p)) {\n\t            return defaultValue;\n\t        }\n\t        if (padding.unit === 'ratio') {\n\t            return padding[key] * domainLength;\n\t        }\n\t        // assume padding is pixels if unit is not specified\n\t        return this.convertPixelsToAxisPadding(p, domainLength);\n\t    };\n\t    Axis.prototype.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n\t        var $$ = this.owner,\n\t            length = $$.config.axis_rotated ? $$.width : $$.height;\n\t        return domainLength * (pixels / length);\n\t    };\n\t    Axis.prototype.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n\t        var tickValues = values, targetCount, start, end, count, interval, i, tickValue;\n\t        if (tickCount) {\n\t            targetCount = isFunction(tickCount) ? tickCount() : tickCount;\n\t            // compute ticks according to tickCount\n\t            if (targetCount === 1) {\n\t                tickValues = [values[0]];\n\t            } else if (targetCount === 2) {\n\t                tickValues = [values[0], values[values.length - 1]];\n\t            } else if (targetCount > 2) {\n\t                count = targetCount - 2;\n\t                start = values[0];\n\t                end = values[values.length - 1];\n\t                interval = (end - start) / (count + 1);\n\t                // re-construct unique values\n\t                tickValues = [start];\n\t                for (i = 0; i < count; i++) {\n\t                    tickValue = +start + interval * (i + 1);\n\t                    tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n\t                }\n\t                tickValues.push(end);\n\t            }\n\t        }\n\t        if (!forTimeSeries) { tickValues = tickValues.sort(function (a, b) { return a - b; }); }\n\t        return tickValues;\n\t    };\n\t    Axis.prototype.generateTransitions = function generateTransitions(duration) {\n\t        var $$ = this.owner, axes = $$.axes;\n\t        return {\n\t            axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n\t            axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n\t            axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n\t            axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n\t        };\n\t    };\n\t    Axis.prototype.redraw = function redraw(transitions, isHidden) {\n\t        var $$ = this.owner;\n\t        $$.axes.x.style(\"opacity\", isHidden ? 0 : 1);\n\t        $$.axes.y.style(\"opacity\", isHidden ? 0 : 1);\n\t        $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1);\n\t        $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1);\n\t        transitions.axisX.call($$.xAxis);\n\t        transitions.axisY.call($$.yAxis);\n\t        transitions.axisY2.call($$.y2Axis);\n\t        transitions.axisSubX.call($$.subXAxis);\n\t    };\n\t\n\t    c3_chart_internal_fn.getClipPath = function (id) {\n\t        var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n\t        return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n\t    };\n\t    c3_chart_internal_fn.appendClip = function (parent, id) {\n\t        return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n\t    };\n\t    c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n\t        // axis line width + padding for left\n\t        var left = Math.max(30, this.margin.left);\n\t        return forHorizontal ? -(1 + left) : -(left - 1);\n\t    };\n\t    c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n\t        return forHorizontal ? -20 : -this.margin.top;\n\t    };\n\t    c3_chart_internal_fn.getXAxisClipX = function () {\n\t        var $$ = this;\n\t        return $$.getAxisClipX(!$$.config.axis_rotated);\n\t    };\n\t    c3_chart_internal_fn.getXAxisClipY = function () {\n\t        var $$ = this;\n\t        return $$.getAxisClipY(!$$.config.axis_rotated);\n\t    };\n\t    c3_chart_internal_fn.getYAxisClipX = function () {\n\t        var $$ = this;\n\t        return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n\t    };\n\t    c3_chart_internal_fn.getYAxisClipY = function () {\n\t        var $$ = this;\n\t        return $$.getAxisClipY($$.config.axis_rotated);\n\t    };\n\t    c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n\t        var $$ = this,\n\t            left = Math.max(30, $$.margin.left),\n\t            right = Math.max(30, $$.margin.right);\n\t        // width + axis line width + padding for left/right\n\t        return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n\t    };\n\t    c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n\t        // less than 20 is not enough to show the axis label 'outer' without legend\n\t        return (forHorizontal ? this.margin.bottom : (this.margin.top + this.height)) + 20;\n\t    };\n\t    c3_chart_internal_fn.getXAxisClipWidth = function () {\n\t        var $$ = this;\n\t        return $$.getAxisClipWidth(!$$.config.axis_rotated);\n\t    };\n\t    c3_chart_internal_fn.getXAxisClipHeight = function () {\n\t        var $$ = this;\n\t        return $$.getAxisClipHeight(!$$.config.axis_rotated);\n\t    };\n\t    c3_chart_internal_fn.getYAxisClipWidth = function () {\n\t        var $$ = this;\n\t        return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n\t    };\n\t    c3_chart_internal_fn.getYAxisClipHeight = function () {\n\t        var $$ = this;\n\t        return $$.getAxisClipHeight($$.config.axis_rotated);\n\t    };\n\t\n\t    c3_chart_internal_fn.initPie = function () {\n\t        var $$ = this, d3 = $$.d3, config = $$.config;\n\t        $$.pie = d3.layout.pie().value(function (d) {\n\t            return d.values.reduce(function (a, b) { return a + b.value; }, 0);\n\t        });\n\t        if (!config.data_order) {\n\t            $$.pie.sort(null);\n\t        }\n\t    };\n\t\n\t    c3_chart_internal_fn.updateRadius = function () {\n\t        var $$ = this, config = $$.config,\n\t            w = config.gauge_width || config.donut_width;\n\t        $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2;\n\t        $$.radius = $$.radiusExpanded * 0.95;\n\t        $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n\t        $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n\t    };\n\t\n\t    c3_chart_internal_fn.updateArc = function () {\n\t        var $$ = this;\n\t        $$.svgArc = $$.getSvgArc();\n\t        $$.svgArcExpanded = $$.getSvgArcExpanded();\n\t        $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n\t    };\n\t\n\t    c3_chart_internal_fn.updateAngle = function (d) {\n\t        var $$ = this, config = $$.config,\n\t            found = false, index = 0,\n\t            gMin, gMax, gTic, gValue;\n\t\n\t        if (!config) {\n\t            return null;\n\t        }\n\t\n\t        $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n\t            if (! found && t.data.id === d.data.id) {\n\t                found = true;\n\t                d = t;\n\t                d.index = index;\n\t            }\n\t            index++;\n\t        });\n\t        if (isNaN(d.startAngle)) {\n\t            d.startAngle = 0;\n\t        }\n\t        if (isNaN(d.endAngle)) {\n\t            d.endAngle = d.startAngle;\n\t        }\n\t        if ($$.isGaugeType(d.data)) {\n\t            gMin = config.gauge_min;\n\t            gMax = config.gauge_max;\n\t            gTic = (Math.PI * (config.gauge_fullCircle ? 2 : 1)) / (gMax - gMin);\n\t            gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : (gMax - gMin);\n\t            d.startAngle = config.gauge_startingAngle;\n\t            d.endAngle = d.startAngle + gTic * gValue;\n\t        }\n\t        return found ? d : null;\n\t    };\n\t\n\t    c3_chart_internal_fn.getSvgArc = function () {\n\t        var $$ = this,\n\t            arc = $$.d3.svg.arc().outerRadius($$.radius).innerRadius($$.innerRadius),\n\t            newArc = function (d, withoutUpdate) {\n\t                var updated;\n\t                if (withoutUpdate) { return arc(d); } // for interpolate\n\t                updated = $$.updateAngle(d);\n\t                return updated ? arc(updated) : \"M 0 0\";\n\t            };\n\t        // TODO: extends all function\n\t        newArc.centroid = arc.centroid;\n\t        return newArc;\n\t    };\n\t\n\t    c3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n\t        var $$ = this,\n\t            arc = $$.d3.svg.arc().outerRadius($$.radiusExpanded * (rate ? rate : 1)).innerRadius($$.innerRadius);\n\t        return function (d) {\n\t            var updated = $$.updateAngle(d);\n\t            return updated ? arc(updated) : \"M 0 0\";\n\t        };\n\t    };\n\t\n\t    c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n\t        return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.transformForArcLabel = function (d) {\n\t        var $$ = this, config = $$.config,\n\t            updated = $$.updateAngle(d), c, x, y, h, ratio, translate = \"\";\n\t        if (updated && !$$.hasType('gauge')) {\n\t            c = this.svgArc.centroid(updated);\n\t            x = isNaN(c[0]) ? 0 : c[0];\n\t            y = isNaN(c[1]) ? 0 : c[1];\n\t            h = Math.sqrt(x * x + y * y);\n\t            if ($$.hasType('donut') && config.donut_label_ratio) {\n\t                ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n\t            } else if ($$.hasType('pie') && config.pie_label_ratio) {\n\t                ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n\t            } else {\n\t                ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n\t            }\n\t            translate = \"translate(\" + (x * ratio) +  ',' + (y * ratio) +  \")\";\n\t        }\n\t        return translate;\n\t    };\n\t\n\t    c3_chart_internal_fn.getArcRatio = function (d) {\n\t        var $$ = this,\n\t            config = $$.config,\n\t            whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n\t        return d ? (d.endAngle - d.startAngle) / whole : null;\n\t    };\n\t\n\t    c3_chart_internal_fn.convertToArcData = function (d) {\n\t        return this.addName({\n\t            id: d.data.id,\n\t            value: d.value,\n\t            ratio: this.getArcRatio(d),\n\t            index: d.index\n\t        });\n\t    };\n\t\n\t    c3_chart_internal_fn.textForArcLabel = function (d) {\n\t        var $$ = this,\n\t            updated, value, ratio, id, format;\n\t        if (! $$.shouldShowArcLabel()) { return \"\"; }\n\t        updated = $$.updateAngle(d);\n\t        value = updated ? updated.value : null;\n\t        ratio = $$.getArcRatio(updated);\n\t        id = d.data.id;\n\t        if (! $$.hasType('gauge') && ! $$.meetsArcLabelThreshold(ratio)) { return \"\"; }\n\t        format = $$.getArcLabelFormat();\n\t        return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n\t    };\n\t\n\t    c3_chart_internal_fn.expandArc = function (targetIds) {\n\t        var $$ = this, interval;\n\t\n\t        // MEMO: avoid to cancel transition\n\t        if ($$.transiting) {\n\t            interval = window.setInterval(function () {\n\t                if (!$$.transiting) {\n\t                    window.clearInterval(interval);\n\t                    if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n\t                        $$.expandArc(targetIds);\n\t                    }\n\t                }\n\t            }, 10);\n\t            return;\n\t        }\n\t\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t\n\t        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n\t            if (! $$.shouldExpand(d.data.id)) { return; }\n\t            $$.d3.select(this).selectAll('path')\n\t                .transition().duration($$.expandDuration(d.data.id))\n\t                .attr(\"d\", $$.svgArcExpanded)\n\t                .transition().duration($$.expandDuration(d.data.id) * 2)\n\t                .attr(\"d\", $$.svgArcExpandedSub)\n\t                .each(function (d) {\n\t                    if ($$.isDonutType(d.data)) {\n\t                        // callback here\n\t                    }\n\t                });\n\t        });\n\t    };\n\t\n\t    c3_chart_internal_fn.unexpandArc = function (targetIds) {\n\t        var $$ = this;\n\t\n\t        if ($$.transiting) { return; }\n\t\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t\n\t        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path')\n\t            .transition().duration(function(d) {\n\t                return $$.expandDuration(d.data.id);\n\t            })\n\t            .attr(\"d\", $$.svgArc);\n\t        $$.svg.selectAll('.' + CLASS.arc)\n\t            .style(\"opacity\", 1);\n\t    };\n\t\n\t    c3_chart_internal_fn.expandDuration = function (id) {\n\t        var $$ = this, config = $$.config;\n\t\n\t        if ($$.isDonutType(id)) {\n\t            return config.donut_expand_duration;\n\t        } else if ($$.isGaugeType(id)) {\n\t            return config.gauge_expand_duration;\n\t        } else if ($$.isPieType(id)) {\n\t            return config.pie_expand_duration;\n\t        } else {\n\t            return 50;\n\t        }\n\t\n\t    };\n\t\n\t    c3_chart_internal_fn.shouldExpand = function (id) {\n\t        var $$ = this, config = $$.config;\n\t        return ($$.isDonutType(id) && config.donut_expand) ||\n\t               ($$.isGaugeType(id) && config.gauge_expand) ||\n\t               ($$.isPieType(id) && config.pie_expand);\n\t    };\n\t\n\t    c3_chart_internal_fn.shouldShowArcLabel = function () {\n\t        var $$ = this, config = $$.config, shouldShow = true;\n\t        if ($$.hasType('donut')) {\n\t            shouldShow = config.donut_label_show;\n\t        } else if ($$.hasType('pie')) {\n\t            shouldShow = config.pie_label_show;\n\t        }\n\t        // when gauge, always true\n\t        return shouldShow;\n\t    };\n\t\n\t    c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n\t        var $$ = this, config = $$.config,\n\t            threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n\t        return ratio >= threshold;\n\t    };\n\t\n\t    c3_chart_internal_fn.getArcLabelFormat = function () {\n\t        var $$ = this, config = $$.config,\n\t            format = config.pie_label_format;\n\t        if ($$.hasType('gauge')) {\n\t            format = config.gauge_label_format;\n\t        } else if ($$.hasType('donut')) {\n\t            format = config.donut_label_format;\n\t        }\n\t        return format;\n\t    };\n\t\n\t    c3_chart_internal_fn.getArcTitle = function () {\n\t        var $$ = this;\n\t        return $$.hasType('donut') ? $$.config.donut_title : \"\";\n\t    };\n\t\n\t    c3_chart_internal_fn.updateTargetsForArc = function (targets) {\n\t        var $$ = this, main = $$.main,\n\t            mainPieUpdate, mainPieEnter,\n\t            classChartArc = $$.classChartArc.bind($$),\n\t            classArcs = $$.classArcs.bind($$),\n\t            classFocus = $$.classFocus.bind($$);\n\t        mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc)\n\t            .data($$.pie(targets))\n\t            .attr(\"class\", function (d) { return classChartArc(d) + classFocus(d.data); });\n\t        mainPieEnter = mainPieUpdate.enter().append(\"g\")\n\t            .attr(\"class\", classChartArc);\n\t        mainPieEnter.append('g')\n\t            .attr('class', classArcs);\n\t        mainPieEnter.append(\"text\")\n\t            .attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\")\n\t            .style(\"opacity\", 0)\n\t            .style(\"text-anchor\", \"middle\")\n\t            .style(\"pointer-events\", \"none\");\n\t        // MEMO: can not keep same color..., but not bad to update color in redraw\n\t        //mainPieUpdate.exit().remove();\n\t    };\n\t\n\t    c3_chart_internal_fn.initArc = function () {\n\t        var $$ = this;\n\t        $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\")\n\t            .attr(\"class\", CLASS.chartArcs)\n\t            .attr(\"transform\", $$.getTranslate('arc'));\n\t        $$.arcs.append('text')\n\t            .attr('class', CLASS.chartArcsTitle)\n\t            .style(\"text-anchor\", \"middle\")\n\t            .text($$.getArcTitle());\n\t    };\n\t\n\t    c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n\t        var $$ = this, d3 = $$.d3, config = $$.config, main = $$.main,\n\t            mainArc;\n\t        mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc)\n\t            .data($$.arcData.bind($$));\n\t        mainArc.enter().append('path')\n\t            .attr(\"class\", $$.classArc.bind($$))\n\t            .style(\"fill\", function (d) { return $$.color(d.data); })\n\t            .style(\"cursor\", function (d) { return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null; })\n\t            .style(\"opacity\", 0)\n\t            .each(function (d) {\n\t                if ($$.isGaugeType(d.data)) {\n\t                    d.startAngle = d.endAngle = config.gauge_startingAngle;\n\t                }\n\t                this._current = d;\n\t            });\n\t        mainArc\n\t            .attr(\"transform\", function (d) { return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\"; })\n\t            .style(\"opacity\", function (d) { return d === this._current ? 0 : 1; })\n\t            .on('mouseover', config.interaction_enabled ? function (d) {\n\t                var updated, arcData;\n\t                if ($$.transiting) { // skip while transiting\n\t                    return;\n\t                }\n\t                updated = $$.updateAngle(d);\n\t                if (updated) {\n\t                    arcData = $$.convertToArcData(updated);\n\t                    // transitions\n\t                    $$.expandArc(updated.data.id);\n\t                    $$.api.focus(updated.data.id);\n\t                    $$.toggleFocusLegend(updated.data.id, true);\n\t                    $$.config.data_onmouseover(arcData, this);\n\t                }\n\t            } : null)\n\t            .on('mousemove', config.interaction_enabled ? function (d) {\n\t                var updated = $$.updateAngle(d), arcData, selectedData;\n\t                if (updated) {\n\t                    arcData = $$.convertToArcData(updated),\n\t                    selectedData = [arcData];\n\t                    $$.showTooltip(selectedData, this);\n\t                }\n\t            } : null)\n\t            .on('mouseout', config.interaction_enabled ? function (d) {\n\t                var updated, arcData;\n\t                if ($$.transiting) { // skip while transiting\n\t                    return;\n\t                }\n\t                updated = $$.updateAngle(d);\n\t                if (updated) {\n\t                    arcData = $$.convertToArcData(updated);\n\t                    // transitions\n\t                    $$.unexpandArc(updated.data.id);\n\t                    $$.api.revert();\n\t                    $$.revertLegend();\n\t                    $$.hideTooltip();\n\t                    $$.config.data_onmouseout(arcData, this);\n\t                }\n\t            } : null)\n\t            .on('click', config.interaction_enabled ? function (d, i) {\n\t                var updated = $$.updateAngle(d), arcData;\n\t                if (updated) {\n\t                    arcData = $$.convertToArcData(updated);\n\t                    if ($$.toggleShape) {\n\t                        $$.toggleShape(this, arcData, i);\n\t                    }\n\t                    $$.config.data_onclick.call($$.api, arcData, this);\n\t                }\n\t            } : null)\n\t            .each(function () { $$.transiting = true; })\n\t            .transition().duration(duration)\n\t            .attrTween(\"d\", function (d) {\n\t                var updated = $$.updateAngle(d), interpolate;\n\t                if (! updated) {\n\t                    return function () { return \"M 0 0\"; };\n\t                }\n\t                //                if (this._current === d) {\n\t                //                    this._current = {\n\t                //                        startAngle: Math.PI*2,\n\t                //                        endAngle: Math.PI*2,\n\t                //                    };\n\t                //                }\n\t                if (isNaN(this._current.startAngle)) {\n\t                    this._current.startAngle = 0;\n\t                }\n\t                if (isNaN(this._current.endAngle)) {\n\t                    this._current.endAngle = this._current.startAngle;\n\t                }\n\t                interpolate = d3.interpolate(this._current, updated);\n\t                this._current = interpolate(0);\n\t                return function (t) {\n\t                    var interpolated = interpolate(t);\n\t                    interpolated.data = d.data; // data.id will be updated by interporator\n\t                    return $$.getArc(interpolated, true);\n\t                };\n\t            })\n\t            .attr(\"transform\", withTransform ? \"scale(1)\" : \"\")\n\t            .style(\"fill\", function (d) {\n\t                return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n\t            }) // Where gauge reading color would receive customization.\n\t            .style(\"opacity\", 1)\n\t            .call($$.endall, function () {\n\t                $$.transiting = false;\n\t            });\n\t        mainArc.exit().transition().duration(durationForExit)\n\t            .style('opacity', 0)\n\t            .remove();\n\t        main.selectAll('.' + CLASS.chartArc).select('text')\n\t            .style(\"opacity\", 0)\n\t            .attr('class', function (d) { return $$.isGaugeType(d.data) ? CLASS.gaugeValue : ''; })\n\t            .text($$.textForArcLabel.bind($$))\n\t            .attr(\"transform\", $$.transformForArcLabel.bind($$))\n\t            .style('font-size', function (d) { return $$.isGaugeType(d.data) ? Math.round($$.radius / 5) + 'px' : ''; })\n\t          .transition().duration(duration)\n\t            .style(\"opacity\", function (d) { return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0; });\n\t        main.select('.' + CLASS.chartArcsTitle)\n\t            .style(\"opacity\", $$.hasType('donut') || $$.hasType('gauge') ? 1 : 0);\n\t\n\t        if ($$.hasType('gauge')) {\n\t            $$.arcs.select('.' + CLASS.chartArcsBackground)\n\t                .attr(\"d\", function () {\n\t                    var d = {\n\t                        data: [{value: config.gauge_max}],\n\t                        startAngle: config.gauge_startingAngle,\n\t                        endAngle: -1 * config.gauge_startingAngle\n\t                    };\n\t                    return $$.getArc(d, true, true);\n\t                });\n\t            $$.arcs.select('.' + CLASS.chartArcsGaugeUnit)\n\t                .attr(\"dy\", \".75em\")\n\t                .text(config.gauge_label_show ? config.gauge_units : '');\n\t            $$.arcs.select('.' + CLASS.chartArcsGaugeMin)\n\t                .attr(\"dx\", -1 * ($$.innerRadius + (($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2))) + \"px\")\n\t                .attr(\"dy\", \"1.2em\")\n\t                .text(config.gauge_label_show ? config.gauge_min : '');\n\t            $$.arcs.select('.' + CLASS.chartArcsGaugeMax)\n\t                .attr(\"dx\", $$.innerRadius + (($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\")\n\t                .attr(\"dy\", \"1.2em\")\n\t                .text(config.gauge_label_show ? config.gauge_max : '');\n\t        }\n\t    };\n\t    c3_chart_internal_fn.initGauge = function () {\n\t        var arcs = this.arcs;\n\t        if (this.hasType('gauge')) {\n\t            arcs.append('path')\n\t                .attr(\"class\", CLASS.chartArcsBackground);\n\t            arcs.append(\"text\")\n\t                .attr(\"class\", CLASS.chartArcsGaugeUnit)\n\t                .style(\"text-anchor\", \"middle\")\n\t                .style(\"pointer-events\", \"none\");\n\t            arcs.append(\"text\")\n\t                .attr(\"class\", CLASS.chartArcsGaugeMin)\n\t                .style(\"text-anchor\", \"middle\")\n\t                .style(\"pointer-events\", \"none\");\n\t            arcs.append(\"text\")\n\t                .attr(\"class\", CLASS.chartArcsGaugeMax)\n\t                .style(\"text-anchor\", \"middle\")\n\t                .style(\"pointer-events\", \"none\");\n\t        }\n\t    };\n\t    c3_chart_internal_fn.getGaugeLabelHeight = function () {\n\t        return this.config.gauge_label_show ? 20 : 0;\n\t    };\n\t\n\t    c3_chart_internal_fn.initRegion = function () {\n\t        var $$ = this;\n\t        $$.region = $$.main.append('g')\n\t            .attr(\"clip-path\", $$.clipPath)\n\t            .attr(\"class\", CLASS.regions);\n\t    };\n\t    c3_chart_internal_fn.updateRegion = function (duration) {\n\t        var $$ = this, config = $$.config;\n\t\n\t        // hide if arc type\n\t        $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\t\n\t        $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region)\n\t            .data(config.regions);\n\t        $$.mainRegion.enter().append('g')\n\t          .append('rect')\n\t            .style(\"fill-opacity\", 0);\n\t        $$.mainRegion\n\t            .attr('class', $$.classRegion.bind($$));\n\t        $$.mainRegion.exit().transition().duration(duration)\n\t            .style(\"opacity\", 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawRegion = function (withTransition) {\n\t        var $$ = this,\n\t            regions = $$.mainRegion.selectAll('rect').each(function () {\n\t                // data is binded to g and it's not transferred to rect (child node) automatically,\n\t                // then data of each rect has to be updated manually.\n\t                // TODO: there should be more efficient way to solve this?\n\t                var parentData = $$.d3.select(this.parentNode).datum();\n\t                $$.d3.select(this).datum(parentData);\n\t            }),\n\t            x = $$.regionX.bind($$),\n\t            y = $$.regionY.bind($$),\n\t            w = $$.regionWidth.bind($$),\n\t            h = $$.regionHeight.bind($$);\n\t        return [\n\t            (withTransition ? regions.transition() : regions)\n\t                .attr(\"x\", x)\n\t                .attr(\"y\", y)\n\t                .attr(\"width\", w)\n\t                .attr(\"height\", h)\n\t                .style(\"fill-opacity\", function (d) { return isValue(d.opacity) ? d.opacity : 0.1; })\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.regionX = function (d) {\n\t        var $$ = this, config = $$.config,\n\t            xPos, yScale = d.axis === 'y' ? $$.y : $$.y2;\n\t        if (d.axis === 'y' || d.axis === 'y2') {\n\t            xPos = config.axis_rotated ? ('start' in d ? yScale(d.start) : 0) : 0;\n\t        } else {\n\t            xPos = config.axis_rotated ? 0 : ('start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0);\n\t        }\n\t        return xPos;\n\t    };\n\t    c3_chart_internal_fn.regionY = function (d) {\n\t        var $$ = this, config = $$.config,\n\t            yPos, yScale = d.axis === 'y' ? $$.y : $$.y2;\n\t        if (d.axis === 'y' || d.axis === 'y2') {\n\t            yPos = config.axis_rotated ? 0 : ('end' in d ? yScale(d.end) : 0);\n\t        } else {\n\t            yPos = config.axis_rotated ? ('start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0) : 0;\n\t        }\n\t        return yPos;\n\t    };\n\t    c3_chart_internal_fn.regionWidth = function (d) {\n\t        var $$ = this, config = $$.config,\n\t            start = $$.regionX(d), end, yScale = d.axis === 'y' ? $$.y : $$.y2;\n\t        if (d.axis === 'y' || d.axis === 'y2') {\n\t            end = config.axis_rotated ? ('end' in d ? yScale(d.end) : $$.width) : $$.width;\n\t        } else {\n\t            end = config.axis_rotated ? $$.width : ('end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width);\n\t        }\n\t        return end < start ? 0 : end - start;\n\t    };\n\t    c3_chart_internal_fn.regionHeight = function (d) {\n\t        var $$ = this, config = $$.config,\n\t            start = this.regionY(d), end, yScale = d.axis === 'y' ? $$.y : $$.y2;\n\t        if (d.axis === 'y' || d.axis === 'y2') {\n\t            end = config.axis_rotated ? $$.height : ('start' in d ? yScale(d.start) : $$.height);\n\t        } else {\n\t            end = config.axis_rotated ? ('end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height) : $$.height;\n\t        }\n\t        return end < start ? 0 : end - start;\n\t    };\n\t    c3_chart_internal_fn.isRegionOnX = function (d) {\n\t        return !d.axis || d.axis === 'x';\n\t    };\n\t\n\t    c3_chart_internal_fn.drag = function (mouse) {\n\t        var $$ = this, config = $$.config, main = $$.main, d3 = $$.d3;\n\t        var sx, sy, mx, my, minX, maxX, minY, maxY;\n\t\n\t        if ($$.hasArcType()) { return; }\n\t        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n\t        if (config.zoom_enabled && ! $$.zoom.altDomain) { return; } // skip if zoomable because of conflict drag dehavior\n\t        if (!config.data_selection_multiple) { return; } // skip when single selection because drag is used for multiple selection\n\t\n\t        sx = $$.dragStart[0];\n\t        sy = $$.dragStart[1];\n\t        mx = mouse[0];\n\t        my = mouse[1];\n\t        minX = Math.min(sx, mx);\n\t        maxX = Math.max(sx, mx);\n\t        minY = (config.data_selection_grouped) ? $$.margin.top : Math.min(sy, my);\n\t        maxY = (config.data_selection_grouped) ? $$.height : Math.max(sy, my);\n\t\n\t        main.select('.' + CLASS.dragarea)\n\t            .attr('x', minX)\n\t            .attr('y', minY)\n\t            .attr('width', maxX - minX)\n\t            .attr('height', maxY - minY);\n\t        // TODO: binary search when multiple xs\n\t        main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape)\n\t            .filter(function (d) { return config.data_selection_isselectable(d); })\n\t            .each(function (d, i) {\n\t                var shape = d3.select(this),\n\t                    isSelected = shape.classed(CLASS.SELECTED),\n\t                    isIncluded = shape.classed(CLASS.INCLUDED),\n\t                    _x, _y, _w, _h, toggle, isWithin = false, box;\n\t                if (shape.classed(CLASS.circle)) {\n\t                    _x = shape.attr(\"cx\") * 1;\n\t                    _y = shape.attr(\"cy\") * 1;\n\t                    toggle = $$.togglePoint;\n\t                    isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n\t                }\n\t                else if (shape.classed(CLASS.bar)) {\n\t                    box = getPathBox(this);\n\t                    _x = box.x;\n\t                    _y = box.y;\n\t                    _w = box.width;\n\t                    _h = box.height;\n\t                    toggle = $$.togglePath;\n\t                    isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n\t                } else {\n\t                    // line/area selection not supported yet\n\t                    return;\n\t                }\n\t                if (isWithin ^ isIncluded) {\n\t                    shape.classed(CLASS.INCLUDED, !isIncluded);\n\t                    // TODO: included/unincluded callback here\n\t                    shape.classed(CLASS.SELECTED, !isSelected);\n\t                    toggle.call($$, !isSelected, shape, d, i);\n\t                }\n\t            });\n\t    };\n\t\n\t    c3_chart_internal_fn.dragstart = function (mouse) {\n\t        var $$ = this, config = $$.config;\n\t        if ($$.hasArcType()) { return; }\n\t        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n\t        $$.dragStart = mouse;\n\t        $$.main.select('.' + CLASS.chart).append('rect')\n\t            .attr('class', CLASS.dragarea)\n\t            .style('opacity', 0.1);\n\t        $$.dragging = true;\n\t    };\n\t\n\t    c3_chart_internal_fn.dragend = function () {\n\t        var $$ = this, config = $$.config;\n\t        if ($$.hasArcType()) { return; }\n\t        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n\t        $$.main.select('.' + CLASS.dragarea)\n\t            .transition().duration(100)\n\t            .style('opacity', 0)\n\t            .remove();\n\t        $$.main.selectAll('.' + CLASS.shape)\n\t            .classed(CLASS.INCLUDED, false);\n\t        $$.dragging = false;\n\t    };\n\t\n\t    c3_chart_internal_fn.selectPoint = function (target, d, i) {\n\t        var $$ = this, config = $$.config,\n\t            cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n\t            cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n\t            r = $$.pointSelectR.bind($$);\n\t        config.data_onselected.call($$.api, d, target.node());\n\t        // add selected-circle on low layer g\n\t        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i)\n\t            .data([d])\n\t            .enter().append('circle')\n\t            .attr(\"class\", function () { return $$.generateClass(CLASS.selectedCircle, i); })\n\t            .attr(\"cx\", cx)\n\t            .attr(\"cy\", cy)\n\t            .attr(\"stroke\", function () { return $$.color(d); })\n\t            .attr(\"r\", function (d) { return $$.pointSelectR(d) * 1.4; })\n\t            .transition().duration(100)\n\t            .attr(\"r\", r);\n\t    };\n\t    c3_chart_internal_fn.unselectPoint = function (target, d, i) {\n\t        var $$ = this;\n\t        $$.config.data_onunselected.call($$.api, d, target.node());\n\t        // remove selected-circle from low layer g\n\t        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i)\n\t            .transition().duration(100).attr('r', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n\t        selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n\t    };\n\t    c3_chart_internal_fn.selectPath = function (target, d) {\n\t        var $$ = this;\n\t        $$.config.data_onselected.call($$, d, target.node());\n\t        if ($$.config.interaction_brighten) {\n\t            target.transition().duration(100)\n\t                .style(\"fill\", function () { return $$.d3.rgb($$.color(d)).brighter(0.75); });\n\t        }\n\t    };\n\t    c3_chart_internal_fn.unselectPath = function (target, d) {\n\t        var $$ = this;\n\t        $$.config.data_onunselected.call($$, d, target.node());\n\t        if ($$.config.interaction_brighten) {\n\t            target.transition().duration(100)\n\t                .style(\"fill\", function () { return $$.color(d); });\n\t        }\n\t    };\n\t    c3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n\t        selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n\t    };\n\t    c3_chart_internal_fn.getToggle = function (that, d) {\n\t        var $$ = this, toggle;\n\t        if (that.nodeName === 'circle') {\n\t            if ($$.isStepType(d)) {\n\t                // circle is hidden in step chart, so treat as within the click area\n\t                toggle = function () {}; // TODO: how to select step chart?\n\t            } else {\n\t                toggle = $$.togglePoint;\n\t            }\n\t        }\n\t        else if (that.nodeName === 'path') {\n\t            toggle = $$.togglePath;\n\t        }\n\t        return toggle;\n\t    };\n\t    c3_chart_internal_fn.toggleShape = function (that, d, i) {\n\t        var $$ = this, d3 = $$.d3, config = $$.config,\n\t            shape = d3.select(that), isSelected = shape.classed(CLASS.SELECTED),\n\t            toggle = $$.getToggle(that, d).bind($$);\n\t\n\t        if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n\t            if (!config.data_selection_multiple) {\n\t                $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n\t                    var shape = d3.select(this);\n\t                    if (shape.classed(CLASS.SELECTED)) { toggle(false, shape.classed(CLASS.SELECTED, false), d, i); }\n\t                });\n\t            }\n\t            shape.classed(CLASS.SELECTED, !isSelected);\n\t            toggle(!isSelected, shape, d, i);\n\t        }\n\t    };\n\t\n\t    c3_chart_internal_fn.initBrush = function () {\n\t        var $$ = this, d3 = $$.d3;\n\t        $$.brush = d3.svg.brush().on(\"brush\", function () { $$.redrawForBrush(); });\n\t        $$.brush.update = function () {\n\t            if ($$.context) { $$.context.select('.' + CLASS.brush).call(this); }\n\t            return this;\n\t        };\n\t        $$.brush.scale = function (scale) {\n\t            return $$.config.axis_rotated ? this.y(scale) : this.x(scale);\n\t        };\n\t    };\n\t    c3_chart_internal_fn.initSubchart = function () {\n\t        var $$ = this, config = $$.config,\n\t            context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n\t            visibility = config.subchart_show ? 'visible' : 'hidden';\n\t\n\t        context.style('visibility', visibility);\n\t\n\t        // Define g for chart area\n\t        context.append('g')\n\t            .attr(\"clip-path\", $$.clipPathForSubchart)\n\t            .attr('class', CLASS.chart);\n\t\n\t        // Define g for bar chart area\n\t        context.select('.' + CLASS.chart).append(\"g\")\n\t            .attr(\"class\", CLASS.chartBars);\n\t\n\t        // Define g for line chart area\n\t        context.select('.' + CLASS.chart).append(\"g\")\n\t            .attr(\"class\", CLASS.chartLines);\n\t\n\t        // Add extent rect for Brush\n\t        context.append(\"g\")\n\t            .attr(\"clip-path\", $$.clipPath)\n\t            .attr(\"class\", CLASS.brush)\n\t            .call($$.brush);\n\t\n\t        // ATTENTION: This must be called AFTER chart added\n\t        // Add Axis\n\t        $$.axes.subx = context.append(\"g\")\n\t            .attr(\"class\", CLASS.axisX)\n\t            .attr(\"transform\", $$.getTranslate('subx'))\n\t            .attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis)\n\t            .style(\"visibility\", config.subchart_axis_x_show ? visibility : 'hidden');\n\t    };\n\t    c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n\t        var $$ = this, context = $$.context, config = $$.config,\n\t            contextLineEnter, contextLineUpdate, contextBarEnter, contextBarUpdate,\n\t            classChartBar = $$.classChartBar.bind($$),\n\t            classBars = $$.classBars.bind($$),\n\t            classChartLine = $$.classChartLine.bind($$),\n\t            classLines = $$.classLines.bind($$),\n\t            classAreas = $$.classAreas.bind($$);\n\t\n\t        if (config.subchart_show) {\n\t            //-- Bar --//\n\t            contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar)\n\t                .data(targets)\n\t                .attr('class', classChartBar);\n\t            contextBarEnter = contextBarUpdate.enter().append('g')\n\t                .style('opacity', 0)\n\t                .attr('class', classChartBar);\n\t            // Bars for each data\n\t            contextBarEnter.append('g')\n\t                .attr(\"class\", classBars);\n\t\n\t            //-- Line --//\n\t            contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine)\n\t                .data(targets)\n\t                .attr('class', classChartLine);\n\t            contextLineEnter = contextLineUpdate.enter().append('g')\n\t                .style('opacity', 0)\n\t                .attr('class', classChartLine);\n\t            // Lines for each data\n\t            contextLineEnter.append(\"g\")\n\t                .attr(\"class\", classLines);\n\t            // Area\n\t            contextLineEnter.append(\"g\")\n\t                .attr(\"class\", classAreas);\n\t\n\t            //-- Brush --//\n\t            context.selectAll('.' + CLASS.brush + ' rect')\n\t                .attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n\t        }\n\t    };\n\t    c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n\t        var $$ = this;\n\t        $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar)\n\t            .data($$.barData.bind($$));\n\t        $$.contextBar.enter().append('path')\n\t            .attr(\"class\", $$.classBar.bind($$))\n\t            .style(\"stroke\", 'none')\n\t            .style(\"fill\", $$.color);\n\t        $$.contextBar\n\t            .style(\"opacity\", $$.initialOpacity.bind($$));\n\t        $$.contextBar.exit().transition().duration(durationForExit)\n\t            .style('opacity', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n\t        (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar)\n\t            .attr('d', drawBarOnSub)\n\t            .style('opacity', 1);\n\t    };\n\t    c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n\t        var $$ = this;\n\t        $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line)\n\t            .data($$.lineData.bind($$));\n\t        $$.contextLine.enter().append('path')\n\t            .attr('class', $$.classLine.bind($$))\n\t            .style('stroke', $$.color);\n\t        $$.contextLine\n\t            .style(\"opacity\", $$.initialOpacity.bind($$));\n\t        $$.contextLine.exit().transition().duration(durationForExit)\n\t            .style('opacity', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n\t        (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine)\n\t            .attr(\"d\", drawLineOnSub)\n\t            .style('opacity', 1);\n\t    };\n\t    c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n\t        var $$ = this, d3 = $$.d3;\n\t        $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area)\n\t            .data($$.lineData.bind($$));\n\t        $$.contextArea.enter().append('path')\n\t            .attr(\"class\", $$.classArea.bind($$))\n\t            .style(\"fill\", $$.color)\n\t            .style(\"opacity\", function () { $$.orgAreaOpacity = +d3.select(this).style('opacity'); return 0; });\n\t        $$.contextArea\n\t            .style(\"opacity\", 0);\n\t        $$.contextArea.exit().transition().duration(durationForExit)\n\t            .style('opacity', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n\t        (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea)\n\t            .attr(\"d\", drawAreaOnSub)\n\t            .style(\"fill\", this.color)\n\t            .style(\"opacity\", this.orgAreaOpacity);\n\t    };\n\t    c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n\t        var $$ = this, d3 = $$.d3, config = $$.config,\n\t            drawAreaOnSub, drawBarOnSub, drawLineOnSub;\n\t\n\t        $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\n\t\n\t        // subchart\n\t        if (config.subchart_show) {\n\t            // reflect main chart to extent on subchart if zoomed\n\t            if (d3.event && d3.event.type === 'zoom') {\n\t                $$.brush.extent($$.x.orgDomain()).update();\n\t            }\n\t            // update subchart elements if needed\n\t            if (withSubchart) {\n\t\n\t                // extent rect\n\t                if (!$$.brush.empty()) {\n\t                    $$.brush.extent($$.x.orgDomain()).update();\n\t                }\n\t                // setup drawer - MEMO: this must be called after axis updated\n\t                drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n\t                drawBarOnSub = $$.generateDrawBar(barIndices, true);\n\t                drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n\t\n\t                $$.updateBarForSubchart(duration);\n\t                $$.updateLineForSubchart(duration);\n\t                $$.updateAreaForSubchart(duration);\n\t\n\t                $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n\t                $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n\t                $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n\t            }\n\t        }\n\t    };\n\t    c3_chart_internal_fn.redrawForBrush = function () {\n\t        var $$ = this, x = $$.x;\n\t        $$.redraw({\n\t            withTransition: false,\n\t            withY: $$.config.zoom_rescale,\n\t            withSubchart: false,\n\t            withUpdateXDomain: true,\n\t            withDimension: false\n\t        });\n\t        $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n\t    };\n\t    c3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n\t        var $$ = this, subXAxis;\n\t        if (transitions && transitions.axisSubX) {\n\t            subXAxis = transitions.axisSubX;\n\t        } else {\n\t            subXAxis = $$.context.select('.' + CLASS.axisX);\n\t            if (withTransition) { subXAxis = subXAxis.transition(); }\n\t        }\n\t        $$.context.attr(\"transform\", $$.getTranslate('context'));\n\t        subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n\t    };\n\t    c3_chart_internal_fn.getDefaultExtent = function () {\n\t        var $$ = this, config = $$.config,\n\t            extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;\n\t        if ($$.isTimeSeries()) {\n\t            extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];\n\t        }\n\t        return extent;\n\t    };\n\t\n\t    c3_chart_internal_fn.initZoom = function () {\n\t        var $$ = this, d3 = $$.d3, config = $$.config, startEvent;\n\t\n\t        $$.zoom = d3.behavior.zoom()\n\t            .on(\"zoomstart\", function () {\n\t                startEvent = d3.event.sourceEvent;\n\t                $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;\n\t                config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\n\t            })\n\t            .on(\"zoom\", function () {\n\t                $$.redrawForZoom.call($$);\n\t            })\n\t            .on('zoomend', function () {\n\t                var event = d3.event.sourceEvent;\n\t                // if click, do nothing. otherwise, click interaction will be canceled.\n\t                if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {\n\t                    return;\n\t                }\n\t                $$.redrawEventRect();\n\t                $$.updateZoom();\n\t                config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n\t            });\n\t        $$.zoom.scale = function (scale) {\n\t            return config.axis_rotated ? this.y(scale) : this.x(scale);\n\t        };\n\t        $$.zoom.orgScaleExtent = function () {\n\t            var extent = config.zoom_extent ? config.zoom_extent : [1, 10];\n\t            return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];\n\t        };\n\t        $$.zoom.updateScaleExtent = function () {\n\t            var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),\n\t                extent = this.orgScaleExtent();\n\t            this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);\n\t            return this;\n\t        };\n\t    };\n\t    c3_chart_internal_fn.getZoomDomain = function () {\n\t        var $$ = this, config = $$.config, d3 = $$.d3,\n\t            min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n\t            max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n\t        return [min, max];\n\t    };\n\t    c3_chart_internal_fn.updateZoom = function () {\n\t        var $$ = this, z = $$.config.zoom_enabled ? $$.zoom : function () {};\n\t        $$.main.select('.' + CLASS.zoomRect).call(z).on(\"dblclick.zoom\", null);\n\t        $$.main.selectAll('.' + CLASS.eventRect).call(z).on(\"dblclick.zoom\", null);\n\t    };\n\t    c3_chart_internal_fn.redrawForZoom = function () {\n\t        var $$ = this, d3 = $$.d3, config = $$.config, zoom = $$.zoom, x = $$.x;\n\t        if (!config.zoom_enabled) {\n\t            return;\n\t        }\n\t        if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n\t            return;\n\t        }\n\t        if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {\n\t            x.domain(zoom.altDomain);\n\t            zoom.scale(x).updateScaleExtent();\n\t            return;\n\t        }\n\t        if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n\t            x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n\t        }\n\t        $$.redraw({\n\t            withTransition: false,\n\t            withY: config.zoom_rescale,\n\t            withSubchart: false,\n\t            withEventRect: false,\n\t            withDimension: false\n\t        });\n\t        if (d3.event.sourceEvent.type === 'mousemove') {\n\t            $$.cancelClick = true;\n\t        }\n\t        config.zoom_onzoom.call($$.api, x.orgDomain());\n\t    };\n\t\n\t    c3_chart_internal_fn.generateColor = function () {\n\t        var $$ = this, config = $$.config, d3 = $$.d3,\n\t            colors = config.data_colors,\n\t            pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),\n\t            callback = config.data_color,\n\t            ids = [];\n\t\n\t        return function (d) {\n\t            var id = d.id || (d.data && d.data.id) || d, color;\n\t\n\t            // if callback function is provided\n\t            if (colors[id] instanceof Function) {\n\t                color = colors[id](d);\n\t            }\n\t            // if specified, choose that color\n\t            else if (colors[id]) {\n\t                color = colors[id];\n\t            }\n\t            // if not specified, choose from pattern\n\t            else {\n\t                if (ids.indexOf(id) < 0) { ids.push(id); }\n\t                color = pattern[ids.indexOf(id) % pattern.length];\n\t                colors[id] = color;\n\t            }\n\t            return callback instanceof Function ? callback(color, d) : color;\n\t        };\n\t    };\n\t    c3_chart_internal_fn.generateLevelColor = function () {\n\t        var $$ = this, config = $$.config,\n\t            colors = config.color_pattern,\n\t            threshold = config.color_threshold,\n\t            asValue = threshold.unit === 'value',\n\t            values = threshold.values && threshold.values.length ? threshold.values : [],\n\t            max = threshold.max || 100;\n\t        return notEmpty(config.color_threshold) ? function (value) {\n\t            var i, v, color = colors[colors.length - 1];\n\t            for (i = 0; i < values.length; i++) {\n\t                v = asValue ? value : (value * 100 / max);\n\t                if (v < values[i]) {\n\t                    color = colors[i];\n\t                    break;\n\t                }\n\t            }\n\t            return color;\n\t        } : null;\n\t    };\n\t\n\t    c3_chart_internal_fn.getYFormat = function (forArc) {\n\t        var $$ = this,\n\t            formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n\t            formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n\t        return function (v, ratio, id) {\n\t            var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n\t            return format.call($$, v, ratio);\n\t        };\n\t    };\n\t    c3_chart_internal_fn.yFormat = function (v) {\n\t        var $$ = this, config = $$.config,\n\t            format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n\t        return format(v);\n\t    };\n\t    c3_chart_internal_fn.y2Format = function (v) {\n\t        var $$ = this, config = $$.config,\n\t            format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n\t        return format(v);\n\t    };\n\t    c3_chart_internal_fn.defaultValueFormat = function (v) {\n\t        return isValue(v) ? +v : \"\";\n\t    };\n\t    c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n\t        return (ratio * 100).toFixed(1) + '%';\n\t    };\n\t    c3_chart_internal_fn.dataLabelFormat = function (targetId) {\n\t        var $$ = this, data_labels = $$.config.data_labels,\n\t            format, defaultFormat = function (v) { return isValue(v) ? +v : \"\"; };\n\t        // find format according to axis id\n\t        if (typeof data_labels.format === 'function') {\n\t            format = data_labels.format;\n\t        } else if (typeof data_labels.format === 'object') {\n\t            if (data_labels.format[targetId]) {\n\t                format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n\t            } else {\n\t                format = function () { return ''; };\n\t            }\n\t        } else {\n\t            format = defaultFormat;\n\t        }\n\t        return format;\n\t    };\n\t\n\t    c3_chart_internal_fn.hasCaches = function (ids) {\n\t        for (var i = 0; i < ids.length; i++) {\n\t            if (! (ids[i] in this.cache)) { return false; }\n\t        }\n\t        return true;\n\t    };\n\t    c3_chart_internal_fn.addCache = function (id, target) {\n\t        this.cache[id] = this.cloneTarget(target);\n\t    };\n\t    c3_chart_internal_fn.getCaches = function (ids) {\n\t        var targets = [], i;\n\t        for (i = 0; i < ids.length; i++) {\n\t            if (ids[i] in this.cache) { targets.push(this.cloneTarget(this.cache[ids[i]])); }\n\t        }\n\t        return targets;\n\t    };\n\t\n\t    var CLASS = c3_chart_internal_fn.CLASS = {\n\t        target: 'c3-target',\n\t        chart: 'c3-chart',\n\t        chartLine: 'c3-chart-line',\n\t        chartLines: 'c3-chart-lines',\n\t        chartBar: 'c3-chart-bar',\n\t        chartBars: 'c3-chart-bars',\n\t        chartText: 'c3-chart-text',\n\t        chartTexts: 'c3-chart-texts',\n\t        chartArc: 'c3-chart-arc',\n\t        chartArcs: 'c3-chart-arcs',\n\t        chartArcsTitle: 'c3-chart-arcs-title',\n\t        chartArcsBackground: 'c3-chart-arcs-background',\n\t        chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n\t        chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n\t        chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n\t        selectedCircle: 'c3-selected-circle',\n\t        selectedCircles: 'c3-selected-circles',\n\t        eventRect: 'c3-event-rect',\n\t        eventRects: 'c3-event-rects',\n\t        eventRectsSingle: 'c3-event-rects-single',\n\t        eventRectsMultiple: 'c3-event-rects-multiple',\n\t        zoomRect: 'c3-zoom-rect',\n\t        brush: 'c3-brush',\n\t        focused: 'c3-focused',\n\t        defocused: 'c3-defocused',\n\t        region: 'c3-region',\n\t        regions: 'c3-regions',\n\t        title: 'c3-title',\n\t        tooltipContainer: 'c3-tooltip-container',\n\t        tooltip: 'c3-tooltip',\n\t        tooltipName: 'c3-tooltip-name',\n\t        shape: 'c3-shape',\n\t        shapes: 'c3-shapes',\n\t        line: 'c3-line',\n\t        lines: 'c3-lines',\n\t        bar: 'c3-bar',\n\t        bars: 'c3-bars',\n\t        circle: 'c3-circle',\n\t        circles: 'c3-circles',\n\t        arc: 'c3-arc',\n\t        arcs: 'c3-arcs',\n\t        area: 'c3-area',\n\t        areas: 'c3-areas',\n\t        empty: 'c3-empty',\n\t        text: 'c3-text',\n\t        texts: 'c3-texts',\n\t        gaugeValue: 'c3-gauge-value',\n\t        grid: 'c3-grid',\n\t        gridLines: 'c3-grid-lines',\n\t        xgrid: 'c3-xgrid',\n\t        xgrids: 'c3-xgrids',\n\t        xgridLine: 'c3-xgrid-line',\n\t        xgridLines: 'c3-xgrid-lines',\n\t        xgridFocus: 'c3-xgrid-focus',\n\t        ygrid: 'c3-ygrid',\n\t        ygrids: 'c3-ygrids',\n\t        ygridLine: 'c3-ygrid-line',\n\t        ygridLines: 'c3-ygrid-lines',\n\t        axis: 'c3-axis',\n\t        axisX: 'c3-axis-x',\n\t        axisXLabel: 'c3-axis-x-label',\n\t        axisY: 'c3-axis-y',\n\t        axisYLabel: 'c3-axis-y-label',\n\t        axisY2: 'c3-axis-y2',\n\t        axisY2Label: 'c3-axis-y2-label',\n\t        legendBackground: 'c3-legend-background',\n\t        legendItem: 'c3-legend-item',\n\t        legendItemEvent: 'c3-legend-item-event',\n\t        legendItemTile: 'c3-legend-item-tile',\n\t        legendItemHidden: 'c3-legend-item-hidden',\n\t        legendItemFocused: 'c3-legend-item-focused',\n\t        dragarea: 'c3-dragarea',\n\t        EXPANDED: '_expanded_',\n\t        SELECTED: '_selected_',\n\t        INCLUDED: '_included_'\n\t    };\n\t    c3_chart_internal_fn.generateClass = function (prefix, targetId) {\n\t        return \" \" + prefix + \" \" + prefix + this.getTargetSelectorSuffix(targetId);\n\t    };\n\t    c3_chart_internal_fn.classText = function (d) {\n\t        return this.generateClass(CLASS.text, d.index);\n\t    };\n\t    c3_chart_internal_fn.classTexts = function (d) {\n\t        return this.generateClass(CLASS.texts, d.id);\n\t    };\n\t    c3_chart_internal_fn.classShape = function (d) {\n\t        return this.generateClass(CLASS.shape, d.index);\n\t    };\n\t    c3_chart_internal_fn.classShapes = function (d) {\n\t        return this.generateClass(CLASS.shapes, d.id);\n\t    };\n\t    c3_chart_internal_fn.classLine = function (d) {\n\t        return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n\t    };\n\t    c3_chart_internal_fn.classLines = function (d) {\n\t        return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n\t    };\n\t    c3_chart_internal_fn.classCircle = function (d) {\n\t        return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n\t    };\n\t    c3_chart_internal_fn.classCircles = function (d) {\n\t        return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n\t    };\n\t    c3_chart_internal_fn.classBar = function (d) {\n\t        return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n\t    };\n\t    c3_chart_internal_fn.classBars = function (d) {\n\t        return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n\t    };\n\t    c3_chart_internal_fn.classArc = function (d) {\n\t        return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n\t    };\n\t    c3_chart_internal_fn.classArcs = function (d) {\n\t        return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n\t    };\n\t    c3_chart_internal_fn.classArea = function (d) {\n\t        return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n\t    };\n\t    c3_chart_internal_fn.classAreas = function (d) {\n\t        return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n\t    };\n\t    c3_chart_internal_fn.classRegion = function (d, i) {\n\t        return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n\t    };\n\t    c3_chart_internal_fn.classEvent = function (d) {\n\t        return this.generateClass(CLASS.eventRect, d.index);\n\t    };\n\t    c3_chart_internal_fn.classTarget = function (id) {\n\t        var $$ = this;\n\t        var additionalClassSuffix = $$.config.data_classes[id], additionalClass = '';\n\t        if (additionalClassSuffix) {\n\t            additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n\t        }\n\t        return $$.generateClass(CLASS.target, id) + additionalClass;\n\t    };\n\t    c3_chart_internal_fn.classFocus = function (d) {\n\t        return this.classFocused(d) + this.classDefocused(d);\n\t    };\n\t    c3_chart_internal_fn.classFocused = function (d) {\n\t        return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n\t    };\n\t    c3_chart_internal_fn.classDefocused = function (d) {\n\t        return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n\t    };\n\t    c3_chart_internal_fn.classChartText = function (d) {\n\t        return CLASS.chartText + this.classTarget(d.id);\n\t    };\n\t    c3_chart_internal_fn.classChartLine = function (d) {\n\t        return CLASS.chartLine + this.classTarget(d.id);\n\t    };\n\t    c3_chart_internal_fn.classChartBar = function (d) {\n\t        return CLASS.chartBar + this.classTarget(d.id);\n\t    };\n\t    c3_chart_internal_fn.classChartArc = function (d) {\n\t        return CLASS.chartArc + this.classTarget(d.data.id);\n\t    };\n\t    c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n\t        return targetId || targetId === 0 ? ('-' + targetId).replace(/[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]/g, '-') : '';\n\t    };\n\t    c3_chart_internal_fn.selectorTarget = function (id, prefix) {\n\t        return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n\t    };\n\t    c3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n\t        var $$ = this;\n\t        ids = ids || [];\n\t        return ids.length ? ids.map(function (id) { return $$.selectorTarget(id, prefix); }) : null;\n\t    };\n\t    c3_chart_internal_fn.selectorLegend = function (id) {\n\t        return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n\t    };\n\t    c3_chart_internal_fn.selectorLegends = function (ids) {\n\t        var $$ = this;\n\t        return ids && ids.length ? ids.map(function (id) { return $$.selectorLegend(id); }) : null;\n\t    };\n\t\n\t    var isValue = c3_chart_internal_fn.isValue = function (v) {\n\t        return v || v === 0;\n\t    },\n\t        isFunction = c3_chart_internal_fn.isFunction = function (o) {\n\t            return typeof o === 'function';\n\t        },\n\t        isString = c3_chart_internal_fn.isString = function (o) {\n\t            return typeof o === 'string';\n\t        },\n\t        isUndefined = c3_chart_internal_fn.isUndefined = function (v) {\n\t            return typeof v === 'undefined';\n\t        },\n\t        isDefined = c3_chart_internal_fn.isDefined = function (v) {\n\t            return typeof v !== 'undefined';\n\t        },\n\t        ceil10 = c3_chart_internal_fn.ceil10 = function (v) {\n\t            return Math.ceil(v / 10) * 10;\n\t        },\n\t        asHalfPixel = c3_chart_internal_fn.asHalfPixel = function (n) {\n\t            return Math.ceil(n) + 0.5;\n\t        },\n\t        diffDomain = c3_chart_internal_fn.diffDomain = function (d) {\n\t            return d[1] - d[0];\n\t        },\n\t        isEmpty = c3_chart_internal_fn.isEmpty = function (o) {\n\t            return typeof o === 'undefined' || o === null || (isString(o) && o.length === 0) || (typeof o === 'object' && Object.keys(o).length === 0);\n\t        },\n\t        notEmpty = c3_chart_internal_fn.notEmpty = function (o) {\n\t            return !c3_chart_internal_fn.isEmpty(o);\n\t        },\n\t        getOption = c3_chart_internal_fn.getOption = function (options, key, defaultValue) {\n\t            return isDefined(options[key]) ? options[key] : defaultValue;\n\t        },\n\t        hasValue = c3_chart_internal_fn.hasValue = function (dict, value) {\n\t            var found = false;\n\t            Object.keys(dict).forEach(function (key) {\n\t                if (dict[key] === value) { found = true; }\n\t            });\n\t            return found;\n\t        },\n\t        sanitise = c3_chart_internal_fn.sanitise = function (str) {\n\t            return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n\t        },\n\t        getPathBox = c3_chart_internal_fn.getPathBox = function (path) {\n\t            var box = path.getBoundingClientRect(),\n\t                items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n\t                minX = items[0].x, minY = Math.min(items[0].y, items[1].y);\n\t            return {x: minX, y: minY, width: box.width, height: box.height};\n\t        };\n\t\n\t    c3_chart_fn.focus = function (targetIds) {\n\t        var $$ = this.internal, candidates;\n\t\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))),\n\t\n\t        this.revert();\n\t        this.defocus();\n\t        candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n\t        if ($$.hasArcType()) {\n\t            $$.expandArc(targetIds);\n\t        }\n\t        $$.toggleFocusLegend(targetIds, true);\n\t\n\t        $$.focusedTargetIds = targetIds;\n\t        $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n\t            return targetIds.indexOf(id) < 0;\n\t        });\n\t    };\n\t\n\t    c3_chart_fn.defocus = function (targetIds) {\n\t        var $$ = this.internal, candidates;\n\t\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))),\n\t\n\t        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n\t        if ($$.hasArcType()) {\n\t            $$.unexpandArc(targetIds);\n\t        }\n\t        $$.toggleFocusLegend(targetIds, false);\n\t\n\t        $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n\t            return targetIds.indexOf(id) < 0;\n\t        });\n\t        $$.defocusedTargetIds = targetIds;\n\t    };\n\t\n\t    c3_chart_fn.revert = function (targetIds) {\n\t        var $$ = this.internal, candidates;\n\t\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t        candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\t\n\t        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n\t        if ($$.hasArcType()) {\n\t            $$.unexpandArc(targetIds);\n\t        }\n\t        if ($$.config.legend_show) {\n\t            $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n\t            $$.legend.selectAll($$.selectorLegends(targetIds))\n\t                .filter(function () {\n\t                    return $$.d3.select(this).classed(CLASS.legendItemFocused);\n\t                })\n\t                .classed(CLASS.legendItemFocused, false);\n\t        }\n\t\n\t        $$.focusedTargetIds = [];\n\t        $$.defocusedTargetIds = [];\n\t    };\n\t\n\t    c3_chart_fn.show = function (targetIds, options) {\n\t        var $$ = this.internal, targets;\n\t\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t        options = options || {};\n\t\n\t        $$.removeHiddenTargetIds(targetIds);\n\t        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\t\n\t        targets.transition()\n\t            .style('opacity', 1, 'important')\n\t            .call($$.endall, function () {\n\t                targets.style('opacity', null).style('opacity', 1);\n\t            });\n\t\n\t        if (options.withLegend) {\n\t            $$.showLegend(targetIds);\n\t        }\n\t\n\t        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n\t    };\n\t\n\t    c3_chart_fn.hide = function (targetIds, options) {\n\t        var $$ = this.internal, targets;\n\t\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t        options = options || {};\n\t\n\t        $$.addHiddenTargetIds(targetIds);\n\t        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\t\n\t        targets.transition()\n\t            .style('opacity', 0, 'important')\n\t            .call($$.endall, function () {\n\t                targets.style('opacity', null).style('opacity', 0);\n\t            });\n\t\n\t        if (options.withLegend) {\n\t            $$.hideLegend(targetIds);\n\t        }\n\t\n\t        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n\t    };\n\t\n\t    c3_chart_fn.toggle = function (targetIds, options) {\n\t        var that = this, $$ = this.internal;\n\t        $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n\t            $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n\t        });\n\t    };\n\t\n\t    c3_chart_fn.zoom = function (domain) {\n\t        var $$ = this.internal;\n\t        if (domain) {\n\t            if ($$.isTimeSeries()) {\n\t                domain = domain.map(function (x) { return $$.parseDate(x); });\n\t            }\n\t            $$.brush.extent(domain);\n\t            $$.redraw({withUpdateXDomain: true, withY: $$.config.zoom_rescale});\n\t            $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n\t        }\n\t        return $$.brush.extent();\n\t    };\n\t    c3_chart_fn.zoom.enable = function (enabled) {\n\t        var $$ = this.internal;\n\t        $$.config.zoom_enabled = enabled;\n\t        $$.updateAndRedraw();\n\t    };\n\t    c3_chart_fn.unzoom = function () {\n\t        var $$ = this.internal;\n\t        $$.brush.clear().update();\n\t        $$.redraw({withUpdateXDomain: true});\n\t    };\n\t\n\t    c3_chart_fn.zoom.max = function (max) {\n\t        var $$ = this.internal, config = $$.config, d3 = $$.d3;\n\t        if (max === 0 || max) {\n\t            config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n\t        }\n\t        else {\n\t            return config.zoom_x_max;\n\t        }\n\t    };\n\t\n\t    c3_chart_fn.zoom.min = function (min) {\n\t        var $$ = this.internal, config = $$.config, d3 = $$.d3;\n\t        if (min === 0 || min) {\n\t            config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n\t        }\n\t        else {\n\t            return config.zoom_x_min;\n\t        }\n\t    };\n\t\n\t    c3_chart_fn.zoom.range = function (range) {\n\t        if (arguments.length) {\n\t            if (isDefined(range.max)) { this.domain.max(range.max); }\n\t            if (isDefined(range.min)) { this.domain.min(range.min); }\n\t        } else {\n\t            return {\n\t                max: this.domain.max(),\n\t                min: this.domain.min()\n\t            };\n\t        }\n\t    };\n\t\n\t    c3_chart_fn.load = function (args) {\n\t        var $$ = this.internal, config = $$.config;\n\t        // update xs if specified\n\t        if (args.xs) {\n\t            $$.addXs(args.xs);\n\t        }\n\t        // update names if exists\n\t        if ('names' in args) {\n\t            c3_chart_fn.data.names.bind(this)(args.names);\n\t        }\n\t        // update classes if exists\n\t        if ('classes' in args) {\n\t            Object.keys(args.classes).forEach(function (id) {\n\t                config.data_classes[id] = args.classes[id];\n\t            });\n\t        }\n\t        // update categories if exists\n\t        if ('categories' in args && $$.isCategorized()) {\n\t            config.axis_x_categories = args.categories;\n\t        }\n\t        // update axes if exists\n\t        if ('axes' in args) {\n\t            Object.keys(args.axes).forEach(function (id) {\n\t                config.data_axes[id] = args.axes[id];\n\t            });\n\t        }\n\t        // update colors if exists\n\t        if ('colors' in args) {\n\t            Object.keys(args.colors).forEach(function (id) {\n\t                config.data_colors[id] = args.colors[id];\n\t            });\n\t        }\n\t        // use cache if exists\n\t        if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n\t            $$.load($$.getCaches(args.cacheIds), args.done);\n\t            return;\n\t        }\n\t        // unload if needed\n\t        if ('unload' in args) {\n\t            // TODO: do not unload if target will load (included in url/rows/columns)\n\t            $$.unload($$.mapToTargetIds((typeof args.unload === 'boolean' && args.unload) ? null : args.unload), function () {\n\t                $$.loadFromArgs(args);\n\t            });\n\t        } else {\n\t            $$.loadFromArgs(args);\n\t        }\n\t    };\n\t\n\t    c3_chart_fn.unload = function (args) {\n\t        var $$ = this.internal;\n\t        args = args || {};\n\t        if (args instanceof Array) {\n\t            args = {ids: args};\n\t        } else if (typeof args === 'string') {\n\t            args = {ids: [args]};\n\t        }\n\t        $$.unload($$.mapToTargetIds(args.ids), function () {\n\t            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n\t            if (args.done) { args.done(); }\n\t        });\n\t    };\n\t\n\t    c3_chart_fn.flow = function (args) {\n\t        var $$ = this.internal,\n\t            targets, data, notfoundIds = [], orgDataCount = $$.getMaxDataCount(),\n\t            dataCount, domain, baseTarget, baseValue, length = 0, tail = 0, diff, to;\n\t\n\t        if (args.json) {\n\t            data = $$.convertJsonToData(args.json, args.keys);\n\t        }\n\t        else if (args.rows) {\n\t            data = $$.convertRowsToData(args.rows);\n\t        }\n\t        else if (args.columns) {\n\t            data = $$.convertColumnsToData(args.columns);\n\t        }\n\t        else {\n\t            return;\n\t        }\n\t        targets = $$.convertDataToTargets(data, true);\n\t\n\t        // Update/Add data\n\t        $$.data.targets.forEach(function (t) {\n\t            var found = false, i, j;\n\t            for (i = 0; i < targets.length; i++) {\n\t                if (t.id === targets[i].id) {\n\t                    found = true;\n\t\n\t                    if (t.values[t.values.length - 1]) {\n\t                        tail = t.values[t.values.length - 1].index + 1;\n\t                    }\n\t                    length = targets[i].values.length;\n\t\n\t                    for (j = 0; j < length; j++) {\n\t                        targets[i].values[j].index = tail + j;\n\t                        if (!$$.isTimeSeries()) {\n\t                            targets[i].values[j].x = tail + j;\n\t                        }\n\t                    }\n\t                    t.values = t.values.concat(targets[i].values);\n\t\n\t                    targets.splice(i, 1);\n\t                    break;\n\t                }\n\t            }\n\t            if (!found) { notfoundIds.push(t.id); }\n\t        });\n\t\n\t        // Append null for not found targets\n\t        $$.data.targets.forEach(function (t) {\n\t            var i, j;\n\t            for (i = 0; i < notfoundIds.length; i++) {\n\t                if (t.id === notfoundIds[i]) {\n\t                    tail = t.values[t.values.length - 1].index + 1;\n\t                    for (j = 0; j < length; j++) {\n\t                        t.values.push({\n\t                            id: t.id,\n\t                            index: tail + j,\n\t                            x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n\t                            value: null\n\t                        });\n\t                    }\n\t                }\n\t            }\n\t        });\n\t\n\t        // Generate null values for new target\n\t        if ($$.data.targets.length) {\n\t            targets.forEach(function (t) {\n\t                var i, missing = [];\n\t                for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n\t                    missing.push({\n\t                        id: t.id,\n\t                        index: i,\n\t                        x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n\t                        value: null\n\t                    });\n\t                }\n\t                t.values.forEach(function (v) {\n\t                    v.index += tail;\n\t                    if (!$$.isTimeSeries()) {\n\t                        v.x += tail;\n\t                    }\n\t                });\n\t                t.values = missing.concat(t.values);\n\t            });\n\t        }\n\t        $$.data.targets = $$.data.targets.concat(targets); // add remained\n\t\n\t        // check data count because behavior needs to change when it's only one\n\t        dataCount = $$.getMaxDataCount();\n\t        baseTarget = $$.data.targets[0];\n\t        baseValue = baseTarget.values[0];\n\t\n\t        // Update length to flow if needed\n\t        if (isDefined(args.to)) {\n\t            length = 0;\n\t            to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n\t            baseTarget.values.forEach(function (v) {\n\t                if (v.x < to) { length++; }\n\t            });\n\t        } else if (isDefined(args.length)) {\n\t            length = args.length;\n\t        }\n\t\n\t        // If only one data, update the domain to flow from left edge of the chart\n\t        if (!orgDataCount) {\n\t            if ($$.isTimeSeries()) {\n\t                if (baseTarget.values.length > 1) {\n\t                    diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n\t                } else {\n\t                    diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n\t                }\n\t            } else {\n\t                diff = 1;\n\t            }\n\t            domain = [baseValue.x - diff, baseValue.x];\n\t            $$.updateXDomain(null, true, true, false, domain);\n\t        } else if (orgDataCount === 1) {\n\t            if ($$.isTimeSeries()) {\n\t                diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n\t                domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n\t                $$.updateXDomain(null, true, true, false, domain);\n\t            }\n\t        }\n\t\n\t        // Set targets\n\t        $$.updateTargets($$.data.targets);\n\t\n\t        // Redraw with new targets\n\t        $$.redraw({\n\t            flow: {\n\t                index: baseValue.index,\n\t                length: length,\n\t                duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n\t                done: args.done,\n\t                orgDataCount: orgDataCount,\n\t            },\n\t            withLegend: true,\n\t            withTransition: orgDataCount > 1,\n\t            withTrimXDomain: false,\n\t            withUpdateXAxis: true,\n\t        });\n\t    };\n\t\n\t    c3_chart_internal_fn.generateFlow = function (args) {\n\t        var $$ = this, config = $$.config, d3 = $$.d3;\n\t\n\t        return function () {\n\t            var targets = args.targets,\n\t                flow = args.flow,\n\t                drawBar = args.drawBar,\n\t                drawLine = args.drawLine,\n\t                drawArea = args.drawArea,\n\t                cx = args.cx,\n\t                cy = args.cy,\n\t                xv = args.xv,\n\t                xForText = args.xForText,\n\t                yForText = args.yForText,\n\t                duration = args.duration;\n\t\n\t            var translateX, scaleX = 1, transform,\n\t                flowIndex = flow.index,\n\t                flowLength = flow.length,\n\t                flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n\t                flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n\t                orgDomain = $$.x.domain(), domain,\n\t                durationForFlow = flow.duration || duration,\n\t                done = flow.done || function () {},\n\t                wait = $$.generateWait();\n\t\n\t            var xgrid = $$.xgrid || d3.selectAll([]),\n\t                xgridLines = $$.xgridLines || d3.selectAll([]),\n\t                mainRegion = $$.mainRegion || d3.selectAll([]),\n\t                mainText = $$.mainText || d3.selectAll([]),\n\t                mainBar = $$.mainBar || d3.selectAll([]),\n\t                mainLine = $$.mainLine || d3.selectAll([]),\n\t                mainArea = $$.mainArea || d3.selectAll([]),\n\t                mainCircle = $$.mainCircle || d3.selectAll([]);\n\t\n\t            // set flag\n\t            $$.flowing = true;\n\t\n\t            // remove head data after rendered\n\t            $$.data.targets.forEach(function (d) {\n\t                d.values.splice(0, flowLength);\n\t            });\n\t\n\t            // update x domain to generate axis elements for flow\n\t            domain = $$.updateXDomain(targets, true, true);\n\t            // update elements related to x scale\n\t            if ($$.updateXGrid) { $$.updateXGrid(true); }\n\t\n\t            // generate transform to flow\n\t            if (!flow.orgDataCount) { // if empty\n\t                if ($$.data.targets[0].values.length !== 1) {\n\t                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n\t                } else {\n\t                    if ($$.isTimeSeries()) {\n\t                        flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n\t                        flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n\t                        translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n\t                    } else {\n\t                        translateX = diffDomain(domain) / 2;\n\t                    }\n\t                }\n\t            } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n\t                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n\t            } else {\n\t                if ($$.isTimeSeries()) {\n\t                    translateX = ($$.x(orgDomain[0]) - $$.x(domain[0]));\n\t                } else {\n\t                    translateX = ($$.x(flowStart.x) - $$.x(flowEnd.x));\n\t                }\n\t            }\n\t            scaleX = (diffDomain(orgDomain) / diffDomain(domain));\n\t            transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n\t\n\t            $$.hideXGridFocus();\n\t\n\t            d3.transition().ease('linear').duration(durationForFlow).each(function () {\n\t                wait.add($$.axes.x.transition().call($$.xAxis));\n\t                wait.add(mainBar.transition().attr('transform', transform));\n\t                wait.add(mainLine.transition().attr('transform', transform));\n\t                wait.add(mainArea.transition().attr('transform', transform));\n\t                wait.add(mainCircle.transition().attr('transform', transform));\n\t                wait.add(mainText.transition().attr('transform', transform));\n\t                wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));\n\t                wait.add(xgrid.transition().attr('transform', transform));\n\t                wait.add(xgridLines.transition().attr('transform', transform));\n\t            })\n\t            .call(wait, function () {\n\t                var i, shapes = [], texts = [], eventRects = [];\n\t\n\t                // remove flowed elements\n\t                if (flowLength) {\n\t                    for (i = 0; i < flowLength; i++) {\n\t                        shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n\t                        texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n\t                        eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));\n\t                    }\n\t                    $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n\t                    $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n\t                    $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();\n\t                    $$.svg.select('.' + CLASS.xgrid).remove();\n\t                }\n\t\n\t                // draw again for removing flowed elements and reverting attr\n\t                xgrid\n\t                    .attr('transform', null)\n\t                    .attr($$.xgridAttr);\n\t                xgridLines\n\t                    .attr('transform', null);\n\t                xgridLines.select('line')\n\t                    .attr(\"x1\", config.axis_rotated ? 0 : xv)\n\t                    .attr(\"x2\", config.axis_rotated ? $$.width : xv);\n\t                xgridLines.select('text')\n\t                    .attr(\"x\", config.axis_rotated ? $$.width : 0)\n\t                    .attr(\"y\", xv);\n\t                mainBar\n\t                    .attr('transform', null)\n\t                    .attr(\"d\", drawBar);\n\t                mainLine\n\t                    .attr('transform', null)\n\t                    .attr(\"d\", drawLine);\n\t                mainArea\n\t                    .attr('transform', null)\n\t                    .attr(\"d\", drawArea);\n\t                mainCircle\n\t                    .attr('transform', null)\n\t                    .attr(\"cx\", cx)\n\t                    .attr(\"cy\", cy);\n\t                mainText\n\t                    .attr('transform', null)\n\t                    .attr('x', xForText)\n\t                    .attr('y', yForText)\n\t                    .style('fill-opacity', $$.opacityForText.bind($$));\n\t                mainRegion\n\t                    .attr('transform', null);\n\t                mainRegion.select('rect').filter($$.isRegionOnX)\n\t                    .attr(\"x\", $$.regionX.bind($$))\n\t                    .attr(\"width\", $$.regionWidth.bind($$));\n\t\n\t                if (config.interaction_enabled) {\n\t                    $$.redrawEventRect();\n\t                }\n\t\n\t                // callback for end of flow\n\t                done();\n\t\n\t                $$.flowing = false;\n\t            });\n\t        };\n\t    };\n\t\n\t    c3_chart_fn.selected = function (targetId) {\n\t        var $$ = this.internal, d3 = $$.d3;\n\t        return d3.merge(\n\t            $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape)\n\t                .filter(function () { return d3.select(this).classed(CLASS.SELECTED); })\n\t                .map(function (d) { return d.map(function (d) { var data = d.__data__; return data.data ? data.data : data; }); })\n\t        );\n\t    };\n\t    c3_chart_fn.select = function (ids, indices, resetOther) {\n\t        var $$ = this.internal, d3 = $$.d3, config = $$.config;\n\t        if (! config.data_selection_enabled) { return; }\n\t        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n\t            var shape = d3.select(this), id = d.data ? d.data.id : d.id,\n\t                toggle = $$.getToggle(this, d).bind($$),\n\t                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n\t                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n\t                isSelected = shape.classed(CLASS.SELECTED);\n\t            // line/area selection not supported yet\n\t            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n\t                return;\n\t            }\n\t            if (isTargetId && isTargetIndex) {\n\t                if (config.data_selection_isselectable(d) && !isSelected) {\n\t                    toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n\t                }\n\t            } else if (isDefined(resetOther) && resetOther) {\n\t                if (isSelected) {\n\t                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n\t                }\n\t            }\n\t        });\n\t    };\n\t    c3_chart_fn.unselect = function (ids, indices) {\n\t        var $$ = this.internal, d3 = $$.d3, config = $$.config;\n\t        if (! config.data_selection_enabled) { return; }\n\t        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n\t            var shape = d3.select(this), id = d.data ? d.data.id : d.id,\n\t                toggle = $$.getToggle(this, d).bind($$),\n\t                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n\t                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n\t                isSelected = shape.classed(CLASS.SELECTED);\n\t            // line/area selection not supported yet\n\t            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n\t                return;\n\t            }\n\t            if (isTargetId && isTargetIndex) {\n\t                if (config.data_selection_isselectable(d)) {\n\t                    if (isSelected) {\n\t                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n\t                    }\n\t                }\n\t            }\n\t        });\n\t    };\n\t\n\t    c3_chart_fn.transform = function (type, targetIds) {\n\t        var $$ = this.internal,\n\t            options = ['pie', 'donut'].indexOf(type) >= 0 ? {withTransform: true} : null;\n\t        $$.transformTo(targetIds, type, options);\n\t    };\n\t\n\t    c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n\t        var $$ = this,\n\t            withTransitionForAxis = !$$.hasArcType(),\n\t            options = optionsForRedraw || {withTransitionForAxis: withTransitionForAxis};\n\t        options.withTransitionForTransform = false;\n\t        $$.transiting = false;\n\t        $$.setTargetType(targetIds, type);\n\t        $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n\t        $$.updateAndRedraw(options);\n\t    };\n\t\n\t    c3_chart_fn.groups = function (groups) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (isUndefined(groups)) { return config.data_groups; }\n\t        config.data_groups = groups;\n\t        $$.redraw();\n\t        return config.data_groups;\n\t    };\n\t\n\t    c3_chart_fn.xgrids = function (grids) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (! grids) { return config.grid_x_lines; }\n\t        config.grid_x_lines = grids;\n\t        $$.redrawWithoutRescale();\n\t        return config.grid_x_lines;\n\t    };\n\t    c3_chart_fn.xgrids.add = function (grids) {\n\t        var $$ = this.internal;\n\t        return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n\t    };\n\t    c3_chart_fn.xgrids.remove = function (params) { // TODO: multiple\n\t        var $$ = this.internal;\n\t        $$.removeGridLines(params, true);\n\t    };\n\t\n\t    c3_chart_fn.ygrids = function (grids) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (! grids) { return config.grid_y_lines; }\n\t        config.grid_y_lines = grids;\n\t        $$.redrawWithoutRescale();\n\t        return config.grid_y_lines;\n\t    };\n\t    c3_chart_fn.ygrids.add = function (grids) {\n\t        var $$ = this.internal;\n\t        return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n\t    };\n\t    c3_chart_fn.ygrids.remove = function (params) { // TODO: multiple\n\t        var $$ = this.internal;\n\t        $$.removeGridLines(params, false);\n\t    };\n\t\n\t    c3_chart_fn.regions = function (regions) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (!regions) { return config.regions; }\n\t        config.regions = regions;\n\t        $$.redrawWithoutRescale();\n\t        return config.regions;\n\t    };\n\t    c3_chart_fn.regions.add = function (regions) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (!regions) { return config.regions; }\n\t        config.regions = config.regions.concat(regions);\n\t        $$.redrawWithoutRescale();\n\t        return config.regions;\n\t    };\n\t    c3_chart_fn.regions.remove = function (options) {\n\t        var $$ = this.internal, config = $$.config,\n\t            duration, classes, regions;\n\t\n\t        options = options || {};\n\t        duration = $$.getOption(options, \"duration\", config.transition_duration);\n\t        classes = $$.getOption(options, \"classes\", [CLASS.region]);\n\t\n\t        regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) { return '.' + c; }));\n\t        (duration ? regions.transition().duration(duration) : regions)\n\t            .style('opacity', 0)\n\t            .remove();\n\t\n\t        config.regions = config.regions.filter(function (region) {\n\t            var found = false;\n\t            if (!region['class']) {\n\t                return true;\n\t            }\n\t            region['class'].split(' ').forEach(function (c) {\n\t                if (classes.indexOf(c) >= 0) { found = true; }\n\t            });\n\t            return !found;\n\t        });\n\t\n\t        return config.regions;\n\t    };\n\t\n\t    c3_chart_fn.data = function (targetIds) {\n\t        var targets = this.internal.data.targets;\n\t        return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n\t            return [].concat(targetIds).indexOf(t.id) >= 0;\n\t        });\n\t    };\n\t    c3_chart_fn.data.shown = function (targetIds) {\n\t        return this.internal.filterTargetsToShow(this.data(targetIds));\n\t    };\n\t    c3_chart_fn.data.values = function (targetId) {\n\t        var targets, values = null;\n\t        if (targetId) {\n\t            targets = this.data(targetId);\n\t            values = targets[0] ? targets[0].values.map(function (d) { return d.value; }) : null;\n\t        }\n\t        return values;\n\t    };\n\t    c3_chart_fn.data.names = function (names) {\n\t        this.internal.clearLegendItemTextBoxCache();\n\t        return this.internal.updateDataAttributes('names', names);\n\t    };\n\t    c3_chart_fn.data.colors = function (colors) {\n\t        return this.internal.updateDataAttributes('colors', colors);\n\t    };\n\t    c3_chart_fn.data.axes = function (axes) {\n\t        return this.internal.updateDataAttributes('axes', axes);\n\t    };\n\t\n\t    c3_chart_fn.category = function (i, category) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (arguments.length > 1) {\n\t            config.axis_x_categories[i] = category;\n\t            $$.redraw();\n\t        }\n\t        return config.axis_x_categories[i];\n\t    };\n\t    c3_chart_fn.categories = function (categories) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (!arguments.length) { return config.axis_x_categories; }\n\t        config.axis_x_categories = categories;\n\t        $$.redraw();\n\t        return config.axis_x_categories;\n\t    };\n\t\n\t    // TODO: fix\n\t    c3_chart_fn.color = function (id) {\n\t        var $$ = this.internal;\n\t        return $$.color(id); // more patterns\n\t    };\n\t\n\t    c3_chart_fn.x = function (x) {\n\t        var $$ = this.internal;\n\t        if (arguments.length) {\n\t            $$.updateTargetX($$.data.targets, x);\n\t            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n\t        }\n\t        return $$.data.xs;\n\t    };\n\t    c3_chart_fn.xs = function (xs) {\n\t        var $$ = this.internal;\n\t        if (arguments.length) {\n\t            $$.updateTargetXs($$.data.targets, xs);\n\t            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n\t        }\n\t        return $$.data.xs;\n\t    };\n\t\n\t    c3_chart_fn.axis = function () {};\n\t    c3_chart_fn.axis.labels = function (labels) {\n\t        var $$ = this.internal;\n\t        if (arguments.length) {\n\t            Object.keys(labels).forEach(function (axisId) {\n\t                $$.axis.setLabelText(axisId, labels[axisId]);\n\t            });\n\t            $$.axis.updateLabels();\n\t        }\n\t        // TODO: return some values?\n\t    };\n\t    c3_chart_fn.axis.max = function (max) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (arguments.length) {\n\t            if (typeof max === 'object') {\n\t                if (isValue(max.x)) { config.axis_x_max = max.x; }\n\t                if (isValue(max.y)) { config.axis_y_max = max.y; }\n\t                if (isValue(max.y2)) { config.axis_y2_max = max.y2; }\n\t            } else {\n\t                config.axis_y_max = config.axis_y2_max = max;\n\t            }\n\t            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n\t        } else {\n\t            return {\n\t                x: config.axis_x_max,\n\t                y: config.axis_y_max,\n\t                y2: config.axis_y2_max\n\t            };\n\t        }\n\t    };\n\t    c3_chart_fn.axis.min = function (min) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (arguments.length) {\n\t            if (typeof min === 'object') {\n\t                if (isValue(min.x)) { config.axis_x_min = min.x; }\n\t                if (isValue(min.y)) { config.axis_y_min = min.y; }\n\t                if (isValue(min.y2)) { config.axis_y2_min = min.y2; }\n\t            } else {\n\t                config.axis_y_min = config.axis_y2_min = min;\n\t            }\n\t            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n\t        } else {\n\t            return {\n\t                x: config.axis_x_min,\n\t                y: config.axis_y_min,\n\t                y2: config.axis_y2_min\n\t            };\n\t        }\n\t    };\n\t    c3_chart_fn.axis.range = function (range) {\n\t        if (arguments.length) {\n\t            if (isDefined(range.max)) { this.axis.max(range.max); }\n\t            if (isDefined(range.min)) { this.axis.min(range.min); }\n\t        } else {\n\t            return {\n\t                max: this.axis.max(),\n\t                min: this.axis.min()\n\t            };\n\t        }\n\t    };\n\t\n\t    c3_chart_fn.legend = function () {};\n\t    c3_chart_fn.legend.show = function (targetIds) {\n\t        var $$ = this.internal;\n\t        $$.showLegend($$.mapToTargetIds(targetIds));\n\t        $$.updateAndRedraw({withLegend: true});\n\t    };\n\t    c3_chart_fn.legend.hide = function (targetIds) {\n\t        var $$ = this.internal;\n\t        $$.hideLegend($$.mapToTargetIds(targetIds));\n\t        $$.updateAndRedraw({withLegend: true});\n\t    };\n\t\n\t    c3_chart_fn.resize = function (size) {\n\t        var $$ = this.internal, config = $$.config;\n\t        config.size_width = size ? size.width : null;\n\t        config.size_height = size ? size.height : null;\n\t        this.flush();\n\t    };\n\t\n\t    c3_chart_fn.flush = function () {\n\t        var $$ = this.internal;\n\t        $$.updateAndRedraw({withLegend: true, withTransition: false, withTransitionForTransform: false});\n\t    };\n\t\n\t    c3_chart_fn.destroy = function () {\n\t        var $$ = this.internal;\n\t\n\t        window.clearInterval($$.intervalForObserveInserted);\n\t\n\t        if ($$.resizeTimeout !== undefined) {\n\t            window.clearTimeout($$.resizeTimeout);\n\t        }\n\t\n\t        if (window.detachEvent) {\n\t            window.detachEvent('onresize', $$.resizeFunction);\n\t        } else if (window.removeEventListener) {\n\t            window.removeEventListener('resize', $$.resizeFunction);\n\t        } else {\n\t            var wrapper = window.onresize;\n\t            // check if no one else removed our wrapper and remove our resizeFunction from it\n\t            if (wrapper && wrapper.add && wrapper.remove) {\n\t                wrapper.remove($$.resizeFunction);\n\t            }\n\t        }\n\t\n\t        $$.selectChart.classed('c3', false).html(\"\");\n\t\n\t        // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n\t        Object.keys($$).forEach(function (key) {\n\t            $$[key] = null;\n\t        });\n\t\n\t        return null;\n\t    };\n\t\n\t    c3_chart_fn.tooltip = function () {};\n\t    c3_chart_fn.tooltip.show = function (args) {\n\t        var $$ = this.internal, index, mouse;\n\t\n\t        // determine mouse position on the chart\n\t        if (args.mouse) {\n\t            mouse = args.mouse;\n\t        }\n\t\n\t        // determine focus data\n\t        if (args.data) {\n\t            if ($$.isMultipleX()) {\n\t                // if multiple xs, target point will be determined by mouse\n\t                mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];\n\t                index = null;\n\t            } else {\n\t                // TODO: when tooltip_grouped = false\n\t                index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);\n\t            }\n\t        }\n\t        else if (typeof args.x !== 'undefined') {\n\t            index = $$.getIndexByX(args.x);\n\t        }\n\t        else if (typeof args.index !== 'undefined') {\n\t            index = args.index;\n\t        }\n\t\n\t        // emulate mouse events to show\n\t        $$.dispatchEvent('mouseover', index, mouse);\n\t        $$.dispatchEvent('mousemove', index, mouse);\n\t\n\t        $$.config.tooltip_onshow.call($$, args.data);\n\t    };\n\t    c3_chart_fn.tooltip.hide = function () {\n\t        // TODO: get target data by checking the state of focus\n\t        this.internal.dispatchEvent('mouseout', 0);\n\t\n\t        this.internal.config.tooltip_onhide.call(this);\n\t    };\n\t\n\t    // Features:\n\t    // 1. category axis\n\t    // 2. ceil values of translate/x/y to int for half pixel antialiasing\n\t    // 3. multiline tick text\n\t    var tickTextCharSize;\n\t    function c3_axis(d3, params) {\n\t        var scale = d3.scale.linear(), orient = \"bottom\", innerTickSize = 6, outerTickSize, tickPadding = 3, tickValues = null, tickFormat, tickArguments;\n\t\n\t        var tickOffset = 0, tickCulling = true, tickCentered;\n\t\n\t        params = params || {};\n\t        outerTickSize = params.withOuterTick ? 6 : 0;\n\t\n\t        function axisX(selection, x) {\n\t            selection.attr(\"transform\", function (d) {\n\t                return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n\t            });\n\t        }\n\t        function axisY(selection, y) {\n\t            selection.attr(\"transform\", function (d) {\n\t                return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n\t            });\n\t        }\n\t        function scaleExtent(domain) {\n\t            var start = domain[0], stop = domain[domain.length - 1];\n\t            return start < stop ? [ start, stop ] : [ stop, start ];\n\t        }\n\t        function generateTicks(scale) {\n\t            var i, domain, ticks = [];\n\t            if (scale.ticks) {\n\t                return scale.ticks.apply(scale, tickArguments);\n\t            }\n\t            domain = scale.domain();\n\t            for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n\t                ticks.push(i);\n\t            }\n\t            if (ticks.length > 0 && ticks[0] > 0) {\n\t                ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n\t            }\n\t            return ticks;\n\t        }\n\t        function copyScale() {\n\t            var newScale = scale.copy(), domain;\n\t            if (params.isCategory) {\n\t                domain = scale.domain();\n\t                newScale.domain([domain[0], domain[1] - 1]);\n\t            }\n\t            return newScale;\n\t        }\n\t        function textFormatted(v) {\n\t            var formatted = tickFormat ? tickFormat(v) : v;\n\t            return typeof formatted !== 'undefined' ? formatted : '';\n\t        }\n\t        function getSizeFor1Char(tick) {\n\t            if (tickTextCharSize) {\n\t                return tickTextCharSize;\n\t            }\n\t            var size = {\n\t                h: 11.5,\n\t                w: 5.5\n\t            };\n\t            tick.select('text').text(textFormatted).each(function (d) {\n\t                var box = this.getBoundingClientRect(),\n\t                    text = textFormatted(d),\n\t                    h = box.height,\n\t                    w = text ? (box.width / text.length) : undefined;\n\t                if (h && w) {\n\t                    size.h = h;\n\t                    size.w = w;\n\t                }\n\t            }).text('');\n\t            tickTextCharSize = size;\n\t            return size;\n\t        }\n\t        function transitionise(selection) {\n\t            return params.withoutTransition ? selection : d3.transition(selection);\n\t        }\n\t        function axis(g) {\n\t            g.each(function () {\n\t                var g = axis.g = d3.select(this);\n\t\n\t                var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = copyScale();\n\t\n\t                var ticks = tickValues ? tickValues : generateTicks(scale1),\n\t                    tick = g.selectAll(\".tick\").data(ticks, scale1),\n\t                    tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n\t                    // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n\t                    tickExit = tick.exit().remove(),\n\t                    tickUpdate = transitionise(tick).style(\"opacity\", 1),\n\t                    tickTransform, tickX, tickY;\n\t\n\t                var range = scale.rangeExtent ? scale.rangeExtent() : scaleExtent(scale.range()),\n\t                    path = g.selectAll(\".domain\").data([ 0 ]),\n\t                    pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), transitionise(path));\n\t                tickEnter.append(\"line\");\n\t                tickEnter.append(\"text\");\n\t\n\t                var lineEnter = tickEnter.select(\"line\"),\n\t                    lineUpdate = tickUpdate.select(\"line\"),\n\t                    textEnter = tickEnter.select(\"text\"),\n\t                    textUpdate = tickUpdate.select(\"text\");\n\t\n\t                if (params.isCategory) {\n\t                    tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n\t                    tickX = tickCentered ? 0 : tickOffset;\n\t                    tickY = tickCentered ? tickOffset : 0;\n\t                } else {\n\t                    tickOffset = tickX = 0;\n\t                }\n\t\n\t                var text, tspan, sizeFor1Char = getSizeFor1Char(g.select('.tick')), counts = [];\n\t                var tickLength = Math.max(innerTickSize, 0) + tickPadding,\n\t                    isVertical = orient === 'left' || orient === 'right';\n\t\n\t                // this should be called only when category axis\n\t                function splitTickText(d, maxWidth) {\n\t                    var tickText = textFormatted(d),\n\t                        subtext, spaceIndex, textWidth, splitted = [];\n\t\n\t                    if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n\t                        return tickText;\n\t                    }\n\t\n\t                    if (!maxWidth || maxWidth <= 0) {\n\t                        maxWidth = isVertical ? 95 : params.isCategory ? (Math.ceil(scale1(ticks[1]) - scale1(ticks[0])) - 12) : 110;\n\t                    }\n\t\n\t                    function split(splitted, text) {\n\t                        spaceIndex = undefined;\n\t                        for (var i = 1; i < text.length; i++) {\n\t                            if (text.charAt(i) === ' ') {\n\t                                spaceIndex = i;\n\t                            }\n\t                            subtext = text.substr(0, i + 1);\n\t                            textWidth = sizeFor1Char.w * subtext.length;\n\t                            // if text width gets over tick width, split by space index or crrent index\n\t                            if (maxWidth < textWidth) {\n\t                                return split(\n\t                                    splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)),\n\t                                    text.slice(spaceIndex ? spaceIndex + 1 : i)\n\t                                );\n\t                            }\n\t                        }\n\t                        return splitted.concat(text);\n\t                    }\n\t\n\t                    return split(splitted, tickText + \"\");\n\t                }\n\t\n\t                function tspanDy(d, i) {\n\t                    var dy = sizeFor1Char.h;\n\t                    if (i === 0) {\n\t                        if (orient === 'left' || orient === 'right') {\n\t                            dy = -((counts[d.index] - 1) * (sizeFor1Char.h / 2) - 3);\n\t                        } else {\n\t                            dy = \".71em\";\n\t                        }\n\t                    }\n\t                    return dy;\n\t                }\n\t\n\t                function tickSize(d) {\n\t                    var tickPosition = scale(d) + (tickCentered ? 0 : tickOffset);\n\t                    return range[0] < tickPosition && tickPosition < range[1] ? innerTickSize : 0;\n\t                }\n\t\n\t                text = tick.select(\"text\");\n\t                tspan = text.selectAll('tspan')\n\t                    .data(function (d, i) {\n\t                        var splitted = params.tickMultiline ? splitTickText(d, params.tickWidth) : [].concat(textFormatted(d));\n\t                        counts[i] = splitted.length;\n\t                        return splitted.map(function (s) {\n\t                            return { index: i, splitted: s };\n\t                        });\n\t                    });\n\t                tspan.enter().append('tspan');\n\t                tspan.exit().remove();\n\t                tspan.text(function (d) { return d.splitted; });\n\t\n\t                var rotate = params.tickTextRotate;\n\t\n\t                function textAnchorForText(rotate) {\n\t                    if (!rotate) {\n\t                        return 'middle';\n\t                    }\n\t                    return rotate > 0 ? \"start\" : \"end\";\n\t                }\n\t                function textTransform(rotate) {\n\t                    if (!rotate) {\n\t                        return '';\n\t                    }\n\t                    return \"rotate(\" + rotate + \")\";\n\t                }\n\t                function dxForText(rotate) {\n\t                    if (!rotate) {\n\t                        return 0;\n\t                    }\n\t                    return 8 * Math.sin(Math.PI * (rotate / 180));\n\t                }\n\t                function yForText(rotate) {\n\t                    if (!rotate) {\n\t                        return tickLength;\n\t                    }\n\t                    return 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1);\n\t                }\n\t\n\t                switch (orient) {\n\t                case \"bottom\":\n\t                    {\n\t                        tickTransform = axisX;\n\t                        lineEnter.attr(\"y2\", innerTickSize);\n\t                        textEnter.attr(\"y\", tickLength);\n\t                        lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", tickSize);\n\t                        textUpdate.attr(\"x\", 0).attr(\"y\", yForText(rotate))\n\t                            .style(\"text-anchor\", textAnchorForText(rotate))\n\t                            .attr(\"transform\", textTransform(rotate));\n\t                        tspan.attr('x', 0).attr(\"dy\", tspanDy).attr('dx', dxForText(rotate));\n\t                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n\t                        break;\n\t                    }\n\t                case \"top\":\n\t                    {\n\t                        // TODO: rotated tick text\n\t                        tickTransform = axisX;\n\t                        lineEnter.attr(\"y2\", -innerTickSize);\n\t                        textEnter.attr(\"y\", -tickLength);\n\t                        lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n\t                        textUpdate.attr(\"x\", 0).attr(\"y\", -tickLength);\n\t                        text.style(\"text-anchor\", \"middle\");\n\t                        tspan.attr('x', 0).attr(\"dy\", \"0em\");\n\t                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n\t                        break;\n\t                    }\n\t                case \"left\":\n\t                    {\n\t                        tickTransform = axisY;\n\t                        lineEnter.attr(\"x2\", -innerTickSize);\n\t                        textEnter.attr(\"x\", -tickLength);\n\t                        lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n\t                        textUpdate.attr(\"x\", -tickLength).attr(\"y\", tickOffset);\n\t                        text.style(\"text-anchor\", \"end\");\n\t                        tspan.attr('x', -tickLength).attr(\"dy\", tspanDy);\n\t                        pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n\t                        break;\n\t                    }\n\t                case \"right\":\n\t                    {\n\t                        tickTransform = axisY;\n\t                        lineEnter.attr(\"x2\", innerTickSize);\n\t                        textEnter.attr(\"x\", tickLength);\n\t                        lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n\t                        textUpdate.attr(\"x\", tickLength).attr(\"y\", 0);\n\t                        text.style(\"text-anchor\", \"start\");\n\t                        tspan.attr('x', tickLength).attr(\"dy\", tspanDy);\n\t                        pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n\t                        break;\n\t                    }\n\t                }\n\t                if (scale1.rangeBand) {\n\t                    var x = scale1, dx = x.rangeBand() / 2;\n\t                    scale0 = scale1 = function (d) {\n\t                        return x(d) + dx;\n\t                    };\n\t                } else if (scale0.rangeBand) {\n\t                    scale0 = scale1;\n\t                } else {\n\t                    tickExit.call(tickTransform, scale1);\n\t                }\n\t                tickEnter.call(tickTransform, scale0);\n\t                tickUpdate.call(tickTransform, scale1);\n\t            });\n\t        }\n\t        axis.scale = function (x) {\n\t            if (!arguments.length) { return scale; }\n\t            scale = x;\n\t            return axis;\n\t        };\n\t        axis.orient = function (x) {\n\t            if (!arguments.length) { return orient; }\n\t            orient = x in {top: 1, right: 1, bottom: 1, left: 1} ? x + \"\" : \"bottom\";\n\t            return axis;\n\t        };\n\t        axis.tickFormat = function (format) {\n\t            if (!arguments.length) { return tickFormat; }\n\t            tickFormat = format;\n\t            return axis;\n\t        };\n\t        axis.tickCentered = function (isCentered) {\n\t            if (!arguments.length) { return tickCentered; }\n\t            tickCentered = isCentered;\n\t            return axis;\n\t        };\n\t        axis.tickOffset = function () {\n\t            return tickOffset;\n\t        };\n\t        axis.tickInterval = function () {\n\t            var interval, length;\n\t            if (params.isCategory) {\n\t                interval = tickOffset * 2;\n\t            }\n\t            else {\n\t                length = axis.g.select('path.domain').node().getTotalLength() - outerTickSize * 2;\n\t                interval = length / axis.g.selectAll('line').size();\n\t            }\n\t            return interval === Infinity ? 0 : interval;\n\t        };\n\t        axis.ticks = function () {\n\t            if (!arguments.length) { return tickArguments; }\n\t            tickArguments = arguments;\n\t            return axis;\n\t        };\n\t        axis.tickCulling = function (culling) {\n\t            if (!arguments.length) { return tickCulling; }\n\t            tickCulling = culling;\n\t            return axis;\n\t        };\n\t        axis.tickValues = function (x) {\n\t            if (typeof x === 'function') {\n\t                tickValues = function () {\n\t                    return x(scale.domain());\n\t                };\n\t            }\n\t            else {\n\t                if (!arguments.length) { return tickValues; }\n\t                tickValues = x;\n\t            }\n\t            return axis;\n\t        };\n\t        return axis;\n\t    }\n\t\n\t    c3_chart_internal_fn.isSafari = function () {\n\t        var ua = window.navigator.userAgent;\n\t        return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n\t    };\n\t    c3_chart_internal_fn.isChrome = function () {\n\t        var ua = window.navigator.userAgent;\n\t        return ua.indexOf('Chrome') >= 0;\n\t    };\n\t\n\t    /* jshint ignore:start */\n\t\n\t    // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n\t    // this polyfill to avoid the confusion.\n\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\t\n\t    if (!Function.prototype.bind) {\n\t      Function.prototype.bind = function(oThis) {\n\t        if (typeof this !== 'function') {\n\t          // closest thing possible to the ECMAScript 5\n\t          // internal IsCallable function\n\t          throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n\t        }\n\t\n\t        var aArgs   = Array.prototype.slice.call(arguments, 1),\n\t            fToBind = this,\n\t            fNOP    = function() {},\n\t            fBound  = function() {\n\t              return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n\t            };\n\t\n\t        fNOP.prototype = this.prototype;\n\t        fBound.prototype = new fNOP();\n\t\n\t        return fBound;\n\t      };\n\t    }\n\t\n\t    //SVGPathSeg API polyfill\n\t    //https://github.com/progers/pathseg\n\t    //\n\t    //This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n\t    //SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n\t    //changes which were implemented in Firefox 43 and Chrome 46.\n\t    //Chrome 48 removes these APIs, so this polyfill is required.\n\t\n\t    (function() { \"use strict\";\n\t     if (!(\"SVGPathSeg\" in window)) {\n\t         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n\t         window.SVGPathSeg = function(type, typeAsLetter, owningPathSegList) {\n\t             this.pathSegType = type;\n\t             this.pathSegTypeAsLetter = typeAsLetter;\n\t             this._owningPathSegList = owningPathSegList;\n\t         }\n\t\n\t         SVGPathSeg.PATHSEG_UNKNOWN = 0;\n\t         SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n\t         SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n\t         SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n\t         SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n\t         SVGPathSeg.PATHSEG_LINETO_REL = 5;\n\t         SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n\t         SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n\t         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n\t         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n\t         SVGPathSeg.PATHSEG_ARC_ABS = 10;\n\t         SVGPathSeg.PATHSEG_ARC_REL = 11;\n\t         SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n\t         SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n\t         SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n\t         SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n\t         SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n\t         SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n\t         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n\t         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n\t\n\t         // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n\t         SVGPathSeg.prototype._segmentChanged = function() {\n\t             if (this._owningPathSegList)\n\t                 this._owningPathSegList.segmentChanged(this);\n\t         }\n\t\n\t         window.SVGPathSegClosePath = function(owningPathSegList) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n\t         }\n\t         SVGPathSegClosePath.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegClosePath.prototype.toString = function() { return \"[object SVGPathSegClosePath]\"; }\n\t         SVGPathSegClosePath.prototype._asPathString = function() { return this.pathSegTypeAsLetter; }\n\t         SVGPathSegClosePath.prototype.clone = function() { return new SVGPathSegClosePath(undefined); }\n\t\n\t         window.SVGPathSegMovetoAbs = function(owningPathSegList, x, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t         }\n\t         SVGPathSegMovetoAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegMovetoAbs.prototype.toString = function() { return \"[object SVGPathSegMovetoAbs]\"; }\n\t         SVGPathSegMovetoAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegMovetoAbs.prototype.clone = function() { return new SVGPathSegMovetoAbs(undefined, this._x, this._y); }\n\t         Object.defineProperty(SVGPathSegMovetoAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegMovetoAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegMovetoRel = function(owningPathSegList, x, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t         }\n\t         SVGPathSegMovetoRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegMovetoRel.prototype.toString = function() { return \"[object SVGPathSegMovetoRel]\"; }\n\t         SVGPathSegMovetoRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegMovetoRel.prototype.clone = function() { return new SVGPathSegMovetoRel(undefined, this._x, this._y); }\n\t         Object.defineProperty(SVGPathSegMovetoRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegMovetoRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegLinetoAbs = function(owningPathSegList, x, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t         }\n\t         SVGPathSegLinetoAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegLinetoAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoAbs]\"; }\n\t         SVGPathSegLinetoAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegLinetoAbs.prototype.clone = function() { return new SVGPathSegLinetoAbs(undefined, this._x, this._y); }\n\t         Object.defineProperty(SVGPathSegLinetoAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegLinetoAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegLinetoRel = function(owningPathSegList, x, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t         }\n\t         SVGPathSegLinetoRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegLinetoRel.prototype.toString = function() { return \"[object SVGPathSegLinetoRel]\"; }\n\t         SVGPathSegLinetoRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegLinetoRel.prototype.clone = function() { return new SVGPathSegLinetoRel(undefined, this._x, this._y); }\n\t         Object.defineProperty(SVGPathSegLinetoRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegLinetoRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoCubicAbs = function(owningPathSegList, x, y, x1, y1, x2, y2) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._x1 = x1;\n\t             this._y1 = y1;\n\t             this._x2 = x2;\n\t             this._y2 = y2;\n\t         }\n\t         SVGPathSegCurvetoCubicAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoCubicAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicAbs]\"; }\n\t         SVGPathSegCurvetoCubicAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoCubicAbs.prototype.clone = function() { return new SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }\n\t         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoCubicRel = function(owningPathSegList, x, y, x1, y1, x2, y2) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._x1 = x1;\n\t             this._y1 = y1;\n\t             this._x2 = x2;\n\t             this._y2 = y2;\n\t         }\n\t         SVGPathSegCurvetoCubicRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoCubicRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicRel]\"; }\n\t         SVGPathSegCurvetoCubicRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoCubicRel.prototype.clone = function() { return new SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }\n\t         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoQuadraticAbs = function(owningPathSegList, x, y, x1, y1) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._x1 = x1;\n\t             this._y1 = y1;\n\t         }\n\t         SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoQuadraticAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticAbs]\"; }\n\t         SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoQuadraticAbs.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1); }\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoQuadraticRel = function(owningPathSegList, x, y, x1, y1) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._x1 = x1;\n\t             this._y1 = y1;\n\t         }\n\t         SVGPathSegCurvetoQuadraticRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoQuadraticRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticRel]\"; }\n\t         SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoQuadraticRel.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1); }\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegArcAbs = function(owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._r1 = r1;\n\t             this._r2 = r2;\n\t             this._angle = angle;\n\t             this._largeArcFlag = largeArcFlag;\n\t             this._sweepFlag = sweepFlag;\n\t         }\n\t         SVGPathSegArcAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegArcAbs.prototype.toString = function() { return \"[object SVGPathSegArcAbs]\"; }\n\t         SVGPathSegArcAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegArcAbs.prototype.clone = function() { return new SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }\n\t         Object.defineProperty(SVGPathSegArcAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcAbs.prototype, \"r1\", { get: function() { return this._r1; }, set: function(r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcAbs.prototype, \"r2\", { get: function() { return this._r2; }, set: function(r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcAbs.prototype, \"angle\", { get: function() { return this._angle; }, set: function(angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function() { return this._largeArcFlag; }, set: function(largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function() { return this._sweepFlag; }, set: function(sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegArcRel = function(owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._r1 = r1;\n\t             this._r2 = r2;\n\t             this._angle = angle;\n\t             this._largeArcFlag = largeArcFlag;\n\t             this._sweepFlag = sweepFlag;\n\t         }\n\t         SVGPathSegArcRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegArcRel.prototype.toString = function() { return \"[object SVGPathSegArcRel]\"; }\n\t         SVGPathSegArcRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegArcRel.prototype.clone = function() { return new SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }\n\t         Object.defineProperty(SVGPathSegArcRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcRel.prototype, \"r1\", { get: function() { return this._r1; }, set: function(r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcRel.prototype, \"r2\", { get: function() { return this._r2; }, set: function(r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcRel.prototype, \"angle\", { get: function() { return this._angle; }, set: function(angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function() { return this._largeArcFlag; }, set: function(largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function() { return this._sweepFlag; }, set: function(sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegLinetoHorizontalAbs = function(owningPathSegList, x) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n\t             this._x = x;\n\t         }\n\t         SVGPathSegLinetoHorizontalAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegLinetoHorizontalAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoHorizontalAbs]\"; }\n\t         SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x; }\n\t         SVGPathSegLinetoHorizontalAbs.prototype.clone = function() { return new SVGPathSegLinetoHorizontalAbs(undefined, this._x); }\n\t         Object.defineProperty(SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegLinetoHorizontalRel = function(owningPathSegList, x) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n\t             this._x = x;\n\t         }\n\t         SVGPathSegLinetoHorizontalRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegLinetoHorizontalRel.prototype.toString = function() { return \"[object SVGPathSegLinetoHorizontalRel]\"; }\n\t         SVGPathSegLinetoHorizontalRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x; }\n\t         SVGPathSegLinetoHorizontalRel.prototype.clone = function() { return new SVGPathSegLinetoHorizontalRel(undefined, this._x); }\n\t         Object.defineProperty(SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegLinetoVerticalAbs = function(owningPathSegList, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n\t             this._y = y;\n\t         }\n\t         SVGPathSegLinetoVerticalAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegLinetoVerticalAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoVerticalAbs]\"; }\n\t         SVGPathSegLinetoVerticalAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._y; }\n\t         SVGPathSegLinetoVerticalAbs.prototype.clone = function() { return new SVGPathSegLinetoVerticalAbs(undefined, this._y); }\n\t         Object.defineProperty(SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegLinetoVerticalRel = function(owningPathSegList, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n\t             this._y = y;\n\t         }\n\t         SVGPathSegLinetoVerticalRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegLinetoVerticalRel.prototype.toString = function() { return \"[object SVGPathSegLinetoVerticalRel]\"; }\n\t         SVGPathSegLinetoVerticalRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._y; }\n\t         SVGPathSegLinetoVerticalRel.prototype.clone = function() { return new SVGPathSegLinetoVerticalRel(undefined, this._y); }\n\t         Object.defineProperty(SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoCubicSmoothAbs = function(owningPathSegList, x, y, x2, y2) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._x2 = x2;\n\t             this._y2 = y2;\n\t         }\n\t         SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicSmoothAbs]\"; }\n\t         SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function() { return new SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2); }\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoCubicSmoothRel = function(owningPathSegList, x, y, x2, y2) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._x2 = x2;\n\t             this._y2 = y2;\n\t         }\n\t         SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicSmoothRel]\"; }\n\t         SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function() { return new SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2); }\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoQuadraticSmoothAbs = function(owningPathSegList, x, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t         }\n\t         SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\"; }\n\t         SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y); }\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoQuadraticSmoothRel = function(owningPathSegList, x, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t         }\n\t         SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\"; }\n\t         SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y); }\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         // Add createSVGPathSeg* functions to SVGPathElement.\n\t         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathElement.\n\t         SVGPathElement.prototype.createSVGPathSegClosePath = function() { return new SVGPathSegClosePath(undefined); }\n\t         SVGPathElement.prototype.createSVGPathSegMovetoAbs = function(x, y) { return new SVGPathSegMovetoAbs(undefined, x, y); }\n\t         SVGPathElement.prototype.createSVGPathSegMovetoRel = function(x, y) { return new SVGPathSegMovetoRel(undefined, x, y); }\n\t         SVGPathElement.prototype.createSVGPathSegLinetoAbs = function(x, y) { return new SVGPathSegLinetoAbs(undefined, x, y); }\n\t         SVGPathElement.prototype.createSVGPathSegLinetoRel = function(x, y) { return new SVGPathSegLinetoRel(undefined, x, y); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function(x, y, x1, y1, x2, y2) { return new SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function(x, y, x1, y1, x2, y2) { return new SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function(x, y, x1, y1) { return new SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function(x, y, x1, y1) { return new SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1); }\n\t         SVGPathElement.prototype.createSVGPathSegArcAbs = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }\n\t         SVGPathElement.prototype.createSVGPathSegArcRel = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }\n\t         SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function(x) { return new SVGPathSegLinetoHorizontalAbs(undefined, x); }\n\t         SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function(x) { return new SVGPathSegLinetoHorizontalRel(undefined, x); }\n\t         SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function(y) { return new SVGPathSegLinetoVerticalAbs(undefined, y); }\n\t         SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function(y) { return new SVGPathSegLinetoVerticalRel(undefined, y); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function(x, y, x2, y2) { return new SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function(x, y, x2, y2) { return new SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function(x, y) { return new SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function(x, y) { return new SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y); }\n\t     }\n\t\n\t     if (!(\"SVGPathSegList\" in window)) {\n\t         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n\t         window.SVGPathSegList = function(pathElement) {\n\t             this._pathElement = pathElement;\n\t             this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\t\n\t             // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n\t             this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\n\t             this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n\t             this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n\t         }\n\t\n\t         Object.defineProperty(SVGPathSegList.prototype, \"numberOfItems\", {\n\t             get: function() {\n\t                 this._checkPathSynchronizedToList();\n\t                 return this._list.length;\n\t             },\n\t             enumerable: true\n\t         });\n\t\n\t         // Add the pathSegList accessors to SVGPathElement.\n\t         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n\t         Object.defineProperty(SVGPathElement.prototype, \"pathSegList\", {\n\t             get: function() {\n\t                 if (!this._pathSegList)\n\t                     this._pathSegList = new SVGPathSegList(this);\n\t                 return this._pathSegList;\n\t             },\n\t             enumerable: true\n\t         });\n\t         // FIXME: The following are not implemented and simply return SVGPathElement.pathSegList.\n\t         Object.defineProperty(SVGPathElement.prototype, \"normalizedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n\t         Object.defineProperty(SVGPathElement.prototype, \"animatedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n\t         Object.defineProperty(SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n\t\n\t         // Process any pending mutations to the path element and update the list as needed.\n\t         // This should be the first call of all public functions and is needed because\n\t         // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n\t         SVGPathSegList.prototype._checkPathSynchronizedToList = function() {\n\t             this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n\t         }\n\t\n\t         SVGPathSegList.prototype._updateListFromPathMutations = function(mutationRecords) {\n\t             if (!this._pathElement)\n\t                 return;\n\t             var hasPathMutations = false;\n\t             mutationRecords.forEach(function(record) {\n\t                 if (record.attributeName == \"d\")\n\t                     hasPathMutations = true;\n\t             });\n\t             if (hasPathMutations)\n\t                 this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\t         }\n\t\n\t         // Serialize the list and update the path's 'd' attribute.\n\t         SVGPathSegList.prototype._writeListToPath = function() {\n\t             this._pathElementMutationObserver.disconnect();\n\t             this._pathElement.setAttribute(\"d\", SVGPathSegList._pathSegArrayAsString(this._list));\n\t             this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n\t         }\n\t\n\t         // When a path segment changes the list needs to be synchronized back to the path element.\n\t         SVGPathSegList.prototype.segmentChanged = function(pathSeg) {\n\t             this._writeListToPath();\n\t         }\n\t\n\t         SVGPathSegList.prototype.clear = function() {\n\t             this._checkPathSynchronizedToList();\n\t\n\t             this._list.forEach(function(pathSeg) {\n\t                 pathSeg._owningPathSegList = null;\n\t             });\n\t             this._list = [];\n\t             this._writeListToPath();\n\t         }\n\t\n\t         SVGPathSegList.prototype.initialize = function(newItem) {\n\t             this._checkPathSynchronizedToList();\n\t\n\t             this._list = [newItem];\n\t             newItem._owningPathSegList = this;\n\t             this._writeListToPath();\n\t             return newItem;\n\t         }\n\t\n\t         SVGPathSegList.prototype._checkValidIndex = function(index) {\n\t             if (isNaN(index) || index < 0 || index >= this.numberOfItems)\n\t                 throw \"INDEX_SIZE_ERR\";\n\t         }\n\t\n\t         SVGPathSegList.prototype.getItem = function(index) {\n\t             this._checkPathSynchronizedToList();\n\t\n\t             this._checkValidIndex(index);\n\t             return this._list[index];\n\t         }\n\t\n\t         SVGPathSegList.prototype.insertItemBefore = function(newItem, index) {\n\t             this._checkPathSynchronizedToList();\n\t\n\t             // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n\t             if (index > this.numberOfItems)\n\t                 index = this.numberOfItems;\n\t             if (newItem._owningPathSegList) {\n\t                 // SVG2 spec says to make a copy.\n\t                 newItem = newItem.clone();\n\t             }\n\t             this._list.splice(index, 0, newItem);\n\t             newItem._owningPathSegList = this;\n\t             this._writeListToPath();\n\t             return newItem;\n\t         }\n\t\n\t         SVGPathSegList.prototype.replaceItem = function(newItem, index) {\n\t             this._checkPathSynchronizedToList();\n\t\n\t             if (newItem._owningPathSegList) {\n\t                 // SVG2 spec says to make a copy.\n\t                 newItem = newItem.clone();\n\t             }\n\t             this._checkValidIndex(index);\n\t             this._list[index] = newItem;\n\t             newItem._owningPathSegList = this;\n\t             this._writeListToPath();\n\t             return newItem;\n\t         }\n\t\n\t         SVGPathSegList.prototype.removeItem = function(index) {\n\t             this._checkPathSynchronizedToList();\n\t\n\t             this._checkValidIndex(index);\n\t             var item = this._list[index];\n\t             this._list.splice(index, 1);\n\t             this._writeListToPath();\n\t             return item;\n\t         }\n\t\n\t         SVGPathSegList.prototype.appendItem = function(newItem) {\n\t             this._checkPathSynchronizedToList();\n\t\n\t             if (newItem._owningPathSegList) {\n\t                 // SVG2 spec says to make a copy.\n\t                 newItem = newItem.clone();\n\t             }\n\t             this._list.push(newItem);\n\t             newItem._owningPathSegList = this;\n\t             // TODO: Optimize this to just append to the existing attribute.\n\t             this._writeListToPath();\n\t             return newItem;\n\t         }\n\t\n\t         SVGPathSegList._pathSegArrayAsString = function(pathSegArray) {\n\t             var string = \"\";\n\t             var first = true;\n\t             pathSegArray.forEach(function(pathSeg) {\n\t                 if (first) {\n\t                     first = false;\n\t                     string += pathSeg._asPathString();\n\t                 } else {\n\t                     string += \" \" + pathSeg._asPathString();\n\t                 }\n\t             });\n\t             return string;\n\t         }\n\t\n\t         // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n\t         SVGPathSegList.prototype._parsePath = function(string) {\n\t             if (!string || string.length == 0)\n\t                 return [];\n\t\n\t             var owningPathSegList = this;\n\t\n\t             var Builder = function() {\n\t                 this.pathSegList = [];\n\t             }\n\t\n\t             Builder.prototype.appendSegment = function(pathSeg) {\n\t                 this.pathSegList.push(pathSeg);\n\t             }\n\t\n\t             var Source = function(string) {\n\t                 this._string = string;\n\t                 this._currentIndex = 0;\n\t                 this._endIndex = this._string.length;\n\t                 this._previousCommand = SVGPathSeg.PATHSEG_UNKNOWN;\n\t\n\t                 this._skipOptionalSpaces();\n\t             }\n\t\n\t             Source.prototype._isCurrentSpace = function() {\n\t                 var character = this._string[this._currentIndex];\n\t                 return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n\t             }\n\t\n\t             Source.prototype._skipOptionalSpaces = function() {\n\t                 while (this._currentIndex < this._endIndex && this._isCurrentSpace())\n\t                     this._currentIndex++;\n\t                 return this._currentIndex < this._endIndex;\n\t             }\n\t\n\t             Source.prototype._skipOptionalSpacesOrDelimiter = function() {\n\t                 if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\")\n\t                     return false;\n\t                 if (this._skipOptionalSpaces()) {\n\t                     if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n\t                         this._currentIndex++;\n\t                         this._skipOptionalSpaces();\n\t                     }\n\t                 }\n\t                 return this._currentIndex < this._endIndex;\n\t             }\n\t\n\t             Source.prototype.hasMoreData = function() {\n\t                 return this._currentIndex < this._endIndex;\n\t             }\n\t\n\t             Source.prototype.peekSegmentType = function() {\n\t                 var lookahead = this._string[this._currentIndex];\n\t                 return this._pathSegTypeFromChar(lookahead);\n\t             }\n\t\n\t             Source.prototype._pathSegTypeFromChar = function(lookahead) {\n\t                 switch (lookahead) {\n\t                 case \"Z\":\n\t                 case \"z\":\n\t                     return SVGPathSeg.PATHSEG_CLOSEPATH;\n\t                 case \"M\":\n\t                     return SVGPathSeg.PATHSEG_MOVETO_ABS;\n\t                 case \"m\":\n\t                     return SVGPathSeg.PATHSEG_MOVETO_REL;\n\t                 case \"L\":\n\t                     return SVGPathSeg.PATHSEG_LINETO_ABS;\n\t                 case \"l\":\n\t                     return SVGPathSeg.PATHSEG_LINETO_REL;\n\t                 case \"C\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n\t                 case \"c\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n\t                 case \"Q\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n\t                 case \"q\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n\t                 case \"A\":\n\t                     return SVGPathSeg.PATHSEG_ARC_ABS;\n\t                 case \"a\":\n\t                     return SVGPathSeg.PATHSEG_ARC_REL;\n\t                 case \"H\":\n\t                     return SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n\t                 case \"h\":\n\t                     return SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n\t                 case \"V\":\n\t                     return SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n\t                 case \"v\":\n\t                     return SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n\t                 case \"S\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n\t                 case \"s\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n\t                 case \"T\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n\t                 case \"t\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n\t                 default:\n\t                     return SVGPathSeg.PATHSEG_UNKNOWN;\n\t                 }\n\t             }\n\t\n\t             Source.prototype._nextCommandHelper = function(lookahead, previousCommand) {\n\t                 // Check for remaining coordinates in the current command.\n\t                 if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || (lookahead >= \"0\" && lookahead <= \"9\")) && previousCommand != SVGPathSeg.PATHSEG_CLOSEPATH) {\n\t                     if (previousCommand == SVGPathSeg.PATHSEG_MOVETO_ABS)\n\t                         return SVGPathSeg.PATHSEG_LINETO_ABS;\n\t                     if (previousCommand == SVGPathSeg.PATHSEG_MOVETO_REL)\n\t                         return SVGPathSeg.PATHSEG_LINETO_REL;\n\t                     return previousCommand;\n\t                 }\n\t                 return SVGPathSeg.PATHSEG_UNKNOWN;\n\t             }\n\t\n\t             Source.prototype.initialCommandIsMoveTo = function() {\n\t                 // If the path is empty it is still valid, so return true.\n\t                 if (!this.hasMoreData())\n\t                     return true;\n\t                 var command = this.peekSegmentType();\n\t                 // Path must start with moveTo.\n\t                 return command == SVGPathSeg.PATHSEG_MOVETO_ABS || command == SVGPathSeg.PATHSEG_MOVETO_REL;\n\t             }\n\t\n\t             // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n\t             // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n\t             Source.prototype._parseNumber = function() {\n\t                 var exponent = 0;\n\t                 var integer = 0;\n\t                 var frac = 1;\n\t                 var decimal = 0;\n\t                 var sign = 1;\n\t                 var expsign = 1;\n\t\n\t                 var startIndex = this._currentIndex;\n\t\n\t                 this._skipOptionalSpaces();\n\t\n\t                 // Read the sign.\n\t                 if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\")\n\t                     this._currentIndex++;\n\t                 else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n\t                     this._currentIndex++;\n\t                     sign = -1;\n\t                 }\n\t\n\t                 if (this._currentIndex == this._endIndex || ((this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\"))\n\t                     // The first character of a number must be one of [0-9+-.].\n\t                     return undefined;\n\t\n\t                 // Read the integer part, build right-to-left.\n\t                 var startIntPartIndex = this._currentIndex;\n\t                 while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\")\n\t                     this._currentIndex++; // Advance to first non-digit.\n\t\n\t                 if (this._currentIndex != startIntPartIndex) {\n\t                     var scanIntPartIndex = this._currentIndex - 1;\n\t                     var multiplier = 1;\n\t                     while (scanIntPartIndex >= startIntPartIndex) {\n\t                         integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n\t                         multiplier *= 10;\n\t                     }\n\t                 }\n\t\n\t                 // Read the decimals.\n\t                 if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n\t                     this._currentIndex++;\n\t\n\t                     // There must be a least one digit following the .\n\t                     if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\")\n\t                         return undefined;\n\t                     while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\")\n\t                         decimal += (this._string.charAt(this._currentIndex++) - \"0\") * (frac *= 0.1);\n\t                 }\n\t\n\t                 // Read the exponent part.\n\t                 if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && (this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\")) {\n\t                     this._currentIndex++;\n\t\n\t                     // Read the sign of the exponent.\n\t                     if (this._string.charAt(this._currentIndex) == \"+\") {\n\t                         this._currentIndex++;\n\t                     } else if (this._string.charAt(this._currentIndex) == \"-\") {\n\t                         this._currentIndex++;\n\t                         expsign = -1;\n\t                     }\n\t\n\t                     // There must be an exponent.\n\t                     if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\")\n\t                         return undefined;\n\t\n\t                     while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n\t                         exponent *= 10;\n\t                         exponent += (this._string.charAt(this._currentIndex) - \"0\");\n\t                         this._currentIndex++;\n\t                     }\n\t                 }\n\t\n\t                 var number = integer + decimal;\n\t                 number *= sign;\n\t\n\t                 if (exponent)\n\t                     number *= Math.pow(10, expsign * exponent);\n\t\n\t                 if (startIndex == this._currentIndex)\n\t                     return undefined;\n\t\n\t                 this._skipOptionalSpacesOrDelimiter();\n\t\n\t                 return number;\n\t             }\n\t\n\t             Source.prototype._parseArcFlag = function() {\n\t                 if (this._currentIndex >= this._endIndex)\n\t                     return undefined;\n\t                 var flag = false;\n\t                 var flagChar = this._string.charAt(this._currentIndex++);\n\t                 if (flagChar == \"0\")\n\t                     flag = false;\n\t                 else if (flagChar == \"1\")\n\t                     flag = true;\n\t                 else\n\t                     return undefined;\n\t\n\t                 this._skipOptionalSpacesOrDelimiter();\n\t                 return flag;\n\t             }\n\t\n\t             Source.prototype.parseSegment = function() {\n\t                 var lookahead = this._string[this._currentIndex];\n\t                 var command = this._pathSegTypeFromChar(lookahead);\n\t                 if (command == SVGPathSeg.PATHSEG_UNKNOWN) {\n\t                     // Possibly an implicit command. Not allowed if this is the first command.\n\t                     if (this._previousCommand == SVGPathSeg.PATHSEG_UNKNOWN)\n\t                         return null;\n\t                     command = this._nextCommandHelper(lookahead, this._previousCommand);\n\t                     if (command == SVGPathSeg.PATHSEG_UNKNOWN)\n\t                         return null;\n\t                 } else {\n\t                     this._currentIndex++;\n\t                 }\n\t\n\t                 this._previousCommand = command;\n\t\n\t                 switch (command) {\n\t                 case SVGPathSeg.PATHSEG_MOVETO_REL:\n\t                     return new SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_MOVETO_ABS:\n\t                     return new SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_LINETO_REL:\n\t                     return new SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_LINETO_ABS:\n\t                     return new SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n\t                     return new SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n\t                     return new SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n\t                     return new SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n\t                     return new SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_CLOSEPATH:\n\t                     this._skipOptionalSpaces();\n\t                     return new SVGPathSegClosePath(owningPathSegList);\n\t                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n\t                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n\t                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n\t                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n\t                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n\t                     var points = {x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n\t                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n\t                     var points = {x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n\t                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n\t                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n\t                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n\t                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n\t                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n\t                     return new SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n\t                     return new SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_ARC_REL:\n\t                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n\t                 case SVGPathSeg.PATHSEG_ARC_ABS:\n\t                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n\t                 default:\n\t                     throw \"Unknown path seg type.\"\n\t                 }\n\t             }\n\t\n\t             var builder = new Builder();\n\t             var source = new Source(string);\n\t\n\t             if (!source.initialCommandIsMoveTo())\n\t                 return [];\n\t             while (source.hasMoreData()) {\n\t                 var pathSeg = source.parseSegment();\n\t                 if (!pathSeg)\n\t                     return [];\n\t                 builder.appendSegment(pathSeg);\n\t             }\n\t\n\t             return builder.pathSegList;\n\t         }\n\t     }\n\t    }());\n\t\n\t    /* jshint ignore:end */\n\t\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1579)], __WEBPACK_AMD_DEFINE_RESULT__ = function () { return c3; }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if ('undefined' !== typeof exports && 'undefined' !== typeof module) {\n\t        module.exports = c3;\n\t    } else {\n\t        window.c3 = c3;\n\t    }\n\t\n\t})(window);\n\n\n/***/ },\n\n/***/ 1579:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.17\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 4.bundle.js","import React from 'react';\nimport _ from 'underscore';\nimport {GraphIcon} from 'react-octicons';\n\nimport Chart from './chart';\nimport Database from '../database';\nimport {getFilters} from '../route-utils';\nimport IssueStore from '../issue-store';\nimport Loadable from './loadable';\nimport moment from 'moment';\n\nconst BurnupShell = React.createClass({\n  componentWillMount() {\n    // Needs to be called before `render()`\n    IssueStore.startPolling();\n  },\n  componentWillUnmount() {\n    IssueStore.stopPolling();\n  },\n  renderLoaded(cards) {\n    function getDay(dateStr) {\n      return Math.floor(Date.parse(dateStr) / 1000 / 60 / 60 / 24);\n    }\n\n    let chunkType = null;\n    function getChunk(dateStr) {\n      if (chunkType === 'day') {\n        return Math.floor(Date.parse(dateStr) / 1000 / 60 / 60 / 24);\n      // } else if (chunkType === 'week') {\n      //   return Math.floor(Date.parse(dateStr) / 1000 / 60 / 60 / 24 / 7);\n      } else if (chunkType === 'month') {\n        const d = new Date(dateStr);\n        return d.getFullYear() * 100 + d.getMonth();\n      } else if (chunkType === 'year') {\n        const d = new Date(dateStr);\n        return d.getFullYear();\n      } else {\n        throw new Error('BUG: Invalid date range chunk type');\n      }\n    }\n    function formatChunk(chunk) {\n      if (chunkType === 'day') {\n        const m = new moment(chunk * 1000 * 60 * 60 * 24);\n        return m.format('MMM DD');\n      // } else if (chunkType === 'week') {\n      //   return Math.floor(Date.parse(dateStr) / 1000 / 60 / 60 / 24 / 7);\n      } else if (chunkType === 'month') {\n        const month = chunk % 100;\n        if (month === 0) {\n          const year = (chunk / 100) % 100; // only use the last 2 digits of the year\n          return `${moment.monthsShort(month)} '${year}`; // moment months are 0-indexed\n        } else {\n          return moment.monthsShort(month); // moment months are 0-indexed\n        }\n      } else if (chunkType === 'year') {\n        return chunk;\n      } else {\n        throw new Error('BUG: Invalid date range chunk type');\n      }\n    }\n    function incrementChunk(chunk) {\n      if (chunkType === 'day') {\n        return chunk + 1;\n      // } else if (chunkType === 'week') {\n      //   return chunk + 7;\n      } else if (chunkType === 'month') {\n        const month = chunk % 100; // split off the year\n        if (month >= 12) {\n          return chunk - month + 100;\n        } else {\n          return chunk + 1;\n        }\n      } else if (chunkType === 'year') {\n        return chunk + 1;\n      } else {\n        throw new Error('BUG: Invalid date range chunk type');\n      }\n    }\n\n    // Get the total number of Issues\n    const total = cards.length;\n\n    if (!cards.length) {\n      return (\n        <span>Not showing a chart because there are 0 cards to show</span>\n      );\n    }\n\n    cards = _.sortBy(cards, (card) => getDay(card.issue.createdAt));\n    // Get the oldest Issue and the newest Issue Date\n    const startDate = cards[0].issue.createdAt;\n\n    let openedCards = cards;\n\n    // From this point, we only care about closed Issues\n    let closedCards = cards.filter((card) => card.issue.closedAt);\n    closedCards = _.sortBy(closedCards, (card) => getDay(card.issue.closedAt));\n    let endDate;\n    if (closedCards.length && openedCards.length) {\n      const lastOpened = openedCards[openedCards.length - 1].issue.createdAt;\n      const lastClosed = closedCards[closedCards.length - 1].issue.closedAt;\n      if (Date.parse(lastOpened) < Date.parse(lastClosed)) {\n        endDate = lastClosed;\n      } else {\n        endDate = lastOpened;\n      }\n    } else if (openedCards.length) {\n      endDate = openedCards[openedCards.length - 1].issue.createdAt;\n    } else if (closedCards.length) {\n      endDate = closedCards[closedCards.length - 1].issue.closedAt;\n    } else {\n      throw new Error('BUG: should not have gotten here');\n    }\n\n    const startDays = getDay(startDate);\n    const endDays = getDay(endDate);\n\n    if (endDays - startDays < 90) {\n      chunkType = 'day';\n    // } else if (endDays - startDays < 100) {\n    //   chunkType = 'week';\n    } else if (endDays - startDays < 1500){\n      chunkType = 'month';\n    } else {\n      chunkType = 'year';\n    }\n\n    const startChunk = getChunk(startDate);\n    const endChunk = getChunk(endDate);\n\n    // TODO: If the number of days is more than, say 50, then show changes per week.\n    // Loop over the days and build a chart\n    let closedCount = 0;\n    let openedCount = 0;\n    const rows = [];\n    for (let currentChunk = startChunk; currentChunk <= endChunk; currentChunk = incrementChunk(currentChunk)) {\n      // loop through the cards to count how many have closed on this day\n      let closedToday = 0;\n      let openedToday = 0;\n      for (let cardIndex = 0; cardIndex < closedCards.length; cardIndex++) {\n        const cardClosedDay = getChunk(closedCards[cardIndex].issue.closedAt);\n        if (cardClosedDay <= currentChunk) {\n          closedToday++;\n        } else {\n          break;\n        }\n      }\n      for (let cardIndex = 0; cardIndex < openedCards.length; cardIndex++) {\n        const cardOpenedDay = getChunk(openedCards[cardIndex].issue.createdAt);\n        if (cardOpenedDay <= currentChunk) {\n          openedToday++;\n        } else {\n          break;\n        }\n      }\n      // remove the cards since they are now accounted for\n      if (closedToday) {\n        closedCards.splice(0, closedToday);\n        closedCount += closedToday;\n      }\n      if (openedToday) {\n        openedCards.splice(0, openedToday);\n        openedCount += openedToday;\n      }\n      // Only add an entry if it changed\n      rows.push([\n        currentChunk,\n        // closedToday ? closedCount : null,\n        // openedToday ? openedCount : null,\n        closedCount,\n        openedCount,\n        openedToday || null\n      ]);\n    }\n\n    // if (closedCards.length > 0) {\n    //   throw new Error('BUG: Should have counted all the cards');\n    // }\n\n    // Add the row titles and the \"Ideal\" line\n    rows[0].push(0); // ideal start\n    rows[rows.length - 1].push(openedCount); // ideal end\n    rows.unshift(['chunk', 'closed', 'total', 'new', 'ideal']);\n\n    const chartData = {\n      x: 'chunk',\n      rows: rows,\n      colors: {\n        closed: '#ff0000',\n        total: '#00ff00',\n        'new': '#0000ff',\n        ideal: '#999999'\n      },\n      types: {\n        closed: 'area-spline',\n        total: 'area-spline',\n        'new': 'bar'\n      },\n      // groups: [['opened', 'closed']]\n    };\n    function formatChunkIndex(index) {\n      return formatChunk(rows[index+1][0]);// +1 because 1st row is the headers\n    }\n    const options = {\n      axis: {\n        x: {\n          type: 'category',\n          tick: {\n            format: formatChunkIndex,\n            culling: {\n              max: 20\n            }\n          }\n        }\n      },\n      // tooltip: { // Doesn't work with the far-right item yet\n      //   position: function(dataToShow, tWidth, tHeight, element) {\n      //     // return {top: 10, left: element.x.baseVal.value};\n      //     const $$ = this;\n      //     const mouse = $$.d3.mouse(element);\n      //     const svgLeft = $$.getSvgLeft(true);\n      //     const tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n      //     const tooltipRight = tooltipLeft + tWidth;\n      //     const chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n      //     const tooltipTop = mouse[1] + 15;\n      //     return {top: 10, left: tooltipLeft};\n      //   }\n      // }\n    };\n    return (\n      <Chart className='burnup-chart' data={chartData} options={options} element='burnup'/>\n    );\n  },\n  render() {\n    // TODO: send the current filter as an arg to `Database.fetchCards()` so it can smartly (using Indexes) fetch the cards\n    const promise = Database.fetchCards(getFilters());\n\n    return (\n      <div className='burnup'>\n        <h2><GraphIcon size='mega'/>  Burnup Chart</h2>\n        <p>Make sure you selected <strong>closed</strong> and <strong>Issues</strong> and optionally a Milestone from the filter dropdown at the top of this page</p>\n        <p>Also, this chart only fills the area when something changed (useful for weekends/open-source projects that frequently have periods of no change)</p>\n        <Loadable\n          promise={promise}\n          renderLoaded={this.renderLoaded}\n        />\n      </div>\n    );\n  }\n});\n\nexport default BurnupShell;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/burnup.jsx","/**\n * React-C3 Chart\n * Copyright 2015 - Cody Reichert <codyreichert@gmail.com>\n */\n\nimport c3    from 'c3';\nimport React from 'react';\n\nconst ChartComponent = React.createClass({\n  displayName: 'React-C3-Chart',\n\n  propTypes: {\n    className: React.PropTypes.string,\n    data: React.PropTypes.object.isRequired,\n    element: React.PropTypes.string.isRequired,\n    options: React.PropTypes.object\n  },\n\n  chart: null,\n\n  shouldComponentUpdate: function(nextProps) {\n    if(this.props.data.rows.length\n          !== nextProps.data.rows.length) { // shallow check\n      return true;\n    } else if(JSON.stringify(this.props.data.rows)\n            !== JSON.stringify(nextProps.data.rows)) { // deeper check\n      return  true;\n    }\n    return false;\n  },\n\n  componentDidMount: function() {\n    this._generateChart(\n      this.props.data,\n      this.props.element,\n      this.props.options\n    );\n  },\n\n  componentDidUpdate: function(prevProps) {\n    if(prevProps.data.rows !== this.props.data.rows) {\n      this._generateChart(\n        this.props.data,\n        this.props.element,\n        this.props.options\n      );\n    }\n  },\n\n  componentWillUnmount: function() {\n    this._destroyChart();\n  },\n\n  _generateChart: function(data, element, options) {\n    let build = Object.assign({}, {\n      bindto: '#' + element,\n      data: data\n    }, options);\n    this.chart = c3.generate(build);\n  },\n\n  _destroyChart: function() {\n    this.chart.destroy();\n  },\n\n  render: function() {\n    let className;\n    if (this.props.className) {\n      className = 'c3 ' + this.props.className;\n    } else {\n      className = 'c3';\n    }\n    return (\n      <div className={className}\n           id={this.props.element}\n           style={this.props.styles}>\n      </div>\n    );\n  }\n});\n\n\nexport default ChartComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chart.jsx","(function (window) {\n    'use strict';\n\n    /*global define, module, exports, require */\n\n    var c3 = { version: \"0.4.11\" };\n\n    var c3_chart_fn,\n        c3_chart_internal_fn,\n        c3_chart_internal_axis_fn;\n\n    function API(owner) {\n        this.owner = owner;\n    }\n\n    function inherit(base, derived) {\n\n        if (Object.create) {\n            derived.prototype = Object.create(base.prototype);\n        } else {\n            var f = function f() {};\n            f.prototype = base.prototype;\n            derived.prototype = new f();\n        }\n\n        derived.prototype.constructor = derived;\n\n        return derived;\n    }\n\n    function Chart(config) {\n        var $$ = this.internal = new ChartInternal(this);\n        $$.loadConfig(config);\n\n        $$.beforeInit(config);\n        $$.init();\n        $$.afterInit(config);\n\n        // bind \"this\" to nested API\n        (function bindThis(fn, target, argThis) {\n            Object.keys(fn).forEach(function (key) {\n                target[key] = fn[key].bind(argThis);\n                if (Object.keys(fn[key]).length > 0) {\n                    bindThis(fn[key], target[key], argThis);\n                }\n            });\n        })(c3_chart_fn, this, this);\n    }\n\n    function ChartInternal(api) {\n        var $$ = this;\n        $$.d3 = window.d3 ? window.d3 : typeof require !== 'undefined' ? require(\"d3\") : undefined;\n        $$.api = api;\n        $$.config = $$.getDefaultConfig();\n        $$.data = {};\n        $$.cache = {};\n        $$.axes = {};\n    }\n\n    c3.generate = function (config) {\n        return new Chart(config);\n    };\n\n    c3.chart = {\n        fn: Chart.prototype,\n        internal: {\n            fn: ChartInternal.prototype,\n            axis: {\n                fn: Axis.prototype\n            }\n        }\n    };\n    c3_chart_fn = c3.chart.fn;\n    c3_chart_internal_fn = c3.chart.internal.fn;\n    c3_chart_internal_axis_fn = c3.chart.internal.axis.fn;\n\n    c3_chart_internal_fn.beforeInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.afterInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.init = function () {\n        var $$ = this, config = $$.config;\n\n        $$.initParams();\n\n        if (config.data_url) {\n            $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n        }\n        else if (config.data_json) {\n            $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n        }\n        else if (config.data_rows) {\n            $$.initWithData($$.convertRowsToData(config.data_rows));\n        }\n        else if (config.data_columns) {\n            $$.initWithData($$.convertColumnsToData(config.data_columns));\n        }\n        else {\n            throw Error('url or json or rows or columns is required.');\n        }\n    };\n\n    c3_chart_internal_fn.initParams = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n\n        // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n        $$.clipId = \"c3-\" + (+new Date()) + '-clip',\n        $$.clipIdForXAxis = $$.clipId + '-xaxis',\n        $$.clipIdForYAxis = $$.clipId + '-yaxis',\n        $$.clipIdForGrid = $$.clipId + '-grid',\n        $$.clipIdForSubchart = $$.clipId + '-subchart',\n        $$.clipPath = $$.getClipPath($$.clipId),\n        $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis),\n        $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n        $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid),\n        $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart),\n\n        $$.dragStart = null;\n        $$.dragging = false;\n        $$.flowing = false;\n        $$.cancelClick = false;\n        $$.mouseover = false;\n        $$.transiting = false;\n\n        $$.color = $$.generateColor();\n        $$.levelColor = $$.generateLevelColor();\n\n        $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;\n        $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;\n        $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([\n            [\".%L\", function (d) { return d.getMilliseconds(); }],\n            [\":%S\", function (d) { return d.getSeconds(); }],\n            [\"%I:%M\", function (d) { return d.getMinutes(); }],\n            [\"%I %p\", function (d) { return d.getHours(); }],\n            [\"%-m/%-d\", function (d) { return d.getDay() && d.getDate() !== 1; }],\n            [\"%-m/%-d\", function (d) { return d.getDate() !== 1; }],\n            [\"%-m/%-d\", function (d) { return d.getMonth(); }],\n            [\"%Y/%-m/%-d\", function () { return true; }]\n        ]);\n\n        $$.hiddenTargetIds = [];\n        $$.hiddenLegendIds = [];\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n\n        $$.xOrient = config.axis_rotated ? \"left\" : \"bottom\";\n        $$.yOrient = config.axis_rotated ? (config.axis_y_inner ? \"top\" : \"bottom\") : (config.axis_y_inner ? \"right\" : \"left\");\n        $$.y2Orient = config.axis_rotated ? (config.axis_y2_inner ? \"bottom\" : \"top\") : (config.axis_y2_inner ? \"left\" : \"right\");\n        $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\n        $$.isLegendRight = config.legend_position === 'right';\n        $$.isLegendInset = config.legend_position === 'inset';\n        $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n        $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n        $$.legendStep = 0;\n        $$.legendItemWidth = 0;\n        $$.legendItemHeight = 0;\n\n        $$.currentMaxTickWidths = {\n            x: 0,\n            y: 0,\n            y2: 0\n        };\n\n        $$.rotated_padding_left = 30;\n        $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n        $$.rotated_padding_top = 5;\n\n        $$.withoutFadeIn = {};\n\n        $$.intervalForObserveInserted = undefined;\n\n        $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n    };\n\n    c3_chart_internal_fn.initChartElements = function () {\n        if (this.initBar) { this.initBar(); }\n        if (this.initLine) { this.initLine(); }\n        if (this.initArc) { this.initArc(); }\n        if (this.initGauge) { this.initGauge(); }\n        if (this.initText) { this.initText(); }\n    };\n\n    c3_chart_internal_fn.initWithData = function (data) {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n        var defs, main, binding = true;\n\n        $$.axis = new Axis($$);\n\n        if ($$.initPie) { $$.initPie(); }\n        if ($$.initBrush) { $$.initBrush(); }\n        if ($$.initZoom) { $$.initZoom(); }\n\n        if (!config.bindto) {\n            $$.selectChart = d3.selectAll([]);\n        }\n        else if (typeof config.bindto.node === 'function') {\n            $$.selectChart = config.bindto;\n        }\n        else {\n            $$.selectChart = d3.select(config.bindto);\n        }\n        if ($$.selectChart.empty()) {\n            $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n            $$.observeInserted($$.selectChart);\n            binding = false;\n        }\n        $$.selectChart.html(\"\").classed(\"c3\", true);\n\n        // Init data as targets\n        $$.data.xs = {};\n        $$.data.targets = $$.convertDataToTargets(data);\n\n        if (config.data_filter) {\n            $$.data.targets = $$.data.targets.filter(config.data_filter);\n        }\n\n        // Set targets to hide if needed\n        if (config.data_hide) {\n            $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n        }\n        if (config.legend_hide) {\n            $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n        }\n\n        // when gauge, hide legend // TODO: fix\n        if ($$.hasType('gauge')) {\n            config.legend_show = false;\n        }\n\n        // Init sizes and scales\n        $$.updateSizes();\n        $$.updateScales();\n\n        // Set domains for each scale\n        $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n        $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n        $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n        $$.subX.domain($$.x.domain());\n        $$.subY.domain($$.y.domain());\n        $$.subY2.domain($$.y2.domain());\n\n        // Save original x domain for zoom update\n        $$.orgXDomain = $$.x.domain();\n\n        // Set initialized scales to brush and zoom\n        if ($$.brush) { $$.brush.scale($$.subX); }\n        if (config.zoom_enabled) { $$.zoom.scale($$.x); }\n\n        /*-- Basic Elements --*/\n\n        // Define svgs\n        $$.svg = $$.selectChart.append(\"svg\")\n            .style(\"overflow\", \"hidden\")\n            .on('mouseenter', function () { return config.onmouseover.call($$); })\n            .on('mouseleave', function () { return config.onmouseout.call($$); });\n\n        if ($$.config.svg_classname) {\n            $$.svg.attr('class', $$.config.svg_classname);\n        }\n\n        // Define defs\n        defs = $$.svg.append(\"defs\");\n        $$.clipChart = $$.appendClip(defs, $$.clipId);\n        $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n        $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n        $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n        $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n        $$.updateSvgSize();\n\n        // Define regions\n        main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\n        if ($$.initSubchart) { $$.initSubchart(); }\n        if ($$.initTooltip) { $$.initTooltip(); }\n        if ($$.initLegend) { $$.initLegend(); }\n        if ($$.initTitle) { $$.initTitle(); }\n\n        /*-- Main Region --*/\n\n        // text when empty\n        main.append(\"text\")\n            .attr(\"class\", CLASS.text + ' ' + CLASS.empty)\n            .attr(\"text-anchor\", \"middle\") // horizontal centering of text at x position in all browsers.\n            .attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n\n        // Regions\n        $$.initRegion();\n\n        // Grids\n        $$.initGrid();\n\n        // Define g for chart area\n        main.append('g')\n            .attr(\"clip-path\", $$.clipPath)\n            .attr('class', CLASS.chart);\n\n        // Grid lines\n        if (config.grid_lines_front) { $$.initGridLines(); }\n\n        // Cover whole with rects for events\n        $$.initEventRect();\n\n        // Define g for chart\n        $$.initChartElements();\n\n        // if zoom privileged, insert rect to forefront\n        // TODO: is this needed?\n        main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions)\n            .attr('class', CLASS.zoomRect)\n            .attr('width', $$.width)\n            .attr('height', $$.height)\n            .style('opacity', 0)\n            .on(\"dblclick.zoom\", null);\n\n        // Set default extent if defined\n        if (config.axis_x_extent) { $$.brush.extent($$.getDefaultExtent()); }\n\n        // Add Axis\n        $$.axis.init();\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Draw with targets\n        if (binding) {\n            $$.updateDimension();\n            $$.config.oninit.call($$);\n            $$.redraw({\n                withTransition: false,\n                withTransform: true,\n                withUpdateXDomain: true,\n                withUpdateOrgXDomain: true,\n                withTransitionForAxis: false\n            });\n        }\n\n        // Bind resize event\n        $$.bindResize();\n\n        // export element of the chart\n        $$.api.element = $$.selectChart.node();\n    };\n\n    c3_chart_internal_fn.smoothLines = function (el, type) {\n        var $$ = this;\n        if (type === 'grid') {\n            el.each(function () {\n                var g = $$.d3.select(this),\n                    x1 = g.attr('x1'),\n                    x2 = g.attr('x2'),\n                    y1 = g.attr('y1'),\n                    y2 = g.attr('y2');\n                g.attr({\n                    'x1': Math.ceil(x1),\n                    'x2': Math.ceil(x2),\n                    'y1': Math.ceil(y1),\n                    'y2': Math.ceil(y2)\n                });\n            });\n        }\n    };\n\n\n    c3_chart_internal_fn.updateSizes = function () {\n        var $$ = this, config = $$.config;\n        var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n            legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n            legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n            hasArc = $$.hasArcType(),\n            xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n            subchartHeight = config.subchart_show && !hasArc ? (config.subchart_size_height + xAxisHeight) : 0;\n\n        $$.currentWidth = $$.getCurrentWidth();\n        $$.currentHeight = $$.getCurrentHeight();\n\n        // for main\n        $$.margin = config.axis_rotated ? {\n            top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n        } : {\n            top: 4 + $$.getCurrentPaddingTop(), // for top tick text\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n        };\n\n        // for subchart\n        $$.margin2 = config.axis_rotated ? {\n            top: $$.margin.top,\n            right: NaN,\n            bottom: 20 + legendHeightForBottom,\n            left: $$.rotated_padding_left\n        } : {\n            top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n            right: NaN,\n            bottom: xAxisHeight + legendHeightForBottom,\n            left: $$.margin.left\n        };\n\n        // for legend\n        $$.margin3 = {\n            top: 0,\n            right: NaN,\n            bottom: 0,\n            left: 0\n        };\n        if ($$.updateSizeForLegend) { $$.updateSizeForLegend(legendHeight, legendWidth); }\n\n        $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n        $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n        if ($$.width < 0) { $$.width = 0; }\n        if ($$.height < 0) { $$.height = 0; }\n\n        $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n        $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n        if ($$.width2 < 0) { $$.width2 = 0; }\n        if ($$.height2 < 0) { $$.height2 = 0; }\n\n        // for arc\n        $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n        $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n        if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n            $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n        }\n        if ($$.updateRadius) { $$.updateRadius(); }\n\n        if ($$.isLegendRight && hasArc) {\n            $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n        }\n    };\n\n    c3_chart_internal_fn.updateTargets = function (targets) {\n        var $$ = this;\n\n        /*-- Main --*/\n\n        //-- Text --//\n        $$.updateTargetsForText(targets);\n\n        //-- Bar --//\n        $$.updateTargetsForBar(targets);\n\n        //-- Line --//\n        $$.updateTargetsForLine(targets);\n\n        //-- Arc --//\n        if ($$.hasArcType() && $$.updateTargetsForArc) { $$.updateTargetsForArc(targets); }\n\n        /*-- Sub --*/\n\n        if ($$.updateTargetsForSubchart) { $$.updateTargetsForSubchart(targets); }\n\n        // Fade-in each chart\n        $$.showTargets();\n    };\n    c3_chart_internal_fn.showTargets = function () {\n        var $$ = this;\n        $$.svg.selectAll('.' + CLASS.target).filter(function (d) { return $$.isTargetToShow(d.id); })\n          .transition().duration($$.config.transition_duration)\n            .style(\"opacity\", 1);\n    };\n\n    c3_chart_internal_fn.redraw = function (options, transitions) {\n        var $$ = this, main = $$.main, d3 = $$.d3, config = $$.config;\n        var areaIndices = $$.getShapeIndices($$.isAreaType), barIndices = $$.getShapeIndices($$.isBarType), lineIndices = $$.getShapeIndices($$.isLineType);\n        var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis,\n            withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend,\n            withEventRect, withDimension, withUpdateXAxis;\n        var hideAxis = $$.hasArcType();\n        var drawArea, drawBar, drawLine, xForText, yForText;\n        var duration, durationForExit, durationForAxis;\n        var waitForDraw, flow;\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets), tickValues, i, intervalForCulling, xDomainForZoom;\n        var xv = $$.xv.bind($$), cx, cy;\n\n        options = options || {};\n        withY = getOption(options, \"withY\", true);\n        withSubchart = getOption(options, \"withSubchart\", true);\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransform = getOption(options, \"withTransform\", false);\n        withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n        withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n        withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n        withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n        withLegend = getOption(options, \"withLegend\", false);\n        withEventRect = getOption(options, \"withEventRect\", true);\n        withDimension = getOption(options, \"withDimension\", true);\n        withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n        withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n\n        duration = withTransition ? config.transition_duration : 0;\n        durationForExit = withTransitionForExit ? duration : 0;\n        durationForAxis = withTransitionForAxis ? duration : 0;\n\n        transitions = transitions || $$.axis.generateTransitions(durationForAxis);\n\n        // update legend and transform each g\n        if (withLegend && config.legend_show) {\n            $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n        } else if (withDimension) {\n            // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n            // no need to update axis in it because they will be updated in redraw()\n            $$.updateDimension(true);\n        }\n\n        // MEMO: needed for grids calculation\n        if ($$.isCategorized() && targetsToShow.length === 0) {\n            $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n        }\n\n        if (targetsToShow.length) {\n            $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n            if (!config.axis_x_tick_values) {\n                tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n            }\n        } else {\n            $$.xAxis.tickValues([]);\n            $$.subXAxis.tickValues([]);\n        }\n\n        if (config.zoom_rescale && !options.flow) {\n            xDomainForZoom = $$.x.orgDomain();\n        }\n\n        $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n        $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\n        if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n            $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n        }\n        if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n            $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n        }\n\n        // axes\n        $$.axis.redraw(transitions, hideAxis);\n\n        // Update axis label\n        $$.axis.updateLabels(withTransition);\n\n        // show/hide if manual culling needed\n        if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n            if (config.axis_x_tick_culling && tickValues) {\n                for (i = 1; i < tickValues.length; i++) {\n                    if (tickValues.length / i < config.axis_x_tick_culling_max) {\n                        intervalForCulling = i;\n                        break;\n                    }\n                }\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n                    var index = tickValues.indexOf(e);\n                    if (index >= 0) {\n                        d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n                    }\n                });\n            } else {\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n            }\n        }\n\n        // setup drawer - MEMO: these must be called after axis updated\n        drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n        drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n        drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n        xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n        yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\n\n        // Update sub domain\n        if (withY) {\n            $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n            $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n        }\n\n        // xgrid focus\n        $$.updateXgridFocus();\n\n        // Data empty label positioning and text.\n        main.select(\"text.\" + CLASS.text + '.' + CLASS.empty)\n            .attr(\"x\", $$.width / 2)\n            .attr(\"y\", $$.height / 2)\n            .text(config.data_empty_label_text)\n          .transition()\n            .style('opacity', targetsToShow.length ? 0 : 1);\n\n        // grid\n        $$.updateGrid(duration);\n\n        // rect for regions\n        $$.updateRegion(duration);\n\n        // bars\n        $$.updateBar(durationForExit);\n\n        // lines, areas and cricles\n        $$.updateLine(durationForExit);\n        $$.updateArea(durationForExit);\n        $$.updateCircle();\n\n        // text\n        if ($$.hasDataLabel()) {\n            $$.updateText(durationForExit);\n        }\n\n        // title\n        if ($$.redrawTitle) { $$.redrawTitle(); }\n\n        // arc\n        if ($$.redrawArc) { $$.redrawArc(duration, durationForExit, withTransform); }\n\n        // subchart\n        if ($$.redrawSubchart) {\n            $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n        }\n\n        // circles for select\n        main.selectAll('.' + CLASS.selectedCircles)\n            .filter($$.isBarType.bind($$))\n            .selectAll('circle')\n            .remove();\n\n        // event rects will redrawn when flow called\n        if (config.interaction_enabled && !options.flow && withEventRect) {\n            $$.redrawEventRect();\n            if ($$.updateZoom) { $$.updateZoom(); }\n        }\n\n        // update circleY based on updated parameters\n        $$.updateCircleY();\n\n        // generate circle x/y functions depending on updated params\n        cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n        cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\n        if (options.flow) {\n            flow = $$.generateFlow({\n                targets: targetsToShow,\n                flow: options.flow,\n                duration: options.flow.duration,\n                drawBar: drawBar,\n                drawLine: drawLine,\n                drawArea: drawArea,\n                cx: cx,\n                cy: cy,\n                xv: xv,\n                xForText: xForText,\n                yForText: yForText\n            });\n        }\n\n        if ((duration || flow) && $$.isTabVisible()) { // Only use transition if tab visible. See #938.\n            // transition should be derived from one transition\n            d3.transition().duration(duration).each(function () {\n                var transitionsToWait = [];\n\n                // redraw and gather transitions\n                [\n                    $$.redrawBar(drawBar, true),\n                    $$.redrawLine(drawLine, true),\n                    $$.redrawArea(drawArea, true),\n                    $$.redrawCircle(cx, cy, true),\n                    $$.redrawText(xForText, yForText, options.flow, true),\n                    $$.redrawRegion(true),\n                    $$.redrawGrid(true),\n                ].forEach(function (transitions) {\n                    transitions.forEach(function (transition) {\n                        transitionsToWait.push(transition);\n                    });\n                });\n\n                // Wait for end of transitions to call flow and onrendered callback\n                waitForDraw = $$.generateWait();\n                transitionsToWait.forEach(function (t) {\n                    waitForDraw.add(t);\n                });\n            })\n            .call(waitForDraw, function () {\n                if (flow) {\n                    flow();\n                }\n                if (config.onrendered) {\n                    config.onrendered.call($$);\n                }\n            });\n        }\n        else {\n            $$.redrawBar(drawBar);\n            $$.redrawLine(drawLine);\n            $$.redrawArea(drawArea);\n            $$.redrawCircle(cx, cy);\n            $$.redrawText(xForText, yForText, options.flow);\n            $$.redrawRegion();\n            $$.redrawGrid();\n            if (config.onrendered) {\n                config.onrendered.call($$);\n            }\n        }\n\n        // update fadein condition\n        $$.mapToIds($$.data.targets).forEach(function (id) {\n            $$.withoutFadeIn[id] = true;\n        });\n    };\n\n    c3_chart_internal_fn.updateAndRedraw = function (options) {\n        var $$ = this, config = $$.config, transitions;\n        options = options || {};\n        // same with redraw\n        options.withTransition = getOption(options, \"withTransition\", true);\n        options.withTransform = getOption(options, \"withTransform\", false);\n        options.withLegend = getOption(options, \"withLegend\", false);\n        // NOT same with redraw\n        options.withUpdateXDomain = true;\n        options.withUpdateOrgXDomain = true;\n        options.withTransitionForExit = false;\n        options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\n        // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n        $$.updateSizes();\n        // MEMO: called in updateLegend in redraw if withLegend\n        if (!(options.withLegend && config.legend_show)) {\n            transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\n            // Update scales\n            $$.updateScales();\n            $$.updateSvgSize();\n            // Update g positions\n            $$.transformAll(options.withTransitionForTransform, transitions);\n        }\n        // Draw with new sizes & scales\n        $$.redraw(options, transitions);\n    };\n    c3_chart_internal_fn.redrawWithoutRescale = function () {\n        this.redraw({\n            withY: false,\n            withSubchart: false,\n            withEventRect: false,\n            withTransitionForAxis: false\n        });\n    };\n\n    c3_chart_internal_fn.isTimeSeries = function () {\n        return this.config.axis_x_type === 'timeseries';\n    };\n    c3_chart_internal_fn.isCategorized = function () {\n        return this.config.axis_x_type.indexOf('categor') >= 0;\n    };\n    c3_chart_internal_fn.isCustomX = function () {\n        var $$ = this, config = $$.config;\n        return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n    };\n\n    c3_chart_internal_fn.isTimeSeriesY = function () {\n        return this.config.axis_y_type === 'timeseries';\n    };\n\n    c3_chart_internal_fn.getTranslate = function (target) {\n        var $$ = this, config = $$.config, x, y;\n        if (target === 'main') {\n            x = asHalfPixel($$.margin.left);\n            y = asHalfPixel($$.margin.top);\n        } else if (target === 'context') {\n            x = asHalfPixel($$.margin2.left);\n            y = asHalfPixel($$.margin2.top);\n        } else if (target === 'legend') {\n            x = $$.margin3.left;\n            y = $$.margin3.top;\n        } else if (target === 'x') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height;\n        } else if (target === 'y') {\n            x = 0;\n            y = config.axis_rotated ? $$.height : 0;\n        } else if (target === 'y2') {\n            x = config.axis_rotated ? 0 : $$.width;\n            y = config.axis_rotated ? 1 : 0;\n        } else if (target === 'subx') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height2;\n        } else if (target === 'arc') {\n            x = $$.arcWidth / 2;\n            y = $$.arcHeight / 2;\n        }\n        return \"translate(\" + x + \",\" + y + \")\";\n    };\n    c3_chart_internal_fn.initialOpacity = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n    };\n    c3_chart_internal_fn.initialOpacityForCircle = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n    };\n    c3_chart_internal_fn.opacityForCircle = function (d) {\n        var opacity = this.config.point_show ? 1 : 0;\n        return isValue(d.value) ? (this.isScatterType(d) ? 0.5 : opacity) : 0;\n    };\n    c3_chart_internal_fn.opacityForText = function () {\n        return this.hasDataLabel() ? 1 : 0;\n    };\n    c3_chart_internal_fn.xx = function (d) {\n        return d ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.xv = function (d) {\n        var $$ = this, value = d.value;\n        if ($$.isTimeSeries()) {\n            value = $$.parseDate(d.value);\n        }\n        else if ($$.isCategorized() && typeof d.value === 'string') {\n            value = $$.config.axis_x_categories.indexOf(d.value);\n        }\n        return Math.ceil($$.x(value));\n    };\n    c3_chart_internal_fn.yv = function (d) {\n        var $$ = this,\n            yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n        return Math.ceil(yScale(d.value));\n    };\n    c3_chart_internal_fn.subxx = function (d) {\n        return d ? this.subX(d.x) : null;\n    };\n\n    c3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n        var $$ = this,\n            xAxis, yAxis, y2Axis;\n        if (transitions && transitions.axisX) {\n            xAxis = transitions.axisX;\n        } else {\n            xAxis  = $$.main.select('.' + CLASS.axisX);\n            if (withTransition) { xAxis = xAxis.transition(); }\n        }\n        if (transitions && transitions.axisY) {\n            yAxis = transitions.axisY;\n        } else {\n            yAxis = $$.main.select('.' + CLASS.axisY);\n            if (withTransition) { yAxis = yAxis.transition(); }\n        }\n        if (transitions && transitions.axisY2) {\n            y2Axis = transitions.axisY2;\n        } else {\n            y2Axis = $$.main.select('.' + CLASS.axisY2);\n            if (withTransition) { y2Axis = y2Axis.transition(); }\n        }\n        (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n        xAxis.attr(\"transform\", $$.getTranslate('x'));\n        yAxis.attr(\"transform\", $$.getTranslate('y'));\n        y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n        $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n    };\n    c3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n        var $$ = this;\n        $$.transformMain(withTransition, transitions);\n        if ($$.config.subchart_show) { $$.transformContext(withTransition, transitions); }\n        if ($$.legend) { $$.transformLegend(withTransition); }\n    };\n\n    c3_chart_internal_fn.updateSvgSize = function () {\n        var $$ = this,\n            brush = $$.svg.select(\".c3-brush .background\");\n        $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n        $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect')\n            .attr('width', $$.width)\n            .attr('height', $$.height);\n        $$.svg.select('#' + $$.clipIdForXAxis).select('rect')\n            .attr('x', $$.getXAxisClipX.bind($$))\n            .attr('y', $$.getXAxisClipY.bind($$))\n            .attr('width', $$.getXAxisClipWidth.bind($$))\n            .attr('height', $$.getXAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForYAxis).select('rect')\n            .attr('x', $$.getYAxisClipX.bind($$))\n            .attr('y', $$.getYAxisClipY.bind($$))\n            .attr('width', $$.getYAxisClipWidth.bind($$))\n            .attr('height', $$.getYAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForSubchart).select('rect')\n            .attr('width', $$.width)\n            .attr('height', brush.size() ? brush.attr('height') : 0);\n        $$.svg.select('.' + CLASS.zoomRect)\n            .attr('width', $$.width)\n            .attr('height', $$.height);\n        // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n        $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n    };\n\n\n    c3_chart_internal_fn.updateDimension = function (withoutAxis) {\n        var $$ = this;\n        if (!withoutAxis) {\n            if ($$.config.axis_rotated) {\n                $$.axes.x.call($$.xAxis);\n                $$.axes.subx.call($$.subXAxis);\n            } else {\n                $$.axes.y.call($$.yAxis);\n                $$.axes.y2.call($$.y2Axis);\n            }\n        }\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        $$.transformAll(false);\n    };\n\n    c3_chart_internal_fn.observeInserted = function (selection) {\n        var $$ = this, observer;\n        if (typeof MutationObserver === 'undefined') {\n            window.console.error(\"MutationObserver not defined.\");\n            return;\n        }\n        observer= new MutationObserver(function (mutations) {\n            mutations.forEach(function (mutation) {\n                if (mutation.type === 'childList' && mutation.previousSibling) {\n                    observer.disconnect();\n                    // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n                    $$.intervalForObserveInserted = window.setInterval(function () {\n                        // parentNode will NOT be null when completed\n                        if (selection.node().parentNode) {\n                            window.clearInterval($$.intervalForObserveInserted);\n                            $$.updateDimension();\n                            if ($$.brush) { $$.brush.update(); }\n                            $$.config.oninit.call($$);\n                            $$.redraw({\n                                withTransform: true,\n                                withUpdateXDomain: true,\n                                withUpdateOrgXDomain: true,\n                                withTransition: false,\n                                withTransitionForTransform: false,\n                                withLegend: true\n                            });\n                            selection.transition().style('opacity', 1);\n                        }\n                    }, 10);\n                }\n            });\n        });\n        observer.observe(selection.node(), {attributes: true, childList: true, characterData: true});\n    };\n\n    c3_chart_internal_fn.bindResize = function () {\n        var $$ = this, config = $$.config;\n\n        $$.resizeFunction = $$.generateResize();\n\n        $$.resizeFunction.add(function () {\n            config.onresize.call($$);\n        });\n        if (config.resize_auto) {\n            $$.resizeFunction.add(function () {\n                if ($$.resizeTimeout !== undefined) {\n                    window.clearTimeout($$.resizeTimeout);\n                }\n                $$.resizeTimeout = window.setTimeout(function () {\n                    delete $$.resizeTimeout;\n                    $$.api.flush();\n                }, 100);\n            });\n        }\n        $$.resizeFunction.add(function () {\n            config.onresized.call($$);\n        });\n\n        if (window.attachEvent) {\n            window.attachEvent('onresize', $$.resizeFunction);\n        } else if (window.addEventListener) {\n            window.addEventListener('resize', $$.resizeFunction, false);\n        } else {\n            // fallback to this, if this is a very old browser\n            var wrapper = window.onresize;\n            if (!wrapper) {\n                // create a wrapper that will call all charts\n                wrapper = $$.generateResize();\n            } else if (!wrapper.add || !wrapper.remove) {\n                // there is already a handler registered, make sure we call it too\n                wrapper = $$.generateResize();\n                wrapper.add(window.onresize);\n            }\n            // add this graph to the wrapper, we will be removed if the user calls destroy\n            wrapper.add($$.resizeFunction);\n            window.onresize = wrapper;\n        }\n    };\n\n    c3_chart_internal_fn.generateResize = function () {\n        var resizeFunctions = [];\n        function callResizeFunctions() {\n            resizeFunctions.forEach(function (f) {\n                f();\n            });\n        }\n        callResizeFunctions.add = function (f) {\n            resizeFunctions.push(f);\n        };\n        callResizeFunctions.remove = function (f) {\n            for (var i = 0; i < resizeFunctions.length; i++) {\n                if (resizeFunctions[i] === f) {\n                    resizeFunctions.splice(i, 1);\n                    break;\n                }\n            }\n        };\n        return callResizeFunctions;\n    };\n\n    c3_chart_internal_fn.endall = function (transition, callback) {\n        var n = 0;\n        transition\n            .each(function () { ++n; })\n            .each(\"end\", function () {\n                if (!--n) { callback.apply(this, arguments); }\n            });\n    };\n    c3_chart_internal_fn.generateWait = function () {\n        var transitionsToWait = [],\n            f = function (transition, callback) {\n                var timer = setInterval(function () {\n                    var done = 0;\n                    transitionsToWait.forEach(function (t) {\n                        if (t.empty()) {\n                            done += 1;\n                            return;\n                        }\n                        try {\n                            t.transition();\n                        } catch (e) {\n                            done += 1;\n                        }\n                    });\n                    if (done === transitionsToWait.length) {\n                        clearInterval(timer);\n                        if (callback) { callback(); }\n                    }\n                }, 10);\n            };\n        f.add = function (transition) {\n            transitionsToWait.push(transition);\n        };\n        return f;\n    };\n\n    c3_chart_internal_fn.parseDate = function (date) {\n        var $$ = this, parsedDate;\n        if (date instanceof Date) {\n            parsedDate = date;\n        } else if (typeof date === 'string') {\n            parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);\n        } else if (typeof date === 'number' && !isNaN(date)) {\n            parsedDate = new Date(+date);\n        }\n        if (!parsedDate || isNaN(+parsedDate)) {\n            window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n        }\n        return parsedDate;\n    };\n\n    c3_chart_internal_fn.isTabVisible = function () {\n        var hidden;\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support\n            hidden = \"hidden\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            hidden = \"mozHidden\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n        }\n\n        return document[hidden] ? false : true;\n    };\n\n    c3_chart_internal_fn.getDefaultConfig = function () {\n        var config = {\n            bindto: '#chart',\n            svg_classname: undefined,\n            size_width: undefined,\n            size_height: undefined,\n            padding_left: undefined,\n            padding_right: undefined,\n            padding_top: undefined,\n            padding_bottom: undefined,\n            resize_auto: true,\n            zoom_enabled: false,\n            zoom_extent: undefined,\n            zoom_privileged: false,\n            zoom_rescale: false,\n            zoom_onzoom: function () {},\n            zoom_onzoomstart: function () {},\n            zoom_onzoomend: function () {},\n            zoom_x_min: undefined,\n            zoom_x_max: undefined,\n            interaction_brighten: true,\n            interaction_enabled: true,\n            onmouseover: function () {},\n            onmouseout: function () {},\n            onresize: function () {},\n            onresized: function () {},\n            oninit: function () {},\n            onrendered: function () {},\n            transition_duration: 350,\n            data_x: undefined,\n            data_xs: {},\n            data_xFormat: '%Y-%m-%d',\n            data_xLocaltime: true,\n            data_xSort: true,\n            data_idConverter: function (id) { return id; },\n            data_names: {},\n            data_classes: {},\n            data_groups: [],\n            data_axes: {},\n            data_type: undefined,\n            data_types: {},\n            data_labels: {},\n            data_order: 'desc',\n            data_regions: {},\n            data_color: undefined,\n            data_colors: {},\n            data_hide: false,\n            data_filter: undefined,\n            data_selection_enabled: false,\n            data_selection_grouped: false,\n            data_selection_isselectable: function () { return true; },\n            data_selection_multiple: true,\n            data_selection_draggable: false,\n            data_onclick: function () {},\n            data_onmouseover: function () {},\n            data_onmouseout: function () {},\n            data_onselected: function () {},\n            data_onunselected: function () {},\n            data_url: undefined,\n            data_headers: undefined,\n            data_json: undefined,\n            data_rows: undefined,\n            data_columns: undefined,\n            data_mimeType: undefined,\n            data_keys: undefined,\n            // configuration for no plot-able data supplied.\n            data_empty_label_text: \"\",\n            // subchart\n            subchart_show: false,\n            subchart_size_height: 60,\n            subchart_axis_x_show: true,\n            subchart_onbrush: function () {},\n            // color\n            color_pattern: [],\n            color_threshold: {},\n            // legend\n            legend_show: true,\n            legend_hide: false,\n            legend_position: 'bottom',\n            legend_inset_anchor: 'top-left',\n            legend_inset_x: 10,\n            legend_inset_y: 0,\n            legend_inset_step: undefined,\n            legend_item_onclick: undefined,\n            legend_item_onmouseover: undefined,\n            legend_item_onmouseout: undefined,\n            legend_equally: false,\n            legend_padding: 0,\n            legend_item_tile_width: 10,\n            legend_item_tile_height: 10,\n            // axis\n            axis_rotated: false,\n            axis_x_show: true,\n            axis_x_type: 'indexed',\n            axis_x_localtime: true,\n            axis_x_categories: [],\n            axis_x_tick_centered: false,\n            axis_x_tick_format: undefined,\n            axis_x_tick_culling: {},\n            axis_x_tick_culling_max: 10,\n            axis_x_tick_count: undefined,\n            axis_x_tick_fit: true,\n            axis_x_tick_values: null,\n            axis_x_tick_rotate: 0,\n            axis_x_tick_outer: true,\n            axis_x_tick_multiline: true,\n            axis_x_tick_width: null,\n            axis_x_max: undefined,\n            axis_x_min: undefined,\n            axis_x_padding: {},\n            axis_x_height: undefined,\n            axis_x_extent: undefined,\n            axis_x_label: {},\n            axis_y_show: true,\n            axis_y_type: undefined,\n            axis_y_max: undefined,\n            axis_y_min: undefined,\n            axis_y_inverted: false,\n            axis_y_center: undefined,\n            axis_y_inner: undefined,\n            axis_y_label: {},\n            axis_y_tick_format: undefined,\n            axis_y_tick_outer: true,\n            axis_y_tick_values: null,        \n            axis_y_tick_rotate: 0,\n            axis_y_tick_count: undefined,\n            axis_y_tick_time_value: undefined,\n            axis_y_tick_time_interval: undefined,\n            axis_y_padding: {},\n            axis_y_default: undefined,\n            axis_y2_show: false,\n            axis_y2_max: undefined,\n            axis_y2_min: undefined,\n            axis_y2_inverted: false,\n            axis_y2_center: undefined,\n            axis_y2_inner: undefined,\n            axis_y2_label: {},\n            axis_y2_tick_format: undefined,\n            axis_y2_tick_outer: true,\n            axis_y2_tick_values: null,\n            axis_y2_tick_count: undefined,\n            axis_y2_padding: {},\n            axis_y2_default: undefined,\n            // grid\n            grid_x_show: false,\n            grid_x_type: 'tick',\n            grid_x_lines: [],\n            grid_y_show: false,\n            // not used\n            // grid_y_type: 'tick',\n            grid_y_lines: [],\n            grid_y_ticks: 10,\n            grid_focus_show: true,\n            grid_lines_front: true,\n            // point - point of each data\n            point_show: true,\n            point_r: 2.5,\n            point_sensitivity: 10,\n            point_focus_expand_enabled: true,\n            point_focus_expand_r: undefined,\n            point_select_r: undefined,\n            // line\n            line_connectNull: false,\n            line_step_type: 'step',\n            // bar\n            bar_width: undefined,\n            bar_width_ratio: 0.6,\n            bar_width_max: undefined,\n            bar_zerobased: true,\n            // area\n            area_zerobased: true,\n            area_above: false,\n            // pie\n            pie_label_show: true,\n            pie_label_format: undefined,\n            pie_label_threshold: 0.05,\n            pie_label_ratio: undefined,\n            pie_expand: {},\n            pie_expand_duration: 50,\n            // gauge\n            gauge_fullCircle: false,\n            gauge_label_show: true,\n            gauge_label_format: undefined,\n            gauge_min: 0,\n            gauge_max: 100,\n            gauge_startingAngle: -1 * Math.PI/2,\n            gauge_units: undefined,\n            gauge_width: undefined,\n            gauge_expand: {},\n            gauge_expand_duration: 50,\n            // donut\n            donut_label_show: true,\n            donut_label_format: undefined,\n            donut_label_threshold: 0.05,\n            donut_label_ratio: undefined,\n            donut_width: undefined,\n            donut_title: \"\",\n            donut_expand: {},\n            donut_expand_duration: 50,\n            // spline\n            spline_interpolation_type: 'cardinal',\n            // region - region to change style\n            regions: [],\n            // tooltip - show when mouseover on each data\n            tooltip_show: true,\n            tooltip_grouped: true,\n            tooltip_format_title: undefined,\n            tooltip_format_name: undefined,\n            tooltip_format_value: undefined,\n            tooltip_position: undefined,\n            tooltip_contents: function (d, defaultTitleFormat, defaultValueFormat, color) {\n                return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n            },\n            tooltip_init_show: false,\n            tooltip_init_x: 0,\n            tooltip_init_position: {top: '0px', left: '50px'},\n            tooltip_onshow: function () {},\n            tooltip_onhide: function () {},\n            // title\n            title_text: undefined,\n            title_padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            title_position: 'top-center',\n        };\n\n        Object.keys(this.additionalConfig).forEach(function (key) {\n            config[key] = this.additionalConfig[key];\n        }, this);\n\n        return config;\n    };\n    c3_chart_internal_fn.additionalConfig = {};\n\n    c3_chart_internal_fn.loadConfig = function (config) {\n        var this_config = this.config, target, keys, read;\n        function find() {\n            var key = keys.shift();\n    //        console.log(\"key =>\", key, \", target =>\", target);\n            if (key && target && typeof target === 'object' && key in target) {\n                target = target[key];\n                return find();\n            }\n            else if (!key) {\n                return target;\n            }\n            else {\n                return undefined;\n            }\n        }\n        Object.keys(this_config).forEach(function (key) {\n            target = config;\n            keys = key.split('_');\n            read = find();\n    //        console.log(\"CONFIG : \", key, read);\n            if (isDefined(read)) {\n                this_config[key] = read;\n            }\n        });\n    };\n\n    c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n        return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);\n    };\n    c3_chart_internal_fn.getX = function (min, max, domain, offset) {\n        var $$ = this,\n            scale = $$.getScale(min, max, $$.isTimeSeries()),\n            _scale = domain ? scale.domain(domain) : scale, key;\n        // Define customized scale if categorized axis\n        if ($$.isCategorized()) {\n            offset = offset || function () { return 0; };\n            scale = function (d, raw) {\n                var v = _scale(d) + offset(d);\n                return raw ? v : Math.ceil(v);\n            };\n        } else {\n            scale = function (d, raw) {\n                var v = _scale(d);\n                return raw ? v : Math.ceil(v);\n            };\n        }\n        // define functions\n        for (key in _scale) {\n            scale[key] = _scale[key];\n        }\n        scale.orgDomain = function () {\n            return _scale.domain();\n        };\n        // define custom domain() for categorized axis\n        if ($$.isCategorized()) {\n            scale.domain = function (domain) {\n                if (!arguments.length) {\n                    domain = this.orgDomain();\n                    return [domain[0], domain[1] + 1];\n                }\n                _scale.domain(domain);\n                return scale;\n            };\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getY = function (min, max, domain) {\n        var scale = this.getScale(min, max, this.isTimeSeriesY());\n        if (domain) { scale.domain(domain); }\n        return scale;\n    };\n    c3_chart_internal_fn.getYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n    };\n    c3_chart_internal_fn.getSubYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n    };\n    c3_chart_internal_fn.updateScales = function () {\n        var $$ = this, config = $$.config,\n            forInit = !$$.x;\n        // update edges\n        $$.xMin = config.axis_rotated ? 1 : 0;\n        $$.xMax = config.axis_rotated ? $$.height : $$.width;\n        $$.yMin = config.axis_rotated ? 0 : $$.height;\n        $$.yMax = config.axis_rotated ? $$.width : 1;\n        $$.subXMin = $$.xMin;\n        $$.subXMax = $$.xMax;\n        $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n        $$.subYMax = config.axis_rotated ? $$.width2 : 1;\n        // update scales\n        $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () { return $$.xAxis.tickOffset(); });\n        $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n        $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n        $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) { return d % 1 ? 0 : $$.subXAxis.tickOffset(); });\n        $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n        $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\n        // update axes\n        $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n        $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n        $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n        $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n\n        $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n        $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\n\n        // Set initialized scales to brush and zoom\n        if (!forInit) {\n            if ($$.brush) { $$.brush.scale($$.subX); }\n            if (config.zoom_enabled) { $$.zoom.scale($$.x); }\n        }\n        // update for arc\n        if ($$.updateArc) { $$.updateArc(); }\n    };\n\n    c3_chart_internal_fn.getYDomainMin = function (targets) {\n        var $$ = this, config = $$.config,\n            ids = $$.mapToIds(targets), ys = $$.getValuesAsIdKeyed(targets),\n            j, k, baseId, idsInGroup, id, hasNegativeValue;\n        if (config.data_groups.length > 0) {\n            hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) { return ids.indexOf(id) >= 0; });\n                if (idsInGroup.length === 0) { continue; }\n                baseId = idsInGroup[0];\n                // Consider negative values\n                if (hasNegativeValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v < 0 ? v : 0;\n                    });\n                }\n                // Compute min\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (! ys[id]) { continue; }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.min(Object.keys(ys).map(function (key) { return $$.d3.min(ys[key]); }));\n    };\n    c3_chart_internal_fn.getYDomainMax = function (targets) {\n        var $$ = this, config = $$.config,\n            ids = $$.mapToIds(targets), ys = $$.getValuesAsIdKeyed(targets),\n            j, k, baseId, idsInGroup, id, hasPositiveValue;\n        if (config.data_groups.length > 0) {\n            hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) { return ids.indexOf(id) >= 0; });\n                if (idsInGroup.length === 0) { continue; }\n                baseId = idsInGroup[0];\n                // Consider positive values\n                if (hasPositiveValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v > 0 ? v : 0;\n                    });\n                }\n                // Compute max\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (! ys[id]) { continue; }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.max(Object.keys(ys).map(function (key) { return $$.d3.max(ys[key]); }));\n    };\n    c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n        var $$ = this, config = $$.config,\n            targetsByAxisId = targets.filter(function (t) { return $$.axis.getId(t.id) === axisId; }),\n            yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n            yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n            yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n            yDomainMin = $$.getYDomainMin(yTargets),\n            yDomainMax = $$.getYDomainMax(yTargets),\n            domain, domainLength, padding, padding_top, padding_bottom,\n            center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n            yDomainAbs, lengths, diff, ratio, isAllPositive, isAllNegative,\n            isZeroBased = ($$.hasType('bar', yTargets) && config.bar_zerobased) || ($$.hasType('area', yTargets) && config.area_zerobased),\n            isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n            showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n            showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\n\n        // MEMO: avoid inverting domain unexpectedly\n        yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? (yDomainMin < yMax ? yDomainMin : yMax - 10) : yDomainMin;\n        yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? (yMin < yDomainMax ? yDomainMax : yMin + 10) : yDomainMax;\n\n        if (yTargets.length === 0) { // use current domain if target of axisId is none\n            return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n        }\n        if (isNaN(yDomainMin)) { // set minimum to zero when not number\n            yDomainMin = 0;\n        }\n        if (isNaN(yDomainMax)) { // set maximum to have same value as yDomainMin\n            yDomainMax = yDomainMin;\n        }\n        if (yDomainMin === yDomainMax) {\n            yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n        }\n        isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n        isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\n\n        // Cancel zerobased if axis_*_min / axis_*_max specified\n        if ((isValue(yMin) && isAllPositive) || (isValue(yMax) && isAllNegative)) {\n            isZeroBased = false;\n        }\n\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) { yDomainMin = 0; }\n            if (isAllNegative) { yDomainMax = 0; }\n        }\n\n        domainLength = Math.abs(yDomainMax - yDomainMin);\n        padding = padding_top = padding_bottom = domainLength * 0.1;\n\n        if (typeof center !== 'undefined') {\n            yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n            yDomainMax = center + yDomainAbs;\n            yDomainMin = center - yDomainAbs;\n        }\n        // add padding for data label\n        if (showHorizontalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n            diff = diffDomain($$.y.range());\n            ratio = [lengths[0] / diff, lengths[1] / diff];\n            padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n            padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n        } else if (showVerticalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n            padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n            padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n        }\n        if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n        }\n        if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n        }\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) { padding_bottom = yDomainMin; }\n            if (isAllNegative) { padding_top = -yDomainMax; }\n        }\n        domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n        return isInverted ? domain.reverse() : domain;\n    };\n    c3_chart_internal_fn.getXDomainMin = function (targets) {\n        var $$ = this, config = $$.config;\n        return isDefined(config.axis_x_min) ?\n            ($$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min) :\n        $$.d3.min(targets, function (t) { return $$.d3.min(t.values, function (v) { return v.x; }); });\n    };\n    c3_chart_internal_fn.getXDomainMax = function (targets) {\n        var $$ = this, config = $$.config;\n        return isDefined(config.axis_x_max) ?\n            ($$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max) :\n        $$.d3.max(targets, function (t) { return $$.d3.max(t.values, function (v) { return v.x; }); });\n    };\n    c3_chart_internal_fn.getXDomainPadding = function (domain) {\n        var $$ = this, config = $$.config,\n            diff = domain[1] - domain[0],\n            maxDataCount, padding, paddingLeft, paddingRight;\n        if ($$.isCategorized()) {\n            padding = 0;\n        } else if ($$.hasType('bar')) {\n            maxDataCount = $$.getMaxDataCount();\n            padding = maxDataCount > 1 ? (diff / (maxDataCount - 1)) / 2 : 0.5;\n        } else {\n            padding = diff * 0.01;\n        }\n        if (typeof config.axis_x_padding === 'object' && notEmpty(config.axis_x_padding)) {\n            paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n            paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n        } else if (typeof config.axis_x_padding === 'number') {\n            paddingLeft = paddingRight = config.axis_x_padding;\n        } else {\n            paddingLeft = paddingRight = padding;\n        }\n        return {left: paddingLeft, right: paddingRight};\n    };\n    c3_chart_internal_fn.getXDomain = function (targets) {\n        var $$ = this,\n            xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n            firstX = xDomain[0], lastX = xDomain[1],\n            padding = $$.getXDomainPadding(xDomain),\n            min = 0, max = 0;\n        // show center of x domain if min and max are the same\n        if ((firstX - lastX) === 0 && !$$.isCategorized()) {\n            if ($$.isTimeSeries()) {\n                firstX = new Date(firstX.getTime() * 0.5);\n                lastX = new Date(lastX.getTime() * 1.5);\n            } else {\n                firstX = firstX === 0 ? 1 : (firstX * 0.5);\n                lastX = lastX === 0 ? -1 : (lastX * 1.5);\n            }\n        }\n        if (firstX || firstX === 0) {\n            min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n        }\n        if (lastX || lastX === 0) {\n            max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n        }\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n        var $$ = this, config = $$.config;\n\n        if (withUpdateOrgXDomain) {\n            $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n            $$.orgXDomain = $$.x.domain();\n            if (config.zoom_enabled) { $$.zoom.scale($$.x).updateScaleExtent(); }\n            $$.subX.domain($$.x.domain());\n            if ($$.brush) { $$.brush.scale($$.subX); }\n        }\n        if (withUpdateXDomain) {\n            $$.x.domain(domain ? domain : (!$$.brush || $$.brush.empty()) ? $$.orgXDomain : $$.brush.extent());\n            if (config.zoom_enabled) { $$.zoom.scale($$.x).updateScaleExtent(); }\n        }\n\n        // Trim domain when too big by zoom mousemove event\n        if (withTrim) { $$.x.domain($$.trimXDomain($$.x.orgDomain())); }\n\n        return $$.x.domain();\n    };\n    c3_chart_internal_fn.trimXDomain = function (domain) {\n        var zoomDomain = this.getZoomDomain(),\n            min = zoomDomain[0], max = zoomDomain[1];\n        if (domain[0] <= min) {\n            domain[1] = +domain[1] + (min - domain[0]);\n            domain[0] = min;\n        }\n        if (max <= domain[1]) {\n            domain[0] = +domain[0] - (domain[1] - max);\n            domain[1] = max;\n        }\n        return domain;\n    };\n\n    c3_chart_internal_fn.isX = function (key) {\n        var $$ = this, config = $$.config;\n        return (config.data_x && key === config.data_x) || (notEmpty(config.data_xs) && hasValue(config.data_xs, key));\n    };\n    c3_chart_internal_fn.isNotX = function (key) {\n        return !this.isX(key);\n    };\n    c3_chart_internal_fn.getXKey = function (id) {\n        var $$ = this, config = $$.config;\n        return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n    };\n    c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n        var $$ = this,\n            xValues, ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n        ids.forEach(function (id) {\n            if ($$.getXKey(id) === key) {\n                xValues = $$.data.xs[id];\n            }\n        });\n        return xValues;\n    };\n    c3_chart_internal_fn.getIndexByX = function (x) {\n        var $$ = this,\n            data = $$.filterByX($$.data.targets, x);\n        return data.length ? data[0].index : null;\n    };\n    c3_chart_internal_fn.getXValue = function (id, i) {\n        var $$ = this;\n        return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n    };\n    c3_chart_internal_fn.getOtherTargetXs = function () {\n        var $$ = this,\n            idsForX = Object.keys($$.data.xs);\n        return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n    };\n    c3_chart_internal_fn.getOtherTargetX = function (index) {\n        var xs = this.getOtherTargetXs();\n        return xs && index < xs.length ? xs[index] : null;\n    };\n    c3_chart_internal_fn.addXs = function (xs) {\n        var $$ = this;\n        Object.keys(xs).forEach(function (id) {\n            $$.config.data_xs[id] = xs[id];\n        });\n    };\n    c3_chart_internal_fn.hasMultipleX = function (xs) {\n        return this.d3.set(Object.keys(xs).map(function (id) { return xs[id]; })).size() > 1;\n    };\n    c3_chart_internal_fn.isMultipleX = function () {\n        return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');\n    };\n    c3_chart_internal_fn.addName = function (data) {\n        var $$ = this, name;\n        if (data) {\n            name = $$.config.data_names[data.id];\n            data.name = name !== undefined ? name : data.id;\n        }\n        return data;\n    };\n    c3_chart_internal_fn.getValueOnIndex = function (values, index) {\n        var valueOnIndex = values.filter(function (v) { return v.index === index; });\n        return valueOnIndex.length ? valueOnIndex[0] : null;\n    };\n    c3_chart_internal_fn.updateTargetX = function (targets, x) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            t.values.forEach(function (v, i) {\n                v.x = $$.generateTargetX(x[i], t.id, i);\n            });\n            $$.data.xs[t.id] = x;\n        });\n    };\n    c3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            if (xs[t.id]) {\n                $$.updateTargetX([t], xs[t.id]);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n        var $$ = this, x;\n        if ($$.isTimeSeries()) {\n            x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n        }\n        else if ($$.isCustomX() && !$$.isCategorized()) {\n            x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n        }\n        else {\n            x = index;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.cloneTarget = function (target) {\n        return {\n            id : target.id,\n            id_org : target.id_org,\n            values : target.values.map(function (d) {\n                return {x: d.x, value: d.value, id: d.id};\n            })\n        };\n    };\n    c3_chart_internal_fn.updateXs = function () {\n        var $$ = this;\n        if ($$.data.targets.length) {\n            $$.xs = [];\n            $$.data.targets[0].values.forEach(function (v) {\n                $$.xs[v.index] = v.x;\n            });\n        }\n    };\n    c3_chart_internal_fn.getPrevX = function (i) {\n        var x = this.xs[i - 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getNextX = function (i) {\n        var x = this.xs[i + 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getMaxDataCount = function () {\n        var $$ = this;\n        return $$.d3.max($$.data.targets, function (t) { return t.values.length; });\n    };\n    c3_chart_internal_fn.getMaxDataCountTarget = function (targets) {\n        var length = targets.length, max = 0, maxTarget;\n        if (length > 1) {\n            targets.forEach(function (t) {\n                if (t.values.length > max) {\n                    maxTarget = t;\n                    max = t.values.length;\n                }\n            });\n        } else {\n            maxTarget = length ? targets[0] : null;\n        }\n        return maxTarget;\n    };\n    c3_chart_internal_fn.getEdgeX = function (targets) {\n        var $$ = this;\n        return !targets.length ? [0, 0] : [\n            $$.d3.min(targets, function (t) { return t.values[0].x; }),\n            $$.d3.max(targets, function (t) { return t.values[t.values.length - 1].x; })\n        ];\n    };\n    c3_chart_internal_fn.mapToIds = function (targets) {\n        return targets.map(function (d) { return d.id; });\n    };\n    c3_chart_internal_fn.mapToTargetIds = function (ids) {\n        var $$ = this;\n        return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n    };\n    c3_chart_internal_fn.hasTarget = function (targets, id) {\n        var ids = this.mapToIds(targets), i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.isTargetToShow = function (targetId) {\n        return this.hiddenTargetIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.isLegendToShow = function (targetId) {\n        return this.hiddenLegendIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.filterTargetsToShow = function (targets) {\n        var $$ = this;\n        return targets.filter(function (t) { return $$.isTargetToShow(t.id); });\n    };\n    c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n        var $$ = this;\n        var xs = $$.d3.set($$.d3.merge(targets.map(function (t) { return t.values.map(function (v) { return +v.x; }); }))).values();\n        xs = $$.isTimeSeries() ? xs.map(function (x) { return new Date(+x); }) : xs.map(function (x) { return +x; });\n        return xs.sort(function (a, b) { return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN; });\n    };\n    c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n        this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds);\n    };\n    c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n        this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) { return targetIds.indexOf(id) < 0; });\n    };\n    c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n        this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds);\n    };\n    c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n        this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) { return targetIds.indexOf(id) < 0; });\n    };\n    c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n        var ys = {};\n        targets.forEach(function (t) {\n            ys[t.id] = [];\n            t.values.forEach(function (v) {\n                ys[t.id].push(v.value);\n            });\n        });\n        return ys;\n    };\n    c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n        var ids = Object.keys(targets), i, j, values;\n        for (i = 0; i < ids.length; i++) {\n            values = targets[ids[i]].values;\n            for (j = 0; j < values.length; j++) {\n                if (checker(values[j].value)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) { return v < 0; });\n    };\n    c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) { return v > 0; });\n    };\n    c3_chart_internal_fn.isOrderDesc = function () {\n        var config = this.config;\n        return typeof(config.data_order) === 'string' && config.data_order.toLowerCase() === 'desc';\n    };\n    c3_chart_internal_fn.isOrderAsc = function () {\n        var config = this.config;\n        return typeof(config.data_order) === 'string' && config.data_order.toLowerCase() === 'asc';\n    };\n    c3_chart_internal_fn.orderTargets = function (targets) {\n        var $$ = this, config = $$.config, orderAsc = $$.isOrderAsc(), orderDesc = $$.isOrderDesc();\n        if (orderAsc || orderDesc) {\n            targets.sort(function (t1, t2) {\n                var reducer = function (p, c) { return p + Math.abs(c.value); };\n                var t1Sum = t1.values.reduce(reducer, 0),\n                    t2Sum = t2.values.reduce(reducer, 0);\n                return orderAsc ? t2Sum - t1Sum : t1Sum - t2Sum;\n            });\n        } else if (isFunction(config.data_order)) {\n            targets.sort(config.data_order);\n        } // TODO: accept name array for order\n        return targets;\n    };\n    c3_chart_internal_fn.filterByX = function (targets, x) {\n        return this.d3.merge(targets.map(function (t) { return t.values; })).filter(function (v) { return v.x - x === 0; });\n    };\n    c3_chart_internal_fn.filterRemoveNull = function (data) {\n        return data.filter(function (d) { return isValue(d.value); });\n    };\n    c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n        return targets.map(function (t) {\n            return {\n                id: t.id,\n                id_org: t.id_org,\n                values: t.values.filter(function (v) {\n                    return xDomain[0] <= v.x && v.x <= xDomain[1];\n                })\n            };\n        });\n    };\n    c3_chart_internal_fn.hasDataLabel = function () {\n        var config = this.config;\n        if (typeof config.data_labels === 'boolean' && config.data_labels) {\n            return true;\n        } else if (typeof config.data_labels === 'object' && notEmpty(config.data_labels)) {\n            return true;\n        }\n        return false;\n    };\n    c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n        var $$ = this,\n            lengths = [0, 0], paddingCoef = 1.3;\n        $$.selectChart.select('svg').selectAll('.dummy')\n            .data([min, max])\n            .enter().append('text')\n            .text(function (d) { return $$.dataLabelFormat(d.id)(d); })\n            .each(function (d, i) {\n                lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n            })\n            .remove();\n        return lengths;\n    };\n    c3_chart_internal_fn.isNoneArc = function (d) {\n        return this.hasTarget(this.data.targets, d.id);\n    },\n    c3_chart_internal_fn.isArc = function (d) {\n        return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n    };\n    c3_chart_internal_fn.findSameXOfValues = function (values, index) {\n        var i, targetX = values[index].x, sames = [];\n        for (i = index - 1; i >= 0; i--) {\n            if (targetX !== values[i].x) { break; }\n            sames.push(values[i]);\n        }\n        for (i = index; i < values.length; i++) {\n            if (targetX !== values[i].x) { break; }\n            sames.push(values[i]);\n        }\n        return sames;\n    };\n\n    c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n        var $$ = this, candidates;\n\n        // map to array of closest points of each target\n        candidates = targets.map(function (target) {\n            return $$.findClosest(target.values, pos);\n        });\n\n        // decide closest point and return\n        return $$.findClosest(candidates, pos);\n    };\n    c3_chart_internal_fn.findClosest = function (values, pos) {\n        var $$ = this, minDist = $$.config.point_sensitivity, closest;\n\n        // find mouseovering bar\n        values.filter(function (v) { return v && $$.isBarType(v.id); }).forEach(function (v) {\n            var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n            if (!closest && $$.isWithinBar(shape)) {\n                closest = v;\n            }\n        });\n\n        // find closest point from non-bar\n        values.filter(function (v) { return v && !$$.isBarType(v.id); }).forEach(function (v) {\n            var d = $$.dist(v, pos);\n            if (d < minDist) {\n                minDist = d;\n                closest = v;\n            }\n        });\n\n        return closest;\n    };\n    c3_chart_internal_fn.dist = function (data, pos) {\n        var $$ = this, config = $$.config,\n            xIndex = config.axis_rotated ? 1 : 0,\n            yIndex = config.axis_rotated ? 0 : 1,\n            y = $$.circleY(data, data.index),\n            x = $$.x(data.x);\n        return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n    };\n    c3_chart_internal_fn.convertValuesToStep = function (values) {\n        var converted = [].concat(values), i;\n\n        if (!this.isCategorized()) {\n            return values;\n        }\n\n        for (i = values.length + 1; 0 < i; i--) {\n            converted[i] = converted[i - 1];\n        }\n\n        converted[0] = {\n            x: converted[0].x - 1,\n            value: converted[0].value,\n            id: converted[0].id\n        };\n        converted[values.length + 1] = {\n            x: converted[values.length].x + 1,\n            value: converted[values.length].value,\n            id: converted[values.length].id\n        };\n\n        return converted;\n    };\n    c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n        var $$ = this, config = $$.config, current = config['data_' + name];\n        if (typeof attrs === 'undefined') { return current; }\n        Object.keys(attrs).forEach(function (id) {\n            current[id] = attrs[id];\n        });\n        $$.redraw({withLegend: true});\n        return current;\n    };\n\n    c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n        var $$ = this, type = mimeType ? mimeType : 'csv';\n        var req = $$.d3.xhr(url);\n        if (headers) {\n            Object.keys(headers).forEach(function (header) {\n                req.header(header, headers[header]);\n            });\n        }\n        req.get(function (error, data) {\n            var d;\n            if (!data) {\n                throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');\n            }\n            if (type === 'json') {\n                d = $$.convertJsonToData(JSON.parse(data.response), keys);\n            } else if (type === 'tsv') {\n                d = $$.convertTsvToData(data.response);\n            } else {\n                d = $$.convertCsvToData(data.response);\n            }\n            done.call($$, d);\n        });\n    };\n    c3_chart_internal_fn.convertXsvToData = function (xsv, parser) {\n        var rows = parser.parseRows(xsv), d;\n        if (rows.length === 1) {\n            d = [{}];\n            rows[0].forEach(function (id) {\n                d[0][id] = null;\n            });\n        } else {\n            d = parser.parse(xsv);\n        }\n        return d;\n    };\n    c3_chart_internal_fn.convertCsvToData = function (csv) {\n        return this.convertXsvToData(csv, this.d3.csv);\n    };\n    c3_chart_internal_fn.convertTsvToData = function (tsv) {\n        return this.convertXsvToData(tsv, this.d3.tsv);\n    };\n    c3_chart_internal_fn.convertJsonToData = function (json, keys) {\n        var $$ = this,\n            new_rows = [], targetKeys, data;\n        if (keys) { // when keys specified, json would be an array that includes objects\n            if (keys.x) {\n                targetKeys = keys.value.concat(keys.x);\n                $$.config.data_x = keys.x;\n            } else {\n                targetKeys = keys.value;\n            }\n            new_rows.push(targetKeys);\n            json.forEach(function (o) {\n                var new_row = [];\n                targetKeys.forEach(function (key) {\n                    // convert undefined to null because undefined data will be removed in convertDataToTargets()\n                    var v = $$.findValueInJson(o, key);\n                    if (isUndefined(v)) {\n                        v = null;\n                    }\n                    new_row.push(v);\n                });\n                new_rows.push(new_row);\n            });\n            data = $$.convertRowsToData(new_rows);\n        } else {\n            Object.keys(json).forEach(function (key) {\n                new_rows.push([key].concat(json[key]));\n            });\n            data = $$.convertColumnsToData(new_rows);\n        }\n        return data;\n    };\n    c3_chart_internal_fn.findValueInJson = function (object, path) {\n        path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n        path = path.replace(/^\\./, '');           // strip a leading dot\n        var pathArray = path.split('.');\n        for (var i = 0; i < pathArray.length; ++i) {\n            var k = pathArray[i];\n            if (k in object) {\n                object = object[k];\n            } else {\n                return;\n            }\n        }\n        return object;\n    };\n    c3_chart_internal_fn.convertRowsToData = function (rows) {\n        var keys = rows[0], new_row = {}, new_rows = [], i, j;\n        for (i = 1; i < rows.length; i++) {\n            new_row = {};\n            for (j = 0; j < rows[i].length; j++) {\n                if (isUndefined(rows[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                new_row[keys[j]] = rows[i][j];\n            }\n            new_rows.push(new_row);\n        }\n        return new_rows;\n    };\n    c3_chart_internal_fn.convertColumnsToData = function (columns) {\n        var new_rows = [], i, j, key;\n        for (i = 0; i < columns.length; i++) {\n            key = columns[i][0];\n            for (j = 1; j < columns[i].length; j++) {\n                if (isUndefined(new_rows[j - 1])) {\n                    new_rows[j - 1] = {};\n                }\n                if (isUndefined(columns[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                new_rows[j - 1][key] = columns[i][j];\n            }\n        }\n        return new_rows;\n    };\n    c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n        var $$ = this, config = $$.config,\n            ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),\n            xs = $$.d3.keys(data[0]).filter($$.isX, $$),\n            targets;\n\n        // save x for update data by load when custom x and c3.x API\n        ids.forEach(function (id) {\n            var xKey = $$.getXKey(id);\n\n            if ($$.isCustomX() || $$.isTimeSeries()) {\n                // if included in input data\n                if (xs.indexOf(xKey) >= 0) {\n                    $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(\n                        data.map(function (d) { return d[xKey]; })\n                            .filter(isValue)\n                            .map(function (rawX, i) { return $$.generateTargetX(rawX, id, i); })\n                    );\n                }\n                // if not included in input data, find from preloaded data of other id's x\n                else if (config.data_x) {\n                    $$.data.xs[id] = $$.getOtherTargetXs();\n                }\n                // if not included in input data, find from preloaded data\n                else if (notEmpty(config.data_xs)) {\n                    $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n                }\n                // MEMO: if no x included, use same x of current will be used\n            } else {\n                $$.data.xs[id] = data.map(function (d, i) { return i; });\n            }\n        });\n\n\n        // check x is defined\n        ids.forEach(function (id) {\n            if (!$$.data.xs[id]) {\n                throw new Error('x is not defined for id = \"' + id + '\".');\n            }\n        });\n\n        // convert to target\n        targets = ids.map(function (id, index) {\n            var convertedId = config.data_idConverter(id);\n            return {\n                id: convertedId,\n                id_org: id,\n                values: data.map(function (d, i) {\n                    var xKey = $$.getXKey(id), rawX = d[xKey],\n                        value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null, x;\n                    // use x as categories if custom x and categorized\n                    if ($$.isCustomX() && $$.isCategorized() && index === 0 && !isUndefined(rawX)) {\n                        if (index === 0 && i === 0) {\n                            config.axis_x_categories = [];\n                        }\n                        x = config.axis_x_categories.indexOf(rawX);\n                        if (x === -1) {\n                            x = config.axis_x_categories.length;\n                            config.axis_x_categories.push(rawX);\n                        }\n                    } else {\n                        x  = $$.generateTargetX(rawX, id, i);\n                    }\n                    // mark as x = undefined if value is undefined and filter to remove after mapped\n                    if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n                        x = undefined;\n                    }\n                    return {x: x, value: value, id: convertedId};\n                }).filter(function (v) { return isDefined(v.x); })\n            };\n        });\n\n        // finish targets\n        targets.forEach(function (t) {\n            var i;\n            // sort values by its x\n            if (config.data_xSort) {\n                t.values = t.values.sort(function (v1, v2) {\n                    var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n                        x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n                    return x1 - x2;\n                });\n            }\n            // indexing each value\n            i = 0;\n            t.values.forEach(function (v) {\n                v.index = i++;\n            });\n            // this needs to be sorted because its index and value.index is identical\n            $$.data.xs[t.id].sort(function (v1, v2) {\n                return v1 - v2;\n            });\n        });\n\n        // cache information about values\n        $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n        $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\n        // set target types\n        if (config.data_type) {\n            $$.setTargetType($$.mapToIds(targets).filter(function (id) { return ! (id in config.data_types); }), config.data_type);\n        }\n\n        // cache as original id keyed\n        targets.forEach(function (d) {\n            $$.addCache(d.id_org, d);\n        });\n\n        return targets;\n    };\n\n    c3_chart_internal_fn.load = function (targets, args) {\n        var $$ = this;\n        if (targets) {\n            // filter loading targets if needed\n            if (args.filter) {\n                targets = targets.filter(args.filter);\n            }\n            // set type if args.types || args.type specified\n            if (args.type || args.types) {\n                targets.forEach(function (t) {\n                    var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n                    $$.setTargetType(t.id, type);\n                });\n            }\n            // Update/Add data\n            $$.data.targets.forEach(function (d) {\n                for (var i = 0; i < targets.length; i++) {\n                    if (d.id === targets[i].id) {\n                        d.values = targets[i].values;\n                        targets.splice(i, 1);\n                        break;\n                    }\n                }\n            });\n            $$.data.targets = $$.data.targets.concat(targets); // add remained\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n\n        if (args.done) { args.done(); }\n    };\n    c3_chart_internal_fn.loadFromArgs = function (args) {\n        var $$ = this;\n        if (args.data) {\n            $$.load($$.convertDataToTargets(args.data), args);\n        }\n        else if (args.url) {\n            $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n                $$.load($$.convertDataToTargets(data), args);\n            });\n        }\n        else if (args.json) {\n            $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n        }\n        else if (args.rows) {\n            $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n        }\n        else if (args.columns) {\n            $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n        }\n        else {\n            $$.load(null, args);\n        }\n    };\n    c3_chart_internal_fn.unload = function (targetIds, done) {\n        var $$ = this;\n        if (!done) {\n            done = function () {};\n        }\n        // filter existing target\n        targetIds = targetIds.filter(function (id) { return $$.hasTarget($$.data.targets, id); });\n        // If no target, call done and return\n        if (!targetIds || targetIds.length === 0) {\n            done();\n            return;\n        }\n        $$.svg.selectAll(targetIds.map(function (id) { return $$.selectorTarget(id); }))\n            .transition()\n            .style('opacity', 0)\n            .remove()\n            .call($$.endall, done);\n        targetIds.forEach(function (id) {\n            // Reset fadein for future load\n            $$.withoutFadeIn[id] = false;\n            // Remove target's elements\n            if ($$.legend) {\n                $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n            }\n            // Remove target\n            $$.data.targets = $$.data.targets.filter(function (t) {\n                return t.id !== id;\n            });\n        });\n    };\n\n    c3_chart_internal_fn.categoryName = function (i) {\n        var config = this.config;\n        return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n    };\n\n    c3_chart_internal_fn.initEventRect = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.eventRects)\n            .style('fill-opacity', 0);\n    };\n    c3_chart_internal_fn.redrawEventRect = function () {\n        var $$ = this, config = $$.config,\n            eventRectUpdate, maxDataCountTarget,\n            isMultipleX = $$.isMultipleX();\n\n        // rects for mouseover\n        var eventRects = $$.main.select('.' + CLASS.eventRects)\n                .style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null)\n                .classed(CLASS.eventRectsMultiple, isMultipleX)\n                .classed(CLASS.eventRectsSingle, !isMultipleX);\n\n        // clear old rects\n        eventRects.selectAll('.' + CLASS.eventRect).remove();\n\n        // open as public variable\n        $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\n        if (isMultipleX) {\n            eventRectUpdate = $$.eventRect.data([0]);\n            // enter : only one rect will be added\n            $$.generateEventRectsForMultipleXs(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit : not needed because always only one rect exists\n        }\n        else {\n            // Set data and update $$.eventRect\n            maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);\n            eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);\n            $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n            eventRectUpdate = $$.eventRect.data(function (d) { return d; });\n            // enter\n            $$.generateEventRectsForSingleX(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit\n            eventRectUpdate.exit().remove();\n        }\n    };\n    c3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {\n        var $$ = this, config = $$.config,\n            x, y, w, h, rectW, rectX;\n\n        // set update selection if null\n        eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) { return d; });\n\n        if ($$.isMultipleX()) {\n            // TODO: rotated not supported yet\n            x = 0;\n            y = 0;\n            w = $$.width;\n            h = $$.height;\n        }\n        else {\n            if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {\n\n                // update index for x that is used by prevX and nextX\n                $$.updateXs();\n\n                rectW = function (d) {\n                    var prevX = $$.getPrevX(d.index), nextX = $$.getNextX(d.index);\n\n                    // if there this is a single data point make the eventRect full width (or height)\n                    if (prevX === null && nextX === null) {\n                        return config.axis_rotated ? $$.height : $$.width;\n                    }\n\n                    if (prevX === null) { prevX = $$.x.domain()[0]; }\n                    if (nextX === null) { nextX = $$.x.domain()[1]; }\n\n                    return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);\n                };\n                rectX = function (d) {\n                    var prevX = $$.getPrevX(d.index), nextX = $$.getNextX(d.index),\n                        thisX = $$.data.xs[d.id][d.index];\n\n                    // if there this is a single data point position the eventRect at 0\n                    if (prevX === null && nextX === null) {\n                        return 0;\n                    }\n\n                    if (prevX === null) { prevX = $$.x.domain()[0]; }\n\n                    return ($$.x(thisX) + $$.x(prevX)) / 2;\n                };\n            } else {\n                rectW = $$.getEventRectWidth();\n                rectX = function (d) {\n                    return $$.x(d.x) - (rectW / 2);\n                };\n            }\n            x = config.axis_rotated ? 0 : rectX;\n            y = config.axis_rotated ? rectX : 0;\n            w = config.axis_rotated ? $$.width : rectW;\n            h = config.axis_rotated ? rectW : $$.height;\n        }\n\n        eventRectUpdate\n            .attr('class', $$.classEvent.bind($$))\n            .attr(\"x\", x)\n            .attr(\"y\", y)\n            .attr(\"width\", w)\n            .attr(\"height\", h);\n    };\n    c3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n        eventRectEnter.append(\"rect\")\n            .attr(\"class\", $$.classEvent.bind($$))\n            .style(\"cursor\", config.data_selection_enabled && config.data_selection_grouped ? \"pointer\" : null)\n            .on('mouseover', function (d) {\n                var index = d.index;\n\n                if ($$.dragging || $$.flowing) { return; } // do nothing while dragging/flowing\n                if ($$.hasArcType()) { return; }\n\n                // Expand shapes for selection\n                if (config.point_focus_expand_enabled) { $$.expandCircles(index, null, true); }\n                $$.expandBars(index, null, true);\n\n                // Call event handler\n                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                    config.data_onmouseover.call($$.api, d);\n                });\n            })\n            .on('mouseout', function (d) {\n                var index = d.index;\n                if (!$$.config) { return; } // chart is destroyed\n                if ($$.hasArcType()) { return; }\n                $$.hideXGridFocus();\n                $$.hideTooltip();\n                // Undo expanded shapes\n                $$.unexpandCircles();\n                $$.unexpandBars();\n                // Call event handler\n                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                    config.data_onmouseout.call($$.api, d);\n                });\n            })\n            .on('mousemove', function (d) {\n                var selectedData, index = d.index,\n                    eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);\n\n                if ($$.dragging || $$.flowing) { return; } // do nothing while dragging/flowing\n                if ($$.hasArcType()) { return; }\n\n                if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                    index -= 1;\n                }\n\n                // Show tooltip\n                selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {\n                    return $$.addName($$.getValueOnIndex(t.values, index));\n                });\n\n                if (config.tooltip_grouped) {\n                    $$.showTooltip(selectedData, this);\n                    $$.showXGridFocus(selectedData);\n                }\n\n                if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {\n                    return;\n                }\n\n                $$.main.selectAll('.' + CLASS.shape + '-' + index)\n                    .each(function () {\n                        d3.select(this).classed(CLASS.EXPANDED, true);\n                        if (config.data_selection_enabled) {\n                            eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);\n                        }\n                        if (!config.tooltip_grouped) {\n                            $$.hideXGridFocus();\n                            $$.hideTooltip();\n                            if (!config.data_selection_grouped) {\n                                $$.unexpandCircles(index);\n                                $$.unexpandBars(index);\n                            }\n                        }\n                    })\n                    .filter(function (d) {\n                        return $$.isWithinShape(this, d);\n                    })\n                    .each(function (d) {\n                        if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {\n                            eventRect.style('cursor', 'pointer');\n                        }\n                        if (!config.tooltip_grouped) {\n                            $$.showTooltip([d], this);\n                            $$.showXGridFocus([d]);\n                            if (config.point_focus_expand_enabled) { $$.expandCircles(index, d.id, true); }\n                            $$.expandBars(index, d.id, true);\n                        }\n                    });\n            })\n            .on('click', function (d) {\n                var index = d.index;\n                if ($$.hasArcType() || !$$.toggleShape) { return; }\n                if ($$.cancelClick) {\n                    $$.cancelClick = false;\n                    return;\n                }\n                if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                    index -= 1;\n                }\n                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                    if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n                        $$.toggleShape(this, d, index);\n                        $$.config.data_onclick.call($$.api, d, this);\n                    }\n                });\n            })\n            .call(\n                config.data_selection_draggable && $$.drag ? (\n                    d3.behavior.drag().origin(Object)\n                        .on('drag', function () { $$.drag(d3.mouse(this)); })\n                        .on('dragstart', function () { $$.dragstart(d3.mouse(this)); })\n                        .on('dragend', function () { $$.dragend(); })\n                ) : function () {}\n            );\n    };\n\n    c3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n\n        function mouseout() {\n            $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n            $$.hideXGridFocus();\n            $$.hideTooltip();\n            $$.unexpandCircles();\n            $$.unexpandBars();\n        }\n\n        eventRectEnter.append('rect')\n            .attr('x', 0)\n            .attr('y', 0)\n            .attr('width', $$.width)\n            .attr('height', $$.height)\n            .attr('class', CLASS.eventRect)\n            .on('mouseout', function () {\n                if (!$$.config) { return; } // chart is destroyed\n                if ($$.hasArcType()) { return; }\n                mouseout();\n            })\n            .on('mousemove', function () {\n                var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n                var mouse, closest, sameXData, selectedData;\n\n                if ($$.dragging) { return; } // do nothing when dragging\n                if ($$.hasArcType(targetsToShow)) { return; }\n\n                mouse = d3.mouse(this);\n                closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\n                if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n                    config.data_onmouseout.call($$.api, $$.mouseover);\n                    $$.mouseover = undefined;\n                }\n\n                if (! closest) {\n                    mouseout();\n                    return;\n                }\n\n                if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n                    sameXData = [closest];\n                } else {\n                    sameXData = $$.filterByX(targetsToShow, closest.x);\n                }\n\n                // show tooltip when cursor is close to some point\n                selectedData = sameXData.map(function (d) {\n                    return $$.addName(d);\n                });\n                $$.showTooltip(selectedData, this);\n\n                // expand points\n                if (config.point_focus_expand_enabled) {\n                    $$.expandCircles(closest.index, closest.id, true);\n                }\n                $$.expandBars(closest.index, closest.id, true);\n\n                // Show xgrid focus line\n                $$.showXGridFocus(selectedData);\n\n                // Show cursor as pointer if point is close to mouse position\n                if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                    $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n                    if (!$$.mouseover) {\n                        config.data_onmouseover.call($$.api, closest);\n                        $$.mouseover = closest;\n                    }\n                }\n            })\n            .on('click', function () {\n                var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n                var mouse, closest;\n                if ($$.hasArcType(targetsToShow)) { return; }\n\n                mouse = d3.mouse(this);\n                closest = $$.findClosestFromTargets(targetsToShow, mouse);\n                if (! closest) { return; }\n                // select if selection enabled\n                if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                    $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {\n                        if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {\n                            $$.toggleShape(this, closest, closest.index);\n                            $$.config.data_onclick.call($$.api, closest, this);\n                        }\n                    });\n                }\n            })\n            .call(\n                config.data_selection_draggable && $$.drag ? (\n                    d3.behavior.drag().origin(Object)\n                        .on('drag', function () { $$.drag(d3.mouse(this)); })\n                        .on('dragstart', function () { $$.dragstart(d3.mouse(this)); })\n                        .on('dragend', function () { $$.dragend(); })\n                ) : function () {}\n            );\n    };\n    c3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {\n        var $$ = this,\n            selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),\n            eventRect = $$.main.select(selector).node(),\n            box = eventRect.getBoundingClientRect(),\n            x = box.left + (mouse ? mouse[0] : 0),\n            y = box.top + (mouse ? mouse[1] : 0),\n            event = document.createEvent(\"MouseEvents\");\n\n        event.initMouseEvent(type, true, true, window, 0, x, y, x, y,\n                             false, false, false, false, 0, null);\n        eventRect.dispatchEvent(event);\n    };\n\n    c3_chart_internal_fn.getCurrentWidth = function () {\n        var $$ = this, config = $$.config;\n        return config.size_width ? config.size_width : $$.getParentWidth();\n    };\n    c3_chart_internal_fn.getCurrentHeight = function () {\n        var $$ = this, config = $$.config,\n            h = config.size_height ? config.size_height : $$.getParentHeight();\n        return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1); \n    };\n    c3_chart_internal_fn.getCurrentPaddingTop = function () {\n        var $$ = this,\n            config = $$.config,\n            padding = isValue(config.padding_top) ? config.padding_top : 0;\n        if ($$.title && $$.title.node()) {\n            padding += $$.getTitlePadding();\n        }\n        return padding;\n    };\n    c3_chart_internal_fn.getCurrentPaddingBottom = function () {\n        var config = this.config;\n        return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n    };\n    c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n        var $$ = this, config = $$.config;\n        if (isValue(config.padding_left)) {\n            return config.padding_left;\n        } else if (config.axis_rotated) {\n            return !config.axis_x_show ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n        } else if (!config.axis_y_show || config.axis_y_inner) { // && !config.axis_rotated\n            return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n        }\n    };\n    c3_chart_internal_fn.getCurrentPaddingRight = function () {\n        var $$ = this, config = $$.config,\n            defaultPadding = 10, legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n        if (isValue(config.padding_right)) {\n            return config.padding_right + 1; // 1 is needed not to hide tick line\n        } else if (config.axis_rotated) {\n            return defaultPadding + legendWidthOnRight;\n        } else if (!config.axis_y2_show || config.axis_y2_inner) { // && !config.axis_rotated\n            return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n        }\n    };\n\n    c3_chart_internal_fn.getParentRectValue = function (key) {\n        var parent = this.selectChart.node(), v;\n        while (parent && parent.tagName !== 'BODY') {\n            try {\n                v = parent.getBoundingClientRect()[key];\n            } catch(e) {\n                if (key === 'width') {\n                    // In IE in certain cases getBoundingClientRect\n                    // will cause an \"unspecified error\"\n                    v = parent.offsetWidth;\n                }\n            }\n            if (v) {\n                break;\n            }\n            parent = parent.parentNode;\n        }\n        return v;\n    };\n    c3_chart_internal_fn.getParentWidth = function () {\n        return this.getParentRectValue('width');\n    };\n    c3_chart_internal_fn.getParentHeight = function () {\n        var h = this.selectChart.style('height');\n        return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n    };\n\n\n    c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n        var $$ = this, config = $$.config,\n            hasLeftAxisRect = config.axis_rotated || (!config.axis_rotated && !config.axis_y_inner),\n            leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n            leftAxis = $$.main.select('.' + leftAxisClass).node(),\n            svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : {right: 0},\n            chartRect = $$.selectChart.node().getBoundingClientRect(),\n            hasArc = $$.hasArcType(),\n            svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n        return svgLeft > 0 ? svgLeft : 0;\n    };\n\n\n    c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n        var $$ = this, position = $$.axis.getLabelPositionById(id);\n        return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n    };\n    c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n        var $$ = this, config = $$.config, h = 30;\n        if (axisId === 'x' && !config.axis_x_show) { return 8; }\n        if (axisId === 'x' && config.axis_x_height) { return config.axis_x_height; }\n        if (axisId === 'y' && !config.axis_y_show) { \n            return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1; \n        }\n        if (axisId === 'y2' && !config.axis_y2_show) { return $$.rotated_padding_top; }\n        // Calculate x axis height when tick rotated\n        if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);\n        }\n        // Calculate y axis height when tick rotated\n        if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);\n        }\n        return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n    };\n\n    c3_chart_internal_fn.getEventRectWidth = function () {\n        return Math.max(0, this.xAxis.tickInterval());\n    };\n\n    c3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n        var $$ = this, config = $$.config,\n            indices = {}, i = 0, j, k;\n        $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n            for (j = 0; j < config.data_groups.length; j++) {\n                if (config.data_groups[j].indexOf(d.id) < 0) { continue; }\n                for (k = 0; k < config.data_groups[j].length; k++) {\n                    if (config.data_groups[j][k] in indices) {\n                        indices[d.id] = indices[config.data_groups[j][k]];\n                        break;\n                    }\n                }\n            }\n            if (isUndefined(indices[d.id])) { indices[d.id] = i++; }\n        });\n        indices.__max__ = i - 1;\n        return indices;\n    };\n    c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n        var $$ = this, scale = isSub ? $$.subX : $$.x;\n        return function (d) {\n            var index = d.id in indices ? indices[d.id] : 0;\n            return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n        };\n    };\n    c3_chart_internal_fn.getShapeY = function (isSub) {\n        var $$ = this;\n        return function (d) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n            return scale(d.value);\n        };\n    };\n    c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n        var $$ = this,\n            targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n            targetIds = targets.map(function (t) { return t.id; });\n        return function (d, i) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n                y0 = scale(0), offset = y0;\n            targets.forEach(function (t) {\n                var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n                if (t.id === d.id || indices[t.id] !== indices[d.id]) { return; }\n                if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n                    // check if the x values line up\n                    if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {  // \"+\" for timeseries\n                        // if not, try to find the value that does line up\n                        i = -1;\n                        values.forEach(function (v, j) {\n                            if (v.x === d.x) {\n                                i = j;\n                            }\n                        });\n                    }\n                    if (i in values && values[i].value * d.value >= 0) {\n                        offset += scale(values[i].value) - y0;\n                    }\n                }\n            });\n            return offset;\n        };\n    };\n    c3_chart_internal_fn.isWithinShape = function (that, d) {\n        var $$ = this,\n            shape = $$.d3.select(that), isWithin;\n        if (!$$.isTargetToShow(d.id)) {\n            isWithin = false;\n        }\n        else if (that.nodeName === 'circle') {\n            isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n        }\n        else if (that.nodeName === 'path') {\n            isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;\n        }\n        return isWithin;\n    };\n\n\n    c3_chart_internal_fn.getInterpolate = function (d) {\n        var $$ = this,\n            interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';\n        return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : \"linear\";\n    };\n\n    c3_chart_internal_fn.initLine = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartLines);\n    };\n    c3_chart_internal_fn.updateTargetsForLine = function (targets) {\n        var $$ = this, config = $$.config,\n            mainLineUpdate, mainLineEnter,\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$),\n            classCircles = $$.classCircles.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine)\n            .data(targets)\n            .attr('class', function (d) { return classChartLine(d) + classFocus(d); });\n        mainLineEnter = mainLineUpdate.enter().append('g')\n            .attr('class', classChartLine)\n            .style('opacity', 0)\n            .style(\"pointer-events\", \"none\");\n        // Lines for each data\n        mainLineEnter.append('g')\n            .attr(\"class\", classLines);\n        // Areas\n        mainLineEnter.append('g')\n            .attr('class', classAreas);\n        // Circles for each data point on lines\n        mainLineEnter.append('g')\n            .attr(\"class\", function (d) { return $$.generateClass(CLASS.selectedCircles, d.id); });\n        mainLineEnter.append('g')\n            .attr(\"class\", classCircles)\n            .style(\"cursor\", function (d) { return config.data_selection_isselectable(d) ? \"pointer\" : null; });\n        // Update date for selected circles\n        targets.forEach(function (t) {\n            $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n                d.value = t.values[d.index].value;\n            });\n        });\n        // MEMO: can not keep same color...\n        //mainLineUpdate.exit().remove();\n    };\n    c3_chart_internal_fn.updateLine = function (durationForExit) {\n        var $$ = this;\n        $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line)\n            .data($$.lineData.bind($$));\n        $$.mainLine.enter().append('path')\n            .attr('class', $$.classLine.bind($$))\n            .style(\"stroke\", $$.color);\n        $$.mainLine\n            .style(\"opacity\", $$.initialOpacity.bind($$))\n            .style('shape-rendering', function (d) { return $$.isStepType(d) ? 'crispEdges' : ''; })\n            .attr('transform', null);\n        $$.mainLine.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {\n        return [\n            (withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine)\n                .attr(\"d\", drawLine)\n                .style(\"stroke\", this.color)\n                .style(\"opacity\", 1)\n        ];\n    };\n    c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n        var $$ = this, config = $$.config,\n            line = $$.d3.svg.line(),\n            getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\n            yValue = function (d, i) {\n                return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n            };\n\n        line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n        if (!config.line_connectNull) { line = line.defined(function (d) { return d.value != null; }); }\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x = isSub ? $$.x : $$.subX, y = yScaleGetter.call($$, d.id), x0 = 0, y0 = 0, path;\n            if ($$.isLineType(d)) {\n                if (config.data_regions[d.id]) {\n                    path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n                } else {\n                    if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\n                    path = line.interpolate($$.getInterpolate(d))(values);\n                }\n            } else {\n                if (values[0]) {\n                    x0 = x(values[0].x);\n                    y0 = y(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) { // partial duplication of generateGetBarPoints\n        var $$ = this, config = $$.config,\n            lineTargetsNum = lineIndices.__max__ + 1,\n            x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = lineOffset(d, i) || y0, // offset is for stacked area chart\n                posX = x(d), posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n            }\n            // 1 point that marks the line position\n            return [\n                [posX, posY - (y0 - offset)],\n                [posX, posY - (y0 - offset)], // needed for compatibility\n                [posX, posY - (y0 - offset)], // needed for compatibility\n                [posX, posY - (y0 - offset)]  // needed for compatibility\n            ];\n        };\n    };\n\n\n    c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n        var $$ = this, config = $$.config,\n            prev = -1, i, j,\n            s = \"M\", sWithRegion,\n            xp, yp, dx, dy, dd, diff, diffx2,\n            xOffset = $$.isCategorized() ? 0.5 : 0,\n            xValue, yValue,\n            regions = [];\n\n        function isWithinRegions(x, regions) {\n            var i;\n            for (i = 0; i < regions.length; i++) {\n                if (regions[i].start < x && x <= regions[i].end) { return true; }\n            }\n            return false;\n        }\n\n        // Check start/end of regions\n        if (isDefined(_regions)) {\n            for (i = 0; i < _regions.length; i++) {\n                regions[i] = {};\n                if (isUndefined(_regions[i].start)) {\n                    regions[i].start = d[0].x;\n                } else {\n                    regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n                }\n                if (isUndefined(_regions[i].end)) {\n                    regions[i].end = d[d.length - 1].x;\n                } else {\n                    regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n                }\n            }\n        }\n\n        // Set scales\n        xValue = config.axis_rotated ? function (d) { return y(d.value); } : function (d) { return x(d.x); };\n        yValue = config.axis_rotated ? function (d) { return x(d.x); } : function (d) { return y(d.value); };\n\n        // Define svg generator function for region\n        function generateM(points) {\n            return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n        }\n        if ($$.isTimeSeries()) {\n            sWithRegion = function (d0, d1, j, diff) {\n                var x0 = d0.x.getTime(), x_diff = d1.x - d0.x,\n                    xv0 = new Date(x0 + x_diff * j),\n                    xv1 = new Date(x0 + x_diff * (j + diff)),\n                    points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n                } else {\n                    points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        } else {\n            sWithRegion = function (d0, d1, j, diff) {\n                var points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n                } else {\n                    points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        }\n\n        // Generate\n        for (i = 0; i < d.length; i++) {\n\n            // Draw as normal\n            if (isUndefined(regions) || ! isWithinRegions(d[i].x, regions)) {\n                s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n            }\n            // Draw with region // TODO: Fix for horizotal charts\n            else {\n                xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n                yp = $$.getScale(d[i - 1].value, d[i].value);\n\n                dx = x(d[i].x) - x(d[i - 1].x);\n                dy = y(d[i].value) - y(d[i - 1].value);\n                dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n                diff = 2 / dd;\n                diffx2 = diff * 2;\n\n                for (j = diff; j <= 1; j += diffx2) {\n                    s += sWithRegion(d[i - 1], d[i], j, diff);\n                }\n            }\n            prev = d[i].x;\n        }\n\n        return s;\n    };\n\n\n    c3_chart_internal_fn.updateArea = function (durationForExit) {\n        var $$ = this, d3 = $$.d3;\n        $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area)\n            .data($$.lineData.bind($$));\n        $$.mainArea.enter().append('path')\n            .attr(\"class\", $$.classArea.bind($$))\n            .style(\"fill\", $$.color)\n            .style(\"opacity\", function () { $$.orgAreaOpacity = +d3.select(this).style('opacity'); return 0; });\n        $$.mainArea\n            .style(\"opacity\", $$.orgAreaOpacity);\n        $$.mainArea.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {\n        return [\n            (withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea)\n                .attr(\"d\", drawArea)\n                .style(\"fill\", this.color)\n                .style(\"opacity\", this.orgAreaOpacity)\n        ];\n    };\n    c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n        var $$ = this, config = $$.config, area = $$.d3.svg.area(),\n            getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\n            value0 = function (d, i) {\n                return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n            },\n            value1 = function (d, i) {\n                return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n            };\n\n        area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n        if (!config.line_connectNull) {\n            area = area.defined(function (d) { return d.value !== null; });\n        }\n\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x0 = 0, y0 = 0, path;\n            if ($$.isAreaType(d)) {\n                if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\n                path = area.interpolate($$.getInterpolate(d))(values);\n            } else {\n                if (values[0]) {\n                    x0 = $$.x(values[0].x);\n                    y0 = $$.getYScale(d.id)(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.getAreaBaseValue = function () {\n        return 0;\n    };\n    c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) { // partial duplication of generateGetBarPoints\n        var $$ = this, config = $$.config,\n            areaTargetsNum = areaIndices.__max__ + 1,\n            x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = areaOffset(d, i) || y0, // offset is for stacked area chart\n                posX = x(d), posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n            }\n            // 1 point that marks the area position\n            return [\n                [posX, offset],\n                [posX, posY - (y0 - offset)],\n                [posX, posY - (y0 - offset)], // needed for compatibility\n                [posX, offset] // needed for compatibility\n            ];\n        };\n    };\n\n\n    c3_chart_internal_fn.updateCircle = function () {\n        var $$ = this;\n        $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle)\n            .data($$.lineOrScatterData.bind($$));\n        $$.mainCircle.enter().append(\"circle\")\n            .attr(\"class\", $$.classCircle.bind($$))\n            .attr(\"r\", $$.pointR.bind($$))\n            .style(\"fill\", $$.color);\n        $$.mainCircle\n            .style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n        $$.mainCircle.exit().remove();\n    };\n    c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {\n        var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);\n        return [\n            (withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle)\n                .style('opacity', this.opacityForCircle.bind(this))\n                .style(\"fill\", this.color)\n                .attr(\"cx\", cx)\n                .attr(\"cy\", cy),\n            (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles)\n                .attr(\"cx\", cx)\n                .attr(\"cy\", cy)\n        ];\n    };\n    c3_chart_internal_fn.circleX = function (d) {\n        return d.x || d.x === 0 ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.updateCircleY = function () {\n        var $$ = this, lineIndices, getPoints;\n        if ($$.config.data_groups.length > 0) {\n            lineIndices = $$.getShapeIndices($$.isLineType),\n            getPoints = $$.generateGetLinePoints(lineIndices);\n            $$.circleY = function (d, i) {\n                return getPoints(d, i)[0][1];\n            };\n        } else {\n            $$.circleY = function (d) {\n                return $$.getYScale(d.id)(d.value);\n            };\n        }\n    };\n    c3_chart_internal_fn.getCircles = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandCircles = function (i, id, reset) {\n        var $$ = this,\n            r = $$.pointExpandedR.bind($$);\n        if (reset) { $$.unexpandCircles(); }\n        $$.getCircles(i, id)\n            .classed(CLASS.EXPANDED, true)\n            .attr('r', r);\n    };\n    c3_chart_internal_fn.unexpandCircles = function (i) {\n        var $$ = this,\n            r = $$.pointR.bind($$);\n        $$.getCircles(i)\n            .filter(function () { return $$.d3.select(this).classed(CLASS.EXPANDED); })\n            .classed(CLASS.EXPANDED, false)\n            .attr('r', r);\n    };\n    c3_chart_internal_fn.pointR = function (d) {\n        var $$ = this, config = $$.config;\n        return $$.isStepType(d) ? 0 : (isFunction(config.point_r) ? config.point_r(d) : config.point_r);\n    };\n    c3_chart_internal_fn.pointExpandedR = function (d) {\n        var $$ = this, config = $$.config;\n        return config.point_focus_expand_enabled ? (config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75) : $$.pointR(d);\n    };\n    c3_chart_internal_fn.pointSelectR = function (d) {\n        var $$ = this, config = $$.config;\n        return isFunction(config.point_select_r) ? config.point_select_r(d) : ((config.point_select_r) ? config.point_select_r : $$.pointR(d) * 4);\n    };\n    c3_chart_internal_fn.isWithinCircle = function (that, r) {\n        var d3 = this.d3,\n            mouse = d3.mouse(that), d3_this = d3.select(that),\n            cx = +d3_this.attr(\"cx\"), cy = +d3_this.attr(\"cy\");\n        return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n    };\n    c3_chart_internal_fn.isWithinStep = function (that, y) {\n        return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n    };\n\n    c3_chart_internal_fn.initBar = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartBars);\n    };\n    c3_chart_internal_fn.updateTargetsForBar = function (targets) {\n        var $$ = this, config = $$.config,\n            mainBarUpdate, mainBarEnter,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar)\n            .data(targets)\n            .attr('class', function (d) { return classChartBar(d) + classFocus(d); });\n        mainBarEnter = mainBarUpdate.enter().append('g')\n            .attr('class', classChartBar)\n            .style('opacity', 0)\n            .style(\"pointer-events\", \"none\");\n        // Bars for each data\n        mainBarEnter.append('g')\n            .attr(\"class\", classBars)\n            .style(\"cursor\", function (d) { return config.data_selection_isselectable(d) ? \"pointer\" : null; });\n\n    };\n    c3_chart_internal_fn.updateBar = function (durationForExit) {\n        var $$ = this,\n            barData = $$.barData.bind($$),\n            classBar = $$.classBar.bind($$),\n            initialOpacity = $$.initialOpacity.bind($$),\n            color = function (d) { return $$.color(d.id); };\n        $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar)\n            .data(barData);\n        $$.mainBar.enter().append('path')\n            .attr(\"class\", classBar)\n            .style(\"stroke\", color)\n            .style(\"fill\", color);\n        $$.mainBar\n            .style(\"opacity\", initialOpacity);\n        $$.mainBar.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {\n        return [\n            (withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar)\n                .attr('d', drawBar)\n                .style(\"fill\", this.color)\n                .style(\"opacity\", 1)\n        ];\n    };\n    c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n        var $$ = this, config = $$.config,\n            w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? (axis.tickInterval() * config.bar_width_ratio) / barTargetsNum : 0;\n        return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n    };\n    c3_chart_internal_fn.getBars = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandBars = function (i, id, reset) {\n        var $$ = this;\n        if (reset) { $$.unexpandBars(); }\n        $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n    };\n    c3_chart_internal_fn.unexpandBars = function (i) {\n        var $$ = this;\n        $$.getBars(i).classed(CLASS.EXPANDED, false);\n    };\n    c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n        var $$ = this, config = $$.config,\n            getPoints = $$.generateGetBarPoints(barIndices, isSub);\n        return function (d, i) {\n            // 4 points that make a bar\n            var points = getPoints(d, i);\n\n            // switch points if axis is rotated, not applicable for sub chart\n            var indexX = config.axis_rotated ? 1 : 0;\n            var indexY = config.axis_rotated ? 0 : 1;\n\n            var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' +\n                    'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' +\n                    'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' +\n                    'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' +\n                    'z';\n\n            return path;\n        };\n    };\n    c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n        var $$ = this,\n            axis = isSub ? $$.subXAxis : $$.xAxis,\n            barTargetsNum = barIndices.__max__ + 1,\n            barW = $$.getBarW(axis, barTargetsNum),\n            barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n            barY = $$.getShapeY(!!isSub),\n            barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = barOffset(d, i) || y0, // offset is for stacked bar chart\n                posX = barX(d), posY = barY(d);\n            // fix posY not to overflow opposite quadrant\n            if ($$.config.axis_rotated) {\n                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n            }\n            // 4 points that make a bar\n            return [\n                [posX, offset],\n                [posX, posY - (y0 - offset)],\n                [posX + barW, posY - (y0 - offset)],\n                [posX + barW, offset]\n            ];\n        };\n    };\n    c3_chart_internal_fn.isWithinBar = function (that) {\n        var mouse = this.d3.mouse(that), box = that.getBoundingClientRect(),\n            seg0 = that.pathSegList.getItem(0), seg1 = that.pathSegList.getItem(1),\n            x = Math.min(seg0.x, seg1.x), y = Math.min(seg0.y, seg1.y),\n            w = box.width, h = box.height, offset = 2,\n            sx = x - offset, ex = x + w + offset, sy = y + h + offset, ey = y - offset;\n        return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n    };\n\n    c3_chart_internal_fn.initText = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartTexts);\n        $$.mainText = $$.d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateTargetsForText = function (targets) {\n        var $$ = this, mainTextUpdate, mainTextEnter,\n            classChartText = $$.classChartText.bind($$),\n            classTexts = $$.classTexts.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText)\n            .data(targets)\n            .attr('class', function (d) { return classChartText(d) + classFocus(d); });\n        mainTextEnter = mainTextUpdate.enter().append('g')\n            .attr('class', classChartText)\n            .style('opacity', 0)\n            .style(\"pointer-events\", \"none\");\n        mainTextEnter.append('g')\n            .attr('class', classTexts);\n    };\n    c3_chart_internal_fn.updateText = function (durationForExit) {\n        var $$ = this, config = $$.config,\n            barOrLineData = $$.barOrLineData.bind($$),\n            classText = $$.classText.bind($$);\n        $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text)\n            .data(barOrLineData);\n        $$.mainText.enter().append('text')\n            .attr(\"class\", classText)\n            .attr('text-anchor', function (d) { return config.axis_rotated ? (d.value < 0 ? 'end' : 'start') : 'middle'; })\n            .style(\"stroke\", 'none')\n            .style(\"fill\", function (d) { return $$.color(d); })\n            .style(\"fill-opacity\", 0);\n        $$.mainText\n            .text(function (d, i, j) { return $$.dataLabelFormat(d.id)(d.value, d.id, i, j); });\n        $$.mainText.exit()\n            .transition().duration(durationForExit)\n            .style('fill-opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {\n        return [\n            (withTransition ? this.mainText.transition() : this.mainText)\n                .attr('x', xForText)\n                .attr('y', yForText)\n                .style(\"fill\", this.color)\n                .style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))\n        ];\n    };\n    c3_chart_internal_fn.getTextRect = function (text, cls, element) {\n        var dummy = this.d3.select('body').append('div').classed('c3', true),\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n            font = this.d3.select(element).style('font'),\n            rect;\n        svg.selectAll('.dummy')\n            .data([text])\n          .enter().append('text')\n            .classed(cls ? cls : \"\", true)\n            .style('font', font)\n            .text(text)\n          .each(function () { rect = this.getBoundingClientRect(); });\n        dummy.remove();\n        return rect;\n    };\n    c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n        var $$ = this,\n            getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n            getBarPoints = $$.generateGetBarPoints(barIndices, false),\n            getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n            getter = forX ? $$.getXForText : $$.getYForText;\n        return function (d, i) {\n            var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n            return getter.call($$, getPoints(d, i), d, this);\n        };\n    };\n    c3_chart_internal_fn.getXForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(), xPos, padding;\n        if ($$.config.axis_rotated) {\n            padding = $$.isBarType(d) ? 4 : 6;\n            xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n        } else {\n            xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null) {\n            if (xPos > $$.width) {\n                xPos = $$.width - box.width;\n            } else if (xPos < 0) {\n                xPos = 4;\n            }\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.getYForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            yPos;\n        if ($$.config.axis_rotated) {\n            yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n        } else {\n            yPos = points[2][1];\n            if (d.value < 0  || (d.value === 0 && !$$.hasPositiveValue)) {\n                yPos += box.height;\n                if ($$.isBarType(d) && $$.isSafari()) {\n                    yPos -= 3;\n                }\n                else if (!$$.isBarType(d) && $$.isChrome()) {\n                    yPos += 3;\n                }\n            } else {\n                yPos += $$.isBarType(d) ? -3 : -6;\n            }\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null && !$$.config.axis_rotated) {\n            if (yPos < box.height) {\n                yPos = box.height;\n            } else if (yPos > this.height) {\n                yPos = this.height - 4;\n            }\n        }\n        return yPos;\n    };\n\n    c3_chart_internal_fn.setTargetType = function (targetIds, type) {\n        var $$ = this, config = $$.config;\n        $$.mapToTargetIds(targetIds).forEach(function (id) {\n            $$.withoutFadeIn[id] = (type === config.data_types[id]);\n            config.data_types[id] = type;\n        });\n        if (!targetIds) {\n            config.data_type = type;\n        }\n    };\n    c3_chart_internal_fn.hasType = function (type, targets) {\n        var $$ = this, types = $$.config.data_types, has = false;\n        targets = targets || $$.data.targets;\n        if (targets && targets.length) {\n            targets.forEach(function (target) {\n                var t = types[target.id];\n                if ((t && t.indexOf(type) >= 0) || (!t && type === 'line')) {\n                    has = true;\n                }\n            });\n        } else if (Object.keys(types).length) {\n            Object.keys(types).forEach(function (id) {\n                if (types[id] === type) { has = true; }\n            });\n        } else {\n            has = $$.config.data_type === type;\n        }\n        return has;\n    };\n    c3_chart_internal_fn.hasArcType = function (targets) {\n        return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n    };\n    c3_chart_internal_fn.isLineType = function (d) {\n        var config = this.config, id = isString(d) ? d : d.id;\n        return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isStepType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isSplineType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isAreaType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isBarType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'bar';\n    };\n    c3_chart_internal_fn.isScatterType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'scatter';\n    };\n    c3_chart_internal_fn.isPieType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'pie';\n    };\n    c3_chart_internal_fn.isGaugeType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'gauge';\n    };\n    c3_chart_internal_fn.isDonutType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'donut';\n    };\n    c3_chart_internal_fn.isArcType = function (d) {\n        return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n    };\n    c3_chart_internal_fn.lineData = function (d) {\n        return this.isLineType(d) ? [d] : [];\n    };\n    c3_chart_internal_fn.arcData = function (d) {\n        return this.isArcType(d.data) ? [d] : [];\n    };\n    /* not used\n     function scatterData(d) {\n     return isScatterType(d) ? d.values : [];\n     }\n     */\n    c3_chart_internal_fn.barData = function (d) {\n        return this.isBarType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.lineOrScatterData = function (d) {\n        return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.barOrLineData = function (d) {\n        return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.isInterpolationType = function (type) {\n        return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;\n    };\n\n    c3_chart_internal_fn.initGrid = function () {\n        var $$ = this, config = $$.config, d3 = $$.d3;\n        $$.grid = $$.main.append('g')\n            .attr(\"clip-path\", $$.clipPathForGrid)\n            .attr('class', CLASS.grid);\n        if (config.grid_x_show) {\n            $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n        }\n        if (config.grid_y_show) {\n            $$.grid.append('g').attr('class', CLASS.ygrids);\n        }\n        if (config.grid_focus_show) {\n            $$.grid.append('g')\n                .attr(\"class\", CLASS.xgridFocus)\n                .append('line')\n                .attr('class', CLASS.xgridFocus);\n        }\n        $$.xgrid = d3.selectAll([]);\n        if (!config.grid_lines_front) { $$.initGridLines(); }\n    };\n    c3_chart_internal_fn.initGridLines = function () {\n        var $$ = this, d3 = $$.d3;\n        $$.gridLines = $$.main.append('g')\n            .attr(\"clip-path\", $$.clipPathForGrid)\n            .attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n        $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n        $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n        $$.xgridLines = d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n        var $$ = this, config = $$.config, d3 = $$.d3,\n            xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n            tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n\n        $$.xgridAttr = config.axis_rotated ? {\n            'x1': 0,\n            'x2': $$.width,\n            'y1': function (d) { return $$.x(d) - tickOffset; },\n            'y2': function (d) { return $$.x(d) - tickOffset; }\n        } : {\n            'x1': function (d) { return $$.x(d) + tickOffset; },\n            'x2': function (d) { return $$.x(d) + tickOffset; },\n            'y1': 0,\n            'y2': $$.height\n        };\n\n        $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid)\n            .data(xgridData);\n        $$.xgrid.enter().append('line').attr(\"class\", CLASS.xgrid);\n        if (!withoutUpdate) {\n            $$.xgrid.attr($$.xgridAttr)\n                .style(\"opacity\", function () { return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1; });\n        }\n        $$.xgrid.exit().remove();\n    };\n\n    c3_chart_internal_fn.updateYGrid = function () {\n        var $$ = this, config = $$.config,\n            gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n        $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid)\n            .data(gridValues);\n        $$.ygrid.enter().append('line')\n            .attr('class', CLASS.ygrid);\n        $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0)\n            .attr(\"x2\", config.axis_rotated ? $$.y : $$.width)\n            .attr(\"y1\", config.axis_rotated ? 0 : $$.y)\n            .attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n        $$.ygrid.exit().remove();\n        $$.smoothLines($$.ygrid, 'grid');\n    };\n\n    c3_chart_internal_fn.gridTextAnchor = function (d) {\n        return d.position ? d.position : \"end\";\n    };\n    c3_chart_internal_fn.gridTextDx = function (d) {\n        return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n    };\n    c3_chart_internal_fn.xGridTextX = function (d) {\n        return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n    };\n    c3_chart_internal_fn.yGridTextX = function (d) {\n        return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n    };\n    c3_chart_internal_fn.updateGrid = function (duration) {\n        var $$ = this, main = $$.main, config = $$.config,\n            xgridLine, ygridLine, yv;\n\n        // hide if arc type\n        $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n        if (config.grid_x_show) {\n            $$.updateXGrid();\n        }\n        $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine)\n            .data(config.grid_x_lines);\n        // enter\n        xgridLine = $$.xgridLines.enter().append('g')\n            .attr(\"class\", function (d) { return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : ''); });\n        xgridLine.append('line')\n            .style(\"opacity\", 0);\n        xgridLine.append('text')\n            .attr(\"text-anchor\", $$.gridTextAnchor)\n            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n            .attr('dx', $$.gridTextDx)\n            .attr('dy', -5)\n            .style(\"opacity\", 0);\n        // udpate\n        // done in d3.transition() of the end of this function\n        // exit\n        $$.xgridLines.exit().transition().duration(duration)\n            .style(\"opacity\", 0)\n            .remove();\n\n        // Y-Grid\n        if (config.grid_y_show) {\n            $$.updateYGrid();\n        }\n        $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine)\n            .data(config.grid_y_lines);\n        // enter\n        ygridLine = $$.ygridLines.enter().append('g')\n            .attr(\"class\", function (d) { return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : ''); });\n        ygridLine.append('line')\n            .style(\"opacity\", 0);\n        ygridLine.append('text')\n            .attr(\"text-anchor\", $$.gridTextAnchor)\n            .attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\")\n            .attr('dx', $$.gridTextDx)\n            .attr('dy', -5)\n            .style(\"opacity\", 0);\n        // update\n        yv = $$.yv.bind($$);\n        $$.ygridLines.select('line')\n          .transition().duration(duration)\n            .attr(\"x1\", config.axis_rotated ? yv : 0)\n            .attr(\"x2\", config.axis_rotated ? yv : $$.width)\n            .attr(\"y1\", config.axis_rotated ? 0 : yv)\n            .attr(\"y2\", config.axis_rotated ? $$.height : yv)\n            .style(\"opacity\", 1);\n        $$.ygridLines.select('text')\n          .transition().duration(duration)\n            .attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$))\n            .attr(\"y\", yv)\n            .text(function (d) { return d.text; })\n            .style(\"opacity\", 1);\n        // exit\n        $$.ygridLines.exit().transition().duration(duration)\n            .style(\"opacity\", 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawGrid = function (withTransition) {\n        var $$ = this, config = $$.config, xv = $$.xv.bind($$),\n            lines = $$.xgridLines.select('line'),\n            texts = $$.xgridLines.select('text');\n        return [\n            (withTransition ? lines.transition() : lines)\n                .attr(\"x1\", config.axis_rotated ? 0 : xv)\n                .attr(\"x2\", config.axis_rotated ? $$.width : xv)\n                .attr(\"y1\", config.axis_rotated ? xv : 0)\n                .attr(\"y2\", config.axis_rotated ? xv : $$.height)\n                .style(\"opacity\", 1),\n            (withTransition ? texts.transition() : texts)\n                .attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$))\n                .attr(\"y\", xv)\n                .text(function (d) { return d.text; })\n                .style(\"opacity\", 1)\n        ];\n    };\n    c3_chart_internal_fn.showXGridFocus = function (selectedData) {\n        var $$ = this, config = $$.config,\n            dataToShow = selectedData.filter(function (d) { return d && isValue(d.value); }),\n            focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n            xx = $$.xx.bind($$);\n        if (! config.tooltip_show) { return; }\n        // Hide when scatter plot exists\n        if ($$.hasType('scatter') || $$.hasArcType()) { return; }\n        focusEl\n            .style(\"visibility\", \"visible\")\n            .data([dataToShow[0]])\n            .attr(config.axis_rotated ? 'y1' : 'x1', xx)\n            .attr(config.axis_rotated ? 'y2' : 'x2', xx);\n        $$.smoothLines(focusEl, 'grid');\n    };\n    c3_chart_internal_fn.hideXGridFocus = function () {\n        this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n    };\n    c3_chart_internal_fn.updateXgridFocus = function () {\n        var $$ = this, config = $$.config;\n        $$.main.select('line.' + CLASS.xgridFocus)\n            .attr(\"x1\", config.axis_rotated ? 0 : -10)\n            .attr(\"x2\", config.axis_rotated ? $$.width : -10)\n            .attr(\"y1\", config.axis_rotated ? -10 : 0)\n            .attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n    };\n    c3_chart_internal_fn.generateGridData = function (type, scale) {\n        var $$ = this,\n            gridData = [], xDomain, firstYear, lastYear, i,\n            tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n        if (type === 'year') {\n            xDomain = $$.getXDomain();\n            firstYear = xDomain[0].getFullYear();\n            lastYear = xDomain[1].getFullYear();\n            for (i = firstYear; i <= lastYear; i++) {\n                gridData.push(new Date(i + '-01-01 00:00:00'));\n            }\n        } else {\n            gridData = scale.ticks(10);\n            if (gridData.length > tickNum) { // use only int\n                gridData = gridData.filter(function (d) { return (\"\" + d).indexOf('.') < 0; });\n            }\n        }\n        return gridData;\n    };\n    c3_chart_internal_fn.getGridFilterToRemove = function (params) {\n        return params ? function (line) {\n            var found = false;\n            [].concat(params).forEach(function (param) {\n                if ((('value' in param && line.value === param.value) || ('class' in param && line['class'] === param['class']))) {\n                    found = true;\n                }\n            });\n            return found;\n        } : function () { return true; };\n    };\n    c3_chart_internal_fn.removeGridLines = function (params, forX) {\n        var $$ = this, config = $$.config,\n            toRemove = $$.getGridFilterToRemove(params),\n            toShow = function (line) { return !toRemove(line); },\n            classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n            classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n        $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove)\n            .transition().duration(config.transition_duration)\n            .style('opacity', 0).remove();\n        if (forX) {\n            config.grid_x_lines = config.grid_x_lines.filter(toShow);\n        } else {\n            config.grid_y_lines = config.grid_y_lines.filter(toShow);\n        }\n    };\n\n    c3_chart_internal_fn.initTooltip = function () {\n        var $$ = this, config = $$.config, i;\n        $$.tooltip = $$.selectChart\n            .style(\"position\", \"relative\")\n          .append(\"div\")\n            .attr('class', CLASS.tooltipContainer)\n            .style(\"position\", \"absolute\")\n            .style(\"pointer-events\", \"none\")\n            .style(\"display\", \"none\");\n        // Show tooltip if needed\n        if (config.tooltip_init_show) {\n            if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n                config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n                for (i = 0; i < $$.data.targets[0].values.length; i++) {\n                    if (($$.data.targets[0].values[i].x - config.tooltip_init_x) === 0) { break; }\n                }\n                config.tooltip_init_x = i;\n            }\n            $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n                return $$.addName(d.values[config.tooltip_init_x]);\n            }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n            $$.tooltip.style(\"top\", config.tooltip_init_position.top)\n                .style(\"left\", config.tooltip_init_position.left)\n                .style(\"display\", \"block\");\n        }\n    };\n    c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n        var $$ = this, config = $$.config,\n            titleFormat = config.tooltip_format_title || defaultTitleFormat,\n            nameFormat = config.tooltip_format_name || function (name) { return name; },\n            valueFormat = config.tooltip_format_value || defaultValueFormat,\n            text, i, title, value, name, bgcolor,\n            orderAsc = $$.isOrderAsc();\n\n        if (config.data_groups.length === 0) {\n            d.sort(function(a, b){\n                var v1 = a ? a.value : null, v2 = b ? b.value : null;\n                return orderAsc ? v1 - v2 : v2 - v1;\n            });\n        } else {\n            var ids = $$.orderTargets($$.data.targets).map(function (i) {\n                return i.id;\n            });\n            d.sort(function(a, b) {\n                var v1 = a ? a.value : null, v2 = b ? b.value : null;\n                if (v1 > 0 && v2 > 0) {\n                    v1 = a ? ids.indexOf(a.id) : null;\n                    v2 = b ? ids.indexOf(b.id) : null;\n                }\n                return orderAsc ? v1 - v2 : v2 - v1;\n            });\n        }\n\n        for (i = 0; i < d.length; i++) {\n            if (! (d[i] && (d[i].value || d[i].value === 0))) { continue; }\n\n            if (! text) {\n                title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n                text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n            }\n\n            value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n            if (value !== undefined) {\n                // Skip elements when their name is set to null\n                if (d[i].name === null) { continue; }\n                name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n                bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n\n                text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n                text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n                text += \"<td class='value'>\" + value + \"</td>\";\n                text += \"</tr>\";\n            }\n        }\n        return text + \"</table>\";\n    };\n    c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n        var $$ = this, config = $$.config, d3 = $$.d3;\n        var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n        var forArc = $$.hasArcType(),\n            mouse = d3.mouse(element);\n      // Determin tooltip position\n        if (forArc) {\n            tooltipLeft = (($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2) + mouse[0];\n            tooltipTop = ($$.height / 2) + mouse[1] + 20;\n        } else {\n            svgLeft = $$.getSvgLeft(true);\n            if (config.axis_rotated) {\n                tooltipLeft = svgLeft + mouse[0] + 100;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = $$.x(dataToShow[0].x) + 20;\n            } else {\n                tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = mouse[1] + 15;\n            }\n\n            if (tooltipRight > chartRight) {\n                // 20 is needed for Firefox to keep tooltip width\n                tooltipLeft -= tooltipRight - chartRight + 20;\n            }\n            if (tooltipTop + tHeight > $$.currentHeight) {\n                tooltipTop -= tHeight + 30;\n            }\n        }\n        if (tooltipTop < 0) {\n            tooltipTop = 0;\n        }\n        return {top: tooltipTop, left: tooltipLeft};\n    };\n    c3_chart_internal_fn.showTooltip = function (selectedData, element) {\n        var $$ = this, config = $$.config;\n        var tWidth, tHeight, position;\n        var forArc = $$.hasArcType(),\n            dataToShow = selectedData.filter(function (d) { return d && isValue(d.value); }),\n            positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n        if (dataToShow.length === 0 || !config.tooltip_show) {\n            return;\n        }\n        $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\n\n        // Get tooltip dimensions\n        tWidth = $$.tooltip.property('offsetWidth');\n        tHeight = $$.tooltip.property('offsetHeight');\n\n        position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\n        // Set tooltip\n        $$.tooltip\n            .style(\"top\", position.top + \"px\")\n            .style(\"left\", position.left + 'px');\n    };\n    c3_chart_internal_fn.hideTooltip = function () {\n        this.tooltip.style(\"display\", \"none\");\n    };\n\n    c3_chart_internal_fn.initLegend = function () {\n        var $$ = this;\n        $$.legendItemTextBox = {};\n        $$.legendHasRendered = false;\n        $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n        if (!$$.config.legend_show) {\n            $$.legend.style('visibility', 'hidden');\n            $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n            return;\n        }\n        // MEMO: call here to update legend box and tranlate for all\n        // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n        $$.updateLegendWithDefaults();\n    };\n    c3_chart_internal_fn.updateLegendWithDefaults = function () {\n        var $$ = this;\n        $$.updateLegend($$.mapToIds($$.data.targets), {withTransform: false, withTransitionForTransform: false, withTransition: false});\n    };\n    c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n        var $$ = this, config = $$.config, insetLegendPosition = {\n            top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n            left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n        };\n\n        $$.margin3 = {\n            top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n            right: NaN,\n            bottom: 0,\n            left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n        };\n    };\n    c3_chart_internal_fn.transformLegend = function (withTransition) {\n        var $$ = this;\n        (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n    };\n    c3_chart_internal_fn.updateLegendStep = function (step) {\n        this.legendStep = step;\n    };\n    c3_chart_internal_fn.updateLegendItemWidth = function (w) {\n        this.legendItemWidth = w;\n    };\n    c3_chart_internal_fn.updateLegendItemHeight = function (h) {\n        this.legendItemHeight = h;\n    };\n    c3_chart_internal_fn.getLegendWidth = function () {\n        var $$ = this;\n        return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n    };\n    c3_chart_internal_fn.getLegendHeight = function () {\n        var $$ = this, h = 0;\n        if ($$.config.legend_show) {\n            if ($$.isLegendRight) {\n                h = $$.currentHeight;\n            } else {\n                h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n            }\n        }\n        return h;\n    };\n    c3_chart_internal_fn.opacityForLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n    };\n    c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n    };\n    c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n        var $$ = this;\n        targetIds = $$.mapToTargetIds(targetIds);\n        $$.legend.selectAll('.' + CLASS.legendItem)\n            .filter(function (id) { return targetIds.indexOf(id) >= 0; })\n            .classed(CLASS.legendItemFocused, focus)\n          .transition().duration(100)\n            .style('opacity', function () {\n                var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n                return opacity.call($$, $$.d3.select(this));\n            });\n    };\n    c3_chart_internal_fn.revertLegend = function () {\n        var $$ = this, d3 = $$.d3;\n        $$.legend.selectAll('.' + CLASS.legendItem)\n            .classed(CLASS.legendItemFocused, false)\n            .transition().duration(100)\n            .style('opacity', function () { return $$.opacityForLegend(d3.select(this)); });\n    };\n    c3_chart_internal_fn.showLegend = function (targetIds) {\n        var $$ = this, config = $$.config;\n        if (!config.legend_show) {\n            config.legend_show = true;\n            $$.legend.style('visibility', 'visible');\n            if (!$$.legendHasRendered) {\n                $$.updateLegendWithDefaults();\n            }\n        }\n        $$.removeHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds))\n            .style('visibility', 'visible')\n            .transition()\n            .style('opacity', function () { return $$.opacityForLegend($$.d3.select(this)); });\n    };\n    c3_chart_internal_fn.hideLegend = function (targetIds) {\n        var $$ = this, config = $$.config;\n        if (config.legend_show && isEmpty(targetIds)) {\n            config.legend_show = false;\n            $$.legend.style('visibility', 'hidden');\n        }\n        $$.addHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds))\n            .style('opacity', 0)\n            .style('visibility', 'hidden');\n    };\n    c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n        this.legendItemTextBox = {};\n    };\n    c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n        var $$ = this, config = $$.config;\n        var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n        var paddingTop = 4, paddingRight = 10, maxWidth = 0, maxHeight = 0, posMin = 10, tileWidth = config.legend_item_tile_width + 5;\n        var l, totalLength = 0, offsets = {}, widths = {}, heights = {}, margins = [0], steps = {}, step = 0;\n        var withTransition, withTransitionForTransform;\n        var texts, rects, tiles, background;\n\n        // Skip elements when their name is set to null\n        targetIds = targetIds.filter(function(id) {\n            return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n        });\n\n        options = options || {};\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\n        function getTextBox(textElement, id) {\n            if (!$$.legendItemTextBox[id]) {\n                $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n            }\n            return $$.legendItemTextBox[id];\n        }\n\n        function updatePositions(textElement, id, index) {\n            var reset = index === 0, isLast = index === targetIds.length - 1,\n                box = getTextBox(textElement, id),\n                itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n                itemHeight = box.height + paddingTop,\n                itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n                areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n                margin, maxLength;\n\n            // MEMO: care about condifion of step, totalLength\n            function updateValues(id, withoutStep) {\n                if (!withoutStep) {\n                    margin = (areaLength - totalLength - itemLength) / 2;\n                    if (margin < posMin) {\n                        margin = (areaLength - itemLength) / 2;\n                        totalLength = 0;\n                        step++;\n                    }\n                }\n                steps[id] = step;\n                margins[step] = $$.isLegendInset ? 10 : margin;\n                offsets[id] = totalLength;\n                totalLength += itemLength;\n            }\n\n            if (reset) {\n                totalLength = 0;\n                step = 0;\n                maxWidth = 0;\n                maxHeight = 0;\n            }\n\n            if (config.legend_show && !$$.isLegendToShow(id)) {\n                widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n                return;\n            }\n\n            widths[id] = itemWidth;\n            heights[id] = itemHeight;\n\n            if (!maxWidth || itemWidth >= maxWidth) { maxWidth = itemWidth; }\n            if (!maxHeight || itemHeight >= maxHeight) { maxHeight = itemHeight; }\n            maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\n            if (config.legend_equally) {\n                Object.keys(widths).forEach(function (id) { widths[id] = maxWidth; });\n                Object.keys(heights).forEach(function (id) { heights[id] = maxHeight; });\n                margin = (areaLength - maxLength * targetIds.length) / 2;\n                if (margin < posMin) {\n                    totalLength = 0;\n                    step = 0;\n                    targetIds.forEach(function (id) { updateValues(id); });\n                }\n                else {\n                    updateValues(id, true);\n                }\n            } else {\n                updateValues(id);\n            }\n        }\n\n        if ($$.isLegendInset) {\n            step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n            $$.updateLegendStep(step);\n        }\n\n        if ($$.isLegendRight) {\n            xForLegend = function (id) { return maxWidth * steps[id]; };\n            yForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n        } else if ($$.isLegendInset) {\n            xForLegend = function (id) { return maxWidth * steps[id] + 10; };\n            yForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n        } else {\n            xForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n            yForLegend = function (id) { return maxHeight * steps[id]; };\n        }\n        xForLegendText = function (id, i) { return xForLegend(id, i) + 4 + config.legend_item_tile_width; };\n        yForLegendText = function (id, i) { return yForLegend(id, i) + 9; };\n        xForLegendRect = function (id, i) { return xForLegend(id, i); };\n        yForLegendRect = function (id, i) { return yForLegend(id, i) - 5; };\n        x1ForLegendTile = function (id, i) { return xForLegend(id, i) - 2; };\n        x2ForLegendTile = function (id, i) { return xForLegend(id, i) - 2 + config.legend_item_tile_width; };\n        yForLegendTile = function (id, i) { return yForLegend(id, i) + 4; };\n\n        // Define g for legend area\n        l = $$.legend.selectAll('.' + CLASS.legendItem)\n            .data(targetIds)\n            .enter().append('g')\n            .attr('class', function (id) { return $$.generateClass(CLASS.legendItem, id); })\n            .style('visibility', function (id) { return $$.isLegendToShow(id) ? 'visible' : 'hidden'; })\n            .style('cursor', 'pointer')\n            .on('click', function (id) {\n                if (config.legend_item_onclick) {\n                    config.legend_item_onclick.call($$, id);\n                } else {\n                    if ($$.d3.event.altKey) {\n                        $$.api.hide();\n                        $$.api.show(id);\n                    } else {\n                        $$.api.toggle(id);\n                        $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n                    }\n                }\n            })\n            .on('mouseover', function (id) {\n                if (config.legend_item_onmouseover) {\n                    config.legend_item_onmouseover.call($$, id);\n                }\n                else {\n                    $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n                    if (!$$.transiting && $$.isTargetToShow(id)) {\n                        $$.api.focus(id);\n                    }\n                }\n            })\n            .on('mouseout', function (id) {\n                if (config.legend_item_onmouseout) {\n                    config.legend_item_onmouseout.call($$, id);\n                }\n                else {\n                    $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n                    $$.api.revert();\n                }\n            });\n        l.append('text')\n            .text(function (id) { return isDefined(config.data_names[id]) ? config.data_names[id] : id; })\n            .each(function (id, i) { updatePositions(this, id, i); })\n            .style(\"pointer-events\", \"none\")\n            .attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200)\n            .attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n        l.append('rect')\n            .attr(\"class\", CLASS.legendItemEvent)\n            .style('fill-opacity', 0)\n            .attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200)\n            .attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n        l.append('line')\n            .attr('class', CLASS.legendItemTile)\n            .style('stroke', $$.color)\n            .style(\"pointer-events\", \"none\")\n            .attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200)\n            .attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile)\n            .attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200)\n            .attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile)\n            .attr('stroke-width', config.legend_item_tile_height);\n\n        // Set background for inset legend\n        background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n        if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n            background = $$.legend.insert('g', '.' + CLASS.legendItem)\n                .attr(\"class\", CLASS.legendBackground)\n                .append('rect');\n        }\n\n        texts = $$.legend.selectAll('text')\n            .data(targetIds)\n            .text(function (id) { return isDefined(config.data_names[id]) ? config.data_names[id] : id; }) // MEMO: needed for update\n            .each(function (id, i) { updatePositions(this, id, i); });\n        (withTransition ? texts.transition() : texts)\n            .attr('x', xForLegendText)\n            .attr('y', yForLegendText);\n\n        rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent)\n            .data(targetIds);\n        (withTransition ? rects.transition() : rects)\n            .attr('width', function (id) { return widths[id]; })\n            .attr('height', function (id) { return heights[id]; })\n            .attr('x', xForLegendRect)\n            .attr('y', yForLegendRect);\n\n        tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile)\n                .data(targetIds);\n            (withTransition ? tiles.transition() : tiles)\n                .style('stroke', $$.color)\n                .attr('x1', x1ForLegendTile)\n                .attr('y1', yForLegendTile)\n                .attr('x2', x2ForLegendTile)\n                .attr('y2', yForLegendTile);\n\n        if (background) {\n            (withTransition ? background.transition() : background)\n                .attr('height', $$.getLegendHeight() - 12)\n                .attr('width', maxWidth * (step + 1) + 10);\n        }\n\n        // toggle legend state\n        $$.legend.selectAll('.' + CLASS.legendItem)\n            .classed(CLASS.legendItemHidden, function (id) { return !$$.isTargetToShow(id); });\n\n        // Update all to reflect change of legend\n        $$.updateLegendItemWidth(maxWidth);\n        $$.updateLegendItemHeight(maxHeight);\n        $$.updateLegendStep(step);\n        // Update size and scale\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        // Update g positions\n        $$.transformAll(withTransitionForTransform, transitions);\n        $$.legendHasRendered = true;\n    };\n\n    c3_chart_internal_fn.initTitle = function () {\n        var $$ = this;\n        $$.title = $$.svg.append(\"text\")\n              .text($$.config.title_text)\n              .attr(\"class\", $$.CLASS.title);\n    };\n    c3_chart_internal_fn.redrawTitle = function () {\n        var $$ = this;\n        $$.title\n              .attr(\"x\", $$.xForTitle.bind($$))\n              .attr(\"y\", $$.yForTitle.bind($$));\n    };\n    c3_chart_internal_fn.xForTitle = function () {\n        var $$ = this, config = $$.config, position = config.title_position || 'left', x;\n        if (position.indexOf('right') >= 0) {\n            x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n        } else if (position.indexOf('center') >= 0) {\n            x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n        } else { // left\n            x = config.title_padding.left;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.yForTitle = function () {\n        var $$ = this;\n        return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n    };\n    c3_chart_internal_fn.getTitlePadding = function() {\n        var $$ = this;\n        return $$.yForTitle() + $$.config.title_padding.bottom;\n    };\n\n    function Axis(owner) {\n        API.call(this, owner);\n    }\n\n    inherit(API, Axis);\n\n    Axis.prototype.init = function init() {\n\n        var $$ = this.owner, config = $$.config, main = $$.main;\n        $$.axes.x = main.append(\"g\")\n            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisX)\n            .attr(\"clip-path\", $$.clipPathForXAxis)\n            .attr(\"transform\", $$.getTranslate('x'))\n            .style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n        $$.axes.x.append(\"text\")\n            .attr(\"class\", CLASS.axisXLabel)\n            .attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\")\n            .style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n        $$.axes.y = main.append(\"g\")\n            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisY)\n            .attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis)\n            .attr(\"transform\", $$.getTranslate('y'))\n            .style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n        $$.axes.y.append(\"text\")\n            .attr(\"class\", CLASS.axisYLabel)\n            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n            .style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n\n        $$.axes.y2 = main.append(\"g\")\n            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2)\n            // clip-path?\n            .attr(\"transform\", $$.getTranslate('y2'))\n            .style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n        $$.axes.y2.append(\"text\")\n            .attr(\"class\", CLASS.axisY2Label)\n            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n            .style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n    };\n    Axis.prototype.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner, config = $$.config,\n            axisParams = {\n                isCategory: $$.isCategorized(),\n                withOuterTick: withOuterTick,\n                tickMultiline: config.axis_x_tick_multiline,\n                tickWidth: config.axis_x_tick_width,\n                tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n                withoutTransition: withoutTransition,\n            },\n            axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient);\n\n        if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n            tickValues = tickValues.map(function (v) { return $$.parseDate(v); });\n        }\n\n        // Set tick\n        axis.tickFormat(tickFormat).tickValues(tickValues);\n        if ($$.isCategorized()) {\n            axis.tickCentered(config.axis_x_tick_centered);\n            if (isEmpty(config.axis_x_tick_culling)) {\n                config.axis_x_tick_culling = false;\n            }\n        }\n\n        return axis;\n    };\n    Axis.prototype.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n        var $$ = this.owner, config = $$.config, tickValues;\n        if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n            tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n        }\n        if (axis) {\n            axis.tickValues(tickValues);\n        } else {\n            $$.xAxis.tickValues(tickValues);\n            $$.subXAxis.tickValues(tickValues);\n        }\n        return tickValues;\n    };\n    Axis.prototype.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner, config = $$.config,\n            axisParams = {\n                withOuterTick: withOuterTick,\n                withoutTransition: withoutTransition,\n                tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n            },\n            axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient).tickFormat(tickFormat);\n        if ($$.isTimeSeriesY()) {\n            axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);\n        } else {\n            axis.tickValues(tickValues);\n        }\n        return axis;\n    };\n    Axis.prototype.getId = function getId(id) {\n        var config = this.owner.config;\n        return id in config.data_axes ? config.data_axes[id] : 'y';\n    };\n    Axis.prototype.getXAxisTickFormat = function getXAxisTickFormat() {\n        var $$ = this.owner, config = $$.config,\n            format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) { return v < 0 ? v.toFixed(0) : v; };\n        if (config.axis_x_tick_format) {\n            if (isFunction(config.axis_x_tick_format)) {\n                format = config.axis_x_tick_format;\n            } else if ($$.isTimeSeries()) {\n                format = function (date) {\n                    return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n                };\n            }\n        }\n        return isFunction(format) ? function (v) { return format.call($$, v); } : format;\n    };\n    Axis.prototype.getTickValues = function getTickValues(tickValues, axis) {\n        return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n    };\n    Axis.prototype.getXAxisTickValues = function getXAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n    };\n    Axis.prototype.getYAxisTickValues = function getYAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n    };\n    Axis.prototype.getY2AxisTickValues = function getY2AxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n    };\n    Axis.prototype.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n        var $$ = this.owner, config = $$.config, option;\n        if (axisId === 'y') {\n            option = config.axis_y_label;\n        } else if (axisId === 'y2') {\n            option = config.axis_y2_label;\n        } else if (axisId === 'x') {\n            option = config.axis_x_label;\n        }\n        return option;\n    };\n    Axis.prototype.getLabelText = function getLabelText(axisId) {\n        var option = this.getLabelOptionByAxisId(axisId);\n        return isString(option) ? option : option ? option.text : null;\n    };\n    Axis.prototype.setLabelText = function setLabelText(axisId, text) {\n        var $$ = this.owner, config = $$.config,\n            option = this.getLabelOptionByAxisId(axisId);\n        if (isString(option)) {\n            if (axisId === 'y') {\n                config.axis_y_label = text;\n            } else if (axisId === 'y2') {\n                config.axis_y2_label = text;\n            } else if (axisId === 'x') {\n                config.axis_x_label = text;\n            }\n        } else if (option) {\n            option.text = text;\n        }\n    };\n    Axis.prototype.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n        var option = this.getLabelOptionByAxisId(axisId),\n            position = (option && typeof option === 'object' && option.position) ? option.position : defaultPosition;\n        return {\n            isInner: position.indexOf('inner') >= 0,\n            isOuter: position.indexOf('outer') >= 0,\n            isLeft: position.indexOf('left') >= 0,\n            isCenter: position.indexOf('center') >= 0,\n            isRight: position.indexOf('right') >= 0,\n            isTop: position.indexOf('top') >= 0,\n            isMiddle: position.indexOf('middle') >= 0,\n            isBottom: position.indexOf('bottom') >= 0\n        };\n    };\n    Axis.prototype.getXAxisLabelPosition = function getXAxisLabelPosition() {\n        return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n    };\n    Axis.prototype.getYAxisLabelPosition = function getYAxisLabelPosition() {\n        return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    Axis.prototype.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n        return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    Axis.prototype.getLabelPositionById = function getLabelPositionById(id) {\n        return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n    };\n    Axis.prototype.textForXAxisLabel = function textForXAxisLabel() {\n        return this.getLabelText('x');\n    };\n    Axis.prototype.textForYAxisLabel = function textForYAxisLabel() {\n        return this.getLabelText('y');\n    };\n    Axis.prototype.textForY2AxisLabel = function textForY2AxisLabel() {\n        return this.getLabelText('y2');\n    };\n    Axis.prototype.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n        var $$ = this.owner;\n        if (forHorizontal) {\n            return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n        } else {\n            return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n        }\n    };\n    Axis.prototype.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n        } else {\n            return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n        }\n    };\n    Axis.prototype.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n        } else {\n            return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n        }\n    };\n    Axis.prototype.xForXAxisLabel = function xForXAxisLabel() {\n        return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    Axis.prototype.xForYAxisLabel = function xForYAxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    Axis.prototype.xForY2AxisLabel = function xForY2AxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    Axis.prototype.dxForXAxisLabel = function dxForXAxisLabel() {\n        return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    Axis.prototype.dxForYAxisLabel = function dxForYAxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    Axis.prototype.dxForY2AxisLabel = function dxForY2AxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    Axis.prototype.dyForXAxisLabel = function dyForXAxisLabel() {\n        var $$ = this.owner, config = $$.config,\n            position = this.getXAxisLabelPosition();\n        if (config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : -25 - this.getMaxTickWidth('x');\n        } else {\n            return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n        }\n    };\n    Axis.prototype.dyForYAxisLabel = function dyForYAxisLabel() {\n        var $$ = this.owner,\n            position = this.getYAxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"-0.5em\" : \"3em\";\n        } else {\n            return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : (this.getMaxTickWidth('y') + 10));\n        }\n    };\n    Axis.prototype.dyForY2AxisLabel = function dyForY2AxisLabel() {\n        var $$ = this.owner,\n            position = this.getY2AxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : \"-2.2em\";\n        } else {\n            return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : (this.getMaxTickWidth('y2') + 15));\n        }\n    };\n    Axis.prototype.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    Axis.prototype.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    Axis.prototype.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    Axis.prototype.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n        var $$ = this.owner, config = $$.config,\n            maxWidth = 0, targetsToShow, scale, axis, dummy, svg;\n        if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n            return $$.currentMaxTickWidths[id];\n        }\n        if ($$.svg) {\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            if (id === 'y') {\n                scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n                axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n            } else if (id === 'y2') {\n                scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n                axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n            } else {\n                scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n                axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n                this.updateXAxisTickValues(targetsToShow, axis);\n            }\n            dummy = $$.d3.select('body').append('div').classed('c3', true);\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n            svg.append('g').call(axis).each(function () {\n                $$.d3.select(this).selectAll('text').each(function () {\n                    var box = this.getBoundingClientRect();\n                    if (maxWidth < box.width) { maxWidth = box.width; }\n                });\n                dummy.remove();\n            });\n        }\n        $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n        return $$.currentMaxTickWidths[id];\n    };\n\n    Axis.prototype.updateLabels = function updateLabels(withTransition) {\n        var $$ = this.owner;\n        var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n            axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n            axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n        (withTransition ? axisXLabel.transition() : axisXLabel)\n            .attr(\"x\", this.xForXAxisLabel.bind(this))\n            .attr(\"dx\", this.dxForXAxisLabel.bind(this))\n            .attr(\"dy\", this.dyForXAxisLabel.bind(this))\n            .text(this.textForXAxisLabel.bind(this));\n        (withTransition ? axisYLabel.transition() : axisYLabel)\n            .attr(\"x\", this.xForYAxisLabel.bind(this))\n            .attr(\"dx\", this.dxForYAxisLabel.bind(this))\n            .attr(\"dy\", this.dyForYAxisLabel.bind(this))\n            .text(this.textForYAxisLabel.bind(this));\n        (withTransition ? axisY2Label.transition() : axisY2Label)\n            .attr(\"x\", this.xForY2AxisLabel.bind(this))\n            .attr(\"dx\", this.dxForY2AxisLabel.bind(this))\n            .attr(\"dy\", this.dyForY2AxisLabel.bind(this))\n            .text(this.textForY2AxisLabel.bind(this));\n    };\n    Axis.prototype.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n        var p = typeof padding === 'number' ? padding : padding[key];\n        if (!isValue(p)) {\n            return defaultValue;\n        }\n        if (padding.unit === 'ratio') {\n            return padding[key] * domainLength;\n        }\n        // assume padding is pixels if unit is not specified\n        return this.convertPixelsToAxisPadding(p, domainLength);\n    };\n    Axis.prototype.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n        var $$ = this.owner,\n            length = $$.config.axis_rotated ? $$.width : $$.height;\n        return domainLength * (pixels / length);\n    };\n    Axis.prototype.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n        var tickValues = values, targetCount, start, end, count, interval, i, tickValue;\n        if (tickCount) {\n            targetCount = isFunction(tickCount) ? tickCount() : tickCount;\n            // compute ticks according to tickCount\n            if (targetCount === 1) {\n                tickValues = [values[0]];\n            } else if (targetCount === 2) {\n                tickValues = [values[0], values[values.length - 1]];\n            } else if (targetCount > 2) {\n                count = targetCount - 2;\n                start = values[0];\n                end = values[values.length - 1];\n                interval = (end - start) / (count + 1);\n                // re-construct unique values\n                tickValues = [start];\n                for (i = 0; i < count; i++) {\n                    tickValue = +start + interval * (i + 1);\n                    tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n                }\n                tickValues.push(end);\n            }\n        }\n        if (!forTimeSeries) { tickValues = tickValues.sort(function (a, b) { return a - b; }); }\n        return tickValues;\n    };\n    Axis.prototype.generateTransitions = function generateTransitions(duration) {\n        var $$ = this.owner, axes = $$.axes;\n        return {\n            axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n            axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n            axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n            axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n        };\n    };\n    Axis.prototype.redraw = function redraw(transitions, isHidden) {\n        var $$ = this.owner;\n        $$.axes.x.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1);\n        transitions.axisX.call($$.xAxis);\n        transitions.axisY.call($$.yAxis);\n        transitions.axisY2.call($$.y2Axis);\n        transitions.axisSubX.call($$.subXAxis);\n    };\n\n    c3_chart_internal_fn.getClipPath = function (id) {\n        var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n        return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n    };\n    c3_chart_internal_fn.appendClip = function (parent, id) {\n        return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n    };\n    c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n        // axis line width + padding for left\n        var left = Math.max(30, this.margin.left);\n        return forHorizontal ? -(1 + left) : -(left - 1);\n    };\n    c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n        return forHorizontal ? -20 : -this.margin.top;\n    };\n    c3_chart_internal_fn.getXAxisClipX = function () {\n        var $$ = this;\n        return $$.getAxisClipX(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipX = function () {\n        var $$ = this;\n        return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n        var $$ = this,\n            left = Math.max(30, $$.margin.left),\n            right = Math.max(30, $$.margin.right);\n        // width + axis line width + padding for left/right\n        return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n    };\n    c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n        // less than 20 is not enough to show the axis label 'outer' without legend\n        return (forHorizontal ? this.margin.bottom : (this.margin.top + this.height)) + 20;\n    };\n    c3_chart_internal_fn.getXAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n    };\n    c3_chart_internal_fn.getYAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight($$.config.axis_rotated);\n    };\n\n    c3_chart_internal_fn.initPie = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n        $$.pie = d3.layout.pie().value(function (d) {\n            return d.values.reduce(function (a, b) { return a + b.value; }, 0);\n        });\n        if (!config.data_order) {\n            $$.pie.sort(null);\n        }\n    };\n\n    c3_chart_internal_fn.updateRadius = function () {\n        var $$ = this, config = $$.config,\n            w = config.gauge_width || config.donut_width;\n        $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2;\n        $$.radius = $$.radiusExpanded * 0.95;\n        $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n        $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n    };\n\n    c3_chart_internal_fn.updateArc = function () {\n        var $$ = this;\n        $$.svgArc = $$.getSvgArc();\n        $$.svgArcExpanded = $$.getSvgArcExpanded();\n        $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n    };\n\n    c3_chart_internal_fn.updateAngle = function (d) {\n        var $$ = this, config = $$.config,\n            found = false, index = 0,\n            gMin, gMax, gTic, gValue;\n\n        if (!config) {\n            return null;\n        }\n\n        $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n            if (! found && t.data.id === d.data.id) {\n                found = true;\n                d = t;\n                d.index = index;\n            }\n            index++;\n        });\n        if (isNaN(d.startAngle)) {\n            d.startAngle = 0;\n        }\n        if (isNaN(d.endAngle)) {\n            d.endAngle = d.startAngle;\n        }\n        if ($$.isGaugeType(d.data)) {\n            gMin = config.gauge_min;\n            gMax = config.gauge_max;\n            gTic = (Math.PI * (config.gauge_fullCircle ? 2 : 1)) / (gMax - gMin);\n            gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : (gMax - gMin);\n            d.startAngle = config.gauge_startingAngle;\n            d.endAngle = d.startAngle + gTic * gValue;\n        }\n        return found ? d : null;\n    };\n\n    c3_chart_internal_fn.getSvgArc = function () {\n        var $$ = this,\n            arc = $$.d3.svg.arc().outerRadius($$.radius).innerRadius($$.innerRadius),\n            newArc = function (d, withoutUpdate) {\n                var updated;\n                if (withoutUpdate) { return arc(d); } // for interpolate\n                updated = $$.updateAngle(d);\n                return updated ? arc(updated) : \"M 0 0\";\n            };\n        // TODO: extends all function\n        newArc.centroid = arc.centroid;\n        return newArc;\n    };\n\n    c3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n        var $$ = this,\n            arc = $$.d3.svg.arc().outerRadius($$.radiusExpanded * (rate ? rate : 1)).innerRadius($$.innerRadius);\n        return function (d) {\n            var updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n    };\n\n    c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n        return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n    };\n\n\n    c3_chart_internal_fn.transformForArcLabel = function (d) {\n        var $$ = this, config = $$.config,\n            updated = $$.updateAngle(d), c, x, y, h, ratio, translate = \"\";\n        if (updated && !$$.hasType('gauge')) {\n            c = this.svgArc.centroid(updated);\n            x = isNaN(c[0]) ? 0 : c[0];\n            y = isNaN(c[1]) ? 0 : c[1];\n            h = Math.sqrt(x * x + y * y);\n            if ($$.hasType('donut') && config.donut_label_ratio) {\n                ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n            } else if ($$.hasType('pie') && config.pie_label_ratio) {\n                ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n            } else {\n                ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n            }\n            translate = \"translate(\" + (x * ratio) +  ',' + (y * ratio) +  \")\";\n        }\n        return translate;\n    };\n\n    c3_chart_internal_fn.getArcRatio = function (d) {\n        var $$ = this,\n            config = $$.config,\n            whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n        return d ? (d.endAngle - d.startAngle) / whole : null;\n    };\n\n    c3_chart_internal_fn.convertToArcData = function (d) {\n        return this.addName({\n            id: d.data.id,\n            value: d.value,\n            ratio: this.getArcRatio(d),\n            index: d.index\n        });\n    };\n\n    c3_chart_internal_fn.textForArcLabel = function (d) {\n        var $$ = this,\n            updated, value, ratio, id, format;\n        if (! $$.shouldShowArcLabel()) { return \"\"; }\n        updated = $$.updateAngle(d);\n        value = updated ? updated.value : null;\n        ratio = $$.getArcRatio(updated);\n        id = d.data.id;\n        if (! $$.hasType('gauge') && ! $$.meetsArcLabelThreshold(ratio)) { return \"\"; }\n        format = $$.getArcLabelFormat();\n        return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n    };\n\n    c3_chart_internal_fn.expandArc = function (targetIds) {\n        var $$ = this, interval;\n\n        // MEMO: avoid to cancel transition\n        if ($$.transiting) {\n            interval = window.setInterval(function () {\n                if (!$$.transiting) {\n                    window.clearInterval(interval);\n                    if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n                        $$.expandArc(targetIds);\n                    }\n                }\n            }, 10);\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n            if (! $$.shouldExpand(d.data.id)) { return; }\n            $$.d3.select(this).selectAll('path')\n                .transition().duration($$.expandDuration(d.data.id))\n                .attr(\"d\", $$.svgArcExpanded)\n                .transition().duration($$.expandDuration(d.data.id) * 2)\n                .attr(\"d\", $$.svgArcExpandedSub)\n                .each(function (d) {\n                    if ($$.isDonutType(d.data)) {\n                        // callback here\n                    }\n                });\n        });\n    };\n\n    c3_chart_internal_fn.unexpandArc = function (targetIds) {\n        var $$ = this;\n\n        if ($$.transiting) { return; }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path')\n            .transition().duration(function(d) {\n                return $$.expandDuration(d.data.id);\n            })\n            .attr(\"d\", $$.svgArc);\n        $$.svg.selectAll('.' + CLASS.arc)\n            .style(\"opacity\", 1);\n    };\n\n    c3_chart_internal_fn.expandDuration = function (id) {\n        var $$ = this, config = $$.config;\n\n        if ($$.isDonutType(id)) {\n            return config.donut_expand_duration;\n        } else if ($$.isGaugeType(id)) {\n            return config.gauge_expand_duration;\n        } else if ($$.isPieType(id)) {\n            return config.pie_expand_duration;\n        } else {\n            return 50;\n        }\n\n    };\n\n    c3_chart_internal_fn.shouldExpand = function (id) {\n        var $$ = this, config = $$.config;\n        return ($$.isDonutType(id) && config.donut_expand) ||\n               ($$.isGaugeType(id) && config.gauge_expand) ||\n               ($$.isPieType(id) && config.pie_expand);\n    };\n\n    c3_chart_internal_fn.shouldShowArcLabel = function () {\n        var $$ = this, config = $$.config, shouldShow = true;\n        if ($$.hasType('donut')) {\n            shouldShow = config.donut_label_show;\n        } else if ($$.hasType('pie')) {\n            shouldShow = config.pie_label_show;\n        }\n        // when gauge, always true\n        return shouldShow;\n    };\n\n    c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n        var $$ = this, config = $$.config,\n            threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n        return ratio >= threshold;\n    };\n\n    c3_chart_internal_fn.getArcLabelFormat = function () {\n        var $$ = this, config = $$.config,\n            format = config.pie_label_format;\n        if ($$.hasType('gauge')) {\n            format = config.gauge_label_format;\n        } else if ($$.hasType('donut')) {\n            format = config.donut_label_format;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.getArcTitle = function () {\n        var $$ = this;\n        return $$.hasType('donut') ? $$.config.donut_title : \"\";\n    };\n\n    c3_chart_internal_fn.updateTargetsForArc = function (targets) {\n        var $$ = this, main = $$.main,\n            mainPieUpdate, mainPieEnter,\n            classChartArc = $$.classChartArc.bind($$),\n            classArcs = $$.classArcs.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc)\n            .data($$.pie(targets))\n            .attr(\"class\", function (d) { return classChartArc(d) + classFocus(d.data); });\n        mainPieEnter = mainPieUpdate.enter().append(\"g\")\n            .attr(\"class\", classChartArc);\n        mainPieEnter.append('g')\n            .attr('class', classArcs);\n        mainPieEnter.append(\"text\")\n            .attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\")\n            .style(\"opacity\", 0)\n            .style(\"text-anchor\", \"middle\")\n            .style(\"pointer-events\", \"none\");\n        // MEMO: can not keep same color..., but not bad to update color in redraw\n        //mainPieUpdate.exit().remove();\n    };\n\n    c3_chart_internal_fn.initArc = function () {\n        var $$ = this;\n        $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartArcs)\n            .attr(\"transform\", $$.getTranslate('arc'));\n        $$.arcs.append('text')\n            .attr('class', CLASS.chartArcsTitle)\n            .style(\"text-anchor\", \"middle\")\n            .text($$.getArcTitle());\n    };\n\n    c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n        var $$ = this, d3 = $$.d3, config = $$.config, main = $$.main,\n            mainArc;\n        mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc)\n            .data($$.arcData.bind($$));\n        mainArc.enter().append('path')\n            .attr(\"class\", $$.classArc.bind($$))\n            .style(\"fill\", function (d) { return $$.color(d.data); })\n            .style(\"cursor\", function (d) { return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null; })\n            .style(\"opacity\", 0)\n            .each(function (d) {\n                if ($$.isGaugeType(d.data)) {\n                    d.startAngle = d.endAngle = config.gauge_startingAngle;\n                }\n                this._current = d;\n            });\n        mainArc\n            .attr(\"transform\", function (d) { return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\"; })\n            .style(\"opacity\", function (d) { return d === this._current ? 0 : 1; })\n            .on('mouseover', config.interaction_enabled ? function (d) {\n                var updated, arcData;\n                if ($$.transiting) { // skip while transiting\n                    return;\n                }\n                updated = $$.updateAngle(d);\n                if (updated) {\n                    arcData = $$.convertToArcData(updated);\n                    // transitions\n                    $$.expandArc(updated.data.id);\n                    $$.api.focus(updated.data.id);\n                    $$.toggleFocusLegend(updated.data.id, true);\n                    $$.config.data_onmouseover(arcData, this);\n                }\n            } : null)\n            .on('mousemove', config.interaction_enabled ? function (d) {\n                var updated = $$.updateAngle(d), arcData, selectedData;\n                if (updated) {\n                    arcData = $$.convertToArcData(updated),\n                    selectedData = [arcData];\n                    $$.showTooltip(selectedData, this);\n                }\n            } : null)\n            .on('mouseout', config.interaction_enabled ? function (d) {\n                var updated, arcData;\n                if ($$.transiting) { // skip while transiting\n                    return;\n                }\n                updated = $$.updateAngle(d);\n                if (updated) {\n                    arcData = $$.convertToArcData(updated);\n                    // transitions\n                    $$.unexpandArc(updated.data.id);\n                    $$.api.revert();\n                    $$.revertLegend();\n                    $$.hideTooltip();\n                    $$.config.data_onmouseout(arcData, this);\n                }\n            } : null)\n            .on('click', config.interaction_enabled ? function (d, i) {\n                var updated = $$.updateAngle(d), arcData;\n                if (updated) {\n                    arcData = $$.convertToArcData(updated);\n                    if ($$.toggleShape) {\n                        $$.toggleShape(this, arcData, i);\n                    }\n                    $$.config.data_onclick.call($$.api, arcData, this);\n                }\n            } : null)\n            .each(function () { $$.transiting = true; })\n            .transition().duration(duration)\n            .attrTween(\"d\", function (d) {\n                var updated = $$.updateAngle(d), interpolate;\n                if (! updated) {\n                    return function () { return \"M 0 0\"; };\n                }\n                //                if (this._current === d) {\n                //                    this._current = {\n                //                        startAngle: Math.PI*2,\n                //                        endAngle: Math.PI*2,\n                //                    };\n                //                }\n                if (isNaN(this._current.startAngle)) {\n                    this._current.startAngle = 0;\n                }\n                if (isNaN(this._current.endAngle)) {\n                    this._current.endAngle = this._current.startAngle;\n                }\n                interpolate = d3.interpolate(this._current, updated);\n                this._current = interpolate(0);\n                return function (t) {\n                    var interpolated = interpolate(t);\n                    interpolated.data = d.data; // data.id will be updated by interporator\n                    return $$.getArc(interpolated, true);\n                };\n            })\n            .attr(\"transform\", withTransform ? \"scale(1)\" : \"\")\n            .style(\"fill\", function (d) {\n                return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n            }) // Where gauge reading color would receive customization.\n            .style(\"opacity\", 1)\n            .call($$.endall, function () {\n                $$.transiting = false;\n            });\n        mainArc.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n        main.selectAll('.' + CLASS.chartArc).select('text')\n            .style(\"opacity\", 0)\n            .attr('class', function (d) { return $$.isGaugeType(d.data) ? CLASS.gaugeValue : ''; })\n            .text($$.textForArcLabel.bind($$))\n            .attr(\"transform\", $$.transformForArcLabel.bind($$))\n            .style('font-size', function (d) { return $$.isGaugeType(d.data) ? Math.round($$.radius / 5) + 'px' : ''; })\n          .transition().duration(duration)\n            .style(\"opacity\", function (d) { return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0; });\n        main.select('.' + CLASS.chartArcsTitle)\n            .style(\"opacity\", $$.hasType('donut') || $$.hasType('gauge') ? 1 : 0);\n\n        if ($$.hasType('gauge')) {\n            $$.arcs.select('.' + CLASS.chartArcsBackground)\n                .attr(\"d\", function () {\n                    var d = {\n                        data: [{value: config.gauge_max}],\n                        startAngle: config.gauge_startingAngle,\n                        endAngle: -1 * config.gauge_startingAngle\n                    };\n                    return $$.getArc(d, true, true);\n                });\n            $$.arcs.select('.' + CLASS.chartArcsGaugeUnit)\n                .attr(\"dy\", \".75em\")\n                .text(config.gauge_label_show ? config.gauge_units : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMin)\n                .attr(\"dx\", -1 * ($$.innerRadius + (($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2))) + \"px\")\n                .attr(\"dy\", \"1.2em\")\n                .text(config.gauge_label_show ? config.gauge_min : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMax)\n                .attr(\"dx\", $$.innerRadius + (($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\")\n                .attr(\"dy\", \"1.2em\")\n                .text(config.gauge_label_show ? config.gauge_max : '');\n        }\n    };\n    c3_chart_internal_fn.initGauge = function () {\n        var arcs = this.arcs;\n        if (this.hasType('gauge')) {\n            arcs.append('path')\n                .attr(\"class\", CLASS.chartArcsBackground);\n            arcs.append(\"text\")\n                .attr(\"class\", CLASS.chartArcsGaugeUnit)\n                .style(\"text-anchor\", \"middle\")\n                .style(\"pointer-events\", \"none\");\n            arcs.append(\"text\")\n                .attr(\"class\", CLASS.chartArcsGaugeMin)\n                .style(\"text-anchor\", \"middle\")\n                .style(\"pointer-events\", \"none\");\n            arcs.append(\"text\")\n                .attr(\"class\", CLASS.chartArcsGaugeMax)\n                .style(\"text-anchor\", \"middle\")\n                .style(\"pointer-events\", \"none\");\n        }\n    };\n    c3_chart_internal_fn.getGaugeLabelHeight = function () {\n        return this.config.gauge_label_show ? 20 : 0;\n    };\n\n    c3_chart_internal_fn.initRegion = function () {\n        var $$ = this;\n        $$.region = $$.main.append('g')\n            .attr(\"clip-path\", $$.clipPath)\n            .attr(\"class\", CLASS.regions);\n    };\n    c3_chart_internal_fn.updateRegion = function (duration) {\n        var $$ = this, config = $$.config;\n\n        // hide if arc type\n        $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region)\n            .data(config.regions);\n        $$.mainRegion.enter().append('g')\n          .append('rect')\n            .style(\"fill-opacity\", 0);\n        $$.mainRegion\n            .attr('class', $$.classRegion.bind($$));\n        $$.mainRegion.exit().transition().duration(duration)\n            .style(\"opacity\", 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawRegion = function (withTransition) {\n        var $$ = this,\n            regions = $$.mainRegion.selectAll('rect').each(function () {\n                // data is binded to g and it's not transferred to rect (child node) automatically,\n                // then data of each rect has to be updated manually.\n                // TODO: there should be more efficient way to solve this?\n                var parentData = $$.d3.select(this.parentNode).datum();\n                $$.d3.select(this).datum(parentData);\n            }),\n            x = $$.regionX.bind($$),\n            y = $$.regionY.bind($$),\n            w = $$.regionWidth.bind($$),\n            h = $$.regionHeight.bind($$);\n        return [\n            (withTransition ? regions.transition() : regions)\n                .attr(\"x\", x)\n                .attr(\"y\", y)\n                .attr(\"width\", w)\n                .attr(\"height\", h)\n                .style(\"fill-opacity\", function (d) { return isValue(d.opacity) ? d.opacity : 0.1; })\n        ];\n    };\n    c3_chart_internal_fn.regionX = function (d) {\n        var $$ = this, config = $$.config,\n            xPos, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            xPos = config.axis_rotated ? ('start' in d ? yScale(d.start) : 0) : 0;\n        } else {\n            xPos = config.axis_rotated ? 0 : ('start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0);\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.regionY = function (d) {\n        var $$ = this, config = $$.config,\n            yPos, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            yPos = config.axis_rotated ? 0 : ('end' in d ? yScale(d.end) : 0);\n        } else {\n            yPos = config.axis_rotated ? ('start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0) : 0;\n        }\n        return yPos;\n    };\n    c3_chart_internal_fn.regionWidth = function (d) {\n        var $$ = this, config = $$.config,\n            start = $$.regionX(d), end, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? ('end' in d ? yScale(d.end) : $$.width) : $$.width;\n        } else {\n            end = config.axis_rotated ? $$.width : ('end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width);\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.regionHeight = function (d) {\n        var $$ = this, config = $$.config,\n            start = this.regionY(d), end, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? $$.height : ('start' in d ? yScale(d.start) : $$.height);\n        } else {\n            end = config.axis_rotated ? ('end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height) : $$.height;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.isRegionOnX = function (d) {\n        return !d.axis || d.axis === 'x';\n    };\n\n    c3_chart_internal_fn.drag = function (mouse) {\n        var $$ = this, config = $$.config, main = $$.main, d3 = $$.d3;\n        var sx, sy, mx, my, minX, maxX, minY, maxY;\n\n        if ($$.hasArcType()) { return; }\n        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n        if (config.zoom_enabled && ! $$.zoom.altDomain) { return; } // skip if zoomable because of conflict drag dehavior\n        if (!config.data_selection_multiple) { return; } // skip when single selection because drag is used for multiple selection\n\n        sx = $$.dragStart[0];\n        sy = $$.dragStart[1];\n        mx = mouse[0];\n        my = mouse[1];\n        minX = Math.min(sx, mx);\n        maxX = Math.max(sx, mx);\n        minY = (config.data_selection_grouped) ? $$.margin.top : Math.min(sy, my);\n        maxY = (config.data_selection_grouped) ? $$.height : Math.max(sy, my);\n\n        main.select('.' + CLASS.dragarea)\n            .attr('x', minX)\n            .attr('y', minY)\n            .attr('width', maxX - minX)\n            .attr('height', maxY - minY);\n        // TODO: binary search when multiple xs\n        main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape)\n            .filter(function (d) { return config.data_selection_isselectable(d); })\n            .each(function (d, i) {\n                var shape = d3.select(this),\n                    isSelected = shape.classed(CLASS.SELECTED),\n                    isIncluded = shape.classed(CLASS.INCLUDED),\n                    _x, _y, _w, _h, toggle, isWithin = false, box;\n                if (shape.classed(CLASS.circle)) {\n                    _x = shape.attr(\"cx\") * 1;\n                    _y = shape.attr(\"cy\") * 1;\n                    toggle = $$.togglePoint;\n                    isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n                }\n                else if (shape.classed(CLASS.bar)) {\n                    box = getPathBox(this);\n                    _x = box.x;\n                    _y = box.y;\n                    _w = box.width;\n                    _h = box.height;\n                    toggle = $$.togglePath;\n                    isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n                } else {\n                    // line/area selection not supported yet\n                    return;\n                }\n                if (isWithin ^ isIncluded) {\n                    shape.classed(CLASS.INCLUDED, !isIncluded);\n                    // TODO: included/unincluded callback here\n                    shape.classed(CLASS.SELECTED, !isSelected);\n                    toggle.call($$, !isSelected, shape, d, i);\n                }\n            });\n    };\n\n    c3_chart_internal_fn.dragstart = function (mouse) {\n        var $$ = this, config = $$.config;\n        if ($$.hasArcType()) { return; }\n        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n        $$.dragStart = mouse;\n        $$.main.select('.' + CLASS.chart).append('rect')\n            .attr('class', CLASS.dragarea)\n            .style('opacity', 0.1);\n        $$.dragging = true;\n    };\n\n    c3_chart_internal_fn.dragend = function () {\n        var $$ = this, config = $$.config;\n        if ($$.hasArcType()) { return; }\n        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n        $$.main.select('.' + CLASS.dragarea)\n            .transition().duration(100)\n            .style('opacity', 0)\n            .remove();\n        $$.main.selectAll('.' + CLASS.shape)\n            .classed(CLASS.INCLUDED, false);\n        $$.dragging = false;\n    };\n\n    c3_chart_internal_fn.selectPoint = function (target, d, i) {\n        var $$ = this, config = $$.config,\n            cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n            cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n            r = $$.pointSelectR.bind($$);\n        config.data_onselected.call($$.api, d, target.node());\n        // add selected-circle on low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i)\n            .data([d])\n            .enter().append('circle')\n            .attr(\"class\", function () { return $$.generateClass(CLASS.selectedCircle, i); })\n            .attr(\"cx\", cx)\n            .attr(\"cy\", cy)\n            .attr(\"stroke\", function () { return $$.color(d); })\n            .attr(\"r\", function (d) { return $$.pointSelectR(d) * 1.4; })\n            .transition().duration(100)\n            .attr(\"r\", r);\n    };\n    c3_chart_internal_fn.unselectPoint = function (target, d, i) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$.api, d, target.node());\n        // remove selected-circle from low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i)\n            .transition().duration(100).attr('r', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n        selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n    };\n    c3_chart_internal_fn.selectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100)\n                .style(\"fill\", function () { return $$.d3.rgb($$.color(d)).brighter(0.75); });\n        }\n    };\n    c3_chart_internal_fn.unselectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100)\n                .style(\"fill\", function () { return $$.color(d); });\n        }\n    };\n    c3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n        selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n    };\n    c3_chart_internal_fn.getToggle = function (that, d) {\n        var $$ = this, toggle;\n        if (that.nodeName === 'circle') {\n            if ($$.isStepType(d)) {\n                // circle is hidden in step chart, so treat as within the click area\n                toggle = function () {}; // TODO: how to select step chart?\n            } else {\n                toggle = $$.togglePoint;\n            }\n        }\n        else if (that.nodeName === 'path') {\n            toggle = $$.togglePath;\n        }\n        return toggle;\n    };\n    c3_chart_internal_fn.toggleShape = function (that, d, i) {\n        var $$ = this, d3 = $$.d3, config = $$.config,\n            shape = d3.select(that), isSelected = shape.classed(CLASS.SELECTED),\n            toggle = $$.getToggle(that, d).bind($$);\n\n        if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n            if (!config.data_selection_multiple) {\n                $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n                    var shape = d3.select(this);\n                    if (shape.classed(CLASS.SELECTED)) { toggle(false, shape.classed(CLASS.SELECTED, false), d, i); }\n                });\n            }\n            shape.classed(CLASS.SELECTED, !isSelected);\n            toggle(!isSelected, shape, d, i);\n        }\n    };\n\n    c3_chart_internal_fn.initBrush = function () {\n        var $$ = this, d3 = $$.d3;\n        $$.brush = d3.svg.brush().on(\"brush\", function () { $$.redrawForBrush(); });\n        $$.brush.update = function () {\n            if ($$.context) { $$.context.select('.' + CLASS.brush).call(this); }\n            return this;\n        };\n        $$.brush.scale = function (scale) {\n            return $$.config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n    };\n    c3_chart_internal_fn.initSubchart = function () {\n        var $$ = this, config = $$.config,\n            context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n            visibility = config.subchart_show ? 'visible' : 'hidden';\n\n        context.style('visibility', visibility);\n\n        // Define g for chart area\n        context.append('g')\n            .attr(\"clip-path\", $$.clipPathForSubchart)\n            .attr('class', CLASS.chart);\n\n        // Define g for bar chart area\n        context.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartBars);\n\n        // Define g for line chart area\n        context.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartLines);\n\n        // Add extent rect for Brush\n        context.append(\"g\")\n            .attr(\"clip-path\", $$.clipPath)\n            .attr(\"class\", CLASS.brush)\n            .call($$.brush);\n\n        // ATTENTION: This must be called AFTER chart added\n        // Add Axis\n        $$.axes.subx = context.append(\"g\")\n            .attr(\"class\", CLASS.axisX)\n            .attr(\"transform\", $$.getTranslate('subx'))\n            .attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis)\n            .style(\"visibility\", config.subchart_axis_x_show ? visibility : 'hidden');\n    };\n    c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n        var $$ = this, context = $$.context, config = $$.config,\n            contextLineEnter, contextLineUpdate, contextBarEnter, contextBarUpdate,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$);\n\n        if (config.subchart_show) {\n            //-- Bar --//\n            contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar)\n                .data(targets)\n                .attr('class', classChartBar);\n            contextBarEnter = contextBarUpdate.enter().append('g')\n                .style('opacity', 0)\n                .attr('class', classChartBar);\n            // Bars for each data\n            contextBarEnter.append('g')\n                .attr(\"class\", classBars);\n\n            //-- Line --//\n            contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine)\n                .data(targets)\n                .attr('class', classChartLine);\n            contextLineEnter = contextLineUpdate.enter().append('g')\n                .style('opacity', 0)\n                .attr('class', classChartLine);\n            // Lines for each data\n            contextLineEnter.append(\"g\")\n                .attr(\"class\", classLines);\n            // Area\n            contextLineEnter.append(\"g\")\n                .attr(\"class\", classAreas);\n\n            //-- Brush --//\n            context.selectAll('.' + CLASS.brush + ' rect')\n                .attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n        }\n    };\n    c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar)\n            .data($$.barData.bind($$));\n        $$.contextBar.enter().append('path')\n            .attr(\"class\", $$.classBar.bind($$))\n            .style(\"stroke\", 'none')\n            .style(\"fill\", $$.color);\n        $$.contextBar\n            .style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextBar.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n        (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar)\n            .attr('d', drawBarOnSub)\n            .style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line)\n            .data($$.lineData.bind($$));\n        $$.contextLine.enter().append('path')\n            .attr('class', $$.classLine.bind($$))\n            .style('stroke', $$.color);\n        $$.contextLine\n            .style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextLine.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n        (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine)\n            .attr(\"d\", drawLineOnSub)\n            .style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n        var $$ = this, d3 = $$.d3;\n        $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area)\n            .data($$.lineData.bind($$));\n        $$.contextArea.enter().append('path')\n            .attr(\"class\", $$.classArea.bind($$))\n            .style(\"fill\", $$.color)\n            .style(\"opacity\", function () { $$.orgAreaOpacity = +d3.select(this).style('opacity'); return 0; });\n        $$.contextArea\n            .style(\"opacity\", 0);\n        $$.contextArea.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n        (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea)\n            .attr(\"d\", drawAreaOnSub)\n            .style(\"fill\", this.color)\n            .style(\"opacity\", this.orgAreaOpacity);\n    };\n    c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n        var $$ = this, d3 = $$.d3, config = $$.config,\n            drawAreaOnSub, drawBarOnSub, drawLineOnSub;\n\n        $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\n\n        // subchart\n        if (config.subchart_show) {\n            // reflect main chart to extent on subchart if zoomed\n            if (d3.event && d3.event.type === 'zoom') {\n                $$.brush.extent($$.x.orgDomain()).update();\n            }\n            // update subchart elements if needed\n            if (withSubchart) {\n\n                // extent rect\n                if (!$$.brush.empty()) {\n                    $$.brush.extent($$.x.orgDomain()).update();\n                }\n                // setup drawer - MEMO: this must be called after axis updated\n                drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n                drawBarOnSub = $$.generateDrawBar(barIndices, true);\n                drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n\n                $$.updateBarForSubchart(duration);\n                $$.updateLineForSubchart(duration);\n                $$.updateAreaForSubchart(duration);\n\n                $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n                $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n                $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n            }\n        }\n    };\n    c3_chart_internal_fn.redrawForBrush = function () {\n        var $$ = this, x = $$.x;\n        $$.redraw({\n            withTransition: false,\n            withY: $$.config.zoom_rescale,\n            withSubchart: false,\n            withUpdateXDomain: true,\n            withDimension: false\n        });\n        $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n    };\n    c3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n        var $$ = this, subXAxis;\n        if (transitions && transitions.axisSubX) {\n            subXAxis = transitions.axisSubX;\n        } else {\n            subXAxis = $$.context.select('.' + CLASS.axisX);\n            if (withTransition) { subXAxis = subXAxis.transition(); }\n        }\n        $$.context.attr(\"transform\", $$.getTranslate('context'));\n        subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n    };\n    c3_chart_internal_fn.getDefaultExtent = function () {\n        var $$ = this, config = $$.config,\n            extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;\n        if ($$.isTimeSeries()) {\n            extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];\n        }\n        return extent;\n    };\n\n    c3_chart_internal_fn.initZoom = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config, startEvent;\n\n        $$.zoom = d3.behavior.zoom()\n            .on(\"zoomstart\", function () {\n                startEvent = d3.event.sourceEvent;\n                $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;\n                config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\n            })\n            .on(\"zoom\", function () {\n                $$.redrawForZoom.call($$);\n            })\n            .on('zoomend', function () {\n                var event = d3.event.sourceEvent;\n                // if click, do nothing. otherwise, click interaction will be canceled.\n                if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {\n                    return;\n                }\n                $$.redrawEventRect();\n                $$.updateZoom();\n                config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n            });\n        $$.zoom.scale = function (scale) {\n            return config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n        $$.zoom.orgScaleExtent = function () {\n            var extent = config.zoom_extent ? config.zoom_extent : [1, 10];\n            return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];\n        };\n        $$.zoom.updateScaleExtent = function () {\n            var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),\n                extent = this.orgScaleExtent();\n            this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);\n            return this;\n        };\n    };\n    c3_chart_internal_fn.getZoomDomain = function () {\n        var $$ = this, config = $$.config, d3 = $$.d3,\n            min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n            max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateZoom = function () {\n        var $$ = this, z = $$.config.zoom_enabled ? $$.zoom : function () {};\n        $$.main.select('.' + CLASS.zoomRect).call(z).on(\"dblclick.zoom\", null);\n        $$.main.selectAll('.' + CLASS.eventRect).call(z).on(\"dblclick.zoom\", null);\n    };\n    c3_chart_internal_fn.redrawForZoom = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config, zoom = $$.zoom, x = $$.x;\n        if (!config.zoom_enabled) {\n            return;\n        }\n        if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n            return;\n        }\n        if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {\n            x.domain(zoom.altDomain);\n            zoom.scale(x).updateScaleExtent();\n            return;\n        }\n        if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n            x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n        }\n        $$.redraw({\n            withTransition: false,\n            withY: config.zoom_rescale,\n            withSubchart: false,\n            withEventRect: false,\n            withDimension: false\n        });\n        if (d3.event.sourceEvent.type === 'mousemove') {\n            $$.cancelClick = true;\n        }\n        config.zoom_onzoom.call($$.api, x.orgDomain());\n    };\n\n    c3_chart_internal_fn.generateColor = function () {\n        var $$ = this, config = $$.config, d3 = $$.d3,\n            colors = config.data_colors,\n            pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),\n            callback = config.data_color,\n            ids = [];\n\n        return function (d) {\n            var id = d.id || (d.data && d.data.id) || d, color;\n\n            // if callback function is provided\n            if (colors[id] instanceof Function) {\n                color = colors[id](d);\n            }\n            // if specified, choose that color\n            else if (colors[id]) {\n                color = colors[id];\n            }\n            // if not specified, choose from pattern\n            else {\n                if (ids.indexOf(id) < 0) { ids.push(id); }\n                color = pattern[ids.indexOf(id) % pattern.length];\n                colors[id] = color;\n            }\n            return callback instanceof Function ? callback(color, d) : color;\n        };\n    };\n    c3_chart_internal_fn.generateLevelColor = function () {\n        var $$ = this, config = $$.config,\n            colors = config.color_pattern,\n            threshold = config.color_threshold,\n            asValue = threshold.unit === 'value',\n            values = threshold.values && threshold.values.length ? threshold.values : [],\n            max = threshold.max || 100;\n        return notEmpty(config.color_threshold) ? function (value) {\n            var i, v, color = colors[colors.length - 1];\n            for (i = 0; i < values.length; i++) {\n                v = asValue ? value : (value * 100 / max);\n                if (v < values[i]) {\n                    color = colors[i];\n                    break;\n                }\n            }\n            return color;\n        } : null;\n    };\n\n    c3_chart_internal_fn.getYFormat = function (forArc) {\n        var $$ = this,\n            formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n            formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n        return function (v, ratio, id) {\n            var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n            return format.call($$, v, ratio);\n        };\n    };\n    c3_chart_internal_fn.yFormat = function (v) {\n        var $$ = this, config = $$.config,\n            format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.y2Format = function (v) {\n        var $$ = this, config = $$.config,\n            format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.defaultValueFormat = function (v) {\n        return isValue(v) ? +v : \"\";\n    };\n    c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n        return (ratio * 100).toFixed(1) + '%';\n    };\n    c3_chart_internal_fn.dataLabelFormat = function (targetId) {\n        var $$ = this, data_labels = $$.config.data_labels,\n            format, defaultFormat = function (v) { return isValue(v) ? +v : \"\"; };\n        // find format according to axis id\n        if (typeof data_labels.format === 'function') {\n            format = data_labels.format;\n        } else if (typeof data_labels.format === 'object') {\n            if (data_labels.format[targetId]) {\n                format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n            } else {\n                format = function () { return ''; };\n            }\n        } else {\n            format = defaultFormat;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.hasCaches = function (ids) {\n        for (var i = 0; i < ids.length; i++) {\n            if (! (ids[i] in this.cache)) { return false; }\n        }\n        return true;\n    };\n    c3_chart_internal_fn.addCache = function (id, target) {\n        this.cache[id] = this.cloneTarget(target);\n    };\n    c3_chart_internal_fn.getCaches = function (ids) {\n        var targets = [], i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] in this.cache) { targets.push(this.cloneTarget(this.cache[ids[i]])); }\n        }\n        return targets;\n    };\n\n    var CLASS = c3_chart_internal_fn.CLASS = {\n        target: 'c3-target',\n        chart: 'c3-chart',\n        chartLine: 'c3-chart-line',\n        chartLines: 'c3-chart-lines',\n        chartBar: 'c3-chart-bar',\n        chartBars: 'c3-chart-bars',\n        chartText: 'c3-chart-text',\n        chartTexts: 'c3-chart-texts',\n        chartArc: 'c3-chart-arc',\n        chartArcs: 'c3-chart-arcs',\n        chartArcsTitle: 'c3-chart-arcs-title',\n        chartArcsBackground: 'c3-chart-arcs-background',\n        chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n        chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n        chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n        selectedCircle: 'c3-selected-circle',\n        selectedCircles: 'c3-selected-circles',\n        eventRect: 'c3-event-rect',\n        eventRects: 'c3-event-rects',\n        eventRectsSingle: 'c3-event-rects-single',\n        eventRectsMultiple: 'c3-event-rects-multiple',\n        zoomRect: 'c3-zoom-rect',\n        brush: 'c3-brush',\n        focused: 'c3-focused',\n        defocused: 'c3-defocused',\n        region: 'c3-region',\n        regions: 'c3-regions',\n        title: 'c3-title',\n        tooltipContainer: 'c3-tooltip-container',\n        tooltip: 'c3-tooltip',\n        tooltipName: 'c3-tooltip-name',\n        shape: 'c3-shape',\n        shapes: 'c3-shapes',\n        line: 'c3-line',\n        lines: 'c3-lines',\n        bar: 'c3-bar',\n        bars: 'c3-bars',\n        circle: 'c3-circle',\n        circles: 'c3-circles',\n        arc: 'c3-arc',\n        arcs: 'c3-arcs',\n        area: 'c3-area',\n        areas: 'c3-areas',\n        empty: 'c3-empty',\n        text: 'c3-text',\n        texts: 'c3-texts',\n        gaugeValue: 'c3-gauge-value',\n        grid: 'c3-grid',\n        gridLines: 'c3-grid-lines',\n        xgrid: 'c3-xgrid',\n        xgrids: 'c3-xgrids',\n        xgridLine: 'c3-xgrid-line',\n        xgridLines: 'c3-xgrid-lines',\n        xgridFocus: 'c3-xgrid-focus',\n        ygrid: 'c3-ygrid',\n        ygrids: 'c3-ygrids',\n        ygridLine: 'c3-ygrid-line',\n        ygridLines: 'c3-ygrid-lines',\n        axis: 'c3-axis',\n        axisX: 'c3-axis-x',\n        axisXLabel: 'c3-axis-x-label',\n        axisY: 'c3-axis-y',\n        axisYLabel: 'c3-axis-y-label',\n        axisY2: 'c3-axis-y2',\n        axisY2Label: 'c3-axis-y2-label',\n        legendBackground: 'c3-legend-background',\n        legendItem: 'c3-legend-item',\n        legendItemEvent: 'c3-legend-item-event',\n        legendItemTile: 'c3-legend-item-tile',\n        legendItemHidden: 'c3-legend-item-hidden',\n        legendItemFocused: 'c3-legend-item-focused',\n        dragarea: 'c3-dragarea',\n        EXPANDED: '_expanded_',\n        SELECTED: '_selected_',\n        INCLUDED: '_included_'\n    };\n    c3_chart_internal_fn.generateClass = function (prefix, targetId) {\n        return \" \" + prefix + \" \" + prefix + this.getTargetSelectorSuffix(targetId);\n    };\n    c3_chart_internal_fn.classText = function (d) {\n        return this.generateClass(CLASS.text, d.index);\n    };\n    c3_chart_internal_fn.classTexts = function (d) {\n        return this.generateClass(CLASS.texts, d.id);\n    };\n    c3_chart_internal_fn.classShape = function (d) {\n        return this.generateClass(CLASS.shape, d.index);\n    };\n    c3_chart_internal_fn.classShapes = function (d) {\n        return this.generateClass(CLASS.shapes, d.id);\n    };\n    c3_chart_internal_fn.classLine = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n    };\n    c3_chart_internal_fn.classLines = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n    };\n    c3_chart_internal_fn.classCircle = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n    };\n    c3_chart_internal_fn.classCircles = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n    };\n    c3_chart_internal_fn.classBar = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n    };\n    c3_chart_internal_fn.classBars = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n    };\n    c3_chart_internal_fn.classArc = function (d) {\n        return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n    };\n    c3_chart_internal_fn.classArcs = function (d) {\n        return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n    };\n    c3_chart_internal_fn.classArea = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n    };\n    c3_chart_internal_fn.classAreas = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n    };\n    c3_chart_internal_fn.classRegion = function (d, i) {\n        return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n    };\n    c3_chart_internal_fn.classEvent = function (d) {\n        return this.generateClass(CLASS.eventRect, d.index);\n    };\n    c3_chart_internal_fn.classTarget = function (id) {\n        var $$ = this;\n        var additionalClassSuffix = $$.config.data_classes[id], additionalClass = '';\n        if (additionalClassSuffix) {\n            additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n        }\n        return $$.generateClass(CLASS.target, id) + additionalClass;\n    };\n    c3_chart_internal_fn.classFocus = function (d) {\n        return this.classFocused(d) + this.classDefocused(d);\n    };\n    c3_chart_internal_fn.classFocused = function (d) {\n        return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n    };\n    c3_chart_internal_fn.classDefocused = function (d) {\n        return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n    };\n    c3_chart_internal_fn.classChartText = function (d) {\n        return CLASS.chartText + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartLine = function (d) {\n        return CLASS.chartLine + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartBar = function (d) {\n        return CLASS.chartBar + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartArc = function (d) {\n        return CLASS.chartArc + this.classTarget(d.data.id);\n    };\n    c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n        return targetId || targetId === 0 ? ('-' + targetId).replace(/[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]/g, '-') : '';\n    };\n    c3_chart_internal_fn.selectorTarget = function (id, prefix) {\n        return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n        var $$ = this;\n        ids = ids || [];\n        return ids.length ? ids.map(function (id) { return $$.selectorTarget(id, prefix); }) : null;\n    };\n    c3_chart_internal_fn.selectorLegend = function (id) {\n        return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorLegends = function (ids) {\n        var $$ = this;\n        return ids && ids.length ? ids.map(function (id) { return $$.selectorLegend(id); }) : null;\n    };\n\n    var isValue = c3_chart_internal_fn.isValue = function (v) {\n        return v || v === 0;\n    },\n        isFunction = c3_chart_internal_fn.isFunction = function (o) {\n            return typeof o === 'function';\n        },\n        isString = c3_chart_internal_fn.isString = function (o) {\n            return typeof o === 'string';\n        },\n        isUndefined = c3_chart_internal_fn.isUndefined = function (v) {\n            return typeof v === 'undefined';\n        },\n        isDefined = c3_chart_internal_fn.isDefined = function (v) {\n            return typeof v !== 'undefined';\n        },\n        ceil10 = c3_chart_internal_fn.ceil10 = function (v) {\n            return Math.ceil(v / 10) * 10;\n        },\n        asHalfPixel = c3_chart_internal_fn.asHalfPixel = function (n) {\n            return Math.ceil(n) + 0.5;\n        },\n        diffDomain = c3_chart_internal_fn.diffDomain = function (d) {\n            return d[1] - d[0];\n        },\n        isEmpty = c3_chart_internal_fn.isEmpty = function (o) {\n            return typeof o === 'undefined' || o === null || (isString(o) && o.length === 0) || (typeof o === 'object' && Object.keys(o).length === 0);\n        },\n        notEmpty = c3_chart_internal_fn.notEmpty = function (o) {\n            return !c3_chart_internal_fn.isEmpty(o);\n        },\n        getOption = c3_chart_internal_fn.getOption = function (options, key, defaultValue) {\n            return isDefined(options[key]) ? options[key] : defaultValue;\n        },\n        hasValue = c3_chart_internal_fn.hasValue = function (dict, value) {\n            var found = false;\n            Object.keys(dict).forEach(function (key) {\n                if (dict[key] === value) { found = true; }\n            });\n            return found;\n        },\n        sanitise = c3_chart_internal_fn.sanitise = function (str) {\n            return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n        },\n        getPathBox = c3_chart_internal_fn.getPathBox = function (path) {\n            var box = path.getBoundingClientRect(),\n                items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n                minX = items[0].x, minY = Math.min(items[0].y, items[1].y);\n            return {x: minX, y: minY, width: box.width, height: box.height};\n        };\n\n    c3_chart_fn.focus = function (targetIds) {\n        var $$ = this.internal, candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))),\n\n        this.revert();\n        this.defocus();\n        candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.expandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, true);\n\n        $$.focusedTargetIds = targetIds;\n        $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n\n    c3_chart_fn.defocus = function (targetIds) {\n        var $$ = this.internal, candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))),\n\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, false);\n\n        $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n        $$.defocusedTargetIds = targetIds;\n    };\n\n    c3_chart_fn.revert = function (targetIds) {\n        var $$ = this.internal, candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        if ($$.config.legend_show) {\n            $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n            $$.legend.selectAll($$.selectorLegends(targetIds))\n                .filter(function () {\n                    return $$.d3.select(this).classed(CLASS.legendItemFocused);\n                })\n                .classed(CLASS.legendItemFocused, false);\n        }\n\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n    };\n\n    c3_chart_fn.show = function (targetIds, options) {\n        var $$ = this.internal, targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.removeHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition()\n            .style('opacity', 1, 'important')\n            .call($$.endall, function () {\n                targets.style('opacity', null).style('opacity', 1);\n            });\n\n        if (options.withLegend) {\n            $$.showLegend(targetIds);\n        }\n\n        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n    };\n\n    c3_chart_fn.hide = function (targetIds, options) {\n        var $$ = this.internal, targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.addHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition()\n            .style('opacity', 0, 'important')\n            .call($$.endall, function () {\n                targets.style('opacity', null).style('opacity', 0);\n            });\n\n        if (options.withLegend) {\n            $$.hideLegend(targetIds);\n        }\n\n        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n    };\n\n    c3_chart_fn.toggle = function (targetIds, options) {\n        var that = this, $$ = this.internal;\n        $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n            $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n        });\n    };\n\n    c3_chart_fn.zoom = function (domain) {\n        var $$ = this.internal;\n        if (domain) {\n            if ($$.isTimeSeries()) {\n                domain = domain.map(function (x) { return $$.parseDate(x); });\n            }\n            $$.brush.extent(domain);\n            $$.redraw({withUpdateXDomain: true, withY: $$.config.zoom_rescale});\n            $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n        }\n        return $$.brush.extent();\n    };\n    c3_chart_fn.zoom.enable = function (enabled) {\n        var $$ = this.internal;\n        $$.config.zoom_enabled = enabled;\n        $$.updateAndRedraw();\n    };\n    c3_chart_fn.unzoom = function () {\n        var $$ = this.internal;\n        $$.brush.clear().update();\n        $$.redraw({withUpdateXDomain: true});\n    };\n\n    c3_chart_fn.zoom.max = function (max) {\n        var $$ = this.internal, config = $$.config, d3 = $$.d3;\n        if (max === 0 || max) {\n            config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n        }\n        else {\n            return config.zoom_x_max;\n        }\n    };\n\n    c3_chart_fn.zoom.min = function (min) {\n        var $$ = this.internal, config = $$.config, d3 = $$.d3;\n        if (min === 0 || min) {\n            config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n        }\n        else {\n            return config.zoom_x_min;\n        }\n    };\n\n    c3_chart_fn.zoom.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) { this.domain.max(range.max); }\n            if (isDefined(range.min)) { this.domain.min(range.min); }\n        } else {\n            return {\n                max: this.domain.max(),\n                min: this.domain.min()\n            };\n        }\n    };\n\n    c3_chart_fn.load = function (args) {\n        var $$ = this.internal, config = $$.config;\n        // update xs if specified\n        if (args.xs) {\n            $$.addXs(args.xs);\n        }\n        // update names if exists\n        if ('names' in args) {\n            c3_chart_fn.data.names.bind(this)(args.names);\n        }\n        // update classes if exists\n        if ('classes' in args) {\n            Object.keys(args.classes).forEach(function (id) {\n                config.data_classes[id] = args.classes[id];\n            });\n        }\n        // update categories if exists\n        if ('categories' in args && $$.isCategorized()) {\n            config.axis_x_categories = args.categories;\n        }\n        // update axes if exists\n        if ('axes' in args) {\n            Object.keys(args.axes).forEach(function (id) {\n                config.data_axes[id] = args.axes[id];\n            });\n        }\n        // update colors if exists\n        if ('colors' in args) {\n            Object.keys(args.colors).forEach(function (id) {\n                config.data_colors[id] = args.colors[id];\n            });\n        }\n        // use cache if exists\n        if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n            $$.load($$.getCaches(args.cacheIds), args.done);\n            return;\n        }\n        // unload if needed\n        if ('unload' in args) {\n            // TODO: do not unload if target will load (included in url/rows/columns)\n            $$.unload($$.mapToTargetIds((typeof args.unload === 'boolean' && args.unload) ? null : args.unload), function () {\n                $$.loadFromArgs(args);\n            });\n        } else {\n            $$.loadFromArgs(args);\n        }\n    };\n\n    c3_chart_fn.unload = function (args) {\n        var $$ = this.internal;\n        args = args || {};\n        if (args instanceof Array) {\n            args = {ids: args};\n        } else if (typeof args === 'string') {\n            args = {ids: [args]};\n        }\n        $$.unload($$.mapToTargetIds(args.ids), function () {\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n            if (args.done) { args.done(); }\n        });\n    };\n\n    c3_chart_fn.flow = function (args) {\n        var $$ = this.internal,\n            targets, data, notfoundIds = [], orgDataCount = $$.getMaxDataCount(),\n            dataCount, domain, baseTarget, baseValue, length = 0, tail = 0, diff, to;\n\n        if (args.json) {\n            data = $$.convertJsonToData(args.json, args.keys);\n        }\n        else if (args.rows) {\n            data = $$.convertRowsToData(args.rows);\n        }\n        else if (args.columns) {\n            data = $$.convertColumnsToData(args.columns);\n        }\n        else {\n            return;\n        }\n        targets = $$.convertDataToTargets(data, true);\n\n        // Update/Add data\n        $$.data.targets.forEach(function (t) {\n            var found = false, i, j;\n            for (i = 0; i < targets.length; i++) {\n                if (t.id === targets[i].id) {\n                    found = true;\n\n                    if (t.values[t.values.length - 1]) {\n                        tail = t.values[t.values.length - 1].index + 1;\n                    }\n                    length = targets[i].values.length;\n\n                    for (j = 0; j < length; j++) {\n                        targets[i].values[j].index = tail + j;\n                        if (!$$.isTimeSeries()) {\n                            targets[i].values[j].x = tail + j;\n                        }\n                    }\n                    t.values = t.values.concat(targets[i].values);\n\n                    targets.splice(i, 1);\n                    break;\n                }\n            }\n            if (!found) { notfoundIds.push(t.id); }\n        });\n\n        // Append null for not found targets\n        $$.data.targets.forEach(function (t) {\n            var i, j;\n            for (i = 0; i < notfoundIds.length; i++) {\n                if (t.id === notfoundIds[i]) {\n                    tail = t.values[t.values.length - 1].index + 1;\n                    for (j = 0; j < length; j++) {\n                        t.values.push({\n                            id: t.id,\n                            index: tail + j,\n                            x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n                            value: null\n                        });\n                    }\n                }\n            }\n        });\n\n        // Generate null values for new target\n        if ($$.data.targets.length) {\n            targets.forEach(function (t) {\n                var i, missing = [];\n                for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n                    missing.push({\n                        id: t.id,\n                        index: i,\n                        x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n                        value: null\n                    });\n                }\n                t.values.forEach(function (v) {\n                    v.index += tail;\n                    if (!$$.isTimeSeries()) {\n                        v.x += tail;\n                    }\n                });\n                t.values = missing.concat(t.values);\n            });\n        }\n        $$.data.targets = $$.data.targets.concat(targets); // add remained\n\n        // check data count because behavior needs to change when it's only one\n        dataCount = $$.getMaxDataCount();\n        baseTarget = $$.data.targets[0];\n        baseValue = baseTarget.values[0];\n\n        // Update length to flow if needed\n        if (isDefined(args.to)) {\n            length = 0;\n            to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n            baseTarget.values.forEach(function (v) {\n                if (v.x < to) { length++; }\n            });\n        } else if (isDefined(args.length)) {\n            length = args.length;\n        }\n\n        // If only one data, update the domain to flow from left edge of the chart\n        if (!orgDataCount) {\n            if ($$.isTimeSeries()) {\n                if (baseTarget.values.length > 1) {\n                    diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n                } else {\n                    diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n                }\n            } else {\n                diff = 1;\n            }\n            domain = [baseValue.x - diff, baseValue.x];\n            $$.updateXDomain(null, true, true, false, domain);\n        } else if (orgDataCount === 1) {\n            if ($$.isTimeSeries()) {\n                diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n                domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n                $$.updateXDomain(null, true, true, false, domain);\n            }\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({\n            flow: {\n                index: baseValue.index,\n                length: length,\n                duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n                done: args.done,\n                orgDataCount: orgDataCount,\n            },\n            withLegend: true,\n            withTransition: orgDataCount > 1,\n            withTrimXDomain: false,\n            withUpdateXAxis: true,\n        });\n    };\n\n    c3_chart_internal_fn.generateFlow = function (args) {\n        var $$ = this, config = $$.config, d3 = $$.d3;\n\n        return function () {\n            var targets = args.targets,\n                flow = args.flow,\n                drawBar = args.drawBar,\n                drawLine = args.drawLine,\n                drawArea = args.drawArea,\n                cx = args.cx,\n                cy = args.cy,\n                xv = args.xv,\n                xForText = args.xForText,\n                yForText = args.yForText,\n                duration = args.duration;\n\n            var translateX, scaleX = 1, transform,\n                flowIndex = flow.index,\n                flowLength = flow.length,\n                flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n                flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n                orgDomain = $$.x.domain(), domain,\n                durationForFlow = flow.duration || duration,\n                done = flow.done || function () {},\n                wait = $$.generateWait();\n\n            var xgrid = $$.xgrid || d3.selectAll([]),\n                xgridLines = $$.xgridLines || d3.selectAll([]),\n                mainRegion = $$.mainRegion || d3.selectAll([]),\n                mainText = $$.mainText || d3.selectAll([]),\n                mainBar = $$.mainBar || d3.selectAll([]),\n                mainLine = $$.mainLine || d3.selectAll([]),\n                mainArea = $$.mainArea || d3.selectAll([]),\n                mainCircle = $$.mainCircle || d3.selectAll([]);\n\n            // set flag\n            $$.flowing = true;\n\n            // remove head data after rendered\n            $$.data.targets.forEach(function (d) {\n                d.values.splice(0, flowLength);\n            });\n\n            // update x domain to generate axis elements for flow\n            domain = $$.updateXDomain(targets, true, true);\n            // update elements related to x scale\n            if ($$.updateXGrid) { $$.updateXGrid(true); }\n\n            // generate transform to flow\n            if (!flow.orgDataCount) { // if empty\n                if ($$.data.targets[0].values.length !== 1) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    if ($$.isTimeSeries()) {\n                        flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n                        flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n                        translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                    } else {\n                        translateX = diffDomain(domain) / 2;\n                    }\n                }\n            } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n            } else {\n                if ($$.isTimeSeries()) {\n                    translateX = ($$.x(orgDomain[0]) - $$.x(domain[0]));\n                } else {\n                    translateX = ($$.x(flowStart.x) - $$.x(flowEnd.x));\n                }\n            }\n            scaleX = (diffDomain(orgDomain) / diffDomain(domain));\n            transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n\n            $$.hideXGridFocus();\n\n            d3.transition().ease('linear').duration(durationForFlow).each(function () {\n                wait.add($$.axes.x.transition().call($$.xAxis));\n                wait.add(mainBar.transition().attr('transform', transform));\n                wait.add(mainLine.transition().attr('transform', transform));\n                wait.add(mainArea.transition().attr('transform', transform));\n                wait.add(mainCircle.transition().attr('transform', transform));\n                wait.add(mainText.transition().attr('transform', transform));\n                wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));\n                wait.add(xgrid.transition().attr('transform', transform));\n                wait.add(xgridLines.transition().attr('transform', transform));\n            })\n            .call(wait, function () {\n                var i, shapes = [], texts = [], eventRects = [];\n\n                // remove flowed elements\n                if (flowLength) {\n                    for (i = 0; i < flowLength; i++) {\n                        shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n                        texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n                        eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));\n                    }\n                    $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n                    $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n                    $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();\n                    $$.svg.select('.' + CLASS.xgrid).remove();\n                }\n\n                // draw again for removing flowed elements and reverting attr\n                xgrid\n                    .attr('transform', null)\n                    .attr($$.xgridAttr);\n                xgridLines\n                    .attr('transform', null);\n                xgridLines.select('line')\n                    .attr(\"x1\", config.axis_rotated ? 0 : xv)\n                    .attr(\"x2\", config.axis_rotated ? $$.width : xv);\n                xgridLines.select('text')\n                    .attr(\"x\", config.axis_rotated ? $$.width : 0)\n                    .attr(\"y\", xv);\n                mainBar\n                    .attr('transform', null)\n                    .attr(\"d\", drawBar);\n                mainLine\n                    .attr('transform', null)\n                    .attr(\"d\", drawLine);\n                mainArea\n                    .attr('transform', null)\n                    .attr(\"d\", drawArea);\n                mainCircle\n                    .attr('transform', null)\n                    .attr(\"cx\", cx)\n                    .attr(\"cy\", cy);\n                mainText\n                    .attr('transform', null)\n                    .attr('x', xForText)\n                    .attr('y', yForText)\n                    .style('fill-opacity', $$.opacityForText.bind($$));\n                mainRegion\n                    .attr('transform', null);\n                mainRegion.select('rect').filter($$.isRegionOnX)\n                    .attr(\"x\", $$.regionX.bind($$))\n                    .attr(\"width\", $$.regionWidth.bind($$));\n\n                if (config.interaction_enabled) {\n                    $$.redrawEventRect();\n                }\n\n                // callback for end of flow\n                done();\n\n                $$.flowing = false;\n            });\n        };\n    };\n\n    c3_chart_fn.selected = function (targetId) {\n        var $$ = this.internal, d3 = $$.d3;\n        return d3.merge(\n            $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape)\n                .filter(function () { return d3.select(this).classed(CLASS.SELECTED); })\n                .map(function (d) { return d.map(function (d) { var data = d.__data__; return data.data ? data.data : data; }); })\n        );\n    };\n    c3_chart_fn.select = function (ids, indices, resetOther) {\n        var $$ = this.internal, d3 = $$.d3, config = $$.config;\n        if (! config.data_selection_enabled) { return; }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this), id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d) && !isSelected) {\n                    toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n                }\n            } else if (isDefined(resetOther) && resetOther) {\n                if (isSelected) {\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                }\n            }\n        });\n    };\n    c3_chart_fn.unselect = function (ids, indices) {\n        var $$ = this.internal, d3 = $$.d3, config = $$.config;\n        if (! config.data_selection_enabled) { return; }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this), id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d)) {\n                    if (isSelected) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                }\n            }\n        });\n    };\n\n    c3_chart_fn.transform = function (type, targetIds) {\n        var $$ = this.internal,\n            options = ['pie', 'donut'].indexOf(type) >= 0 ? {withTransform: true} : null;\n        $$.transformTo(targetIds, type, options);\n    };\n\n    c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n        var $$ = this,\n            withTransitionForAxis = !$$.hasArcType(),\n            options = optionsForRedraw || {withTransitionForAxis: withTransitionForAxis};\n        options.withTransitionForTransform = false;\n        $$.transiting = false;\n        $$.setTargetType(targetIds, type);\n        $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n        $$.updateAndRedraw(options);\n    };\n\n    c3_chart_fn.groups = function (groups) {\n        var $$ = this.internal, config = $$.config;\n        if (isUndefined(groups)) { return config.data_groups; }\n        config.data_groups = groups;\n        $$.redraw();\n        return config.data_groups;\n    };\n\n    c3_chart_fn.xgrids = function (grids) {\n        var $$ = this.internal, config = $$.config;\n        if (! grids) { return config.grid_x_lines; }\n        config.grid_x_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_x_lines;\n    };\n    c3_chart_fn.xgrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.xgrids.remove = function (params) { // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, true);\n    };\n\n    c3_chart_fn.ygrids = function (grids) {\n        var $$ = this.internal, config = $$.config;\n        if (! grids) { return config.grid_y_lines; }\n        config.grid_y_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_y_lines;\n    };\n    c3_chart_fn.ygrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.ygrids.remove = function (params) { // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, false);\n    };\n\n    c3_chart_fn.regions = function (regions) {\n        var $$ = this.internal, config = $$.config;\n        if (!regions) { return config.regions; }\n        config.regions = regions;\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.add = function (regions) {\n        var $$ = this.internal, config = $$.config;\n        if (!regions) { return config.regions; }\n        config.regions = config.regions.concat(regions);\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.remove = function (options) {\n        var $$ = this.internal, config = $$.config,\n            duration, classes, regions;\n\n        options = options || {};\n        duration = $$.getOption(options, \"duration\", config.transition_duration);\n        classes = $$.getOption(options, \"classes\", [CLASS.region]);\n\n        regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) { return '.' + c; }));\n        (duration ? regions.transition().duration(duration) : regions)\n            .style('opacity', 0)\n            .remove();\n\n        config.regions = config.regions.filter(function (region) {\n            var found = false;\n            if (!region['class']) {\n                return true;\n            }\n            region['class'].split(' ').forEach(function (c) {\n                if (classes.indexOf(c) >= 0) { found = true; }\n            });\n            return !found;\n        });\n\n        return config.regions;\n    };\n\n    c3_chart_fn.data = function (targetIds) {\n        var targets = this.internal.data.targets;\n        return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n            return [].concat(targetIds).indexOf(t.id) >= 0;\n        });\n    };\n    c3_chart_fn.data.shown = function (targetIds) {\n        return this.internal.filterTargetsToShow(this.data(targetIds));\n    };\n    c3_chart_fn.data.values = function (targetId) {\n        var targets, values = null;\n        if (targetId) {\n            targets = this.data(targetId);\n            values = targets[0] ? targets[0].values.map(function (d) { return d.value; }) : null;\n        }\n        return values;\n    };\n    c3_chart_fn.data.names = function (names) {\n        this.internal.clearLegendItemTextBoxCache();\n        return this.internal.updateDataAttributes('names', names);\n    };\n    c3_chart_fn.data.colors = function (colors) {\n        return this.internal.updateDataAttributes('colors', colors);\n    };\n    c3_chart_fn.data.axes = function (axes) {\n        return this.internal.updateDataAttributes('axes', axes);\n    };\n\n    c3_chart_fn.category = function (i, category) {\n        var $$ = this.internal, config = $$.config;\n        if (arguments.length > 1) {\n            config.axis_x_categories[i] = category;\n            $$.redraw();\n        }\n        return config.axis_x_categories[i];\n    };\n    c3_chart_fn.categories = function (categories) {\n        var $$ = this.internal, config = $$.config;\n        if (!arguments.length) { return config.axis_x_categories; }\n        config.axis_x_categories = categories;\n        $$.redraw();\n        return config.axis_x_categories;\n    };\n\n    // TODO: fix\n    c3_chart_fn.color = function (id) {\n        var $$ = this.internal;\n        return $$.color(id); // more patterns\n    };\n\n    c3_chart_fn.x = function (x) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetX($$.data.targets, x);\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        }\n        return $$.data.xs;\n    };\n    c3_chart_fn.xs = function (xs) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetXs($$.data.targets, xs);\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        }\n        return $$.data.xs;\n    };\n\n    c3_chart_fn.axis = function () {};\n    c3_chart_fn.axis.labels = function (labels) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            Object.keys(labels).forEach(function (axisId) {\n                $$.axis.setLabelText(axisId, labels[axisId]);\n            });\n            $$.axis.updateLabels();\n        }\n        // TODO: return some values?\n    };\n    c3_chart_fn.axis.max = function (max) {\n        var $$ = this.internal, config = $$.config;\n        if (arguments.length) {\n            if (typeof max === 'object') {\n                if (isValue(max.x)) { config.axis_x_max = max.x; }\n                if (isValue(max.y)) { config.axis_y_max = max.y; }\n                if (isValue(max.y2)) { config.axis_y2_max = max.y2; }\n            } else {\n                config.axis_y_max = config.axis_y2_max = max;\n            }\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        } else {\n            return {\n                x: config.axis_x_max,\n                y: config.axis_y_max,\n                y2: config.axis_y2_max\n            };\n        }\n    };\n    c3_chart_fn.axis.min = function (min) {\n        var $$ = this.internal, config = $$.config;\n        if (arguments.length) {\n            if (typeof min === 'object') {\n                if (isValue(min.x)) { config.axis_x_min = min.x; }\n                if (isValue(min.y)) { config.axis_y_min = min.y; }\n                if (isValue(min.y2)) { config.axis_y2_min = min.y2; }\n            } else {\n                config.axis_y_min = config.axis_y2_min = min;\n            }\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        } else {\n            return {\n                x: config.axis_x_min,\n                y: config.axis_y_min,\n                y2: config.axis_y2_min\n            };\n        }\n    };\n    c3_chart_fn.axis.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) { this.axis.max(range.max); }\n            if (isDefined(range.min)) { this.axis.min(range.min); }\n        } else {\n            return {\n                max: this.axis.max(),\n                min: this.axis.min()\n            };\n        }\n    };\n\n    c3_chart_fn.legend = function () {};\n    c3_chart_fn.legend.show = function (targetIds) {\n        var $$ = this.internal;\n        $$.showLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({withLegend: true});\n    };\n    c3_chart_fn.legend.hide = function (targetIds) {\n        var $$ = this.internal;\n        $$.hideLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({withLegend: true});\n    };\n\n    c3_chart_fn.resize = function (size) {\n        var $$ = this.internal, config = $$.config;\n        config.size_width = size ? size.width : null;\n        config.size_height = size ? size.height : null;\n        this.flush();\n    };\n\n    c3_chart_fn.flush = function () {\n        var $$ = this.internal;\n        $$.updateAndRedraw({withLegend: true, withTransition: false, withTransitionForTransform: false});\n    };\n\n    c3_chart_fn.destroy = function () {\n        var $$ = this.internal;\n\n        window.clearInterval($$.intervalForObserveInserted);\n\n        if ($$.resizeTimeout !== undefined) {\n            window.clearTimeout($$.resizeTimeout);\n        }\n\n        if (window.detachEvent) {\n            window.detachEvent('onresize', $$.resizeFunction);\n        } else if (window.removeEventListener) {\n            window.removeEventListener('resize', $$.resizeFunction);\n        } else {\n            var wrapper = window.onresize;\n            // check if no one else removed our wrapper and remove our resizeFunction from it\n            if (wrapper && wrapper.add && wrapper.remove) {\n                wrapper.remove($$.resizeFunction);\n            }\n        }\n\n        $$.selectChart.classed('c3', false).html(\"\");\n\n        // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n        Object.keys($$).forEach(function (key) {\n            $$[key] = null;\n        });\n\n        return null;\n    };\n\n    c3_chart_fn.tooltip = function () {};\n    c3_chart_fn.tooltip.show = function (args) {\n        var $$ = this.internal, index, mouse;\n\n        // determine mouse position on the chart\n        if (args.mouse) {\n            mouse = args.mouse;\n        }\n\n        // determine focus data\n        if (args.data) {\n            if ($$.isMultipleX()) {\n                // if multiple xs, target point will be determined by mouse\n                mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];\n                index = null;\n            } else {\n                // TODO: when tooltip_grouped = false\n                index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);\n            }\n        }\n        else if (typeof args.x !== 'undefined') {\n            index = $$.getIndexByX(args.x);\n        }\n        else if (typeof args.index !== 'undefined') {\n            index = args.index;\n        }\n\n        // emulate mouse events to show\n        $$.dispatchEvent('mouseover', index, mouse);\n        $$.dispatchEvent('mousemove', index, mouse);\n\n        $$.config.tooltip_onshow.call($$, args.data);\n    };\n    c3_chart_fn.tooltip.hide = function () {\n        // TODO: get target data by checking the state of focus\n        this.internal.dispatchEvent('mouseout', 0);\n\n        this.internal.config.tooltip_onhide.call(this);\n    };\n\n    // Features:\n    // 1. category axis\n    // 2. ceil values of translate/x/y to int for half pixel antialiasing\n    // 3. multiline tick text\n    var tickTextCharSize;\n    function c3_axis(d3, params) {\n        var scale = d3.scale.linear(), orient = \"bottom\", innerTickSize = 6, outerTickSize, tickPadding = 3, tickValues = null, tickFormat, tickArguments;\n\n        var tickOffset = 0, tickCulling = true, tickCentered;\n\n        params = params || {};\n        outerTickSize = params.withOuterTick ? 6 : 0;\n\n        function axisX(selection, x) {\n            selection.attr(\"transform\", function (d) {\n                return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n            });\n        }\n        function axisY(selection, y) {\n            selection.attr(\"transform\", function (d) {\n                return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n            });\n        }\n        function scaleExtent(domain) {\n            var start = domain[0], stop = domain[domain.length - 1];\n            return start < stop ? [ start, stop ] : [ stop, start ];\n        }\n        function generateTicks(scale) {\n            var i, domain, ticks = [];\n            if (scale.ticks) {\n                return scale.ticks.apply(scale, tickArguments);\n            }\n            domain = scale.domain();\n            for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n                ticks.push(i);\n            }\n            if (ticks.length > 0 && ticks[0] > 0) {\n                ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n            }\n            return ticks;\n        }\n        function copyScale() {\n            var newScale = scale.copy(), domain;\n            if (params.isCategory) {\n                domain = scale.domain();\n                newScale.domain([domain[0], domain[1] - 1]);\n            }\n            return newScale;\n        }\n        function textFormatted(v) {\n            var formatted = tickFormat ? tickFormat(v) : v;\n            return typeof formatted !== 'undefined' ? formatted : '';\n        }\n        function getSizeFor1Char(tick) {\n            if (tickTextCharSize) {\n                return tickTextCharSize;\n            }\n            var size = {\n                h: 11.5,\n                w: 5.5\n            };\n            tick.select('text').text(textFormatted).each(function (d) {\n                var box = this.getBoundingClientRect(),\n                    text = textFormatted(d),\n                    h = box.height,\n                    w = text ? (box.width / text.length) : undefined;\n                if (h && w) {\n                    size.h = h;\n                    size.w = w;\n                }\n            }).text('');\n            tickTextCharSize = size;\n            return size;\n        }\n        function transitionise(selection) {\n            return params.withoutTransition ? selection : d3.transition(selection);\n        }\n        function axis(g) {\n            g.each(function () {\n                var g = axis.g = d3.select(this);\n\n                var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = copyScale();\n\n                var ticks = tickValues ? tickValues : generateTicks(scale1),\n                    tick = g.selectAll(\".tick\").data(ticks, scale1),\n                    tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n                    // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n                    tickExit = tick.exit().remove(),\n                    tickUpdate = transitionise(tick).style(\"opacity\", 1),\n                    tickTransform, tickX, tickY;\n\n                var range = scale.rangeExtent ? scale.rangeExtent() : scaleExtent(scale.range()),\n                    path = g.selectAll(\".domain\").data([ 0 ]),\n                    pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), transitionise(path));\n                tickEnter.append(\"line\");\n                tickEnter.append(\"text\");\n\n                var lineEnter = tickEnter.select(\"line\"),\n                    lineUpdate = tickUpdate.select(\"line\"),\n                    textEnter = tickEnter.select(\"text\"),\n                    textUpdate = tickUpdate.select(\"text\");\n\n                if (params.isCategory) {\n                    tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n                    tickX = tickCentered ? 0 : tickOffset;\n                    tickY = tickCentered ? tickOffset : 0;\n                } else {\n                    tickOffset = tickX = 0;\n                }\n\n                var text, tspan, sizeFor1Char = getSizeFor1Char(g.select('.tick')), counts = [];\n                var tickLength = Math.max(innerTickSize, 0) + tickPadding,\n                    isVertical = orient === 'left' || orient === 'right';\n\n                // this should be called only when category axis\n                function splitTickText(d, maxWidth) {\n                    var tickText = textFormatted(d),\n                        subtext, spaceIndex, textWidth, splitted = [];\n\n                    if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n                        return tickText;\n                    }\n\n                    if (!maxWidth || maxWidth <= 0) {\n                        maxWidth = isVertical ? 95 : params.isCategory ? (Math.ceil(scale1(ticks[1]) - scale1(ticks[0])) - 12) : 110;\n                    }\n\n                    function split(splitted, text) {\n                        spaceIndex = undefined;\n                        for (var i = 1; i < text.length; i++) {\n                            if (text.charAt(i) === ' ') {\n                                spaceIndex = i;\n                            }\n                            subtext = text.substr(0, i + 1);\n                            textWidth = sizeFor1Char.w * subtext.length;\n                            // if text width gets over tick width, split by space index or crrent index\n                            if (maxWidth < textWidth) {\n                                return split(\n                                    splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)),\n                                    text.slice(spaceIndex ? spaceIndex + 1 : i)\n                                );\n                            }\n                        }\n                        return splitted.concat(text);\n                    }\n\n                    return split(splitted, tickText + \"\");\n                }\n\n                function tspanDy(d, i) {\n                    var dy = sizeFor1Char.h;\n                    if (i === 0) {\n                        if (orient === 'left' || orient === 'right') {\n                            dy = -((counts[d.index] - 1) * (sizeFor1Char.h / 2) - 3);\n                        } else {\n                            dy = \".71em\";\n                        }\n                    }\n                    return dy;\n                }\n\n                function tickSize(d) {\n                    var tickPosition = scale(d) + (tickCentered ? 0 : tickOffset);\n                    return range[0] < tickPosition && tickPosition < range[1] ? innerTickSize : 0;\n                }\n\n                text = tick.select(\"text\");\n                tspan = text.selectAll('tspan')\n                    .data(function (d, i) {\n                        var splitted = params.tickMultiline ? splitTickText(d, params.tickWidth) : [].concat(textFormatted(d));\n                        counts[i] = splitted.length;\n                        return splitted.map(function (s) {\n                            return { index: i, splitted: s };\n                        });\n                    });\n                tspan.enter().append('tspan');\n                tspan.exit().remove();\n                tspan.text(function (d) { return d.splitted; });\n\n                var rotate = params.tickTextRotate;\n\n                function textAnchorForText(rotate) {\n                    if (!rotate) {\n                        return 'middle';\n                    }\n                    return rotate > 0 ? \"start\" : \"end\";\n                }\n                function textTransform(rotate) {\n                    if (!rotate) {\n                        return '';\n                    }\n                    return \"rotate(\" + rotate + \")\";\n                }\n                function dxForText(rotate) {\n                    if (!rotate) {\n                        return 0;\n                    }\n                    return 8 * Math.sin(Math.PI * (rotate / 180));\n                }\n                function yForText(rotate) {\n                    if (!rotate) {\n                        return tickLength;\n                    }\n                    return 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1);\n                }\n\n                switch (orient) {\n                case \"bottom\":\n                    {\n                        tickTransform = axisX;\n                        lineEnter.attr(\"y2\", innerTickSize);\n                        textEnter.attr(\"y\", tickLength);\n                        lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", tickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", yForText(rotate))\n                            .style(\"text-anchor\", textAnchorForText(rotate))\n                            .attr(\"transform\", textTransform(rotate));\n                        tspan.attr('x', 0).attr(\"dy\", tspanDy).attr('dx', dxForText(rotate));\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n                        break;\n                    }\n                case \"top\":\n                    {\n                        // TODO: rotated tick text\n                        tickTransform = axisX;\n                        lineEnter.attr(\"y2\", -innerTickSize);\n                        textEnter.attr(\"y\", -tickLength);\n                        lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", -tickLength);\n                        text.style(\"text-anchor\", \"middle\");\n                        tspan.attr('x', 0).attr(\"dy\", \"0em\");\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n                        break;\n                    }\n                case \"left\":\n                    {\n                        tickTransform = axisY;\n                        lineEnter.attr(\"x2\", -innerTickSize);\n                        textEnter.attr(\"x\", -tickLength);\n                        lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                        textUpdate.attr(\"x\", -tickLength).attr(\"y\", tickOffset);\n                        text.style(\"text-anchor\", \"end\");\n                        tspan.attr('x', -tickLength).attr(\"dy\", tspanDy);\n                        pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n                        break;\n                    }\n                case \"right\":\n                    {\n                        tickTransform = axisY;\n                        lineEnter.attr(\"x2\", innerTickSize);\n                        textEnter.attr(\"x\", tickLength);\n                        lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n                        textUpdate.attr(\"x\", tickLength).attr(\"y\", 0);\n                        text.style(\"text-anchor\", \"start\");\n                        tspan.attr('x', tickLength).attr(\"dy\", tspanDy);\n                        pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n                        break;\n                    }\n                }\n                if (scale1.rangeBand) {\n                    var x = scale1, dx = x.rangeBand() / 2;\n                    scale0 = scale1 = function (d) {\n                        return x(d) + dx;\n                    };\n                } else if (scale0.rangeBand) {\n                    scale0 = scale1;\n                } else {\n                    tickExit.call(tickTransform, scale1);\n                }\n                tickEnter.call(tickTransform, scale0);\n                tickUpdate.call(tickTransform, scale1);\n            });\n        }\n        axis.scale = function (x) {\n            if (!arguments.length) { return scale; }\n            scale = x;\n            return axis;\n        };\n        axis.orient = function (x) {\n            if (!arguments.length) { return orient; }\n            orient = x in {top: 1, right: 1, bottom: 1, left: 1} ? x + \"\" : \"bottom\";\n            return axis;\n        };\n        axis.tickFormat = function (format) {\n            if (!arguments.length) { return tickFormat; }\n            tickFormat = format;\n            return axis;\n        };\n        axis.tickCentered = function (isCentered) {\n            if (!arguments.length) { return tickCentered; }\n            tickCentered = isCentered;\n            return axis;\n        };\n        axis.tickOffset = function () {\n            return tickOffset;\n        };\n        axis.tickInterval = function () {\n            var interval, length;\n            if (params.isCategory) {\n                interval = tickOffset * 2;\n            }\n            else {\n                length = axis.g.select('path.domain').node().getTotalLength() - outerTickSize * 2;\n                interval = length / axis.g.selectAll('line').size();\n            }\n            return interval === Infinity ? 0 : interval;\n        };\n        axis.ticks = function () {\n            if (!arguments.length) { return tickArguments; }\n            tickArguments = arguments;\n            return axis;\n        };\n        axis.tickCulling = function (culling) {\n            if (!arguments.length) { return tickCulling; }\n            tickCulling = culling;\n            return axis;\n        };\n        axis.tickValues = function (x) {\n            if (typeof x === 'function') {\n                tickValues = function () {\n                    return x(scale.domain());\n                };\n            }\n            else {\n                if (!arguments.length) { return tickValues; }\n                tickValues = x;\n            }\n            return axis;\n        };\n        return axis;\n    }\n\n    c3_chart_internal_fn.isSafari = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n    };\n    c3_chart_internal_fn.isChrome = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Chrome') >= 0;\n    };\n\n    /* jshint ignore:start */\n\n    // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n    // this polyfill to avoid the confusion.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\n    if (!Function.prototype.bind) {\n      Function.prototype.bind = function(oThis) {\n        if (typeof this !== 'function') {\n          // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var aArgs   = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP    = function() {},\n            fBound  = function() {\n              return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n      };\n    }\n\n    //SVGPathSeg API polyfill\n    //https://github.com/progers/pathseg\n    //\n    //This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n    //SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n    //changes which were implemented in Firefox 43 and Chrome 46.\n    //Chrome 48 removes these APIs, so this polyfill is required.\n\n    (function() { \"use strict\";\n     if (!(\"SVGPathSeg\" in window)) {\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n         window.SVGPathSeg = function(type, typeAsLetter, owningPathSegList) {\n             this.pathSegType = type;\n             this.pathSegTypeAsLetter = typeAsLetter;\n             this._owningPathSegList = owningPathSegList;\n         }\n\n         SVGPathSeg.PATHSEG_UNKNOWN = 0;\n         SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n         SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n         SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n         SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n         SVGPathSeg.PATHSEG_LINETO_REL = 5;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n         SVGPathSeg.PATHSEG_ARC_ABS = 10;\n         SVGPathSeg.PATHSEG_ARC_REL = 11;\n         SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n         SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n         SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n         SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n\n         // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n         SVGPathSeg.prototype._segmentChanged = function() {\n             if (this._owningPathSegList)\n                 this._owningPathSegList.segmentChanged(this);\n         }\n\n         window.SVGPathSegClosePath = function(owningPathSegList) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n         }\n         SVGPathSegClosePath.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegClosePath.prototype.toString = function() { return \"[object SVGPathSegClosePath]\"; }\n         SVGPathSegClosePath.prototype._asPathString = function() { return this.pathSegTypeAsLetter; }\n         SVGPathSegClosePath.prototype.clone = function() { return new SVGPathSegClosePath(undefined); }\n\n         window.SVGPathSegMovetoAbs = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegMovetoAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegMovetoAbs.prototype.toString = function() { return \"[object SVGPathSegMovetoAbs]\"; }\n         SVGPathSegMovetoAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegMovetoAbs.prototype.clone = function() { return new SVGPathSegMovetoAbs(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegMovetoAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegMovetoAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegMovetoRel = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegMovetoRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegMovetoRel.prototype.toString = function() { return \"[object SVGPathSegMovetoRel]\"; }\n         SVGPathSegMovetoRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegMovetoRel.prototype.clone = function() { return new SVGPathSegMovetoRel(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegMovetoRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegMovetoRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoAbs = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegLinetoAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoAbs]\"; }\n         SVGPathSegLinetoAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegLinetoAbs.prototype.clone = function() { return new SVGPathSegLinetoAbs(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegLinetoAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegLinetoAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoRel = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegLinetoRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoRel.prototype.toString = function() { return \"[object SVGPathSegLinetoRel]\"; }\n         SVGPathSegLinetoRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegLinetoRel.prototype.clone = function() { return new SVGPathSegLinetoRel(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegLinetoRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegLinetoRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicAbs = function(owningPathSegList, x, y, x1, y1, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicAbs]\"; }\n         SVGPathSegCurvetoCubicAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicAbs.prototype.clone = function() { return new SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicRel = function(owningPathSegList, x, y, x1, y1, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicRel]\"; }\n         SVGPathSegCurvetoCubicRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicRel.prototype.clone = function() { return new SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticAbs = function(owningPathSegList, x, y, x1, y1) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n         }\n         SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticAbs]\"; }\n         SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticAbs.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticRel = function(owningPathSegList, x, y, x1, y1) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n         }\n         SVGPathSegCurvetoQuadraticRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticRel]\"; }\n         SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticRel.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegArcAbs = function(owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._r1 = r1;\n             this._r2 = r2;\n             this._angle = angle;\n             this._largeArcFlag = largeArcFlag;\n             this._sweepFlag = sweepFlag;\n         }\n         SVGPathSegArcAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegArcAbs.prototype.toString = function() { return \"[object SVGPathSegArcAbs]\"; }\n         SVGPathSegArcAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegArcAbs.prototype.clone = function() { return new SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"r1\", { get: function() { return this._r1; }, set: function(r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"r2\", { get: function() { return this._r2; }, set: function(r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"angle\", { get: function() { return this._angle; }, set: function(angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function() { return this._largeArcFlag; }, set: function(largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function() { return this._sweepFlag; }, set: function(sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegArcRel = function(owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._r1 = r1;\n             this._r2 = r2;\n             this._angle = angle;\n             this._largeArcFlag = largeArcFlag;\n             this._sweepFlag = sweepFlag;\n         }\n         SVGPathSegArcRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegArcRel.prototype.toString = function() { return \"[object SVGPathSegArcRel]\"; }\n         SVGPathSegArcRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegArcRel.prototype.clone = function() { return new SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"r1\", { get: function() { return this._r1; }, set: function(r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"r2\", { get: function() { return this._r2; }, set: function(r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"angle\", { get: function() { return this._angle; }, set: function(angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function() { return this._largeArcFlag; }, set: function(largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function() { return this._sweepFlag; }, set: function(sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoHorizontalAbs = function(owningPathSegList, x) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n             this._x = x;\n         }\n         SVGPathSegLinetoHorizontalAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoHorizontalAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoHorizontalAbs]\"; }\n         SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x; }\n         SVGPathSegLinetoHorizontalAbs.prototype.clone = function() { return new SVGPathSegLinetoHorizontalAbs(undefined, this._x); }\n         Object.defineProperty(SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoHorizontalRel = function(owningPathSegList, x) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n             this._x = x;\n         }\n         SVGPathSegLinetoHorizontalRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoHorizontalRel.prototype.toString = function() { return \"[object SVGPathSegLinetoHorizontalRel]\"; }\n         SVGPathSegLinetoHorizontalRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x; }\n         SVGPathSegLinetoHorizontalRel.prototype.clone = function() { return new SVGPathSegLinetoHorizontalRel(undefined, this._x); }\n         Object.defineProperty(SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoVerticalAbs = function(owningPathSegList, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n             this._y = y;\n         }\n         SVGPathSegLinetoVerticalAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoVerticalAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoVerticalAbs]\"; }\n         SVGPathSegLinetoVerticalAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._y; }\n         SVGPathSegLinetoVerticalAbs.prototype.clone = function() { return new SVGPathSegLinetoVerticalAbs(undefined, this._y); }\n         Object.defineProperty(SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoVerticalRel = function(owningPathSegList, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n             this._y = y;\n         }\n         SVGPathSegLinetoVerticalRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoVerticalRel.prototype.toString = function() { return \"[object SVGPathSegLinetoVerticalRel]\"; }\n         SVGPathSegLinetoVerticalRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._y; }\n         SVGPathSegLinetoVerticalRel.prototype.clone = function() { return new SVGPathSegLinetoVerticalRel(undefined, this._y); }\n         Object.defineProperty(SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicSmoothAbs = function(owningPathSegList, x, y, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicSmoothAbs]\"; }\n         SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function() { return new SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicSmoothRel = function(owningPathSegList, x, y, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicSmoothRel]\"; }\n         SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function() { return new SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticSmoothAbs = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\"; }\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticSmoothRel = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\"; }\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         // Add createSVGPathSeg* functions to SVGPathElement.\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathElement.\n         SVGPathElement.prototype.createSVGPathSegClosePath = function() { return new SVGPathSegClosePath(undefined); }\n         SVGPathElement.prototype.createSVGPathSegMovetoAbs = function(x, y) { return new SVGPathSegMovetoAbs(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegMovetoRel = function(x, y) { return new SVGPathSegMovetoRel(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegLinetoAbs = function(x, y) { return new SVGPathSegLinetoAbs(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegLinetoRel = function(x, y) { return new SVGPathSegLinetoRel(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function(x, y, x1, y1, x2, y2) { return new SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function(x, y, x1, y1, x2, y2) { return new SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function(x, y, x1, y1) { return new SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function(x, y, x1, y1) { return new SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1); }\n         SVGPathElement.prototype.createSVGPathSegArcAbs = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }\n         SVGPathElement.prototype.createSVGPathSegArcRel = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }\n         SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function(x) { return new SVGPathSegLinetoHorizontalAbs(undefined, x); }\n         SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function(x) { return new SVGPathSegLinetoHorizontalRel(undefined, x); }\n         SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function(y) { return new SVGPathSegLinetoVerticalAbs(undefined, y); }\n         SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function(y) { return new SVGPathSegLinetoVerticalRel(undefined, y); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function(x, y, x2, y2) { return new SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function(x, y, x2, y2) { return new SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function(x, y) { return new SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function(x, y) { return new SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y); }\n     }\n\n     if (!(\"SVGPathSegList\" in window)) {\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n         window.SVGPathSegList = function(pathElement) {\n             this._pathElement = pathElement;\n             this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\n             // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n             this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\n             this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n             this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n         }\n\n         Object.defineProperty(SVGPathSegList.prototype, \"numberOfItems\", {\n             get: function() {\n                 this._checkPathSynchronizedToList();\n                 return this._list.length;\n             },\n             enumerable: true\n         });\n\n         // Add the pathSegList accessors to SVGPathElement.\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n         Object.defineProperty(SVGPathElement.prototype, \"pathSegList\", {\n             get: function() {\n                 if (!this._pathSegList)\n                     this._pathSegList = new SVGPathSegList(this);\n                 return this._pathSegList;\n             },\n             enumerable: true\n         });\n         // FIXME: The following are not implemented and simply return SVGPathElement.pathSegList.\n         Object.defineProperty(SVGPathElement.prototype, \"normalizedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n         Object.defineProperty(SVGPathElement.prototype, \"animatedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n         Object.defineProperty(SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n\n         // Process any pending mutations to the path element and update the list as needed.\n         // This should be the first call of all public functions and is needed because\n         // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n         SVGPathSegList.prototype._checkPathSynchronizedToList = function() {\n             this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n         }\n\n         SVGPathSegList.prototype._updateListFromPathMutations = function(mutationRecords) {\n             if (!this._pathElement)\n                 return;\n             var hasPathMutations = false;\n             mutationRecords.forEach(function(record) {\n                 if (record.attributeName == \"d\")\n                     hasPathMutations = true;\n             });\n             if (hasPathMutations)\n                 this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n         }\n\n         // Serialize the list and update the path's 'd' attribute.\n         SVGPathSegList.prototype._writeListToPath = function() {\n             this._pathElementMutationObserver.disconnect();\n             this._pathElement.setAttribute(\"d\", SVGPathSegList._pathSegArrayAsString(this._list));\n             this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n         }\n\n         // When a path segment changes the list needs to be synchronized back to the path element.\n         SVGPathSegList.prototype.segmentChanged = function(pathSeg) {\n             this._writeListToPath();\n         }\n\n         SVGPathSegList.prototype.clear = function() {\n             this._checkPathSynchronizedToList();\n\n             this._list.forEach(function(pathSeg) {\n                 pathSeg._owningPathSegList = null;\n             });\n             this._list = [];\n             this._writeListToPath();\n         }\n\n         SVGPathSegList.prototype.initialize = function(newItem) {\n             this._checkPathSynchronizedToList();\n\n             this._list = [newItem];\n             newItem._owningPathSegList = this;\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList.prototype._checkValidIndex = function(index) {\n             if (isNaN(index) || index < 0 || index >= this.numberOfItems)\n                 throw \"INDEX_SIZE_ERR\";\n         }\n\n         SVGPathSegList.prototype.getItem = function(index) {\n             this._checkPathSynchronizedToList();\n\n             this._checkValidIndex(index);\n             return this._list[index];\n         }\n\n         SVGPathSegList.prototype.insertItemBefore = function(newItem, index) {\n             this._checkPathSynchronizedToList();\n\n             // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n             if (index > this.numberOfItems)\n                 index = this.numberOfItems;\n             if (newItem._owningPathSegList) {\n                 // SVG2 spec says to make a copy.\n                 newItem = newItem.clone();\n             }\n             this._list.splice(index, 0, newItem);\n             newItem._owningPathSegList = this;\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList.prototype.replaceItem = function(newItem, index) {\n             this._checkPathSynchronizedToList();\n\n             if (newItem._owningPathSegList) {\n                 // SVG2 spec says to make a copy.\n                 newItem = newItem.clone();\n             }\n             this._checkValidIndex(index);\n             this._list[index] = newItem;\n             newItem._owningPathSegList = this;\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList.prototype.removeItem = function(index) {\n             this._checkPathSynchronizedToList();\n\n             this._checkValidIndex(index);\n             var item = this._list[index];\n             this._list.splice(index, 1);\n             this._writeListToPath();\n             return item;\n         }\n\n         SVGPathSegList.prototype.appendItem = function(newItem) {\n             this._checkPathSynchronizedToList();\n\n             if (newItem._owningPathSegList) {\n                 // SVG2 spec says to make a copy.\n                 newItem = newItem.clone();\n             }\n             this._list.push(newItem);\n             newItem._owningPathSegList = this;\n             // TODO: Optimize this to just append to the existing attribute.\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList._pathSegArrayAsString = function(pathSegArray) {\n             var string = \"\";\n             var first = true;\n             pathSegArray.forEach(function(pathSeg) {\n                 if (first) {\n                     first = false;\n                     string += pathSeg._asPathString();\n                 } else {\n                     string += \" \" + pathSeg._asPathString();\n                 }\n             });\n             return string;\n         }\n\n         // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n         SVGPathSegList.prototype._parsePath = function(string) {\n             if (!string || string.length == 0)\n                 return [];\n\n             var owningPathSegList = this;\n\n             var Builder = function() {\n                 this.pathSegList = [];\n             }\n\n             Builder.prototype.appendSegment = function(pathSeg) {\n                 this.pathSegList.push(pathSeg);\n             }\n\n             var Source = function(string) {\n                 this._string = string;\n                 this._currentIndex = 0;\n                 this._endIndex = this._string.length;\n                 this._previousCommand = SVGPathSeg.PATHSEG_UNKNOWN;\n\n                 this._skipOptionalSpaces();\n             }\n\n             Source.prototype._isCurrentSpace = function() {\n                 var character = this._string[this._currentIndex];\n                 return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n             }\n\n             Source.prototype._skipOptionalSpaces = function() {\n                 while (this._currentIndex < this._endIndex && this._isCurrentSpace())\n                     this._currentIndex++;\n                 return this._currentIndex < this._endIndex;\n             }\n\n             Source.prototype._skipOptionalSpacesOrDelimiter = function() {\n                 if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\")\n                     return false;\n                 if (this._skipOptionalSpaces()) {\n                     if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n                         this._currentIndex++;\n                         this._skipOptionalSpaces();\n                     }\n                 }\n                 return this._currentIndex < this._endIndex;\n             }\n\n             Source.prototype.hasMoreData = function() {\n                 return this._currentIndex < this._endIndex;\n             }\n\n             Source.prototype.peekSegmentType = function() {\n                 var lookahead = this._string[this._currentIndex];\n                 return this._pathSegTypeFromChar(lookahead);\n             }\n\n             Source.prototype._pathSegTypeFromChar = function(lookahead) {\n                 switch (lookahead) {\n                 case \"Z\":\n                 case \"z\":\n                     return SVGPathSeg.PATHSEG_CLOSEPATH;\n                 case \"M\":\n                     return SVGPathSeg.PATHSEG_MOVETO_ABS;\n                 case \"m\":\n                     return SVGPathSeg.PATHSEG_MOVETO_REL;\n                 case \"L\":\n                     return SVGPathSeg.PATHSEG_LINETO_ABS;\n                 case \"l\":\n                     return SVGPathSeg.PATHSEG_LINETO_REL;\n                 case \"C\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n                 case \"c\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n                 case \"Q\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n                 case \"q\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n                 case \"A\":\n                     return SVGPathSeg.PATHSEG_ARC_ABS;\n                 case \"a\":\n                     return SVGPathSeg.PATHSEG_ARC_REL;\n                 case \"H\":\n                     return SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n                 case \"h\":\n                     return SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n                 case \"V\":\n                     return SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n                 case \"v\":\n                     return SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n                 case \"S\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n                 case \"s\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n                 case \"T\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n                 case \"t\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n                 default:\n                     return SVGPathSeg.PATHSEG_UNKNOWN;\n                 }\n             }\n\n             Source.prototype._nextCommandHelper = function(lookahead, previousCommand) {\n                 // Check for remaining coordinates in the current command.\n                 if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || (lookahead >= \"0\" && lookahead <= \"9\")) && previousCommand != SVGPathSeg.PATHSEG_CLOSEPATH) {\n                     if (previousCommand == SVGPathSeg.PATHSEG_MOVETO_ABS)\n                         return SVGPathSeg.PATHSEG_LINETO_ABS;\n                     if (previousCommand == SVGPathSeg.PATHSEG_MOVETO_REL)\n                         return SVGPathSeg.PATHSEG_LINETO_REL;\n                     return previousCommand;\n                 }\n                 return SVGPathSeg.PATHSEG_UNKNOWN;\n             }\n\n             Source.prototype.initialCommandIsMoveTo = function() {\n                 // If the path is empty it is still valid, so return true.\n                 if (!this.hasMoreData())\n                     return true;\n                 var command = this.peekSegmentType();\n                 // Path must start with moveTo.\n                 return command == SVGPathSeg.PATHSEG_MOVETO_ABS || command == SVGPathSeg.PATHSEG_MOVETO_REL;\n             }\n\n             // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n             // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n             Source.prototype._parseNumber = function() {\n                 var exponent = 0;\n                 var integer = 0;\n                 var frac = 1;\n                 var decimal = 0;\n                 var sign = 1;\n                 var expsign = 1;\n\n                 var startIndex = this._currentIndex;\n\n                 this._skipOptionalSpaces();\n\n                 // Read the sign.\n                 if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\")\n                     this._currentIndex++;\n                 else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n                     this._currentIndex++;\n                     sign = -1;\n                 }\n\n                 if (this._currentIndex == this._endIndex || ((this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\"))\n                     // The first character of a number must be one of [0-9+-.].\n                     return undefined;\n\n                 // Read the integer part, build right-to-left.\n                 var startIntPartIndex = this._currentIndex;\n                 while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\")\n                     this._currentIndex++; // Advance to first non-digit.\n\n                 if (this._currentIndex != startIntPartIndex) {\n                     var scanIntPartIndex = this._currentIndex - 1;\n                     var multiplier = 1;\n                     while (scanIntPartIndex >= startIntPartIndex) {\n                         integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n                         multiplier *= 10;\n                     }\n                 }\n\n                 // Read the decimals.\n                 if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n                     this._currentIndex++;\n\n                     // There must be a least one digit following the .\n                     if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\")\n                         return undefined;\n                     while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\")\n                         decimal += (this._string.charAt(this._currentIndex++) - \"0\") * (frac *= 0.1);\n                 }\n\n                 // Read the exponent part.\n                 if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && (this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\")) {\n                     this._currentIndex++;\n\n                     // Read the sign of the exponent.\n                     if (this._string.charAt(this._currentIndex) == \"+\") {\n                         this._currentIndex++;\n                     } else if (this._string.charAt(this._currentIndex) == \"-\") {\n                         this._currentIndex++;\n                         expsign = -1;\n                     }\n\n                     // There must be an exponent.\n                     if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\")\n                         return undefined;\n\n                     while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                         exponent *= 10;\n                         exponent += (this._string.charAt(this._currentIndex) - \"0\");\n                         this._currentIndex++;\n                     }\n                 }\n\n                 var number = integer + decimal;\n                 number *= sign;\n\n                 if (exponent)\n                     number *= Math.pow(10, expsign * exponent);\n\n                 if (startIndex == this._currentIndex)\n                     return undefined;\n\n                 this._skipOptionalSpacesOrDelimiter();\n\n                 return number;\n             }\n\n             Source.prototype._parseArcFlag = function() {\n                 if (this._currentIndex >= this._endIndex)\n                     return undefined;\n                 var flag = false;\n                 var flagChar = this._string.charAt(this._currentIndex++);\n                 if (flagChar == \"0\")\n                     flag = false;\n                 else if (flagChar == \"1\")\n                     flag = true;\n                 else\n                     return undefined;\n\n                 this._skipOptionalSpacesOrDelimiter();\n                 return flag;\n             }\n\n             Source.prototype.parseSegment = function() {\n                 var lookahead = this._string[this._currentIndex];\n                 var command = this._pathSegTypeFromChar(lookahead);\n                 if (command == SVGPathSeg.PATHSEG_UNKNOWN) {\n                     // Possibly an implicit command. Not allowed if this is the first command.\n                     if (this._previousCommand == SVGPathSeg.PATHSEG_UNKNOWN)\n                         return null;\n                     command = this._nextCommandHelper(lookahead, this._previousCommand);\n                     if (command == SVGPathSeg.PATHSEG_UNKNOWN)\n                         return null;\n                 } else {\n                     this._currentIndex++;\n                 }\n\n                 this._previousCommand = command;\n\n                 switch (command) {\n                 case SVGPathSeg.PATHSEG_MOVETO_REL:\n                     return new SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_MOVETO_ABS:\n                     return new SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_REL:\n                     return new SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_ABS:\n                     return new SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                     return new SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                     return new SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                     return new SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                     return new SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_CLOSEPATH:\n                     this._skipOptionalSpaces();\n                     return new SVGPathSegClosePath(owningPathSegList);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                     var points = {x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                     var points = {x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                     return new SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                     return new SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_ARC_REL:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                 case SVGPathSeg.PATHSEG_ARC_ABS:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                 default:\n                     throw \"Unknown path seg type.\"\n                 }\n             }\n\n             var builder = new Builder();\n             var source = new Source(string);\n\n             if (!source.initialCommandIsMoveTo())\n                 return [];\n             while (source.hasMoreData()) {\n                 var pathSeg = source.parseSegment();\n                 if (!pathSeg)\n                     return [];\n                 builder.appendSegment(pathSeg);\n             }\n\n             return builder.pathSegList;\n         }\n     }\n    }());\n\n    /* jshint ignore:end */\n\n    if (typeof define === 'function' && define.amd) {\n        define(\"c3\", [\"d3\"], function () { return c3; });\n    } else if ('undefined' !== typeof exports && 'undefined' !== typeof module) {\n        module.exports = c3;\n    } else {\n        window.c3 = c3;\n    }\n\n})(window);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/c3/c3.js\n// module id = 1578\n// module chunks = 4","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/c3/~/d3/d3.js\n// module id = 1579\n// module chunks = 4"],"sourceRoot":""}